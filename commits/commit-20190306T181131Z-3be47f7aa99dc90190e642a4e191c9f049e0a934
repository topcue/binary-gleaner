{
  "sha": "3be47f7aa99dc90190e642a4e191c9f049e0a934",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2JlNDdmN2FhOTlkYzkwMTkwZTY0MmE0ZTE5MWM5ZjA0OWUwYTkzNA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-01-17T16:30:35Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-03-06T18:11:31Z"
    },
    "message": "gdb/fortran: Expand the set of types that support (kind=N)\n\nExpand the number of types that can be adjusted with a (kind=N) type\nextension.\n\ngdb/ChangeLog:\n\n\t* f-exp.y (convert_to_kind_type): Handle more type kinds.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.fortran/type-kinds.exp (test_cast_1_to_type_kind): New\n\tfunction.\n\t(test_basic_parsing_of_type_kinds): Expand types tested.\n\t(test_parsing_invalid_type_kinds): New function.",
    "tree": {
      "sha": "2b8b91477c7ad5b4bdeb68080f9f82df2180a2cc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2b8b91477c7ad5b4bdeb68080f9f82df2180a2cc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3be47f7aa99dc90190e642a4e191c9f049e0a934",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3be47f7aa99dc90190e642a4e191c9f049e0a934",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3be47f7aa99dc90190e642a4e191c9f049e0a934",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3be47f7aa99dc90190e642a4e191c9f049e0a934/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4d00f5d8f6c4a1c9f334b1abb45b9ce05fb45b0a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4d00f5d8f6c4a1c9f334b1abb45b9ce05fb45b0a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4d00f5d8f6c4a1c9f334b1abb45b9ce05fb45b0a"
    }
  ],
  "stats": {
    "total": 88,
    "additions": 87,
    "deletions": 1
  },
  "files": [
    {
      "sha": "be7b96b132d773c9861b502af3bd614a2e40b7a7",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3be47f7aa99dc90190e642a4e191c9f049e0a934/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3be47f7aa99dc90190e642a4e191c9f049e0a934/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3be47f7aa99dc90190e642a4e191c9f049e0a934",
      "patch": "@@ -1,3 +1,7 @@\n+2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* f-exp.y (convert_to_kind_type): Handle more type kinds.\n+\n 2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n \t    Chris January  <chris.january@arm.com>\n "
    },
    {
      "sha": "980ee4b4adbb7af233785e3ae5b24ae6947067e4",
      "filename": "gdb/f-exp.y",
      "status": "modified",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3be47f7aa99dc90190e642a4e191c9f049e0a934/gdb/f-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3be47f7aa99dc90190e642a4e191c9f049e0a934/gdb/f-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-exp.y?ref=3be47f7aa99dc90190e642a4e191c9f049e0a934",
      "patch": "@@ -830,6 +830,42 @@ convert_to_kind_type (struct type *basetype, int kind)\n       if (kind == 1)\n \treturn parse_f_type (pstate)->builtin_character;\n     }\n+  else if (basetype == parse_f_type (pstate)->builtin_complex_s8)\n+    {\n+      if (kind == 4)\n+\treturn parse_f_type (pstate)->builtin_complex_s8;\n+      else if (kind == 8)\n+\treturn parse_f_type (pstate)->builtin_complex_s16;\n+      else if (kind == 16)\n+\treturn parse_f_type (pstate)->builtin_complex_s32;\n+    }\n+  else if (basetype == parse_f_type (pstate)->builtin_real)\n+    {\n+      if (kind == 4)\n+\treturn parse_f_type (pstate)->builtin_real;\n+      else if (kind == 8)\n+\treturn parse_f_type (pstate)->builtin_real_s8;\n+      else if (kind == 16)\n+\treturn parse_f_type (pstate)->builtin_real_s16;\n+    }\n+  else if (basetype == parse_f_type (pstate)->builtin_logical)\n+    {\n+      if (kind == 1)\n+\treturn parse_f_type (pstate)->builtin_logical_s1;\n+      else if (kind == 2)\n+\treturn parse_f_type (pstate)->builtin_logical_s2;\n+      else if (kind == 4)\n+\treturn parse_f_type (pstate)->builtin_logical;\n+      else if (kind == 8)\n+\treturn parse_f_type (pstate)->builtin_logical_s8;\n+    }\n+  else if (basetype == parse_f_type (pstate)->builtin_integer)\n+    {\n+      if (kind == 2)\n+\treturn parse_f_type (pstate)->builtin_integer_s2;\n+      else if (kind == 4)\n+\treturn parse_f_type (pstate)->builtin_integer;\n+    }\n \n   error (_(\"unsupported kind %d for type %s\"),\n \t kind, TYPE_SAFE_NAME (basetype));"
    },
    {
      "sha": "a4411652b74eca0ac438e50998567ee3dc50ad10",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3be47f7aa99dc90190e642a4e191c9f049e0a934/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3be47f7aa99dc90190e642a4e191c9f049e0a934/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=3be47f7aa99dc90190e642a4e191c9f049e0a934",
      "patch": "@@ -1,3 +1,10 @@\n+2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.fortran/type-kinds.exp (test_cast_1_to_type_kind): New\n+\tfunction.\n+\t(test_basic_parsing_of_type_kinds): Expand types tested.\n+\t(test_parsing_invalid_type_kinds): New function.\n+\n 2019-03-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.fortran/intrinsics.exp: New file."
    },
    {
      "sha": "c679bc504f97c3d01ad4b9ea8739de45366bf274",
      "filename": "gdb/testsuite/gdb.fortran/type-kinds.exp",
      "status": "modified",
      "additions": 40,
      "deletions": 1,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3be47f7aa99dc90190e642a4e191c9f049e0a934/gdb/testsuite/gdb.fortran/type-kinds.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3be47f7aa99dc90190e642a4e191c9f049e0a934/gdb/testsuite/gdb.fortran/type-kinds.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/type-kinds.exp?ref=3be47f7aa99dc90190e642a4e191c9f049e0a934",
      "patch": "@@ -21,15 +21,54 @@ load_lib \"fortran.exp\"\n \n if { [skip_fortran_tests] } { continue }\n \n+# Cast the value 1 to the type 'BASE_TYPE (kind=TYPE_KIND)'.  The\n+# expected result of the cast is CAST_RESULT, and the size of the\n+# value returned by the cast should be SIZE_RESULT.\n+proc test_cast_1_to_type_kind {base_type type_kind cast_result size_result} {\n+    set type_string \"$base_type (kind=$type_kind)\"\n+    gdb_test \"p (($type_string) 1)\" \" = $cast_result\"\n+\n+    if {($base_type == \"real\" || $base_type == \"complex\")\n+\t&& $type_kind == 16} {\n+\tsetup_kfail gdb/18644 \"*-*-*\"\n+    }\n+\n+    gdb_test \"p sizeof (($type_string) 1)\" \" = $size_result\"\n+}\n+\n # Test parsing of `(kind=N)` type modifiers.\n proc test_basic_parsing_of_type_kinds {} {\n-    gdb_test \"p ((character (kind=1)) 1)\" \" = 1\"\n+    test_cast_1_to_type_kind \"character\" \"1\" \"1\" \"1\"\n+\n+    test_cast_1_to_type_kind \"complex\" \"4\" \"\\\\(1,0\\\\)\" \"8\"\n+    test_cast_1_to_type_kind \"complex\" \"8\" \"\\\\(1,0\\\\)\" \"16\"\n+    test_cast_1_to_type_kind \"complex\" \"16\" \"\\\\(1,0\\\\)\" \"32\"\n+\n+    test_cast_1_to_type_kind \"real\" \"4\" \"1\" \"4\"\n+    test_cast_1_to_type_kind \"real\" \"8\" \"1\" \"8\"\n+    test_cast_1_to_type_kind \"real\" \"16\" \"1\" \"16\"\n+\n+    test_cast_1_to_type_kind \"logical\" \"1\" \"\\\\.TRUE\\\\.\" \"1\"\n+    test_cast_1_to_type_kind \"logical\" \"4\" \"\\\\.TRUE\\\\.\" \"4\"\n+    test_cast_1_to_type_kind \"logical\" \"8\" \"\\\\.TRUE\\\\.\" \"8\"\n+\n+    test_cast_1_to_type_kind \"integer\" \"2\" \"1\" \"2\"\n+    test_cast_1_to_type_kind \"integer\" \"4\" \"1\" \"4\"\n+}\n+\n+proc test_parsing_invalid_type_kinds {} {\n+    foreach typename {complex real logical integer} {\n+\tforeach typesize {3 5 7 9} {\n+\t    gdb_test \"p (($typename (kind=$typesize)) 1)\" \"unsupported kind $typesize for type $typename.*\"\n+\t}\n+    }\n }\n \n clean_restart\n \n if [set_lang_fortran] then {\n     test_basic_parsing_of_type_kinds\n+    test_parsing_invalid_type_kinds\n } else {\n     warning \"$test_name tests suppressed.\" 0\n }"
    }
  ]
}