{
  "sha": "20821f4ed1c3b93344a8a40e9344fe356c2605c2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjA4MjFmNGVkMWMzYjkzMzQ0YThhNDBlOTM0NGZlMzU2YzI2MDVjMg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-09T18:00:55Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-23T21:17:18Z"
    },
    "message": "gdb: Allow target description to be dumped even when it is remote\n\nThe maintenance command 'maintenance print c-tdesc' can only print the\ntarget description if it was loaded from a local file, or if the local\nfilename is passed to the maintenance command as an argument.\n\nSometimes it would be nice to know what target description GDB was\ngiven by the remote, however, if I connect to a remote target and try\nthis command I see this:\n\n  (gdb) maintenance print c-tdesc\n  The current target description did not come from an XML file.\n  (gdb)\n\nWhich is not very helpful.\n\nThis commit changes things so that if the description came from the\nremote end then GDB will use a fake filename 'fetched from target' as\nthe filename for the description, GDB will then create the C\ndescription of the target as though it came from this file.  Example\noutput would look like this (I snipped the feature creation from the\nmiddle as that hasn't changed):\n\n  (gdb) maintenance print c-tdesc\n  /* THIS FILE IS GENERATED.  -*- buffer-read-only: t -*- vi:set ro:\n    Original: fetched from target */\n\n  #include \"defs.h\"\n  #include \"osabi.h\"\n  #include \"target-descriptions.h\"\n\n  struct target_desc *tdesc_fetched_from_target;\n  static void\n  initialize_tdesc_fetched_from_target (void)\n  {\n    struct target_desc *result = allocate_target_description ();\n    struct tdesc_feature *feature;\n\n    /* ... features created here ... */\n\n    tdesc_fetched_from_target = result;\n  }\n  (gdb)\n\nIn order to support using 'fetched from target' I had to update the\nprint_c_tdesc code to handle filenames that include a space.  This has\nthe benefit that we can now print out real files with spaces in the\nname, for example the file 'with space.xml':\n\n  (gdb) maint print c-tdesc with space.xml\n\nI originally added this functionality so I could inspect the\ndescription passed to GDB by the remote target.  After using this for\na while I realised that actually having GDB recreate the XML would be\neven better, so a later commit will add that functionality too.\n\nStill, given how small this patch is I thought it might be nice to\ninclude this in GDB anyway.\n\nWhile I was working on this anyway I've added filename command\ncompletion to this command.\n\ngdb/ChangeLog:\n\n\t* target-descriptions.c (print_c_tdesc::print_c_tdesc): Change\n\twhitespace to underscore.\n\t(maint_print_c_tdesc_cmd): Use fake filename for target\n\tdescriptions that came from the target.\n\t(_initialize_target_descriptions): Add filename command completion\n\tfor 'maint print c-tdesc'.",
    "tree": {
      "sha": "16263c07fa21f32c878d88c10b8b2bf9370b588f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/16263c07fa21f32c878d88c10b8b2bf9370b588f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/20821f4ed1c3b93344a8a40e9344fe356c2605c2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/20821f4ed1c3b93344a8a40e9344fe356c2605c2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/20821f4ed1c3b93344a8a40e9344fe356c2605c2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/20821f4ed1c3b93344a8a40e9344fe356c2605c2/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1fb5ee620365501977d0d6cd9d90c277c67c38e3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1fb5ee620365501977d0d6cd9d90c277c67c38e3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1fb5ee620365501977d0d6cd9d90c277c67c38e3"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 16,
    "deletions": 4
  },
  "files": [
    {
      "sha": "3e914eb0d92180197c7524033d2223a3d98dde82",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20821f4ed1c3b93344a8a40e9344fe356c2605c2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20821f4ed1c3b93344a8a40e9344fe356c2605c2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=20821f4ed1c3b93344a8a40e9344fe356c2605c2",
      "patch": "@@ -1,3 +1,12 @@\n+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* target-descriptions.c (print_c_tdesc::print_c_tdesc): Change\n+\twhitespace to underscore.\n+\t(maint_print_c_tdesc_cmd): Use fake filename for target\n+\tdescriptions that came from the target.\n+\t(_initialize_target_descriptions): Add filename command completion\n+\tfor 'maint print c-tdesc'.\n+\n 2020-06-23  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* dwarf2/loc.c (decode_debug_loclists_addresses): Add empty"
    },
    {
      "sha": "da6cb76404c50963a112d84ce74e8b32f88b7dc6",
      "filename": "gdb/target-descriptions.c",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20821f4ed1c3b93344a8a40e9344fe356c2605c2/gdb/target-descriptions.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20821f4ed1c3b93344a8a40e9344fe356c2605c2/gdb/target-descriptions.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target-descriptions.c?ref=20821f4ed1c3b93344a8a40e9344fe356c2605c2",
      "patch": "@@ -1270,6 +1270,8 @@ class print_c_tdesc : public tdesc_element_visitor\n \tbreak;\n       else if (*inp == '-')\n \t*outp++ = '_';\n+      else if (*inp == ' ')\n+\t*outp++ = '_';\n       else\n \t*outp++ = *inp;\n     *outp = '\\0';\n@@ -1680,7 +1682,7 @@ maint_print_c_tdesc_cmd (const char *args, int from_tty)\n     error (_(\"There is no target description to print.\"));\n \n   if (filename == NULL)\n-    error (_(\"The current target description did not come from an XML file.\"));\n+    filename = \"fetched from target\";\n \n   std::string filename_after_features (filename);\n   auto loc = filename_after_features.rfind (\"/features/\");\n@@ -1811,6 +1813,8 @@ void _initialize_target_descriptions ();\n void\n _initialize_target_descriptions ()\n {\n+  cmd_list_element *cmd;\n+\n   tdesc_data = gdbarch_data_register_pre_init (tdesc_data_init);\n \n   add_basic_prefix_cmd (\"tdesc\", class_maintenance, _(\"\\\n@@ -1842,11 +1846,10 @@ Unset the file to read for an XML target description.\\n\\\n When unset, GDB will read the description from the target.\"),\n \t   &tdesc_unset_cmdlist);\n \n-  add_cmd (\"c-tdesc\", class_maintenance, maint_print_c_tdesc_cmd, _(\"\\\n+  cmd = add_cmd (\"c-tdesc\", class_maintenance, maint_print_c_tdesc_cmd, _(\"\\\n Print the current target description as a C source file.\"),\n \t   &maintenanceprintlist);\n-\n-  cmd_list_element *cmd;\n+  set_cmd_completer (cmd, filename_completer);\n \n   cmd = add_cmd (\"xml-descriptions\", class_maintenance,\n \t\t maintenance_check_xml_descriptions, _(\"\\"
    }
  ]
}