{
  "sha": "0295dde6551b898295bd6a2ef7dab425643c4c1e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDI5NWRkZTY1NTFiODk4Mjk1YmQ2YTJlZjdkYWI0MjU2NDNjNGMxZQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-09-18T17:23:06Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-09-18T18:18:53Z"
    },
    "message": "gdb: Fix use after free bug in compile_object_run\n\nIn this commit:\n\n  commit 6108fd1823f9cf036bbbe528ffcdf2fee489b40a\n  Date:   Thu Sep 17 11:47:50 2020 -0600\n\n      Use htab_up in type copying\n\nA use after free bug was introduced.  In compile-object-run.c, in the\nfunction compile_object_run, the code used to look like this:\n\n    htab_t copied_types;\n\n    /* .... snip .... */\n\n    /* OBJFILE may disappear while FUNC_TYPE still will be in use.  */\n    copied_types = create_copied_types_hash (objfile);\n    func_type = copy_type_recursive (objfile, func_type, copied_types);\n    htab_delete (copied_types);\n\n    /* .... snip .... */\n\n    call_function_by_hand_dummy (func_val, NULL, args,\n                                 do_module_cleanup, data);\n\nThe copied_types table exists on the obstack of objfile, but is\ndeleted once the call to copy_type_recursive has been completed.\n\nAfter the change the code now looks like this:\n\n    /* OBJFILE may disappear while FUNC_TYPE still will be in use.  */\n    htab_up copied_types = create_copied_types_hash (objfile);\n    func_type = copy_type_recursive (objfile, func_type, copied_types.get ());\n\n    /* .... snip .... */\n\n    call_function_by_hand_dummy (func_val, NULL, args,\n                                 do_module_cleanup, data);\n\nThe copied_types is now a unique_ptr and deleted automatically when it\ngoes out of scope.\n\nThe problem however is that objfile, and its included obstack, may be\ndeleted by the call to do_module_cleanup, which is called by\ncall_function_by_hand_dummy.\n\nThis means that in the new code the objfile, and its obstack, are\ndeleted before copied_types is deleted, and as copied_types is on the\nobjfiles obstack, we are now reading undefined memory.\n\nThe solution in this commit is to wrap the call to\ncreate_copied_types_hash and copy_type_recursive into a new static\nhelper function.  The htab_up will then be deleted within the new\nfunction's scope, before objfile is deleted.\n\nThis resolves some non-deterministic test failures I was seeing in\ngdb.compile/*.exp tests.\n\ngdb/ChangeLog:\n\n\t* compile/compile-object-run.c (create_copied_type_recursive): New\n\tfunction.\n\t(compile_object_run): Use new function.",
    "tree": {
      "sha": "200fb3a7b83b42c4359e25c396e1348fa518ebce",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/200fb3a7b83b42c4359e25c396e1348fa518ebce"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0295dde6551b898295bd6a2ef7dab425643c4c1e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0295dde6551b898295bd6a2ef7dab425643c4c1e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0295dde6551b898295bd6a2ef7dab425643c4c1e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0295dde6551b898295bd6a2ef7dab425643c4c1e/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6e25f88828f500fc649aa6eac8b567c7b1e96c59",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6e25f88828f500fc649aa6eac8b567c7b1e96c59",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6e25f88828f500fc649aa6eac8b567c7b1e96c59"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 20,
    "deletions": 3
  },
  "files": [
    {
      "sha": "fc3d6e387ae8c787013521813285d4589de6d046",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0295dde6551b898295bd6a2ef7dab425643c4c1e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0295dde6551b898295bd6a2ef7dab425643c4c1e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0295dde6551b898295bd6a2ef7dab425643c4c1e",
      "patch": "@@ -1,3 +1,9 @@\n+2020-09-18  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* compile/compile-object-run.c (create_copied_type_recursive): New\n+\tfunction.\n+\t(compile_object_run): Use new function.\n+\n 2020-08-21  Jon Turney  <jon.turney@dronecode.org.uk>\n \n \t* NEWS: Mention x86_64 Cygwin core file support."
    },
    {
      "sha": "985c6f363a3ae4cf4143503486084a29ae518c28",
      "filename": "gdb/compile/compile-object-run.c",
      "status": "modified",
      "additions": 14,
      "deletions": 3,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0295dde6551b898295bd6a2ef7dab425643c4c1e/gdb/compile/compile-object-run.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0295dde6551b898295bd6a2ef7dab425643c4c1e/gdb/compile/compile-object-run.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-object-run.c?ref=0295dde6551b898295bd6a2ef7dab425643c4c1e",
      "patch": "@@ -105,6 +105,16 @@ do_module_cleanup (void *arg, int registers_valid)\n   xfree (data);\n }\n \n+/* Create a copy of FUNC_TYPE that is independent of OBJFILE.  */\n+\n+static type *\n+create_copied_type_recursive (objfile *objfile, type *func_type)\n+{\n+  htab_up copied_types = create_copied_types_hash (objfile);\n+  func_type = copy_type_recursive (objfile, func_type, copied_types.get ());\n+  return func_type;\n+}\n+\n /* Perform inferior call of MODULE.  This function may throw an error.\n    This function may leave files referenced by MODULE on disk until\n    the inferior call dummy frame is discarded.  This function may throw errors.\n@@ -143,9 +153,10 @@ compile_object_run (struct compile_module *module)\n       int current_arg = 0;\n       struct value **vargs;\n \n-      /* OBJFILE may disappear while FUNC_TYPE still will be in use.  */\n-      htab_up copied_types = create_copied_types_hash (objfile);\n-      func_type = copy_type_recursive (objfile, func_type, copied_types.get ());\n+      /* OBJFILE may disappear while FUNC_TYPE is still in use as a\n+\t result of the call to DO_MODULE_CLEANUP below, so we need a copy\n+\t that does not depend on the objfile in anyway.  */\n+      func_type = create_copied_type_recursive (objfile, func_type);\n \n       gdb_assert (func_type->code () == TYPE_CODE_FUNC);\n       func_val = value_from_pointer (lookup_pointer_type (func_type),"
    }
  ]
}