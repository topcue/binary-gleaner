{
  "sha": "5fc5a1b882c65f13e1a97b8433459a42e7d65477",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWZjNWExYjg4MmM2NWYxM2UxYTk3Yjg0MzM0NTlhNDJlN2Q2NTQ3Nw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-03-08T16:50:45Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-03-12T12:18:33Z"
    },
    "message": "gdb/testsuite: make test names unique in gdb.python/py-format-string.exp\n\nMake use of `proc_with_prefix` for every test_* proc in order to make\nthe test names unique within this test file.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.python/py-format-string.exp: Use proc_with_prefix to make\n\ttest names unique.",
    "tree": {
      "sha": "be4f028c87b56440b928356208919cab615829a9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/be4f028c87b56440b928356208919cab615829a9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5fc5a1b882c65f13e1a97b8433459a42e7d65477",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5fc5a1b882c65f13e1a97b8433459a42e7d65477",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5fc5a1b882c65f13e1a97b8433459a42e7d65477",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5fc5a1b882c65f13e1a97b8433459a42e7d65477/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e3141a4d894d3e512c9c79e8686835ba71f05d70",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e3141a4d894d3e512c9c79e8686835ba71f05d70",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e3141a4d894d3e512c9c79e8686835ba71f05d70"
    }
  ],
  "stats": {
    "total": 41,
    "additions": 23,
    "deletions": 18
  },
  "files": [
    {
      "sha": "0125f35d64d28b5deca7ac89bbb638affb6764db",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fc5a1b882c65f13e1a97b8433459a42e7d65477/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fc5a1b882c65f13e1a97b8433459a42e7d65477/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=5fc5a1b882c65f13e1a97b8433459a42e7d65477",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.python/py-format-string.exp: Use proc_with_prefix to make\n+\ttest names unique.\n+\n 2021-03-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.python/py-mi.exp: Use with_test_prefix to make test names"
    },
    {
      "sha": "ed82ee29fc65a2639a9d11f2846ed2e8333131ee",
      "filename": "gdb/testsuite/gdb.python/py-format-string.exp",
      "status": "modified",
      "additions": 18,
      "deletions": 18,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fc5a1b882c65f13e1a97b8433459a42e7d65477/gdb/testsuite/gdb.python/py-format-string.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fc5a1b882c65f13e1a97b8433459a42e7d65477/gdb/testsuite/gdb.python/py-format-string.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-format-string.exp?ref=5fc5a1b882c65f13e1a97b8433459a42e7d65477",
      "patch": "@@ -228,7 +228,7 @@ proc check_var_with_bool_opt {\n }\n \n # Test gdb.Value.format_string with no options.\n-proc test_no_opts {} {\n+proc_with_prefix test_no_opts {} {\n   global current_lang\n \n   check_var_with_no_opts \"a_point_t\"\n@@ -253,7 +253,7 @@ proc test_no_opts {} {\n }\n \n # Test the raw option for gdb.Value.format_string.\n-proc test_raw {} {\n+proc_with_prefix test_raw {} {\n   global current_lang\n   global default_ref_regexp\n \n@@ -290,7 +290,7 @@ proc test_raw {} {\n }\n \n # Test the pretty_arrays option for gdb.Value.format_string.\n-proc test_pretty_arrays {} {\n+proc_with_prefix test_pretty_arrays {} {\n   global current_lang\n \n   set an_array_pretty \"\\\\{\\[\\r\\n\\]+  2,\\[\\r\\n\\]+  3,\\[\\r\\n\\]+  5\\[\\r\\n\\]+\\\\}\"\n@@ -331,7 +331,7 @@ proc test_pretty_arrays {} {\n }\n \n # Test the pretty_structs option for gdb.Value.format_string.\n-proc test_pretty_structs {} {\n+proc_with_prefix test_pretty_structs {} {\n   global current_lang\n \n   set a_struct_with_union_pretty \\\n@@ -376,7 +376,7 @@ proc test_pretty_structs {} {\n }\n \n # Test the array_indexes option for gdb.Value.format_string.\n-proc test_array_indexes {} {\n+proc_with_prefix test_array_indexes {} {\n   global current_lang\n \n   set an_array_with_indexes \"\\\\{\\\\\\[0\\\\\\] = 2, \\\\\\[1\\\\\\] = 3, \\\\\\[2\\\\\\] = 5\\\\}\"\n@@ -419,7 +419,7 @@ proc test_array_indexes {} {\n }\n \n # Test the symbols option for gdb.Value.format_string.\n-proc test_symbols {} {\n+proc_with_prefix test_symbols {} {\n   global undefined\n   global current_lang\n   global default_pointer_regexp\n@@ -454,7 +454,7 @@ proc test_symbols {} {\n }\n \n # Test the unions option for gdb.Value.format_string.\n-proc test_unions {} {\n+proc_with_prefix test_unions {} {\n   global undefined\n   global current_lang\n \n@@ -488,7 +488,7 @@ proc test_unions {} {\n }\n \n # Test the address option for gdb.Value.format_string.\n-proc test_address {} {\n+proc_with_prefix test_address {} {\n   global undefined\n   global current_lang\n \n@@ -530,7 +530,7 @@ proc test_address {} {\n }\n \n # Test the deref_refs option for gdb.Value.format_string.\n-proc test_deref_refs {} {\n+proc_with_prefix test_deref_refs {} {\n   global current_lang\n   global default_pointer_regexp\n   global default_ref_regexp\n@@ -557,7 +557,7 @@ proc test_deref_refs {} {\n }\n \n # Test the actual_objects option for gdb.Value.format_string.\n-proc test_actual_objects {} {\n+proc_with_prefix test_actual_objects {} {\n   global current_lang\n \n   check_var_with_bool_opt \"actual_objects\" \"a_point_t\"\n@@ -590,7 +590,7 @@ proc test_actual_objects {} {\n }\n \n # Test the static_members option for gdb.Value.format_string.\n-proc test_static_members {} {\n+proc_with_prefix test_static_members {} {\n   global current_lang\n \n   check_var_with_bool_opt \"static_members\" \"a_point_t\"\n@@ -625,7 +625,7 @@ proc test_static_members {} {\n }\n \n # Test the max_elements option for gdb.Value.format_string.\n-proc test_max_elements {} {\n+proc_with_prefix test_max_elements {} {\n   global current_lang\n   global default_pointer_regexp\n \n@@ -718,7 +718,7 @@ proc test_max_elements {} {\n }\n \n # Test the max_depth option for gdb.Value.format_string.\n-proc test_max_depth {} {\n+proc_with_prefix test_max_depth {} {\n     set opts \"max_depth=-1\"\n     with_test_prefix $opts {\n \tcheck_format_string \"a_struct_with_union\" $opts\n@@ -738,7 +738,7 @@ proc test_max_depth {} {\n }\n \n # Test the repeat_threshold option for gdb.Value.format_string.\n-proc test_repeat_threshold {} {\n+proc_with_prefix test_repeat_threshold {} {\n   global current_lang\n   global default_pointer_regexp\n \n@@ -844,7 +844,7 @@ proc test_repeat_threshold {} {\n }\n \n # Test the format option for gdb.Value.format_string.\n-proc test_format {} {\n+proc_with_prefix test_format {} {\n   global current_lang\n   global default_pointer_regexp\n \n@@ -920,7 +920,7 @@ proc test_format {} {\n }\n \n # Test mixing options.\n-proc test_mixed {} {\n+proc_with_prefix test_mixed {} {\n   global current_lang\n   global default_ref_regexp\n   global default_pointer_regexp\n@@ -954,7 +954,7 @@ proc test_mixed {} {\n }\n \n # Test passing invalid arguments to gdb.Value.format_string.\n-proc test_invalid_args {} {\n+proc_with_prefix test_invalid_args {} {\n   check_format_string \\\n     \"a_point_t\" \\\n     \"12\" \\\n@@ -977,7 +977,7 @@ proc test_invalid_args {} {\n }\n \n # Run all the tests in common for both C and C++.\n-proc test_all_common {} {\n+proc_with_prefix test_all_common {} {\n   # No options.\n   test_no_opts\n   # Single options set to True/False."
    }
  ]
}