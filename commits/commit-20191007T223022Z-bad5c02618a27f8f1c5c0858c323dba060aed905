{
  "sha": "bad5c02618a27f8f1c5c0858c323dba060aed905",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmFkNWMwMjYxOGEyN2Y4ZjFjNWMwODU4YzMyM2RiYTA2MGFlZDkwNQ==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-10-07T18:23:34Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-10-07T22:30:22Z"
    },
    "message": "Move declaration of vtbl_ptr_name to the header.\n\nThere are conflicting comments about whether this was\nintroduced in GCC 2.4.5 or GCC 2.6 and I don't know\nwhich one is correct...\n\ngdb/ChangeLog:\n\n2019-10-07  Christian Biesinger  <cbiesinger@google.com>\n\n\t* c-lang.h (vtbl_ptr_name): Declare.\n\t* cp-valprint.c (vtbl_ptr_name): Remove \"extern\" now that we get\n\tit from the header.\n\t* stabsread.c (define_symbol): Remove declaration of vtbl_ptr_name.",
    "tree": {
      "sha": "205bfb022d809d23f7134d6221f5852a42ef05d4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/205bfb022d809d23f7134d6221f5852a42ef05d4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bad5c02618a27f8f1c5c0858c323dba060aed905",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bad5c02618a27f8f1c5c0858c323dba060aed905",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bad5c02618a27f8f1c5c0858c323dba060aed905",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bad5c02618a27f8f1c5c0858c323dba060aed905/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "51f1fdc3d2235ffe94172b51d33fec0e5c5edeca",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/51f1fdc3d2235ffe94172b51d33fec0e5c5edeca",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/51f1fdc3d2235ffe94172b51d33fec0e5c5edeca"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 15,
    "deletions": 6
  },
  "files": [
    {
      "sha": "3912429dcf39b452e275c775102b978cd5c3a8ca",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bad5c02618a27f8f1c5c0858c323dba060aed905/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bad5c02618a27f8f1c5c0858c323dba060aed905/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bad5c02618a27f8f1c5c0858c323dba060aed905",
      "patch": "@@ -1,3 +1,10 @@\n+2019-10-07  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* c-lang.h (vtbl_ptr_name): Declare.\n+\t* cp-valprint.c (vtbl_ptr_name): Remove \"extern\" now that we get\n+\tit from the header.\n+\t* stabsread.c (define_symbol): Remove declaration of vtbl_ptr_name.\n+\n 2019-10-07  Christian Biesinger  <cbiesinger@google.com>\n \n \t* charset.c (your_gdb_wchar_t_is_bogus): Replace with a"
    },
    {
      "sha": "de291fa8f135c8a062cbd01f6114f9c57ae8fe30",
      "filename": "gdb/c-lang.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bad5c02618a27f8f1c5c0858c323dba060aed905/gdb/c-lang.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bad5c02618a27f8f1c5c0858c323dba060aed905/gdb/c-lang.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.h?ref=bad5c02618a27f8f1c5c0858c323dba060aed905",
      "patch": "@@ -144,6 +144,12 @@ extern void cp_print_value_fields_rtti (struct type *,\n \t\t\t\t\tconst struct value_print_options *,\n \t\t\t\t\tstruct type **, int);\n \n+/* gcc-2.6 or later (when using -fvtable-thunks)\n+   emits a unique named type for a vtable entry.\n+   Some gdb code depends on that specific name.  */\n+\n+extern const char vtbl_ptr_name[];\n+\n extern int cp_is_vtbl_ptr_type (struct type *);\n \n extern int cp_is_vtbl_member (struct type *);"
    },
    {
      "sha": "04be4dc83b7fdbc845a85274269f4c5f037a73d4",
      "filename": "gdb/cp-valprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bad5c02618a27f8f1c5c0858c323dba060aed905/gdb/cp-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bad5c02618a27f8f1c5c0858c323dba060aed905/gdb/cp-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cp-valprint.c?ref=bad5c02618a27f8f1c5c0858c323dba060aed905",
      "patch": "@@ -56,7 +56,7 @@ static void cp_print_value (struct type *, struct type *,\n \n \n /* GCC versions after 2.4.5 use this.  */\n-extern const char vtbl_ptr_name[] = \"__vtbl_ptr_type\";\n+const char vtbl_ptr_name[] = \"__vtbl_ptr_type\";\n \n /* Return truth value for assertion that TYPE is of the type\n    \"pointer to virtual function\".  */"
    },
    {
      "sha": "fa2521f1ca3950c6615e38ba18af5f3c9b989c74",
      "filename": "gdb/stabsread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bad5c02618a27f8f1c5c0858c323dba060aed905/gdb/stabsread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bad5c02618a27f8f1c5c0858c323dba060aed905/gdb/stabsread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stabsread.c?ref=bad5c02618a27f8f1c5c0858c323dba060aed905",
      "patch": "@@ -42,6 +42,7 @@\n #include \"gdb-demangle.h\"\n #include \"language.h\"\n #include \"target-float.h\"\n+#include \"c-lang.h\"\n #include \"cp-abi.h\"\n #include \"cp-support.h\"\n #include <ctype.h>\n@@ -1259,11 +1260,6 @@ define_symbol (CORE_ADDR valu, const char *string, int desc, int type,\n \n       if (TYPE_NAME (SYMBOL_TYPE (sym)) == NULL)\n \t{\n-\t  /* gcc-2.6 or later (when using -fvtable-thunks)\n-\t     emits a unique named type for a vtable entry.\n-\t     Some gdb code depends on that specific name.  */\n-\t  extern const char vtbl_ptr_name[];\n-\n \t  if ((TYPE_CODE (SYMBOL_TYPE (sym)) == TYPE_CODE_PTR\n \t       && strcmp (SYMBOL_LINKAGE_NAME (sym), vtbl_ptr_name))\n \t      || TYPE_CODE (SYMBOL_TYPE (sym)) == TYPE_CODE_FUNC)"
    }
  ]
}