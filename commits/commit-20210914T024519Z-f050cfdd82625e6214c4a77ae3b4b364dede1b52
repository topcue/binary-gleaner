{
  "sha": "f050cfdd82625e6214c4a77ae3b4b364dede1b52",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjA1MGNmZGQ4MjYyNWU2MjE0YzRhNzdhZTNiNGIzNjRkZWRlMWI1Mg==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-09-14T02:45:19Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-09-14T02:45:19Z"
    },
    "message": "sim: bfin: add support for SDL2\n\nThis probably should have been ported long ago, but better late than\nnever.  We keep support for both versions for now since both projects\ntend to have long lifetimes.  Maybe consider dropping SDL1 in another\nten years.",
    "tree": {
      "sha": "fad9fa0ead2de1313e2a285be6badbda5ebffcd1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fad9fa0ead2de1313e2a285be6badbda5ebffcd1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f050cfdd82625e6214c4a77ae3b4b364dede1b52",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f050cfdd82625e6214c4a77ae3b4b364dede1b52",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f050cfdd82625e6214c4a77ae3b4b364dede1b52",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f050cfdd82625e6214c4a77ae3b4b364dede1b52/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "924e660d528c985f526584313a4564cd2618962b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/924e660d528c985f526584313a4564cd2618962b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/924e660d528c985f526584313a4564cd2618962b"
    }
  ],
  "stats": {
    "total": 411,
    "additions": 360,
    "deletions": 51
  },
  "files": [
    {
      "sha": "e59c5403d80d683ecd766e5677791b95ed733615",
      "filename": "sim/bfin/gui.c",
      "status": "modified",
      "additions": 115,
      "deletions": 22,
      "changes": 137,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f050cfdd82625e6214c4a77ae3b4b364dede1b52/sim/bfin/gui.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f050cfdd82625e6214c4a77ae3b4b364dede1b52/sim/bfin/gui.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/gui.c?ref=f050cfdd82625e6214c4a77ae3b4b364dede1b52",
      "patch": "@@ -37,49 +37,77 @@ static struct {\n   void *handle;\n   int (*Init) (Uint32 flags);\n   void (*Quit) (void);\n-  SDL_Surface *(*SetVideoMode) (int width, int height, int bpp, Uint32 flags);\n-  void (*WM_SetCaption) (const char *title, const char *icon);\n   int (*ShowCursor) (int toggle);\n   int (*LockSurface) (SDL_Surface *surface);\n   void (*UnlockSurface) (SDL_Surface *surface);\n+#if HAVE_SDL == 1\n   void (*GetRGB) (Uint32 pixel, const SDL_PixelFormat * const fmt, Uint8 *r, Uint8 *g, Uint8 *b);\n   Uint32 (*MapRGB) (const SDL_PixelFormat * const format, const Uint8 r, const Uint8 g, const Uint8 b);\n+  SDL_Surface *(*SetVideoMode) (int width, int height, int bpp, Uint32 flags);\n+  void (*WM_SetCaption) (const char *title, const char *icon);\n   void (*UpdateRect) (SDL_Surface *screen, Sint32 x, Sint32 y, Uint32 w, Uint32 h);\n+#else\n+  void (*GetRGB) (Uint32 pixel, const SDL_PixelFormat *fmt, Uint8 *r, Uint8 *g, Uint8 *b);\n+  Uint32 (*MapRGB) (const SDL_PixelFormat *format, Uint8 r, Uint8 g, Uint8 b);\n+  SDL_Window *(*CreateWindow) (const char *title, int x, int y, int w, int h, Uint32 flags);\n+  SDL_Surface *(*GetWindowSurface) (SDL_Window *window);\n+  SDL_PixelFormat *(*AllocFormat) (Uint32 pixel_format);\n+  int (*UpdateWindowSurfaceRects) (SDL_Window *window, const SDL_Rect *rects, int numrects);\n+#endif\n } sdl;\n \n static const char * const sdl_syms[] =\n {\n   \"SDL_Init\",\n   \"SDL_Quit\",\n-  \"SDL_SetVideoMode\",\n-  \"SDL_WM_SetCaption\",\n   \"SDL_ShowCursor\",\n   \"SDL_LockSurface\",\n   \"SDL_UnlockSurface\",\n   \"SDL_GetRGB\",\n   \"SDL_MapRGB\",\n+#if HAVE_SDL == 1\n+  \"SDL_SetVideoMode\",\n+  \"SDL_WM_SetCaption\",\n   \"SDL_UpdateRect\",\n+#else\n+  \"SDL_CreateWindow\",\n+  \"SDL_GetWindowSurface\",\n+  \"SDL_AllocFormat\",\n+  \"SDL_UpdateWindowSurfaceRects\",\n+#endif\n };\n \n struct gui_state {\n+#if HAVE_SDL == 2\n+  SDL_Window *window;\n+#endif\n   SDL_Surface *screen;\n   const SDL_PixelFormat *format;\n   int throttle, throttle_limit;\n   enum gui_color color;\n+  int bytes_per_pixel;\n   int curr_line;\n };\n \n+static const char bfin_gui_window_title[] = \"Blackfin GNU Simulator\";\n+\n /* Load the SDL lib on the fly to avoid hard linking against it.  */\n static int\n bfin_gui_sdl_setup (void)\n {\n+  static const char libsdl_soname[] =\n+#if HAVE_SDL == 1\n+      \"libSDL-1.2.so.0\";\n+#else\n+      \"libSDL2-2.0.so.0\";\n+#endif\n   int i;\n   uintptr_t **funcs;\n \n   if (sdl.handle)\n     return 0;\n \n-  sdl.handle = dlopen (\"libSDL-1.2.so.0\", RTLD_LAZY);\n+  sdl.handle = dlopen (libsdl_soname, RTLD_LAZY);\n   if (sdl.handle == NULL)\n     return -1;\n \n@@ -98,7 +126,8 @@ bfin_gui_sdl_setup (void)\n   return 0;\n }\n \n-static const SDL_PixelFormat *bfin_gui_color_format (enum gui_color color);\n+static const SDL_PixelFormat *bfin_gui_color_format (enum gui_color color,\n+\t\t\t\t\t\t     int *bytes_per_pixel);\n \n void *\n bfin_gui_setup (void *state, int enabled, int width, int height,\n@@ -118,16 +147,29 @@ bfin_gui_setup (void *state, int enabled, int width, int height,\n \tgoto error;\n \n       gui->color = color;\n-      gui->format = bfin_gui_color_format (gui->color);\n+      gui->format = bfin_gui_color_format (gui->color, &gui->bytes_per_pixel);\n+#if HAVE_SDL == 1\n+      sdl.WM_SetCaption (bfin_gui_window_title, NULL);\n       gui->screen = sdl.SetVideoMode (width, height, 32,\n \t\t\t\t      SDL_ANYFORMAT|SDL_HWSURFACE);\n+#else\n+      gui->window = sdl.CreateWindow (\n+\t  bfin_gui_window_title, SDL_WINDOWPOS_CENTERED,\n+\t  SDL_WINDOWPOS_CENTERED, width, height, 0);\n+      if (!gui->window)\n+\t{\n+\t  sdl.Quit();\n+\t  goto error;\n+\t}\n+\n+      gui->screen = sdl.GetWindowSurface(gui->window);\n+#endif\n       if (!gui->screen)\n \t{\n \t  sdl.Quit();\n \t  goto error;\n \t}\n \n-      sdl.WM_SetCaption (\"GDB Blackfin Simulator\", NULL);\n       sdl.ShowCursor (0);\n       gui->curr_line = 0;\n       gui->throttle = 0;\n@@ -153,7 +195,10 @@ bfin_gui_setup (void *state, int enabled, int width, int height,\n \n static int\n SDL_ConvertBlitLineFrom (const Uint8 *src, const SDL_PixelFormat * const format,\n-\t\t\t SDL_Surface *dst, int dsty)\n+#if HAVE_SDL == 2\n+\t\t\t SDL_Window *win,\n+#endif\n+\t\t\t SDL_Surface *dst, int dsty, int bytes_per_pixel)\n {\n   Uint8 r, g, b;\n   Uint32 *pixels;\n@@ -170,7 +215,7 @@ SDL_ConvertBlitLineFrom (const Uint8 *src, const SDL_PixelFormat * const format,\n     {\n       /* Exract the packed source pixel; RGB or BGR.  */\n       Uint32 pix = 0;\n-      for (j = 0; j < format->BytesPerPixel; ++j)\n+      for (j = 0; j < bytes_per_pixel; ++j)\n \tif (format->Rshift)\n \t  pix = (pix << 8) | src[j];\n \telse\n@@ -181,13 +226,26 @@ SDL_ConvertBlitLineFrom (const Uint8 *src, const SDL_PixelFormat * const format,\n       /* Translate into the screen pixel format.  */\n       *pixels++ = sdl.MapRGB (dst->format, r, g, b);\n \n-      src += format->BytesPerPixel;\n+      src += bytes_per_pixel;\n     }\n \n   if (SDL_MUSTLOCK (dst))\n     sdl.UnlockSurface (dst);\n \n+#if HAVE_SDL == 1\n   sdl.UpdateRect (dst, 0, dsty, dst->w, 1);\n+#else\n+  {\n+    SDL_Rect rect = {\n+      .x = 0,\n+      .y = dsty,\n+      .w = dst->w,\n+      .h = 1,\n+    };\n+\n+    sdl.UpdateWindowSurfaceRects (win, &rect, 1);\n+  }\n+#endif\n \n   return 0;\n }\n@@ -206,8 +264,12 @@ bfin_gui_update (void *state, const void *source, unsigned nr_bytes)\n   if (gui->throttle)\n     return 0;\n \n-  ret = SDL_ConvertBlitLineFrom (source, gui->format, gui->screen,\n-\t\t\t\t gui->curr_line);\n+  ret = SDL_ConvertBlitLineFrom (source, gui->format,\n+#if HAVE_SDL == 2\n+\t\t\t\t gui->window,\n+#endif\n+\t\t\t\t gui->screen, gui->curr_line,\n+\t\t\t\t gui->bytes_per_pixel);\n   if (ret)\n     return 0;\n \n@@ -216,6 +278,8 @@ bfin_gui_update (void *state, const void *source, unsigned nr_bytes)\n   return nr_bytes;\n }\n \n+#if HAVE_SDL == 1\n+\n #define FMASK(cnt, shift) (((1 << (cnt)) - 1) << (shift))\n #define _FORMAT(bpp, rcnt, gcnt, bcnt, acnt, rsh, gsh, bsh, ash) \\\n   NULL, bpp, (bpp)/8, 8-(rcnt), 8-(gcnt), 8-(bcnt), 8-(acnt), rsh, gsh, bsh, ash, \\\n@@ -228,33 +292,52 @@ static const SDL_PixelFormat sdl_rgb_565 =\n {\n   FORMAT (5, 6, 5, 0, 11, 5, 0, 0)\n };\n+#define SDL_PIXELFORMAT_RGB565 &sdl_rgb_565\n+\n static const SDL_PixelFormat sdl_bgr_565 =\n {\n   FORMAT (5, 6, 5, 0, 0, 5, 11, 0)\n };\n+#define SDL_PIXELFORMAT_BGR565 &sdl_bgr_565\n+\n static const SDL_PixelFormat sdl_rgb_888 =\n {\n   FORMAT (8, 8, 8, 0, 16, 8, 0, 0)\n };\n+#define SDL_PIXELFORMAT_RGB888 &sdl_rgb_888\n+\n static const SDL_PixelFormat sdl_bgr_888 =\n {\n   FORMAT (8, 8, 8, 0, 0, 8, 16, 0)\n };\n+#define SDL_PIXELFORMAT_BGR888 &sdl_bgr_888\n+\n static const SDL_PixelFormat sdl_rgba_8888 =\n {\n   FORMAT (8, 8, 8, 8, 24, 16, 8, 0)\n };\n+#define SDL_PIXELFORMAT_RGBA8888 &sdl_rgba_8888\n+\n+#endif\n \n static const struct {\n   const char *name;\n+  /* Since we declare the pixel formats above for SDL 1, we have the bpp\n+     setting, but SDL 2 internally uses larger values for its own memory, so\n+     we can't assume the Blackfin pixel format sizes always match SDL.  */\n+  int bytes_per_pixel;\n+#if HAVE_SDL == 1\n   const SDL_PixelFormat *format;\n+#else\n+  Uint32 format;\n+#endif\n   enum gui_color color;\n } color_spaces[] = {\n-  { \"rgb565\",   &sdl_rgb_565,   GUI_COLOR_RGB_565,   },\n-  { \"bgr565\",   &sdl_bgr_565,   GUI_COLOR_BGR_565,   },\n-  { \"rgb888\",   &sdl_rgb_888,   GUI_COLOR_RGB_888,   },\n-  { \"bgr888\",   &sdl_bgr_888,   GUI_COLOR_BGR_888,   },\n-  { \"rgba8888\", &sdl_rgba_8888, GUI_COLOR_RGBA_8888, },\n+  { \"rgb565\",   2, SDL_PIXELFORMAT_RGB565,   GUI_COLOR_RGB_565,   },\n+  { \"bgr565\",   2, SDL_PIXELFORMAT_BGR565,   GUI_COLOR_BGR_565,   },\n+  { \"rgb888\",   3, SDL_PIXELFORMAT_RGB888,   GUI_COLOR_RGB_888,   },\n+  { \"bgr888\",   3, SDL_PIXELFORMAT_BGR888,   GUI_COLOR_BGR_888,   },\n+  { \"rgba8888\", 4, SDL_PIXELFORMAT_RGBA8888, GUI_COLOR_RGBA_8888, },\n };\n \n enum gui_color bfin_gui_color (const char *color)\n@@ -273,21 +356,31 @@ enum gui_color bfin_gui_color (const char *color)\n   return GUI_COLOR_RGB_888;\n }\n \n-static const SDL_PixelFormat *bfin_gui_color_format (enum gui_color color)\n+static const SDL_PixelFormat *bfin_gui_color_format (enum gui_color color,\n+\t\t\t\t\t\t     int *bytes_per_pixel)\n {\n   int i;\n \n   for (i = 0; i < ARRAY_SIZE (color_spaces); ++i)\n     if (color == color_spaces[i].color)\n-      return color_spaces[i].format;\n+      {\n+\t*bytes_per_pixel = color_spaces[i].bytes_per_pixel;\n+#if HAVE_SDL == 1\n+\treturn color_spaces[i].format;\n+#else\n+\treturn sdl.AllocFormat (color_spaces[i].format);\n+#endif\n+      }\n \n   return NULL;\n }\n \n int bfin_gui_color_depth (enum gui_color color)\n {\n-  const SDL_PixelFormat *format = bfin_gui_color_format (color);\n-  return format ? format->BitsPerPixel : 0;\n+  int bytes_per_pixel;\n+  const SDL_PixelFormat *format = bfin_gui_color_format (color,\n+\t\t\t\t\t\t\t &bytes_per_pixel);\n+  return format ? bytes_per_pixel * 8 : 0;\n }\n \n #endif"
    },
    {
      "sha": "8e84759df047dd5341ee7f7f77b2ba6bde3fa23f",
      "filename": "sim/config.h.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f050cfdd82625e6214c4a77ae3b4b364dede1b52/sim/config.h.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f050cfdd82625e6214c4a77ae3b4b364dede1b52/sim/config.h.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/config.h.in?ref=f050cfdd82625e6214c4a77ae3b4b364dede1b52",
      "patch": "@@ -121,6 +121,9 @@\n /* Define to 1 if you have the `kill' function. */\n #undef HAVE_KILL\n \n+/* Define to 1 if you have the `dl' library (-ldl). */\n+#undef HAVE_LIBDL\n+\n /* Define to 1 if you have the `m' library (-lm). */\n #undef HAVE_LIBM\n "
    },
    {
      "sha": "9885c9099d8521971f29a3952989f9fd9d41000d",
      "filename": "sim/configure",
      "status": "modified",
      "additions": 228,
      "deletions": 24,
      "changes": 252,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f050cfdd82625e6214c4a77ae3b4b364dede1b52/sim/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f050cfdd82625e6214c4a77ae3b4b364dede1b52/sim/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/configure?ref=f050cfdd82625e6214c4a77ae3b4b364dede1b52",
      "patch": "@@ -12708,6 +12708,136 @@ _ACEOF\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl\" >&5\n+$as_echo_n \"checking for dlopen in -ldl... \" >&6; }\n+if ${ac_cv_lib_dl_dlopen+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-ldl  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char dlopen ();\n+int\n+main ()\n+{\n+return dlopen ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_dl_dlopen=yes\n+else\n+  ac_cv_lib_dl_dlopen=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen\" >&5\n+$as_echo \"$ac_cv_lib_dl_dlopen\" >&6; }\n+if test \"x$ac_cv_lib_dl_dlopen\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBDL 1\n+_ACEOF\n+\n+  LIBS=\"-ldl $LIBS\"\n+\n+fi\n+\n+if test \"${ac_cv_lib_dl_dlopen}\" = \"yes\"; then\n+\n+pkg_failed=no\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sdl2\" >&5\n+$as_echo_n \"checking for sdl2... \" >&6; }\n+\n+if test -n \"$SDL_CFLAGS\"; then\n+    pkg_cv_SDL_CFLAGS=\"$SDL_CFLAGS\"\n+ elif test -n \"$PKG_CONFIG\"; then\n+    if test -n \"$PKG_CONFIG\" && \\\n+    { { $as_echo \"$as_me:${as_lineno-$LINENO}: \\$PKG_CONFIG --exists --print-errors \\\"sdl2\\\"\"; } >&5\n+  ($PKG_CONFIG --exists --print-errors \"sdl2\") 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; then\n+  pkg_cv_SDL_CFLAGS=`$PKG_CONFIG --cflags \"sdl2\" 2>/dev/null`\n+\t\t      test \"x$?\" != \"x0\" && pkg_failed=yes\n+else\n+  pkg_failed=yes\n+fi\n+ else\n+    pkg_failed=untried\n+fi\n+if test -n \"$SDL_LIBS\"; then\n+    pkg_cv_SDL_LIBS=\"$SDL_LIBS\"\n+ elif test -n \"$PKG_CONFIG\"; then\n+    if test -n \"$PKG_CONFIG\" && \\\n+    { { $as_echo \"$as_me:${as_lineno-$LINENO}: \\$PKG_CONFIG --exists --print-errors \\\"sdl2\\\"\"; } >&5\n+  ($PKG_CONFIG --exists --print-errors \"sdl2\") 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; then\n+  pkg_cv_SDL_LIBS=`$PKG_CONFIG --libs \"sdl2\" 2>/dev/null`\n+\t\t      test \"x$?\" != \"x0\" && pkg_failed=yes\n+else\n+  pkg_failed=yes\n+fi\n+ else\n+    pkg_failed=untried\n+fi\n+\n+if test $pkg_failed = no; then\n+  pkg_save_LDFLAGS=\"$LDFLAGS\"\n+  LDFLAGS=\"$LDFLAGS $pkg_cv_SDL_LIBS\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+\n+else\n+  pkg_failed=yes\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+  LDFLAGS=$pkg_save_LDFLAGS\n+fi\n+\n+\n+\n+if test $pkg_failed = yes; then\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+\n+if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then\n+        _pkg_short_errors_supported=yes\n+else\n+        _pkg_short_errors_supported=no\n+fi\n+        if test $_pkg_short_errors_supported = yes; then\n+\t        SDL_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs \"sdl2\" 2>&1`\n+        else\n+\t        SDL_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs \"sdl2\" 2>&1`\n+        fi\n+\t# Put the nasty error message in config.log where it belongs\n+\techo \"$SDL_PKG_ERRORS\" >&5\n+\n+\n \n pkg_failed=no\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sdl\" >&5\n@@ -12801,52 +12931,126 @@ else\n \tSDL_LIBS=$pkg_cv_SDL_LIBS\n         { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n $as_echo \"yes\" >&6; }\n-\t  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl\" >&5\n-$as_echo_n \"checking for dlopen in -ldl... \" >&6; }\n-if ${ac_cv_lib_dl_dlopen+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n+\t      SDL_CFLAGS=\"${SDL_CFLAGS} -DHAVE_SDL=1\"\n+      SDL_LIBS=\"-ldl\"\n+\n+fi\n+\n+elif test $pkg_failed = untried; then\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+\n+\n+pkg_failed=no\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sdl\" >&5\n+$as_echo_n \"checking for sdl... \" >&6; }\n+\n+if test -n \"$SDL_CFLAGS\"; then\n+    pkg_cv_SDL_CFLAGS=\"$SDL_CFLAGS\"\n+ elif test -n \"$PKG_CONFIG\"; then\n+    if test -n \"$PKG_CONFIG\" && \\\n+    { { $as_echo \"$as_me:${as_lineno-$LINENO}: \\$PKG_CONFIG --exists --print-errors \\\"sdl\\\"\"; } >&5\n+  ($PKG_CONFIG --exists --print-errors \"sdl\") 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; then\n+  pkg_cv_SDL_CFLAGS=`$PKG_CONFIG --cflags \"sdl\" 2>/dev/null`\n+\t\t      test \"x$?\" != \"x0\" && pkg_failed=yes\n else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-ldl  $LIBS\"\n-cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+  pkg_failed=yes\n+fi\n+ else\n+    pkg_failed=untried\n+fi\n+if test -n \"$SDL_LIBS\"; then\n+    pkg_cv_SDL_LIBS=\"$SDL_LIBS\"\n+ elif test -n \"$PKG_CONFIG\"; then\n+    if test -n \"$PKG_CONFIG\" && \\\n+    { { $as_echo \"$as_me:${as_lineno-$LINENO}: \\$PKG_CONFIG --exists --print-errors \\\"sdl\\\"\"; } >&5\n+  ($PKG_CONFIG --exists --print-errors \"sdl\") 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; then\n+  pkg_cv_SDL_LIBS=`$PKG_CONFIG --libs \"sdl\" 2>/dev/null`\n+\t\t      test \"x$?\" != \"x0\" && pkg_failed=yes\n+else\n+  pkg_failed=yes\n+fi\n+ else\n+    pkg_failed=untried\n+fi\n+\n+if test $pkg_failed = no; then\n+  pkg_save_LDFLAGS=\"$LDFLAGS\"\n+  LDFLAGS=\"$LDFLAGS $pkg_cv_SDL_LIBS\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n-/* Override any GCC internal prototype to avoid an error.\n-   Use char because int might match the return type of a GCC\n-   builtin and then its argument prototype would still apply.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-char dlopen ();\n int\n main ()\n {\n-return dlopen ();\n+\n   ;\n   return 0;\n }\n _ACEOF\n if ac_fn_c_try_link \"$LINENO\"; then :\n-  ac_cv_lib_dl_dlopen=yes\n+\n else\n-  ac_cv_lib_dl_dlopen=no\n+  pkg_failed=yes\n fi\n rm -f core conftest.err conftest.$ac_objext \\\n     conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n+  LDFLAGS=$pkg_save_LDFLAGS\n fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen\" >&5\n-$as_echo \"$ac_cv_lib_dl_dlopen\" >&6; }\n-if test \"x$ac_cv_lib_dl_dlopen\" = xyes; then :\n-      SDL_CFLAGS=\"${SDL_CFLAGS} -DHAVE_SDL\"\n-    SDL_LIBS=\"-ldl\"\n \n+\n+\n+if test $pkg_failed = yes; then\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+\n+if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then\n+        _pkg_short_errors_supported=yes\n else\n-  SDL_CFLAGS= SDL_LIBS=\n+        _pkg_short_errors_supported=no\n fi\n+        if test $_pkg_short_errors_supported = yes; then\n+\t        SDL_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs \"sdl\" 2>&1`\n+        else\n+\t        SDL_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs \"sdl\" 2>&1`\n+        fi\n+\t# Put the nasty error message in config.log where it belongs\n+\techo \"$SDL_PKG_ERRORS\" >&5\n+\n+\t:\n+elif test $pkg_failed = untried; then\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+\t:\n+else\n+\tSDL_CFLAGS=$pkg_cv_SDL_CFLAGS\n+\tSDL_LIBS=$pkg_cv_SDL_LIBS\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+\t      SDL_CFLAGS=\"${SDL_CFLAGS} -DHAVE_SDL=1\"\n+      SDL_LIBS=\"-ldl\"\n \n+fi\n+\n+else\n+\tSDL_CFLAGS=$pkg_cv_SDL_CFLAGS\n+\tSDL_LIBS=$pkg_cv_SDL_LIBS\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+\t    SDL_CFLAGS=\"${SDL_CFLAGS} -DHAVE_SDL=2\"\n+    SDL_LIBS=\"-ldl\"\n \n fi\n+else\n+  SDL_CFLAGS=\n+  SDL_LIBS=\n+fi\n \n \n "
    },
    {
      "sha": "766f5770c74ec28d44785ea0d264a372394d3abd",
      "filename": "sim/m4/sim_ac_platform.m4",
      "status": "modified",
      "additions": 14,
      "deletions": 5,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f050cfdd82625e6214c4a77ae3b4b364dede1b52/sim/m4/sim_ac_platform.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f050cfdd82625e6214c4a77ae3b4b364dede1b52/sim/m4/sim_ac_platform.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m4/sim_ac_platform.m4?ref=f050cfdd82625e6214c4a77ae3b4b364dede1b52",
      "patch": "@@ -163,12 +163,21 @@ AC_CHECK_LIB(nsl, gethostbyname)\n AC_CHECK_LIB(m, fabs)\n AC_CHECK_LIB(m, log2)\n \n-PKG_CHECK_MODULES(SDL, sdl, [dnl\n-  AC_CHECK_LIB(dl, dlopen, [dnl\n-    SDL_CFLAGS=\"${SDL_CFLAGS} -DHAVE_SDL\"\n+AC_CHECK_LIB(dl, dlopen)\n+if test \"${ac_cv_lib_dl_dlopen}\" = \"yes\"; then\n+  PKG_CHECK_MODULES(SDL, sdl2, [dnl\n+    SDL_CFLAGS=\"${SDL_CFLAGS} -DHAVE_SDL=2\"\n     SDL_LIBS=\"-ldl\"\n-    ], [SDL_CFLAGS= SDL_LIBS=])\n-  ], [:])\n+  ], [\n+    PKG_CHECK_MODULES(SDL, sdl, [dnl\n+      SDL_CFLAGS=\"${SDL_CFLAGS} -DHAVE_SDL=1\"\n+      SDL_LIBS=\"-ldl\"\n+    ], [:])\n+  ])\n+else\n+  SDL_CFLAGS=\n+  SDL_LIBS=\n+fi\n AC_SUBST(SDL_CFLAGS)\n AC_SUBST(SDL_LIBS)\n "
    }
  ]
}