{
  "sha": "69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjkxMDVjZTRjNDJlNTY0NGFiOTJjYjliMjc2NWZmNWNlNmJmN2IxYg==",
  "commit": {
    "author": {
      "name": "Sudi Das",
      "email": "sudi.das@arm.com",
      "date": "2019-01-25T14:28:07Z"
    },
    "committer": {
      "name": "Tamar Christina",
      "email": "tamar.christina@arm.com",
      "date": "2019-01-25T14:49:53Z"
    },
    "message": "AArch64: Update encodings for stg, st2g, stzg and st2zg.\n\nThis patch is part of a series of patches to introduce a few changes to the\nArmv8.5-A Memory Tagging Extension. This patch updates the st*g instructions\nto use a previously reserved field for a new register operand. Thus the\nnew versions of the instructions are as follows:\n\n- STG Xt, [<Xn|SP>, #<simm>]\n- STG Xt, [<Xn|SP>, #<simm>]!\n- STG Xt, [<Xn|SP>], #<simm>\n- STZG Xt, [<Xn|SP>, #<simm>]\n- STZG Xt, [<Xn|SP>, #<simm>]!\n- STZG Xt, [<Xn|SP>], #<simm>\n- ST2G Xt, [<Xn|SP>, #<simm>]\n- ST2G Xt, [<Xn|SP>, #<simm>]!\n- ST2G Xt, [<Xn|SP>], #<simm>\n- STZ2G Xt, [<Xn|SP>, #<simm>]\n- STZ2G Xt, [<Xn|SP>, #<simm>]!\n- STZ2G Xt, [<Xn|SP>], #<simm>\n\nCommitted on behalf of Sudakshina Das.\n\n*** gas/ChangeLog ***\n\n\t* config/tc-aarch64.c (warn_unpredictable_ldst): Exempt\n\tstg, st2g, stzg and stz2g from Xt == Xn with writeback warning.\n\t* testsuite/gas/aarch64/armv8_5-a-memtag.d: Change tests for\n\tstg, stzg, st2g and stz2g.\n\t* testsuite/gas/aarch64/armv8_5-a-memtag.s: Likewise.\n\t* testsuite/gas/aarch64/illegal-memtag.l: Likewise.\n\t* testsuite/gas/aarch64/illegal-memtag.s: Likewise.\n\n*** opcodes/ChangeLog ***\n\n\t* aarch64-tbl.h (QL_LDST_AT): Update macro.\n\t(aarch64_opcode): Change encoding for stg, stzg\n\tst2g and st2zg.\n\t* aarch64-asm-2.c: Regenerated.\n\t* aarch64-dis-2.c: Regenerated.\n\t* aarch64-opc-2.c: Regenerated.",
    "tree": {
      "sha": "03e21bc1d88aa8a4cb469aa6d5ab4c7dc6ae3491",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/03e21bc1d88aa8a4cb469aa6d5ab4c7dc6ae3491"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b/comments",
  "author": {
    "login": "sudakshina-das-arm",
    "id": 28538945,
    "node_id": "MDQ6VXNlcjI4NTM4OTQ1",
    "avatar_url": "https://avatars.githubusercontent.com/u/28538945?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sudakshina-das-arm",
    "html_url": "https://github.com/sudakshina-das-arm",
    "followers_url": "https://api.github.com/users/sudakshina-das-arm/followers",
    "following_url": "https://api.github.com/users/sudakshina-das-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/sudakshina-das-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sudakshina-das-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sudakshina-das-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/sudakshina-das-arm/orgs",
    "repos_url": "https://api.github.com/users/sudakshina-das-arm/repos",
    "events_url": "https://api.github.com/users/sudakshina-das-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sudakshina-das-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "TamarChristinaArm",
    "id": 48126768,
    "node_id": "MDQ6VXNlcjQ4MTI2NzY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TamarChristinaArm",
    "html_url": "https://github.com/TamarChristinaArm",
    "followers_url": "https://api.github.com/users/TamarChristinaArm/followers",
    "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}",
    "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions",
    "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs",
    "repos_url": "https://api.github.com/users/TamarChristinaArm/repos",
    "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "20a4ca5524b9bde2f5dfb19661570c25a3b05e5d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/20a4ca5524b9bde2f5dfb19661570c25a3b05e5d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/20a4ca5524b9bde2f5dfb19661570c25a3b05e5d"
    }
  ],
  "stats": {
    "total": 191,
    "additions": 112,
    "deletions": 79
  },
  "files": [
    {
      "sha": "1acf6f671bdf826148bba4524f0edd734ab0b0e9",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b",
      "patch": "@@ -6772,6 +6772,8 @@ warn_unpredictable_ldst (aarch64_instruction *instr, char *str)\n \t   == AARCH64_OPND_CLASS_INT_REG)\n \t  && opnds[0].reg.regno == opnds[1].addr.base_regno\n \t  && opnds[1].addr.base_regno != REG_SP\n+\t  /* Exempt STG/STZG/ST2G/STZ2G.  */\n+\t  && !(opnds[1].type == AARCH64_OPND_ADDR_SIMM13)\n \t  && opnds[1].addr.writeback)\n \tas_warn (_(\"unpredictable transfer with writeback -- `%s'\"), str);\n       break;"
    },
    {
      "sha": "53a95fb302b643a690add822171eaf097990ea44",
      "filename": "gas/testsuite/gas/aarch64/armv8_5-a-memtag.d",
      "status": "modified",
      "additions": 60,
      "deletions": 44,
      "changes": 104,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b/gas/testsuite/gas/aarch64/armv8_5-a-memtag.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b/gas/testsuite/gas/aarch64/armv8_5-a-memtag.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/armv8_5-a-memtag.d?ref=69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b",
      "patch": "@@ -55,50 +55,66 @@ Disassembly of section \\.text:\n .*:\tbadb037f \tcmpp\tx27, x27\n .*:\tbac003ff \tcmpp\tsp, x0\n .*:\tbadf001f \tcmpp\tx0, sp\n-.*:\td920081f \tstg\t\\[x0\\]\n-.*:\td9200b7f \tstg\t\\[x27\\]\n-.*:\td93fb81f \tstg\t\\[x0, #-80\\]\n-.*:\td9200c1f \tstg\t\\[x0, #0\\]!\n-.*:\td920ac1f \tstg\t\\[x0, #160\\]!\n-.*:\td920041f \tstg\t\\[x0\\], #0\n-.*:\td93a641f \tstg\t\\[x0\\], #-1440\n-.*:\td92ffbff \tstg\t\\[sp, #4080\\]\n-.*:\td9300bff \tstg\t\\[sp, #-4096\\]\n-.*:\td92fffff \tstg\t\\[sp, #4080\\]!\n-.*:\td93007ff \tstg\t\\[sp\\], #-4096\n-.*:\td960081f \tstzg\t\\[x0\\]\n-.*:\td9600b7f \tstzg\t\\[x27\\]\n-.*:\td97fb81f \tstzg\t\\[x0, #-80\\]\n-.*:\td9600c1f \tstzg\t\\[x0, #0\\]!\n-.*:\td960ac1f \tstzg\t\\[x0, #160\\]!\n-.*:\td960041f \tstzg\t\\[x0\\], #0\n-.*:\td97a641f \tstzg\t\\[x0\\], #-1440\n-.*:\td96ffbff \tstzg\t\\[sp, #4080\\]\n-.*:\td9700bff \tstzg\t\\[sp, #-4096\\]\n-.*:\td96fffff \tstzg\t\\[sp, #4080\\]!\n-.*:\td97007ff \tstzg\t\\[sp\\], #-4096\n-.*:\td9a0081f \tst2g\t\\[x0\\]\n-.*:\td9a00b7f \tst2g\t\\[x27\\]\n-.*:\td9bfb81f \tst2g\t\\[x0, #-80\\]\n-.*:\td9a00c1f \tst2g\t\\[x0, #0\\]!\n-.*:\td9a0ac1f \tst2g\t\\[x0, #160\\]!\n-.*:\td9a0041f \tst2g\t\\[x0\\], #0\n-.*:\td9ba641f \tst2g\t\\[x0\\], #-1440\n-.*:\td9affbff \tst2g\t\\[sp, #4080\\]\n-.*:\td9b00bff \tst2g\t\\[sp, #-4096\\]\n-.*:\td9afffff \tst2g\t\\[sp, #4080\\]!\n-.*:\td9b007ff \tst2g\t\\[sp\\], #-4096\n-.*:\td9e0081f \tstz2g\t\\[x0\\]\n-.*:\td9e00b7f \tstz2g\t\\[x27\\]\n-.*:\td9ffb81f \tstz2g\t\\[x0, #-80\\]\n-.*:\td9e00c1f \tstz2g\t\\[x0, #0\\]!\n-.*:\td9e0ac1f \tstz2g\t\\[x0, #160\\]!\n-.*:\td9e0041f \tstz2g\t\\[x0\\], #0\n-.*:\td9fa641f \tstz2g\t\\[x0\\], #-1440\n-.*:\td9effbff \tstz2g\t\\[sp, #4080\\]\n-.*:\td9f00bff \tstz2g\t\\[sp, #-4096\\]\n-.*:\td9efffff \tstz2g\t\\[sp, #4080\\]!\n-.*:\td9f007ff \tstz2g\t\\[sp\\], #-4096\n+.*:\td9200800 \tstg\tx0, \\[x0\\]\n+.*:\td9200b60 \tstg\tx0, \\[x27\\]\n+.*:\td920081f \tstg\txzr, \\[x0\\]\n+.*:\td93fb81b \tstg\tx27, \\[x0, #-80\\]\n+.*:\td9200c00 \tstg\tx0, \\[x0, #0\\]!\n+.*:\td9200c1f \tstg\txzr, \\[x0, #0\\]!\n+.*:\td920ac1b \tstg\tx27, \\[x0, #160\\]!\n+.*:\td9200400 \tstg\tx0, \\[x0\\], #0\n+.*:\td920041f \tstg\txzr, \\[x0\\], #0\n+.*:\td93a641b \tstg\tx27, \\[x0\\], #-1440\n+.*:\td92ffbe0 \tstg\tx0, \\[sp, #4080\\]\n+.*:\td92ffbff \tstg\txzr, \\[sp, #4080\\]\n+.*:\td9300bfb \tstg\tx27, \\[sp, #-4096\\]\n+.*:\td92fffe0 \tstg\tx0, \\[sp, #4080\\]!\n+.*:\td93007ff \tstg\txzr, \\[sp\\], #-4096\n+.*:\td9600800 \tstzg\tx0, \\[x0\\]\n+.*:\td9600b60 \tstzg\tx0, \\[x27\\]\n+.*:\td960081f \tstzg\txzr, \\[x0\\]\n+.*:\td97fb81b \tstzg\tx27, \\[x0, #-80\\]\n+.*:\td9600c00 \tstzg\tx0, \\[x0, #0\\]!\n+.*:\td9600c1f \tstzg\txzr, \\[x0, #0\\]!\n+.*:\td960ac1b \tstzg\tx27, \\[x0, #160\\]!\n+.*:\td9600400 \tstzg\tx0, \\[x0\\], #0\n+.*:\td960041f \tstzg\txzr, \\[x0\\], #0\n+.*:\td97a641b \tstzg\tx27, \\[x0\\], #-1440\n+.*:\td96ffbe0 \tstzg\tx0, \\[sp, #4080\\]\n+.*:\td96ffbff \tstzg\txzr, \\[sp, #4080\\]\n+.*:\td9700bfb \tstzg\tx27, \\[sp, #-4096\\]\n+.*:\td96fffe0 \tstzg\tx0, \\[sp, #4080\\]!\n+.*:\td97007ff \tstzg\txzr, \\[sp\\], #-4096\n+.*:\td9a00800 \tst2g\tx0, \\[x0\\]\n+.*:\td9a00b60 \tst2g\tx0, \\[x27\\]\n+.*:\td9a0081f \tst2g\txzr, \\[x0\\]\n+.*:\td9bfb81b \tst2g\tx27, \\[x0, #-80\\]\n+.*:\td9a00c00 \tst2g\tx0, \\[x0, #0\\]!\n+.*:\td9a00c1f \tst2g\txzr, \\[x0, #0\\]!\n+.*:\td9a0ac1b \tst2g\tx27, \\[x0, #160\\]!\n+.*:\td9a00400 \tst2g\tx0, \\[x0\\], #0\n+.*:\td9a0041f \tst2g\txzr, \\[x0\\], #0\n+.*:\td9ba641b \tst2g\tx27, \\[x0\\], #-1440\n+.*:\td9affbe0 \tst2g\tx0, \\[sp, #4080\\]\n+.*:\td9affbff \tst2g\txzr, \\[sp, #4080\\]\n+.*:\td9b00bfb \tst2g\tx27, \\[sp, #-4096\\]\n+.*:\td9afffe0 \tst2g\tx0, \\[sp, #4080\\]!\n+.*:\td9b007ff \tst2g\txzr, \\[sp\\], #-4096\n+.*:\td9e00800 \tstz2g\tx0, \\[x0\\]\n+.*:\td9e00b60 \tstz2g\tx0, \\[x27\\]\n+.*:\td9e0081f \tstz2g\txzr, \\[x0\\]\n+.*:\td9ffb81b \tstz2g\tx27, \\[x0, #-80\\]\n+.*:\td9e00c00 \tstz2g\tx0, \\[x0, #0\\]!\n+.*:\td9e00c1f \tstz2g\txzr, \\[x0, #0\\]!\n+.*:\td9e0ac1b \tstz2g\tx27, \\[x0, #160\\]!\n+.*:\td9e00400 \tstz2g\tx0, \\[x0\\], #0\n+.*:\td9e0041f \tstz2g\txzr, \\[x0\\], #0\n+.*:\td9fa641b \tstz2g\tx27, \\[x0\\], #-1440\n+.*:\td9effbe0 \tstz2g\tx0, \\[sp, #4080\\]\n+.*:\td9effbff \tstz2g\txzr, \\[sp, #4080\\]\n+.*:\td9f00bfb \tstz2g\tx27, \\[sp, #-4096\\]\n+.*:\td9efffe0 \tstz2g\tx0, \\[sp, #4080\\]!\n+.*:\td9f007ff \tstz2g\txzr, \\[sp\\], #-4096\n .*:\t69000000 \tstgp\tx0, x0, \\[x0\\]\n .*:\t69006c00 \tstgp\tx0, x27, \\[x0\\]\n .*:\t6900001b \tstgp\tx27, x0, \\[x0\\]"
    },
    {
      "sha": "2ca1a682018bb64e4ef745ab829d6d268a135b74",
      "filename": "gas/testsuite/gas/aarch64/armv8_5-a-memtag.s",
      "status": "modified",
      "additions": 15,
      "deletions": 11,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b/gas/testsuite/gas/aarch64/armv8_5-a-memtag.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b/gas/testsuite/gas/aarch64/armv8_5-a-memtag.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/armv8_5-a-memtag.s?ref=69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b",
      "patch": "@@ -17,17 +17,21 @@ func:\n \t.endm\n \n \t.macro expand_stg op\n-\t\\op [x0, #0]\n-\t\\op [x27, #0]\n-\t\\op [x0, #-80]\n-\t\\op [x0, #0]!\n-\t\\op [x0, #160]!\n-\t\\op [x0], #0\n-\t\\op [x0], #-1440\n-\t\\op [sp, #4080]\n-\t\\op [sp, #-4096]\n-\t\\op [sp, #4080]!\n-\t\\op [sp], #-4096\n+\t\\op x0, [x0, #0]\n+\t\\op x0, [x27, #0]\n+\t\\op xzr, [x0, #0]\n+\t\\op x27, [x0, #-80]\n+\t\\op x0, [x0, #0]!\n+\t\\op xzr, [x0, #0]!\n+\t\\op x27, [x0, #160]!\n+\t\\op x0, [x0], #0\n+\t\\op xzr, [x0], #0\n+\t\\op x27, [x0], #-1440\n+\t\\op x0, [sp, #4080]\n+\t\\op xzr, [sp, #4080]\n+\t\\op x27, [sp, #-4096]\n+\t\\op x0, [sp, #4080]!\n+\t\\op xzr, [sp], #-4096\n \t.endm\n \n \t.macro expand_ldg_bulk op"
    },
    {
      "sha": "aa79aacc18dc27b4972ebba767e194be5501bb8a",
      "filename": "gas/testsuite/gas/aarch64/illegal-memtag.l",
      "status": "modified",
      "additions": 11,
      "deletions": 7,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b/gas/testsuite/gas/aarch64/illegal-memtag.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b/gas/testsuite/gas/aarch64/illegal-memtag.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/illegal-memtag.l?ref=69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b",
      "patch": "@@ -4,9 +4,9 @@\n [^:]*:[0-9]+: Error: immediate value out of range 0 to 1008 at operand 3 -- `subg x1,x2,-16,#0x3'\n [^:]*:[0-9]+: Error: immediate value out of range 0 to 15 at operand 4 -- `addg x1,x2,#0x3f0,#0x10'\n [^:]*:[0-9]+: Error: immediate value out of range 0 to 15 at operand 4 -- `subg x1,x2,#0x3f0,-4'\n-[^:]*:[0-9]+: Error: immediate value must be a multiple of 16 at operand 1 -- `stg \\[x1,#15\\]'\n-[^:]*:[0-9]+: Error: immediate offset out of range -4096 to 4080 at operand 1 -- `stzg \\[x1,#-4097]!'\n-[^:]*:[0-9]+: Error: immediate offset out of range -4096 to 4080 at operand 1 -- `st2g \\[x1],#4096'\n+[^:]*:[0-9]+: Error: immediate value must be a multiple of 16 at operand 2 -- `stg x2,\\[x1,#15\\]'\n+[^:]*:[0-9]+: Error: immediate offset out of range -4096 to 4080 at operand 2 -- `stzg x2,\\[x1,#-4097\\]!'\n+[^:]*:[0-9]+: Error: immediate offset out of range -4096 to 4080 at operand 2 -- `st2g x2,\\[x1\\],#4096'\n [^:]*:[0-9]+: Error: immediate value must be a multiple of 16 at operand 2 -- `ldg x1,\\[x2,#33\\]'\n [^:]*:[0-9]+: Error: immediate offset out of range -4096 to 4080 at operand 2 -- `ldg x1,\\[x2,#4112\\]'\n [^:]*:[0-9]+: Error: immediate offset out of range -1024 to 1008 at operand 3 -- `stgp x1,x2,\\[x3,#1009\\]'\n@@ -30,10 +30,14 @@\n [^:]*:[0-9]+: Error: operand 3 must be an integer or stack pointer register -- `subps x1,x2,xzr'\n [^:]*:[0-9]+: Error: operand 1 must be an integer or stack pointer register -- `cmpp xzr,x2'\n [^:]*:[0-9]+: Error: operand 2 must be an integer or stack pointer register -- `cmpp x2,xzr'\n-[^:]*:[0-9]+: Error: 64-bit integer or SP register expected at operand 1 -- `stg \\[xzr,#0\\]'\n-[^:]*:[0-9]+: Error: 64-bit integer or SP register expected at operand 1 -- `st2g \\[xzr,#0]!'\n-[^:]*:[0-9]+: Error: 64-bit integer or SP register expected at operand 1 -- `stzg \\[xzr],#0'\n-[^:]*:[0-9]+: Error: 64-bit integer or SP register expected at operand 1 -- `stz2g \\[xzr,#0\\]'\n+[^:]*:[0-9]+: Error: 64-bit integer or SP register expected at operand 2 -- `stg x2,\\[xzr,#0\\]'\n+[^:]*:[0-9]+: Error: 64-bit integer or SP register expected at operand 2 -- `st2g x2,\\[xzr,#0\\]!'\n+[^:]*:[0-9]+: Error: 64-bit integer or SP register expected at operand 2 -- `stzg x2,\\[xzr\\],#0'\n+[^:]*:[0-9]+: Error: 64-bit integer or SP register expected at operand 2 -- `stz2g x2,\\[xzr,#0\\]'\n+[^:]*:[0-9]+: Error: operand 1 must be an integer register -- `stg sp,\\[x2,#0\\]'\n+[^:]*:[0-9]+: Error: operand 1 must be an integer register -- `st2g sp,\\[x2,#0\\]!'\n+[^:]*:[0-9]+: Error: operand 1 must be an integer register -- `stzg sp,\\[x2\\],#0'\n+[^:]*:[0-9]+: Error: operand 1 must be an integer register -- `stz2g sp,\\[x2,#0\\]'\n [^:]*:[0-9]+: Error: operand 1 must be an integer register -- `stgp sp,x2,\\[x3\\]'\n [^:]*:[0-9]+: Error: operand 2 must be an integer register -- `stgp x1,sp,\\[x3\\]'\n [^:]*:[0-9]+: Error: 64-bit integer or SP register expected at operand 3 -- `stgp x0,x0,\\[xzr\\]'"
    },
    {
      "sha": "9c9c48b3bdeaee231bdeb86173bf88b6f401edb2",
      "filename": "gas/testsuite/gas/aarch64/illegal-memtag.s",
      "status": "modified",
      "additions": 14,
      "deletions": 7,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b/gas/testsuite/gas/aarch64/illegal-memtag.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b/gas/testsuite/gas/aarch64/illegal-memtag.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/illegal-memtag.s?ref=69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b",
      "patch": "@@ -9,9 +9,9 @@ func:\n \tsubg x1, x2, #0x3f0, -4\n \n \t# STG/STZG/ST2G/LDG : Fail imm\n-\tstg [x1, #15]\n-\tstzg [x1, #-4097]!\n-\tst2g [x1], #4096\n+\tstg x2, [x1, #15]\n+\tstzg x2, [x1, #-4097]!\n+\tst2g x2, [x1], #4096\n \tldg x1, [x2, #33]\n \tldg x1, [x2, #4112]\n \n@@ -41,14 +41,21 @@ func:\n \tsubps x1, x2, xzr\n \tcmpp xzr, x2\n \tcmpp x2, xzr\n-\tstg [xzr, #0]\n-\tst2g [xzr, #0]!\n-\tstzg [xzr], #0\n-\tstz2g [xzr, #0]\n+\tstg x2, [xzr, #0]\n+\tst2g x2, [xzr, #0]!\n+\tstzg x2, [xzr], #0\n+\tstz2g x2, [xzr, #0]\n+\tstg sp, [x2, #0]\n+\tst2g sp, [x2, #0]!\n+\tstzg sp, [x2], #0\n+\tstz2g sp, [x2, #0]\n \tstgp sp, x2, [x3]\n \tstgp x1, sp, [x3]\n \tstgp x0, x0, [xzr]\n \tldg sp, [x0, #16]\n \tldg x0, [xzr, #16]\n \tstzgm x0, [xzr]\n \tstzgm sp, [x3]\n+\t# Xt == Xn with writeback should not complain\n+\tst2g x2, [x2, #0]!\n+\tstzg x2, [x2], #0"
    },
    {
      "sha": "ac05aae582c56e3f04c8183ac440c62b54bb1b49",
      "filename": "opcodes/aarch64-tbl.h",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b/opcodes/aarch64-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b/opcodes/aarch64-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-tbl.h?ref=69105ce4c42e5644ab92cb9b2765ff5ce6bf7b1b",
      "patch": "@@ -125,10 +125,10 @@\n   QLF1(X),\t\t\t\\\n }\n \n-/* e.g. STG [<Xn|SP>, #<imm9>].  */\n+/* e.g. STG Xt, [<Xn|SP>, #<imm9>].  */\n #define QL_LDST_AT\t\t\\\n {\t\t\t\t\\\n-  QLF1(imm_tag),\t\t\\\n+  QLF2(X, imm_tag),\t\t\\\n }\n \n /* e.g. RBIT <Wd>, <Wn>.  */\n@@ -3237,14 +3237,14 @@ struct aarch64_opcode aarch64_opcode_table[] =\n   CORE_INSN (\"ldr\", 0xb8400400, 0xbfe00400, ldst_imm9, 0, OP2 (Rt, ADDR_SIMM9), QL_LDST_R, F_GPRSIZE_IN_Q),\n   CORE_INSN (\"ldrsw\", 0xb8800400, 0xffe00400, ldst_imm9, 0, OP2 (Rt, ADDR_SIMM9), QL_LDST_X32, 0),\n   /* Load/store Allocation Tag instructions.  */\n-  MEMTAG_INSN (\"stg\",  0xd920081f, 0xffe00c1f, ldst_unscaled, OP1 (ADDR_SIMM13), QL_LDST_AT, 0),\n-  MEMTAG_INSN (\"stzg\", 0xd960081f, 0xffe00c1f, ldst_unscaled, OP1 (ADDR_SIMM13), QL_LDST_AT, 0),\n-  MEMTAG_INSN (\"st2g\", 0xd9a0081f, 0xffe00c1f, ldst_unscaled, OP1 (ADDR_SIMM13), QL_LDST_AT, 0),\n-  MEMTAG_INSN (\"stz2g\",0xd9e0081f, 0xffe00c1f, ldst_unscaled, OP1 (ADDR_SIMM13), QL_LDST_AT, 0),\n-  MEMTAG_INSN (\"stg\",  0xd920041f, 0xffe0041f, ldst_imm9, OP1 (ADDR_SIMM13), QL_LDST_AT, 0),\n-  MEMTAG_INSN (\"stzg\", 0xd960041f, 0xffe0041f, ldst_imm9, OP1 (ADDR_SIMM13), QL_LDST_AT, 0),\n-  MEMTAG_INSN (\"st2g\", 0xd9a0041f, 0xffe0041f, ldst_imm9, OP1 (ADDR_SIMM13), QL_LDST_AT, 0),\n-  MEMTAG_INSN (\"stz2g\",0xd9e0041f, 0xffe0041f, ldst_imm9, OP1 (ADDR_SIMM13), QL_LDST_AT, 0),\n+  MEMTAG_INSN (\"stg\",  0xd9200800, 0xffe00c00, ldst_unscaled, OP2 (Rt, ADDR_SIMM13), QL_LDST_AT, 0),\n+  MEMTAG_INSN (\"stzg\", 0xd9600800, 0xffe00c00, ldst_unscaled, OP2 (Rt, ADDR_SIMM13), QL_LDST_AT, 0),\n+  MEMTAG_INSN (\"st2g\", 0xd9a00800, 0xffe00c00, ldst_unscaled, OP2 (Rt, ADDR_SIMM13), QL_LDST_AT, 0),\n+  MEMTAG_INSN (\"stz2g\",0xd9e00800, 0xffe00c00, ldst_unscaled, OP2 (Rt, ADDR_SIMM13), QL_LDST_AT, 0),\n+  MEMTAG_INSN (\"stg\",  0xd9200400, 0xffe00400, ldst_imm9, OP2 (Rt, ADDR_SIMM13), QL_LDST_AT, 0),\n+  MEMTAG_INSN (\"stzg\", 0xd9600400, 0xffe00400, ldst_imm9, OP2 (Rt, ADDR_SIMM13), QL_LDST_AT, 0),\n+  MEMTAG_INSN (\"st2g\", 0xd9a00400, 0xffe00400, ldst_imm9, OP2 (Rt, ADDR_SIMM13), QL_LDST_AT, 0),\n+  MEMTAG_INSN (\"stz2g\",0xd9e00400, 0xffe00400, ldst_imm9, OP2 (Rt, ADDR_SIMM13), QL_LDST_AT, 0),\n   /* Load/store register (unsigned immediate).  */\n   CORE_INSN (\"strb\", 0x39000000, 0xffc00000, ldst_pos, OP_STRB_POS, OP2 (Rt, ADDR_UIMM12), QL_LDST_W8, 0),\n   CORE_INSN (\"ldrb\", 0x39400000, 0xffc00000, ldst_pos, OP_LDRB_POS, OP2 (Rt, ADDR_UIMM12), QL_LDST_W8, 0),"
    }
  ]
}