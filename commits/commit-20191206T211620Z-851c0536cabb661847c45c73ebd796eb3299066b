{
  "sha": "851c0536cabb661847c45c73ebd796eb3299066b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODUxYzA1MzZjYWJiNjYxODQ3YzQ1YzczZWJkNzk2ZWIzMjk5MDY2Yg==",
  "commit": {
    "author": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2019-11-26T15:52:56Z"
    },
    "committer": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2019-12-06T21:16:20Z"
    },
    "message": "[ARM, sim] Fix build error and warnings\n\nNewer GCC's have switched to -fno-common by default, and this breaks the build\nfor the ARM sim, like this:\n\nbinutils-gdb.git~gdb-8.3-release/sim/arm/maverick.c:65: multiple definition of `DSPsc'; libsim.a(wrapper.o):binutils-gdb.git~gdb-8.3-release/sim/arm/wrapper.c:134: first defined here\nbinutils-gdb.git~gdb-8.3-release/sim/arm/maverick.c:64: multiple definition of `DSPacc'; libsim.a(wrapper.o):binutils-gdb.git~gdb-8.3-release/sim/arm/wrapper.c:133: first defined here\nbinutils-gdb.git~gdb-8.3-release/sim/arm/maverick.c:63: multiple definition of `DSPregs'; libsim.a(wrapper.o):binutils-gdb.git~gdb-8.3-release/sim/arm/wrapper.c:132: first defined here\n\nI also noticed a few warnings due to mismatching types, as follows:\n\n../../../../repos/binutils-gdb/sim/arm/wrapper.c: In function \u2018sim_create_inferior\u2019:\n../../../../repos/binutils-gdb/sim/arm/wrapper.c:335:16: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n       for (arg = argv; *arg != NULL; arg++)\n                ^\n../../../../repos/binutils-gdb/sim/arm/wrapper.c:342:8: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n    arg = argv;\n        ^\n../../../../repos/binutils-gdb/sim/arm/wrapper.c:345:13: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n    for (arg = argv; *arg != NULL; arg++)\n             ^\nThe following patch fixes both of the above.\n\nsim/arm/ChangeLog:\n\n2019-12-06  Luis Machado  <luis.machado@linaro.org>\n\n\t* armemu.c (isize): Move this declaration ...\n\t* arminit.c (isize): ... here.\n\t* maverick.h: New file.\n\t* wrapper.c: Include \"maverick.h\".\n\t(<struct maverick_regs>, <union maverick_acc_regs>): Remove and update\n\tcomment.\n\t(sim_create_inferior): Cast variables to proper type.\n\t* maverick.c: Include \"maverick.h\".\n\t(<struct maverick_regs>, <union maverick_acc_regs>): Move\n\tdeclarations to maverick.h and update comment.\n\t(DSPsc, DSPacc, DSPregs): Adjust comment.\n\nChange-Id: I21db699d3b61b2de8c44053e47be4387285af28f",
    "tree": {
      "sha": "1ed4f67952113d7a26e88ff0fb769a2e68aeb853",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1ed4f67952113d7a26e88ff0fb769a2e68aeb853"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/851c0536cabb661847c45c73ebd796eb3299066b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/851c0536cabb661847c45c73ebd796eb3299066b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/851c0536cabb661847c45c73ebd796eb3299066b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/851c0536cabb661847c45c73ebd796eb3299066b/comments",
  "author": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dfb65191d80afcc7d8ce79d3d9f92ea2e1ab3fc9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dfb65191d80afcc7d8ce79d3d9f92ea2e1ab3fc9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dfb65191d80afcc7d8ce79d3d9f92ea2e1ab3fc9"
    }
  ],
  "stats": {
    "total": 138,
    "additions": 71,
    "deletions": 67
  },
  "files": [
    {
      "sha": "6fb7d7e78407fb137401b2e29ae7c2f5de617830",
      "filename": "sim/arm/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/851c0536cabb661847c45c73ebd796eb3299066b/sim/arm/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/851c0536cabb661847c45c73ebd796eb3299066b/sim/arm/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/ChangeLog?ref=851c0536cabb661847c45c73ebd796eb3299066b",
      "patch": "@@ -1,3 +1,17 @@\n+2019-12-06  Luis Machado  <luis.machado@linaro.org>\n+\n+\t* armemu.c (isize): Move this declaration ...\n+\t* arminit.c (isize): ... here.\n+\t* maverick.h: New file.\n+\t* wrapper.c: Include \"maverick.h\".\n+\t(<struct maverick_regs>, <union maverick_acc_regs>): Remove and update\n+\tcomment.\n+\t(sim_create_inferior): Cast variables to proper type.\n+\t* maverick.c: Include \"maverick.h\".\n+\t(<struct maverick_regs>, <union maverick_acc_regs>): Move\n+\tdeclarations to maverick.h and update comment.\n+\t(DSPsc, DSPacc, DSPregs): Adjust comment.\n+\n 2018-01-02  Nick Clifton  <nickc@redhat.com>\n \n \tPR 22663"
    },
    {
      "sha": "3a72277683e62b40f367e50e29815e98cd9d4891",
      "filename": "sim/arm/armemu.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/851c0536cabb661847c45c73ebd796eb3299066b/sim/arm/armemu.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/851c0536cabb661847c45c73ebd796eb3299066b/sim/arm/armemu.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/armemu.c?ref=851c0536cabb661847c45c73ebd796eb3299066b",
      "patch": "@@ -1140,10 +1140,6 @@ handle_VFP_move (ARMul_State * state, ARMword instr)\n \n /* EMULATION of ARM6.  */\n \n-/* The PC pipeline value depends on whether ARM\n-   or Thumb instructions are being executed.  */\n-ARMword isize;\n-\n ARMword\n #ifdef MODE32\n ARMul_Emulate32 (ARMul_State * state)"
    },
    {
      "sha": "3a626c84674ea71814d009ef32e242598c3771a9",
      "filename": "sim/arm/arminit.c",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/851c0536cabb661847c45c73ebd796eb3299066b/sim/arm/arminit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/851c0536cabb661847c45c73ebd796eb3299066b/sim/arm/arminit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/arminit.c?ref=851c0536cabb661847c45c73ebd796eb3299066b",
      "patch": "@@ -40,6 +40,10 @@ unsigned ARMul_MultTable[32] =\n ARMword ARMul_ImmedTable[4096];\t/* immediate DP LHS values */\n char ARMul_BitList[256];\t/* number of bits in a byte table */\n \n+/* The PC pipeline value depends on whether ARM\n+   or Thumb instructions are being executed.  */\n+ARMword isize;\n+\n /***************************************************************************\\\n *         Call this routine once to set up the emulator's tables.           *\n \\***************************************************************************/"
    },
    {
      "sha": "bae8c4785cafc1c6ff7031adbc34f6972d93d747",
      "filename": "sim/arm/maverick.c",
      "status": "modified",
      "additions": 5,
      "deletions": 30,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/851c0536cabb661847c45c73ebd796eb3299066b/sim/arm/maverick.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/851c0536cabb661847c45c73ebd796eb3299066b/sim/arm/maverick.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/maverick.c?ref=851c0536cabb661847c45c73ebd796eb3299066b",
      "patch": "@@ -19,6 +19,7 @@\n #include \"armdefs.h\"\n #include \"ansidecl.h\"\n #include \"armemu.h\"\n+#include \"maverick.h\"\n \n /*#define CIRRUS_DEBUG 1\t*/\n #if CIRRUS_DEBUG\n@@ -30,36 +31,10 @@\n #define POS64(i) ( (~(i)) >> 63 )\n #define NEG64(i) ( (i) >> 63 )\n \n-/* Define Co-Processor instruction handlers here.  */\n-\n-/* Here's ARMulator's DSP definition.  A few things to note:\n-   1) it has 16 64-bit registers and 4 72-bit accumulators\n-   2) you can only access its registers with MCR and MRC.  */\n-\n-/* We can't define these in here because this file might not be linked\n-   unless the target is arm9e-*.  They are defined in wrapper.c.\n-   Eventually the simulator should be made to handle any coprocessor\n-   at run time.  */\n-struct maverick_regs\n-{\n-  union\n-  {\n-    int i;\n-    float f;\n-  } upper;\n-\n-  union\n-  {\n-    int i;\n-    float f;\n-  } lower;\n-};\n-\n-union maverick_acc_regs\n-{\n-  long double ld;\t\t/* Acc registers are 72-bits.  */\n-};\n-\n+/* These variables are defined here and made extern in maverick.h for use\n+   in wrapper.c for now.\n+   Eventually the simulator should be made to handle any coprocessor at run\n+   time.  */\n struct maverick_regs DSPregs[16];\n union maverick_acc_regs DSPacc[4];\n ARMword DSPsc;"
    },
    {
      "sha": "2549d2157658060441e024982279faec8eeadbfb",
      "filename": "sim/arm/maverick.h",
      "status": "added",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/851c0536cabb661847c45c73ebd796eb3299066b/sim/arm/maverick.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/851c0536cabb661847c45c73ebd796eb3299066b/sim/arm/maverick.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/maverick.h?ref=851c0536cabb661847c45c73ebd796eb3299066b",
      "patch": "@@ -0,0 +1,46 @@\n+/*  maverick.h -- Cirrus/DSP co-processor interface header\n+    Copyright (C) 2003-2019 Free Software Foundation, Inc.\n+    Contributed by Aldy Hernandez (aldyh@redhat.com).\n+\n+    This program is free software; you can redistribute it and/or modify\n+    it under the terms of the GNU General Public License as published by\n+    the Free Software Foundation; either version 3 of the License, or\n+    (at your option) any later version.\n+\n+    This program is distributed in the hope that it will be useful,\n+    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+    GNU General Public License for more details.\n+\n+    You should have received a copy of the GNU General Public License\n+    along with this program.  If not, see <http://www.gnu.org/licenses/>. */\n+\n+/* Define Co-Processor instruction handlers here.  */\n+\n+/* Here's ARMulator's DSP definition.  A few things to note:\n+   1) it has 16 64-bit registers and 4 72-bit accumulators\n+   2) you can only access its registers with MCR and MRC.  */\n+\n+struct maverick_regs\n+{\n+  union\n+  {\n+    int i;\n+    float f;\n+  } upper;\n+\n+  union\n+  {\n+    int i;\n+    float f;\n+  } lower;\n+};\n+\n+union maverick_acc_regs\n+{\n+  long double ld;\t\t/* Acc registers are 72-bits.  */\n+};\n+\n+extern struct maverick_regs DSPregs[16];\n+extern union maverick_acc_regs DSPacc[4];\n+extern ARMword DSPsc;"
    },
    {
      "sha": "78a91924a94b647a0b7009b0a36c27d62e64326d",
      "filename": "sim/arm/wrapper.c",
      "status": "modified",
      "additions": 2,
      "deletions": 33,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/851c0536cabb661847c45c73ebd796eb3299066b/sim/arm/wrapper.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/851c0536cabb661847c45c73ebd796eb3299066b/sim/arm/wrapper.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/wrapper.c?ref=851c0536cabb661847c45c73ebd796eb3299066b",
      "patch": "@@ -37,6 +37,7 @@\n #include \"gdb/signals.h\"\n #include \"libiberty.h\"\n #include \"iwmmxt.h\"\n+#include \"maverick.h\"\n \n /* TODO: This should get pulled from the SIM_DESC.  */\n host_callback *sim_callback;\n@@ -101,38 +102,6 @@ print_insn (ARMword instr)\n   fprintf (stderr, \" %*s\\n\", size, opbuf);\n }\n \n-/* Cirrus DSP registers.\n-\n-   We need to define these registers outside of maverick.c because\n-   maverick.c might not be linked in unless --target=arm9e-* in which\n-   case wrapper.c will not compile because it tries to access Cirrus\n-   registers.  This should all go away once we get the Cirrus and ARM\n-   Coprocessor to coexist in armcopro.c-- aldyh.  */\n-\n-struct maverick_regs\n-{\n-  union\n-  {\n-    int i;\n-    float f;\n-  } upper;\n-\n-  union\n-  {\n-    int i;\n-    float f;\n-  } lower;\n-};\n-\n-union maverick_acc_regs\n-{\n-  long double ld;\t\t/* Acc registers are 72-bits.  */\n-};\n-\n-struct maverick_regs     DSPregs[16];\n-union maverick_acc_regs  DSPacc[4];\n-ARMword DSPsc;\n-\n static void\n init (void)\n {\n@@ -236,7 +205,7 @@ sim_create_inferior (SIM_DESC sd ATTRIBUTE_UNUSED,\n {\n   int argvlen = 0;\n   int mach;\n-  char **arg;\n+  char * const *arg;\n \n   init ();\n "
    }
  ]
}