{
  "sha": "56c5b29b616e95749d0c99f936340897e14ab252",
  "node_id": "C_kwDOANOeidoAKDU2YzViMjliNjE2ZTk1NzQ5ZDBjOTlmOTM2MzQwODk3ZTE0YWIyNTI",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-25T05:15:42Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2022-01-05T18:36:33Z"
    },
    "message": "Use filtered output in *-tdep commands\n\nVarious targets introduce their own commands, which then use\nunfiltered output.  It's better to use filtered output by default, so\nthis patch fixes the instances I found.",
    "tree": {
      "sha": "e6111e339eb0fa728668d3e9447a88d6b7385815",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e6111e339eb0fa728668d3e9447a88d6b7385815"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/56c5b29b616e95749d0c99f936340897e14ab252",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/56c5b29b616e95749d0c99f936340897e14ab252",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/56c5b29b616e95749d0c99f936340897e14ab252",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/56c5b29b616e95749d0c99f936340897e14ab252/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7f762abff6e7b2e48c1f4a1d0a087ce4eb5677a7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7f762abff6e7b2e48c1f4a1d0a087ce4eb5677a7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7f762abff6e7b2e48c1f4a1d0a087ce4eb5677a7"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 23,
    "deletions": 23
  },
  "files": [
    {
      "sha": "7f79ef94bdf4be34c591a6beedeb7a1db243a6a9",
      "filename": "gdb/avr-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/56c5b29b616e95749d0c99f936340897e14ab252/gdb/avr-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/56c5b29b616e95749d0c99f936340897e14ab252/gdb/avr-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/avr-tdep.c?ref=56c5b29b616e95749d0c99f936340897e14ab252",
      "patch": "@@ -1589,7 +1589,7 @@ avr_io_reg_read_command (const char *args, int from_tty)\n       return;\n     }\n \n-  printf_unfiltered (_(\"Target has %u io registers:\\n\\n\"), nreg);\n+  printf_filtered (_(\"Target has %u io registers:\\n\\n\"), nreg);\n \n   /* only fetch up to 8 registers at a time to keep the buffer small */\n   int step = 8;"
    },
    {
      "sha": "32c543570458cbaf5a5ff844f4b01def4cd8b22b",
      "filename": "gdb/hppa-tdep.c",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/56c5b29b616e95749d0c99f936340897e14ab252/gdb/hppa-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/56c5b29b616e95749d0c99f936340897e14ab252/gdb/hppa-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/hppa-tdep.c?ref=56c5b29b616e95749d0c99f936340897e14ab252",
      "patch": "@@ -2572,19 +2572,19 @@ unwind_command (const char *exp, int from_tty)\n \n   if (!u)\n     {\n-      printf_unfiltered (\"Can't find unwind table entry for %s\\n\", exp);\n+      printf_filtered (\"Can't find unwind table entry for %s\\n\", exp);\n       return;\n     }\n \n-  printf_unfiltered (\"unwind_table_entry (%s):\\n\", host_address_to_string (u));\n+  printf_filtered (\"unwind_table_entry (%s):\\n\", host_address_to_string (u));\n \n-  printf_unfiltered (\"\\tregion_start = %s\\n\", hex_string (u->region_start));\n+  printf_filtered (\"\\tregion_start = %s\\n\", hex_string (u->region_start));\n \n-  printf_unfiltered (\"\\tregion_end = %s\\n\", hex_string (u->region_end));\n+  printf_filtered (\"\\tregion_end = %s\\n\", hex_string (u->region_end));\n \n-#define pif(FLD) if (u->FLD) printf_unfiltered (\" \"#FLD);\n+#define pif(FLD) if (u->FLD) printf_filtered (\" \"#FLD);\n \n-  printf_unfiltered (\"\\n\\tflags =\");\n+  printf_filtered (\"\\n\\tflags =\");\n   pif (Cannot_unwind);\n   pif (Millicode);\n   pif (Millicode_save_sr0);\n@@ -2609,9 +2609,9 @@ unwind_command (const char *exp, int from_tty)\n   pif (Large_frame);\n   pif (alloca_frame);\n \n-  putchar_unfiltered ('\\n');\n+  putchar_filtered ('\\n');\n \n-#define pin(FLD) printf_unfiltered (\"\\t\"#FLD\" = 0x%x\\n\", u->FLD);\n+#define pin(FLD) printf_filtered (\"\\t\"#FLD\" = 0x%x\\n\", u->FLD);\n \n   pin (Region_description);\n   pin (Entry_FR);\n@@ -2620,26 +2620,26 @@ unwind_command (const char *exp, int from_tty)\n \n   if (u->stub_unwind.stub_type)\n     {\n-      printf_unfiltered (\"\\tstub type = \");\n+      printf_filtered (\"\\tstub type = \");\n       switch (u->stub_unwind.stub_type)\n \t{\n \t  case LONG_BRANCH:\n-\t    printf_unfiltered (\"long branch\\n\");\n+\t    printf_filtered (\"long branch\\n\");\n \t    break;\n \t  case PARAMETER_RELOCATION:\n-\t    printf_unfiltered (\"parameter relocation\\n\");\n+\t    printf_filtered (\"parameter relocation\\n\");\n \t    break;\n \t  case EXPORT:\n-\t    printf_unfiltered (\"export\\n\");\n+\t    printf_filtered (\"export\\n\");\n \t    break;\n \t  case IMPORT:\n-\t    printf_unfiltered (\"import\\n\");\n+\t    printf_filtered (\"import\\n\");\n \t    break;\n \t  case IMPORT_SHLIB:\n-\t    printf_unfiltered (\"import shlib\\n\");\n+\t    printf_filtered (\"import shlib\\n\");\n \t    break;\n \t  default:\n-\t    printf_unfiltered (\"unknown (%d)\\n\", u->stub_unwind.stub_type);\n+\t    printf_filtered (\"unknown (%d)\\n\", u->stub_unwind.stub_type);\n \t}\n     }\n }"
    },
    {
      "sha": "aaa5592f40a9c00b8a9e0a5a59d718e36ae94a5e",
      "filename": "gdb/i386-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/56c5b29b616e95749d0c99f936340897e14ab252/gdb/i386-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/56c5b29b616e95749d0c99f936340897e14ab252/gdb/i386-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-tdep.c?ref=56c5b29b616e95749d0c99f936340897e14ab252",
      "patch": "@@ -8992,14 +8992,14 @@ i386_mpx_info_bounds (const char *args, int from_tty)\n   if (gdbarch_bfd_arch_info (gdbarch)->arch != bfd_arch_i386\n       || !i386_mpx_enabled ())\n     {\n-      printf_unfiltered (_(\"Intel Memory Protection Extensions not \"\n-\t\t\t   \"supported on this target.\\n\"));\n+      printf_filtered (_(\"Intel Memory Protection Extensions not \"\n+\t\t\t \"supported on this target.\\n\"));\n       return;\n     }\n \n   if (args == NULL)\n     {\n-      printf_unfiltered (_(\"Address of pointer variable expected.\\n\"));\n+      printf_filtered (_(\"Address of pointer variable expected.\\n\"));\n       return;\n     }\n "
    },
    {
      "sha": "e5f8c6b20533c8950a5bd36d34cfe7f34fa602da",
      "filename": "gdb/mips-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/56c5b29b616e95749d0c99f936340897e14ab252/gdb/mips-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/56c5b29b616e95749d0c99f936340897e14ab252/gdb/mips-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mips-tdep.c?ref=56c5b29b616e95749d0c99f936340897e14ab252",
      "patch": "@@ -6916,7 +6916,7 @@ show_mipsfpu_command (const char *args, int from_tty)\n \n   if (gdbarch_bfd_arch_info (target_gdbarch ())->arch != bfd_arch_mips)\n     {\n-      printf_unfiltered\n+      printf_filtered\n \t(\"The MIPS floating-point coprocessor is unknown \"\n \t \"because the current architecture is not MIPS.\\n\");\n       return;\n@@ -6937,11 +6937,11 @@ show_mipsfpu_command (const char *args, int from_tty)\n       internal_error (__FILE__, __LINE__, _(\"bad switch\"));\n     }\n   if (mips_fpu_type_auto)\n-    printf_unfiltered (\"The MIPS floating-point coprocessor \"\n+    printf_filtered (\"The MIPS floating-point coprocessor \"\n \t\t       \"is set automatically (currently %s)\\n\",\n \t\t       fpu);\n   else\n-    printf_unfiltered\n+    printf_filtered\n       (\"The MIPS floating-point coprocessor is assumed to be %s\\n\", fpu);\n }\n "
    },
    {
      "sha": "3f9740f0dfeac708f7e2a4cdee78fa76820968e6",
      "filename": "gdb/s12z-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/56c5b29b616e95749d0c99f936340897e14ab252/gdb/s12z-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/56c5b29b616e95749d0c99f936340897e14ab252/gdb/s12z-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/s12z-tdep.c?ref=56c5b29b616e95749d0c99f936340897e14ab252",
      "patch": "@@ -635,7 +635,7 @@ show_bdccsr_command (const char *args, int from_tty)\n   struct string_file output;\n   target_rcmd (\"bdccsr\", &output);\n \n-  printf_unfiltered (\"The current BDCCSR value is %s\\n\", output.string().c_str());\n+  printf_filtered (\"The current BDCCSR value is %s\\n\", output.string().c_str());\n }\n \n static struct gdbarch *"
    }
  ]
}