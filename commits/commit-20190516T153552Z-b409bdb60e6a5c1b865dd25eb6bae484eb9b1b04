{
  "sha": "b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjQwOWJkYjYwZTZhNWMxYjg2NWRkMjVlYjZiYWU0ODRlYjliMWIwNA==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-15T17:36:48Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:35:52Z"
    },
    "message": "[PATCH 16/57][Arm][GAS] Add support for MVE instructions: vdup, vddup, vdwdup, vidup and viwdup\n\ngas/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/tc-arm.c (M_MNEM_vddup, M_MNEM_vdwdup, M_MNEM_vidup,\n\t M_MNEM_viwdup): New instruction encodings.\n\t(NEON_SHAPE_DEF): New shapes.\n\t(do_mve_viddup): New encoding function.\n\t(do_neon_dup): Change to support new MVE variants.\n\t(insns): Change existing to accept MVE variants and add new.\n\t* testsuite/gas/arm/mve-vddup-bad.d: New test.\n\t* testsuite/gas/arm/mve-vddup-bad.l: New test.\n\t* testsuite/gas/arm/mve-vddup-bad.s: New test.\n\t* testsuite/gas/arm/mve-vdup-bad.d: New test.\n\t* testsuite/gas/arm/mve-vdup-bad.l: New test.\n\t* testsuite/gas/arm/mve-vdup-bad.s: New test.\n\t* testsuite/gas/arm/mve-vidup-bad.d: New test.\n\t* testsuite/gas/arm/mve-vidup-bad.l: New test.\n\t* testsuite/gas/arm/mve-vidup-bad.s: New test.",
    "tree": {
      "sha": "0dfb88191088c5b0dacd6c864e65ae30768cb306",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0dfb88191088c5b0dacd6c864e65ae30768cb306"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f30ee27c150efbdffbca53f84449b2aac605b6c5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f30ee27c150efbdffbca53f84449b2aac605b6c5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f30ee27c150efbdffbca53f84449b2aac605b6c5"
    }
  ],
  "stats": {
    "total": 300,
    "additions": 299,
    "deletions": 1
  },
  "files": [
    {
      "sha": "8b6ba620db579a38563ccae78b3060e6cb1f589c",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04",
      "patch": "@@ -1,3 +1,21 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/tc-arm.c (M_MNEM_vddup, M_MNEM_vdwdup, M_MNEM_vidup,\n+\t M_MNEM_viwdup): New instruction encodings.\n+\t(NEON_SHAPE_DEF): New shapes.\n+\t(do_mve_viddup): New encoding function.\n+\t(do_neon_dup): Change to support new MVE variants.\n+\t(insns): Change existing to accept MVE variants and add new.\n+\t* testsuite/gas/arm/mve-vddup-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vddup-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vddup-bad.s: New test.\n+\t* testsuite/gas/arm/mve-vdup-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vdup-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vdup-bad.s: New test.\n+\t* testsuite/gas/arm/mve-vidup-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vidup-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vidup-bad.s: New test.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (do_mve_vfmas): New encoding function."
    },
    {
      "sha": "9196476c1f0e877ca816fb95aa1661fb90d17b9f",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 73,
      "deletions": 1,
      "changes": 74,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04",
      "patch": "@@ -14154,6 +14154,10 @@ do_t_loloop (void)\n #define M_MNEM_vaddlva\t0xee890f20\n #define M_MNEM_vaddv\t0xeef10f00\n #define M_MNEM_vaddva\t0xeef10f20\n+#define M_MNEM_vddup\t0xee011f6e\n+#define M_MNEM_vdwdup\t0xee011f60\n+#define M_MNEM_vidup\t0xee010f6e\n+#define M_MNEM_viwdup\t0xee010f60\n \n /* Neon instruction encoder helpers.  */\n \n@@ -14318,8 +14322,10 @@ NEON_ENC_TAB\n      - a table used to drive neon_select_shape.  */\n \n #define NEON_SHAPE_DEF\t\t\t\\\n+  X(4, (Q, R, R, I), QUAD),\t\t\\\n   X(4, (R, R, S, S), QUAD),\t\t\\\n   X(4, (S, S, R, R), QUAD),\t\t\\\n+  X(3, (Q, R, I), QUAD),\t\t\\\n   X(3, (I, Q, Q), QUAD),\t\t\\\n   X(3, (I, Q, R), QUAD),\t\t\\\n   X(3, (R, Q, Q), QUAD),\t\t\\\n@@ -15605,6 +15611,49 @@ do_mve_vfmas (void)\n   inst.is_neon = 1;\n }\n \n+static void\n+do_mve_viddup (void)\n+{\n+  if (inst.cond > COND_ALWAYS)\n+    inst.pred_insn_type = INSIDE_VPT_INSN;\n+  else\n+    inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+\n+  unsigned imm = inst.relocs[0].exp.X_add_number;\n+  constraint (imm != 1 && imm != 2 && imm != 4 && imm != 8,\n+\t      _(\"immediate must be either 1, 2, 4 or 8\"));\n+\n+  enum neon_shape rs;\n+  struct neon_type_el et;\n+  unsigned Rm;\n+  if (inst.instruction == M_MNEM_vddup || inst.instruction == M_MNEM_vidup)\n+    {\n+      rs = neon_select_shape (NS_QRI, NS_NULL);\n+      et = neon_check_type (2, rs, N_KEY | N_U8 | N_U16 | N_U32, N_EQK);\n+      Rm = 7;\n+    }\n+  else\n+    {\n+      constraint ((inst.operands[2].reg % 2) != 1, BAD_EVEN);\n+      if (inst.operands[2].reg == REG_SP)\n+\tas_tsktsk (MVE_BAD_SP);\n+      else if (inst.operands[2].reg == REG_PC)\n+\tfirst_error (BAD_PC);\n+\n+      rs = neon_select_shape (NS_QRRI, NS_NULL);\n+      et = neon_check_type (3, rs, N_KEY | N_U8 | N_U16 | N_U32, N_EQK, N_EQK);\n+      Rm = inst.operands[2].reg >> 1;\n+    }\n+  inst.instruction |= HI1 (inst.operands[0].reg) << 22;\n+  inst.instruction |= neon_logbits (et.size) << 20;\n+  inst.instruction |= inst.operands[1].reg << 16;\n+  inst.instruction |= LOW4 (inst.operands[0].reg) << 12;\n+  inst.instruction |= (imm > 2) << 7;\n+  inst.instruction |= Rm << 1;\n+  inst.instruction |= (imm == 2 || imm == 8);\n+  inst.is_neon = 1;\n+}\n+\n static void\n do_mve_vcmul (void)\n {\n@@ -18404,6 +18453,8 @@ do_neon_dup (void)\n {\n   if (inst.operands[1].isscalar)\n     {\n+      constraint (!ARM_CPU_HAS_FEATURE (cpu_variant, fpu_neon_ext_v1),\n+\t\t  BAD_FPU);\n       enum neon_shape rs = neon_select_shape (NS_DS, NS_QS, NS_NULL);\n       struct neon_type_el et = neon_check_type (2, rs,\n \tN_EQK, N_8 | N_16 | N_32 | N_KEY);\n@@ -18431,6 +18482,23 @@ do_neon_dup (void)\n       enum neon_shape rs = neon_select_shape (NS_DR, NS_QR, NS_NULL);\n       struct neon_type_el et = neon_check_type (2, rs,\n \tN_8 | N_16 | N_32 | N_KEY, N_EQK);\n+      if (rs == NS_QR)\n+\t{\n+\t  if (check_simd_pred_availability (0, NEON_CHECK_ARCH))\n+\t    return;\n+\t}\n+      else\n+\tconstraint (!ARM_CPU_HAS_FEATURE (cpu_variant, fpu_neon_ext_v1),\n+\t\t    BAD_FPU);\n+\n+      if (ARM_CPU_HAS_FEATURE (cpu_variant, mve_ext))\n+\t{\n+\t  if (inst.operands[1].reg == REG_SP)\n+\t    as_tsktsk (MVE_BAD_SP);\n+\t  else if (inst.operands[1].reg == REG_PC)\n+\t    as_tsktsk (MVE_BAD_PC);\n+\t}\n+\n       /* Duplicate ARM register to lanes of vector.  */\n       NEON_ENCODE (ARMREG, inst);\n       switch (et.size)\n@@ -23656,7 +23724,6 @@ static const struct asm_opcode insns[] =\n  NUF(vrev16,    1b00100, 2, (RNDQ, RNDQ),     neon_rev),\n  NUF(vrev16q,   1b00100, 2, (RNQ,  RNQ),      neon_rev),\n   /* Vector replicate. Sizes 8 16 32.  */\n- nCE(vdup,      _vdup,    2, (RNDQ, RR_RNSC),  neon_dup),\n  nCE(vdupq,     _vdup,    2, (RNQ,  RR_RNSC),  neon_dup),\n   /* VMOVL. Types S8 S16 S32 U8 U16 U32.  */\n  NUF(vmovl,     0800a10, 2, (RNQ, RND),       neon_movl),\n@@ -24218,6 +24285,10 @@ static const struct asm_opcode insns[] =\n  mCEF(vaddlva,\t_vaddlva,   3, (RRe, RRo, RMQ),\t\t\t  mve_vaddlv),\n  mCEF(vaddv,\t_vaddv,\t    2, (RRe, RMQ),\t\t\t  mve_vaddv),\n  mCEF(vaddva,\t_vaddva,    2, (RRe, RMQ),\t\t\t  mve_vaddv),\n+ mCEF(vddup,\t_vddup,\t    3, (RMQ, RRe, EXPi),\t\t  mve_viddup),\n+ mCEF(vdwdup,\t_vdwdup,    4, (RMQ, RRe, RR, EXPi),\t\t  mve_viddup),\n+ mCEF(vidup,\t_vidup,\t    3, (RMQ, RRe, EXPi),\t\t  mve_viddup),\n+ mCEF(viwdup,\t_viwdup,    4, (RMQ, RRe, RR, EXPi),\t\t  mve_viddup),\n \n #undef THUMB_VARIANT\n #define THUMB_VARIANT & mve_fp_ext\n@@ -24280,6 +24351,7 @@ static const struct asm_opcode insns[] =\n  mnUF(veor,      _veor,\t\t  3, (RNDQMQ, oRNDQMQ, RNDQMQ),      neon_logic),\n  MNUF(vcls,      1b00400,\t  2, (RNDQMQ, RNDQMQ),\t\t     neon_cls),\n  MNUF(vclz,      1b00480,\t  2, (RNDQMQ, RNDQMQ),\t\t     neon_clz),\n+ mnCE(vdup,      _vdup,\t\t  2, (RNDQMQ, RR_RNSC),\t\t     neon_dup),\n \n #undef\tARM_VARIANT\n #define ARM_VARIANT & arm_ext_v8_3"
    },
    {
      "sha": "a6522dc25423352b027d58a0b0f495f7f0705245",
      "filename": "gas/testsuite/gas/arm/mve-vddup-bad.d",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/testsuite/gas/arm/mve-vddup-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/testsuite/gas/arm/mve-vddup-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vddup-bad.d?ref=b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04",
      "patch": "@@ -0,0 +1,6 @@\n+#name: bad MVE VDDUP and VDWDUP instructions\n+#as: -march=armv8.1-m.main+mve\n+#error_output: mve-vddup-bad.l\n+\n+.*: +file format .*arm.*\n+"
    },
    {
      "sha": "92ff9657446829f1f703d99be34384d21307e3a9",
      "filename": "gas/testsuite/gas/arm/mve-vddup-bad.l",
      "status": "added",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/testsuite/gas/arm/mve-vddup-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/testsuite/gas/arm/mve-vddup-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vddup-bad.l?ref=b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04",
      "patch": "@@ -0,0 +1,33 @@\n+[^:]*: Assembler messages:\n+[^:]*:16: Error: bad type in SIMD instruction -- `vddup.s16 q0,r0,#1'\n+[^:]*:17: Error: bad type in SIMD instruction -- `vddup.u64 q0,r0,#1'\n+[^:]*:18: Error: immediate must be either 1, 2, 4 or 8 -- `vddup.u32 q0,r0,#3'\n+[^:]*:19: Error: immediate must be either 1, 2, 4 or 8 -- `vddup.u32 q0,r0,#0'\n+[^:]*:20: Error: bad type in SIMD instruction -- `vdwdup.s16 q0,r0,r1,#1'\n+[^:]*:21: Error: bad type in SIMD instruction -- `vdwdup.u64 q0,r0,r1,#1'\n+[^:]*:22: Error: immediate must be either 1, 2, 4 or 8 -- `vdwdup.u32 q0,r0,r1,#3'\n+[^:]*:23: Error: immediate must be either 1, 2, 4 or 8 -- `vdwdup.u32 q0,r0,r1,#0'\n+[^:]*:24: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:25: Error: r15 not allowed here -- `vdwdup.u32 q0,r0,pc,#1'\n+[^:]*:26: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:26: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:26: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:26: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:26: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:26: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:27: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:27: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:27: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:27: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:27: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:27: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:29: Error: syntax error -- `vddupeq.u32 q0,r0,#1'\n+[^:]*:30: Error: syntax error -- `vddupeq.u32 q0,r0,#1'\n+[^:]*:32: Error: syntax error -- `vddupeq.u32 q0,r0,#1'\n+[^:]*:33: Error: vector predicated instruction should be in VPT/VPST block -- `vddupt.u32 q0,r0,#1'\n+[^:]*:35: Error: instruction missing MVE vector predication code -- `vddup.u32 q0,r0,#1'\n+[^:]*:37: Error: syntax error -- `vdwdupeq.u32 q0,r0,r1,#1'\n+[^:]*:38: Error: syntax error -- `vdwdupeq.u32 q0,r0,r1,#1'\n+[^:]*:40: Error: syntax error -- `vdwdupeq.u32 q0,r0,r1,#1'\n+[^:]*:41: Error: vector predicated instruction should be in VPT/VPST block -- `vdwdupt.u32 q0,r0,r1,#1'\n+[^:]*:43: Error: instruction missing MVE vector predication code -- `vdwdup.u32 q0,r0,r1,#1'"
    },
    {
      "sha": "9951e9d11843d3302823e7805bbbe20abc79d3eb",
      "filename": "gas/testsuite/gas/arm/mve-vddup-bad.s",
      "status": "added",
      "additions": 43,
      "deletions": 0,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/testsuite/gas/arm/mve-vddup-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/testsuite/gas/arm/mve-vddup-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vddup-bad.s?ref=b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04",
      "patch": "@@ -0,0 +1,43 @@\n+.macro cond1\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vddup.u32 q0, r2, #1\n+.endr\n+.endm\n+\n+.macro cond2\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vdwdup.u32 q0, r2, r1, #1\n+.endr\n+.endm\n+.syntax unified\n+.thumb\n+vddup.s16 q0, r0, #1\n+vddup.u64 q0, r0, #1\n+vddup.u32 q0, r0, #3\n+vddup.u32 q0, r0, #0\n+vdwdup.s16 q0, r0, r1, #1\n+vdwdup.u64 q0, r0, r1, #1\n+vdwdup.u32 q0, r0, r1, #3\n+vdwdup.u32 q0, r0, r1, #0\n+vdwdup.u32 q0, r0, sp, #1\n+vdwdup.u32 q0, r0, pc, #1\n+cond1\n+cond2\n+it eq\n+vddupeq.u32 q0, r0, #1\n+vddupeq.u32 q0, r0, #1\n+vpst\n+vddupeq.u32 q0, r0, #1\n+vddupt.u32 q0, r0, #1\n+vpst\n+vddup.u32 q0, r0, #1\n+it eq\n+vdwdupeq.u32 q0, r0, r1, #1\n+vdwdupeq.u32 q0, r0, r1, #1\n+vpst\n+vdwdupeq.u32 q0, r0, r1, #1\n+vdwdupt.u32 q0, r0, r1, #1\n+vpst\n+vdwdup.u32 q0, r0, r1, #1"
    },
    {
      "sha": "2ad95976135bb46535720195d17b0024cf391abc",
      "filename": "gas/testsuite/gas/arm/mve-vdup-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/testsuite/gas/arm/mve-vdup-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/testsuite/gas/arm/mve-vdup-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vdup-bad.d?ref=b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VDUP instructions\n+#as: -march=armv8.1-m.main+mve\n+#error_output: mve-vdup-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "08808393569f7e7a839680b001e38e9f1ca66886",
      "filename": "gas/testsuite/gas/arm/mve-vdup-bad.l",
      "status": "added",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/testsuite/gas/arm/mve-vdup-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/testsuite/gas/arm/mve-vdup-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vdup-bad.l?ref=b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04",
      "patch": "@@ -0,0 +1,16 @@\n+[^:]*: Assembler messages:\n+[^:]*:11: Error: bad type in SIMD instruction -- `vdup.64 q0,r1'\n+[^:]*:12: Error: selected FPU does not support instruction -- `vdup.32 q0,d0\\[1\\]'\n+[^:]*:13: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:14: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Error: syntax error -- `vdupeq.32 q0,r2'\n+[^:]*:18: Error: syntax error -- `vdupeq.32 q0,r2'\n+[^:]*:20: Error: syntax error -- `vdupeq.32 q0,r2'\n+[^:]*:21: Error: incorrect condition in VPT/VPST block -- `vdupt.32 q0,r2'\n+[^:]*:23: Error: instruction missing MVE vector predication code -- `vdup.32 q0,r2'"
    },
    {
      "sha": "c6539d860575184fcf6745d165995edf80270f6e",
      "filename": "gas/testsuite/gas/arm/mve-vdup-bad.s",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/testsuite/gas/arm/mve-vdup-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/testsuite/gas/arm/mve-vdup-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vdup-bad.s?ref=b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04",
      "patch": "@@ -0,0 +1,23 @@\n+.macro cond\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vdup.32 q0, r2\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vdup.f16 q0, r1\n+vdup.64 q0, r1\n+vdup.32 q0, d0[1]\n+vdup.32 q0, sp\n+vdup.32 q0, pc\n+cond\n+it eq\n+vdupeq.32 q0, r2\n+vdupeq.32 q0, r2\n+vpste\n+vdupeq.32 q0, r2\n+vdupt.32 q0, r2\n+vpst\n+vdup.32 q0, r2"
    },
    {
      "sha": "6a9a0384048c05c0f962130078755c6dd983e962",
      "filename": "gas/testsuite/gas/arm/mve-vidup-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/testsuite/gas/arm/mve-vidup-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/testsuite/gas/arm/mve-vidup-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vidup-bad.d?ref=b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VIDUP and VIWDUP instructions\n+#as: -march=armv8.1-m.main+mve\n+#error_output: mve-vidup-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "5fb742559f5bd1573aa03ea767a56112a5acb9f0",
      "filename": "gas/testsuite/gas/arm/mve-vidup-bad.l",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/testsuite/gas/arm/mve-vidup-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/testsuite/gas/arm/mve-vidup-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vidup-bad.l?ref=b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04",
      "patch": "@@ -0,0 +1,34 @@\n+[^:]*: Assembler messages:\n+[^:]*:16: Error: bad type in SIMD instruction -- `vidup.s16 q0,r0,#1'\n+[^:]*:17: Error: bad type in SIMD instruction -- `vidup.u64 q0,r0,#1'\n+[^:]*:18: Error: immediate must be either 1, 2, 4 or 8 -- `vidup.u32 q0,r0,#3'\n+[^:]*:19: Error: immediate must be either 1, 2, 4 or 8 -- `vidup.u32 q0,r0,#0'\n+[^:]*:20: Error: bad type in SIMD instruction -- `viwdup.s16 q0,r0,r1,#1'\n+[^:]*:21: Error: bad type in SIMD instruction -- `viwdup.u64 q0,r0,r1,#1'\n+[^:]*:22: Error: immediate must be either 1, 2, 4 or 8 -- `viwdup.u32 q0,r0,r1,#3'\n+[^:]*:23: Error: immediate must be either 1, 2, 4 or 8 -- `viwdup.u32 q0,r0,r1,#0'\n+[^:]*:24: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:25: Error: r15 not allowed here -- `viwdup.u32 q0,r0,pc,#1'\n+[^:]*:26: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:26: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:26: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:26: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:26: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:26: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:27: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:27: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:27: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:27: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:27: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:27: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:29: Error: syntax error -- `vidupeq.u32 q0,r0,#1'\n+[^:]*:30: Error: syntax error -- `vidupeq.u32 q0,r0,#1'\n+[^:]*:32: Error: syntax error -- `vidupeq.u32 q0,r0,#1'\n+[^:]*:33: Error: vector predicated instruction should be in VPT/VPST block -- `vidupt.u32 q0,r0,#1'\n+[^:]*:35: Error: instruction missing MVE vector predication code -- `vidup.u32 q0,r0,#1'\n+[^:]*:37: Error: syntax error -- `viwdupeq.u32 q0,r0,r1,#1'\n+[^:]*:38: Error: syntax error -- `viwdupeq.u32 q0,r0,r1,#1'\n+[^:]*:40: Error: syntax error -- `viwdupeq.u32 q0,r0,r1,#1'\n+[^:]*:41: Error: vector predicated instruction should be in VPT/VPST block -- `viwdupt.u32 q0,r0,r1,#1'\n+[^:]*:43: Error: instruction missing MVE vector predication code -- `viwdup.u32 q0,r0,r1,#1'\n+"
    },
    {
      "sha": "3d3a4488d9c780123754a3243241720a513f4d3c",
      "filename": "gas/testsuite/gas/arm/mve-vidup-bad.s",
      "status": "added",
      "additions": 43,
      "deletions": 0,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/testsuite/gas/arm/mve-vidup-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04/gas/testsuite/gas/arm/mve-vidup-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vidup-bad.s?ref=b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04",
      "patch": "@@ -0,0 +1,43 @@\n+.macro cond1\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vidup.u32 q0, r2, #1\n+.endr\n+.endm\n+\n+.macro cond2\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+viwdup.u32 q0, r2, r1, #1\n+.endr\n+.endm\n+.syntax unified\n+.thumb\n+vidup.s16 q0, r0, #1\n+vidup.u64 q0, r0, #1\n+vidup.u32 q0, r0, #3\n+vidup.u32 q0, r0, #0\n+viwdup.s16 q0, r0, r1, #1\n+viwdup.u64 q0, r0, r1, #1\n+viwdup.u32 q0, r0, r1, #3\n+viwdup.u32 q0, r0, r1, #0\n+viwdup.u32 q0, r0, sp, #1\n+viwdup.u32 q0, r0, pc, #1\n+cond1\n+cond2\n+it eq\n+vidupeq.u32 q0, r0, #1\n+vidupeq.u32 q0, r0, #1\n+vpst\n+vidupeq.u32 q0, r0, #1\n+vidupt.u32 q0, r0, #1\n+vpst\n+vidup.u32 q0, r0, #1\n+it eq\n+viwdupeq.u32 q0, r0, r1, #1\n+viwdupeq.u32 q0, r0, r1, #1\n+vpst\n+viwdupeq.u32 q0, r0, r1, #1\n+viwdupt.u32 q0, r0, r1, #1\n+vpst\n+viwdup.u32 q0, r0, r1, #1"
    }
  ]
}