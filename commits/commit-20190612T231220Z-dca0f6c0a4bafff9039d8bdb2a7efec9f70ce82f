{
  "sha": "dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGNhMGY2YzBhNGJhZmZmOTAzOWQ4YmRiMmE3ZWZlYzlmNzBjZTgyZg==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-06-12T23:06:52Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-06-12T23:12:20Z"
    },
    "message": "New set/show testing framework (gdb.base/settings.exp)\n\nThis commit adds new representative commands for all types of settings\ncommands supported by gdb (enum var_types), and then uses them to\nexercise settings parsing and completion.\n\n  (gdb) maint test-settings s[TAB]\n  set   show\n\n  (gdb) maint test-settings set [TAB]\n  auto-boolean         integer              uinteger\n  boolean              optional-filename    zinteger\n  enum                 string               zuinteger\n  filename             string-noescape      zuinteger-unlimited\n\n  (gdb) maint test-settings set enum [TAB]\n  xxx  yyy  zzz\n\n  etc.\n\nThis is basically unit testing, except that it goes fully via GDB.  It\nmust be done this way in order to exercise TAB completion properly,\nwhich must go via readline.\n\ngdb/ChangeLog:\n2019-06-13  Pedro Alves  <palves@redhat.com>\n\n\t* Makefile.in (COMMON_SFILES): Add maint-test-settings.c.\n\t* NEWS: Mention maint test-settings KIND.\n\t* maint-test-settings.c: New file.\n\ngdb/doc/ChangeLog:\n2019-06-13  Pedro Alves  <palves@redhat.com>\n\n\t* gdb.texinfo (Maintenance Commands): Document \"maint\n\ttest-settings\" commands.\n\ngdb/testsuite/ChangeLog:\n2019-06-13  Pedro Alves  <palves@redhat.com>\n\n\t* gdb.base/settings.c: New file.\n\t* gdb.base/settings.exp: New file.",
    "tree": {
      "sha": "6e37488519b942242e3b775854eb4ad6a7be3baa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6e37488519b942242e3b775854eb4ad6a7be3baa"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ccf46844d3e5ad4af9f3a10cc0599c939138d566",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ccf46844d3e5ad4af9f3a10cc0599c939138d566",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ccf46844d3e5ad4af9f3a10cc0599c939138d566"
    }
  ],
  "stats": {
    "total": 846,
    "additions": 846,
    "deletions": 0
  },
  "files": [
    {
      "sha": "1828a74d7dd3dfeb20456cfe5558109ea8e9a252",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f",
      "patch": "@@ -1,3 +1,9 @@\n+2019-06-13  Pedro Alves  <palves@redhat.com>\n+\n+\t* Makefile.in (COMMON_SFILES): Add maint-test-settings.c.\n+\t* NEWS: Mention maint test-settings KIND.\n+\t* maint-test-settings.c: New file.\n+\n 2019-06-13  Pedro Alves  <palves@redhat.com>\n \n \t* cli/cli-decode.c (add_setshow_cmd_full): Remove \"show\""
    },
    {
      "sha": "beb69b5c3e22cc4c3a06403e55b8872272e09bac",
      "filename": "gdb/Makefile.in",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/gdb/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/gdb/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/Makefile.in?ref=dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f",
      "patch": "@@ -1063,6 +1063,7 @@ COMMON_SFILES = \\\n \tmacrotab.c \\\n \tmain.c \\\n \tmaint.c \\\n+\tmaint-test-settings.c \\\n \tmdebugread.c \\\n \tmem-break.c \\\n \tmemattr.c \\"
    },
    {
      "sha": "c4c7bcdf6d9cfcaca2bbd1f5abe97eb646d22f91",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f",
      "patch": "@@ -84,6 +84,10 @@ set style highlight background COLOR\n set style highlight intensity VALUE\n   Control the styling of highlightings.\n \n+maint test-settings KIND\n+  A set of commands used by the testsuite for exercising the settings\n+  infrastructure.\n+\n * Changed commands\n \n help"
    },
    {
      "sha": "3615e96245df4f59c1062562f488acc338e2d28d",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f",
      "patch": "@@ -1,3 +1,8 @@\n+2019-06-13  Pedro Alves  <palves@redhat.com>\n+\n+\t* gdb.texinfo (Maintenance Commands): Document \"maint\n+\ttest-settings\" commands.\n+\n 2019-06-06  Amos Bird  <amosbird@gmail.com>\n \n \t* annotate.texinfo (Multi-threaded Apps): Add entry for thread-exited"
    },
    {
      "sha": "07dc2463d908d73e7f3eada2ba6d6a0f7911ffa9",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f",
      "patch": "@@ -37222,6 +37222,12 @@ If section was not specified, the section in which the symbol was found\n is also printed.  For dynamically linked executables, the name of\n executable or shared library containing the symbol is printed as well.\n \n+@kindex maint test-settings\n+@item maint test-settings set @var{kind}\n+@itemx maint test-settings show @var{kind}\n+These are representative commands for each @var{kind} of setting type\n+@value{GDBN} supports.  They are used by the testsuite for exercising\n+the settings infrastructure.\n @end table\n \n The following command is useful for non-interactive invocations of"
    },
    {
      "sha": "fa13519eb96489eb6a38e76003b596079c08add0",
      "filename": "gdb/maint-test-settings.c",
      "status": "added",
      "additions": 257,
      "deletions": 0,
      "changes": 257,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/gdb/maint-test-settings.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/gdb/maint-test-settings.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/maint-test-settings.c?ref=dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f",
      "patch": "@@ -0,0 +1,257 @@\n+/* Support for GDB maintenance commands.\n+\n+   Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+\n+#include \"defs.h\"\n+#include \"gdbcmd.h\"\n+\n+/* Command list for \"maint test-settings\".  */\n+static cmd_list_element *maintenance_test_settings_list;\n+\n+/* Command list for \"maint test-settings set/show\".  */\n+static cmd_list_element *maintenance_test_settings_set_list;\n+static cmd_list_element *maintenance_test_settings_show_list;\n+\n+/* The \"maintenance test-options\" prefix command.  */\n+\n+static void\n+maintenance_test_settings_cmd (const char *arg, int from_tty)\n+{\n+  printf_unfiltered\n+    (_(\"\\\"maintenance test-settings\\\" must be followed \"\n+       \"by the name of a subcommand.\\n\"));\n+  help_list (maintenance_test_settings_list, \"maintenance test-settings \",\n+\t     all_commands, gdb_stdout);\n+}\n+\n+/* The \"maintenance test-options set\" prefix command.  */\n+\n+static void\n+maintenance_test_settings_set_cmd (const char *args, int from_tty)\n+{\n+  printf_unfiltered (_(\"\\\"maintenance test-settings set\\\" must be followed \"\n+\t\t       \"by the name of a set command.\\n\"));\n+  help_list (maintenance_test_settings_set_list,\n+\t     \"maintenance test-settings set \",\n+\t     all_commands, gdb_stdout);\n+}\n+\n+/* The \"maintenance test-options show\" prefix command.  */\n+\n+static void\n+maintenance_test_settings_show_cmd (const char *args, int from_tty)\n+{\n+  cmd_show_list (maintenance_test_settings_show_list, from_tty, \"\");\n+}\n+\n+/* Control variables for all the \"maintenance test-options set/show\n+   xxx\" commands.  */\n+\n+static int maintenance_test_settings_boolean;\n+\n+static auto_boolean maintenance_test_settings_auto_boolean = AUTO_BOOLEAN_AUTO;\n+\n+static unsigned int maintenance_test_settings_uinteger;\n+\n+static int maintenance_test_settings_integer;\n+\n+static int maintenance_test_settings_zinteger;\n+\n+static unsigned int maintenance_test_settings_zuinteger;\n+\n+static int maintenance_test_settings_zuinteger_unlimited;\n+\n+static char *maintenance_test_settings_string;\n+\n+static char *maintenance_test_settings_string_noescape;\n+\n+static char *maintenance_test_settings_optional_filename;\n+\n+static char *maintenance_test_settings_filename;\n+\n+static const char *maintenance_test_settings_enum;\n+\n+/* Enum values for the \"maintenance test-settings set/show boolean\"\n+   commands.  */\n+static const char *const maintenance_test_settings_enums[] = {\n+  \"xxx\", \"yyy\", \"zzz\", nullptr\n+};\n+\n+/* The \"maintenance test-options show xxx\" commands.  */\n+\n+static void\n+maintenance_test_settings_show_value_cmd\n+  (struct ui_file *file, int from_tty,\n+   struct cmd_list_element *c, const char *value)\n+{\n+  fprintf_filtered (file, ((\"%s\\n\")), value);\n+}\n+\n+\f\n+void\n+_initialize_maint_test_settings (void)\n+{\n+  add_prefix_cmd (\"test-settings\", no_class,\n+\t\t  maintenance_test_settings_cmd,\n+\t\t  _(\"\\\n+Generic command for testing the settings infrastructure.\"),\n+\t\t  &maintenance_test_settings_list,\n+\t\t  \"maintenance test-settings \", 0,\n+\t\t  &maintenancelist);\n+\n+  add_prefix_cmd (\"set\", class_maintenance,\n+\t\t  maintenance_test_settings_set_cmd, _(\"\\\n+Set GDB internal variables used for set/show command infrastructure testing.\"),\n+\t\t  &maintenance_test_settings_set_list,\n+\t\t  \"maintenance test-settings set \",\n+\t\t  0/*allow-unknown*/,\n+\t\t  &maintenance_test_settings_list);\n+\n+  add_prefix_cmd (\"show\", class_maintenance,\n+\t\t  maintenance_test_settings_show_cmd, _(\"\\\n+Show GDB internal variables used for set/show command infrastructure testing.\"),\n+\t\t  &maintenance_test_settings_show_list,\n+\t\t  \"maintenance test-settings show \",\n+\t\t  0/*allow-unknown*/,\n+\t\t  &maintenance_test_settings_list);\n+\n+  add_setshow_boolean_cmd (\"boolean\", class_maintenance,\n+\t\t\t   &maintenance_test_settings_boolean, _(\"\\\n+command used for internal testing\"), _(\"\\\n+command used for internal testing\"),\n+\t\t\t   nullptr, /* help_doc */\n+\t\t\t   nullptr, /* set_cmd */\n+\t\t\t   maintenance_test_settings_show_value_cmd,\n+\t\t\t   &maintenance_test_settings_set_list,\n+\t\t\t   &maintenance_test_settings_show_list);\n+\n+  add_setshow_auto_boolean_cmd (\"auto-boolean\", class_maintenance,\n+\t\t\t\t&maintenance_test_settings_auto_boolean, _(\"\\\n+command used for internal testing\"), _(\"\\\n+command used for internal testing\"),\n+\t\t\t\tnullptr, /* help_doc */\n+\t\t\t\tnullptr, /* set_cmd */\n+\t\t\t\tmaintenance_test_settings_show_value_cmd,\n+\t\t\t\t&maintenance_test_settings_set_list,\n+\t\t\t\t&maintenance_test_settings_show_list);\n+\n+  add_setshow_uinteger_cmd (\"uinteger\", class_maintenance,\n+\t\t\t   &maintenance_test_settings_uinteger, _(\"\\\n+command used for internal testing\"), _(\"\\\n+command used for internal testing\"),\n+\t\t\t   nullptr, /* help_doc */\n+\t\t\t   nullptr, /* set_cmd */\n+\t\t\t   maintenance_test_settings_show_value_cmd,\n+\t\t\t   &maintenance_test_settings_set_list,\n+\t\t\t   &maintenance_test_settings_show_list);\n+\n+  add_setshow_integer_cmd (\"integer\", class_maintenance,\n+\t\t\t   &maintenance_test_settings_integer, _(\"\\\n+command used for internal testing\"), _(\"\\\n+command used for internal testing\"),\n+\t\t\t   nullptr, /* help_doc */\n+\t\t\t   nullptr, /* set_cmd */\n+\t\t\t   maintenance_test_settings_show_value_cmd,\n+\t\t\t   &maintenance_test_settings_set_list,\n+\t\t\t   &maintenance_test_settings_show_list);\n+\n+  add_setshow_string_cmd (\"string\", class_maintenance,\n+     &maintenance_test_settings_string, _(\"\\\n+command used for internal testing\"), _(\"\\\n+command used for internal testing\"),\n+     nullptr, /* help_doc */\n+     nullptr, /* set_cmd */\n+     maintenance_test_settings_show_value_cmd,\n+     &maintenance_test_settings_set_list,\n+     &maintenance_test_settings_show_list);\n+\n+  add_setshow_string_noescape_cmd\n+    (\"string-noescape\", class_maintenance,\n+     &maintenance_test_settings_string_noescape, _(\"\\\n+command used for internal testing\"), _(\"\\\n+command used for internal testing\"),\n+     nullptr, /* help_doc */\n+     nullptr, /* set_cmd */\n+     maintenance_test_settings_show_value_cmd,\n+     &maintenance_test_settings_set_list,\n+     &maintenance_test_settings_show_list);\n+\n+  add_setshow_optional_filename_cmd\n+    (\"optional-filename\", class_maintenance,\n+     &maintenance_test_settings_optional_filename, _(\"\\\n+command used for internal testing\"), _(\"\\\n+command used for internal testing\"),\n+     nullptr, /* help_doc */\n+     nullptr, /* set_cmd */\n+     maintenance_test_settings_show_value_cmd,\n+     &maintenance_test_settings_set_list,\n+     &maintenance_test_settings_show_list);\n+\n+  add_setshow_filename_cmd (\"filename\", class_maintenance,\n+\t\t\t    &maintenance_test_settings_filename, _(\"\\\n+command used for internal testing\"), _(\"\\\n+command used for internal testing\"),\n+\t\t\t    nullptr, /* help_doc */\n+\t\t\t    nullptr, /* set_cmd */\n+\t\t\t    maintenance_test_settings_show_value_cmd,\n+\t\t\t    &maintenance_test_settings_set_list,\n+\t\t\t    &maintenance_test_settings_show_list);\n+\n+  add_setshow_zinteger_cmd (\"zinteger\", class_maintenance,\n+\t\t\t    &maintenance_test_settings_zinteger, _(\"\\\n+command used for internal testing\"), _(\"\\\n+command used for internal testing\"),\n+\t\t\t    nullptr, /* help_doc */\n+\t\t\t    nullptr, /* set_cmd */\n+\t\t\t    maintenance_test_settings_show_value_cmd,\n+\t\t\t    &maintenance_test_settings_set_list,\n+\t\t\t    &maintenance_test_settings_show_list);\n+\n+  add_setshow_zuinteger_cmd (\"zuinteger\", class_maintenance,\n+\t\t\t     &maintenance_test_settings_zuinteger, _(\"\\\n+command used for internal testing\"), _(\"\\\n+command used for internal testing\"),\n+\t\t\t     nullptr, /* help_doc */\n+\t\t\t     nullptr, /* set_cmd */\n+\t\t\t     maintenance_test_settings_show_value_cmd,\n+\t\t\t     &maintenance_test_settings_set_list,\n+\t\t\t     &maintenance_test_settings_show_list);\n+\n+  add_setshow_zuinteger_unlimited_cmd\n+    (\"zuinteger-unlimited\", class_maintenance,\n+     &maintenance_test_settings_zuinteger_unlimited, _(\"\\\n+command used for internal testing\"), _(\"\\\n+command used for internal testing\"),\n+     nullptr, /* help_doc */\n+     nullptr, /* set_cmd */\n+     maintenance_test_settings_show_value_cmd,\n+     &maintenance_test_settings_set_list,\n+     &maintenance_test_settings_show_list);\n+\n+  add_setshow_enum_cmd (\"enum\", class_maintenance,\n+\t\t\tmaintenance_test_settings_enums,\n+\t\t\t&maintenance_test_settings_enum, _(\"\\\n+command used for internal testing\"), _(\"\\\n+command used for internal testing\"),\n+\t\t\tnullptr, /* help_doc */\n+\t\t\tnullptr, /* set_cmd */\n+\t\t\tmaintenance_test_settings_show_value_cmd,\n+\t\t\t&maintenance_test_settings_set_list,\n+\t\t\t&maintenance_test_settings_show_list);\n+}"
    },
    {
      "sha": "85fa7e041c9da825ca433a27612ae402c4ece412",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f",
      "patch": "@@ -1,3 +1,8 @@\n+2019-06-13  Pedro Alves  <palves@redhat.com>\n+\n+\t* gdb.base/settings.c: New file.\n+\t* gdb.base/settings.exp: New file.\n+\n 2019-06-13  Pedro Alves  <palves@redhat.com>\n \n \t* gdb.base/completion.exp: Fix comment typo."
    },
    {
      "sha": "fd22b58603d6b960222602b77959e9494b19714c",
      "filename": "gdb/testsuite/gdb.base/settings.c",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/gdb/testsuite/gdb.base/settings.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/gdb/testsuite/gdb.base/settings.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/settings.c?ref=dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f",
      "patch": "@@ -0,0 +1,23 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2019 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+int xxx1= 123;\n+\n+int\n+main ()\n+{\n+}"
    },
    {
      "sha": "f96e9f614d8e4790ab86a45fff7c69e069821fb6",
      "filename": "gdb/testsuite/gdb.base/settings.exp",
      "status": "added",
      "additions": 539,
      "deletions": 0,
      "changes": 539,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/gdb/testsuite/gdb.base/settings.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f/gdb/testsuite/gdb.base/settings.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/settings.exp?ref=dca0f6c0a4bafff9039d8bdb2a7efec9f70ce82f",
      "patch": "@@ -0,0 +1,539 @@\n+# This testcase is part of GDB, the GNU debugger.\n+\n+# Copyright 2019 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test the set/show commands framework.  The test uses the\n+# \"maintenance test-settings set/show xxx\" subcommands to exercise\n+# TAB-completion and setting processing.\n+\n+load_lib completion-support.exp\n+\n+standard_testfile .c\n+\n+if {[build_executable \"failed to prepare\" $testfile $srcfile debug]} {\n+    return -1\n+}\n+\n+clean_restart\n+\n+if { ![readline_is_used] } {\n+    untested \"no tab completion support without readline\"\n+    return -1\n+}\n+\n+# Test the show command SHOW_CMD.  EXPECTED_RE is the expected output.\n+# This procedure exists in order to make it easier to make the test\n+# name/message unique, since we test the \"show\" commands many times.\n+# EXPECTED_RE is made part of the test name.\n+proc show_setting {show_cmd expected_re} {\n+    gdb_test \"$show_cmd\" $expected_re \"$show_cmd: $expected_re\"\n+}\n+\n+# var_Xinteger tests.  VARIANT determines which command/variant to\n+# exercise.\n+proc test-integer {variant} {\n+    set set_cmd \"maint test-settings set $variant\"\n+    set show_cmd \"maint test-settings show $variant\"\n+\n+    # A bogus value.\n+    gdb_test \"$set_cmd bogus\" \\\n+\t\"No symbol table is loaded\\\\.  Use the \\\"file\\\" command\\\\.\"\n+\n+    # Seemingly-valid but not quite valid value.\n+    gdb_test \"$set_cmd 1a\" \\\n+\t\"Invalid number \\\"1a\\\"\\\\.\"\n+\n+    # Valid value followed by garbage.\n+    gdb_test \"$set_cmd 1 1\" \\\n+\t\"A syntax error in expression, near `1'\\\\.\"\n+\n+    # Valid value followed by garbage.\n+    gdb_test \"$set_cmd 1 x\" \\\n+\t\"A syntax error in expression, near `x'\\\\.\"\n+\n+    if {$variant == \"zuinteger-unlimited\"} {\n+\t# -1 means unlimited.  Other negative values are rejected.  -1\n+\t# -is tested further below, along the \"unlimited\" tests.\n+\tgdb_test \"$set_cmd -2\" \"only -1 is allowed to set as unlimited\"\n+    } elseif {$variant == \"uinteger\" || $variant == \"zuinteger\"} {\n+\t# Negative values are not accepted.\n+\tgdb_test \"$set_cmd -1\" \"integer -1 out of range\"\n+\tgdb_test \"$set_cmd -2\" \"integer -2 out of range\"\n+    } else {\n+\t# Negative values are not accepted.\n+\tgdb_test_no_output \"$set_cmd -1\"\n+\tshow_setting \"$show_cmd\" \"-1\"\n+\tgdb_test_no_output \"$set_cmd -2\"\n+\tshow_setting \"$show_cmd\" \"-2\"\n+    }\n+\n+    # Regular integer is accepted.\n+    gdb_test_no_output \"$set_cmd 999\"\n+    show_setting \"$show_cmd\" \"999\"\n+\n+    if {$variant == \"zinteger\" || $variant == \"zuinteger\"} {\n+\t# 0 means 0.\n+\tgdb_test_no_output \"$set_cmd 0\"\n+\tshow_setting \"$show_cmd\" \"0\"\n+    } else {\n+\t# Either 0 or -1 mean unlimited.  Test both the number and\n+\t# \"unlimited\".  For the latter, test both full name and\n+\t# abbreviations.\n+\n+\tif {$variant == \"zuinteger-unlimited\"} {\n+\t    gdb_test_no_output \"$set_cmd -1\"\n+\t} else {\n+\t    gdb_test_no_output \"$set_cmd 0\"\n+\t}\n+\tshow_setting \"$show_cmd\" \"unlimited\"\n+\n+\tforeach_with_prefix value {\n+\t    \"u\"\n+\t    \"un\"\n+\t    \"unl\"\n+\t    \"unli\"\n+\t    \"unlim\"\n+\t    \"unlimi\"\n+\t    \"unlimit\"\n+\t    \"unlimite\"\n+\t    \"unlimited\"\n+\t} {\n+\t    # Alternate between integer and unlimited, to make sure the\n+\t    # setting really took effect.\n+\t    gdb_test_no_output \"$set_cmd 1\"\n+\t    show_setting \"$show_cmd\" \"1\"\n+\n+\t    gdb_test_no_output \"$set_cmd $value\"\n+\t    show_setting \"$show_cmd\" \"unlimited\"\n+\t}\n+    }\n+\n+    if {$variant == \"zuinteger\"} {\n+\ttest_gdb_complete_multiple \"maint test-settings set \" \"zuinteger\" \"\" {\n+\t    \"zuinteger\"\n+\t    \"zuinteger-unlimited\"\n+\t}\n+    } else {\n+\ttest_gdb_complete_unique \\\n+\t    \"$set_cmd\" \\\n+\t    \"$set_cmd\"\n+    }\n+\n+    if {$variant == \"zinteger\" || $variant == \"zuinteger\"} {\n+\ttest_gdb_complete_none \\\n+\t    \"$set_cmd \" \\\n+    } else {\n+\ttest_gdb_complete_unique \\\n+\t    \"$set_cmd \" \\\n+\t    \"$set_cmd unlimited\"\n+    }\n+\n+    gdb_test \"$set_cmd unlimitedu\" \"No symbol table is loaded.*\"\n+\n+    test_gdb_complete_none \"$set_cmd unlimited \"\n+    test_gdb_complete_none \"$set_cmd unlimitedu\"\n+    test_gdb_complete_none \"$set_cmd unlimited u\"\n+    test_gdb_complete_none \"$set_cmd unlimited 1\"\n+    test_gdb_complete_none \"$set_cmd x\"\n+    test_gdb_complete_none \"$set_cmd x \"\n+    test_gdb_complete_none \"$set_cmd -1\"\n+    test_gdb_complete_none \"$set_cmd -1 \"\n+    test_gdb_complete_none \"$set_cmd 1 \"\n+\n+    # Check show command completion.\n+    if {$variant == \"zuinteger\"} {\n+\ttest_gdb_complete_multiple \"maintenance test-settings show \" \"zuinteger\" \"\" {\n+\t    \"zuinteger\"\n+\t    \"zuinteger-unlimited\"\n+\t}\n+    } else {\n+\ttest_gdb_complete_unique \\\n+\t    \"$show_cmd\" \\\n+\t    \"$show_cmd\"\n+    }\n+    test_gdb_complete_none \"$show_cmd \"\n+}\n+\n+# boolean tests.\n+proc_with_prefix test-boolean {} {\n+    # Use these variables to make sure we don't call the wrong command\n+    # by mistake.\n+    set set_cmd \"maint test-settings set boolean\"\n+    set show_cmd \"maint test-settings show boolean\"\n+\n+    # A bogus value.\n+    gdb_test \"$set_cmd bogus\" \\\n+\t\"\\\"on\\\" or \\\"off\\\" expected\\\\.\"\n+\n+    # Seemingly-valid but not quite valid value.\n+    gdb_test \"$set_cmd on1\" \\\n+\t\"\\\"on\\\" or \\\"off\\\" expected\\\\.\"\n+\n+    # Valid value followed by garbage.\n+    gdb_test \"$set_cmd on 1\" \\\n+\t\"\\\"on\\\" or \\\"off\\\" expected\\\\.\"\n+\n+    # Unlike auto-bool settings, \"-1\" is not accepted.\n+    gdb_test \"$set_cmd -1\" \\\n+\t\"\\\"on\\\" or \\\"off\\\" expected\\\\.\"\n+\n+    # Nor \"auto\".\n+    gdb_test \"$set_cmd auto\" \\\n+\t\"\\\"on\\\" or \\\"off\\\" expected\\\\.\"\n+\n+    # Various valid values.  Test both full value names and\n+    # abbreviations.\n+\n+    # Note that unlike with auto-bool, empty value implies \"on\".\n+    foreach_with_prefix value {\n+\t\"\"\n+\t\"o\"\n+\t\"on\"\n+\t\"1\"\n+\t\"y\"\n+\t\"ye\"\n+\t\"yes\"\n+\t\"e\"\n+\t\"en\"\n+\t\"ena\"\n+\t\"enab\"\n+\t\"enabl\"\n+\t\"enable\"\n+    } {\n+\tgdb_test_no_output \"$set_cmd off\"\n+\tshow_setting \"$show_cmd\" \"off\"\n+\n+\tgdb_test_no_output \"$set_cmd $value\"\n+\tshow_setting \"$show_cmd\" \"on\"\n+    }\n+\n+    foreach_with_prefix value {\n+\t\"of\"\n+\t\"off\"\n+\t\"0\"\n+\t\"n\"\n+\t\"no\"\n+\t\"d\"\n+\t\"di\"\n+\t\"dis\"\n+\t\"disa\"\n+\t\"disab\"\n+\t\"disabl\"\n+\t\"disable\"\n+    } {\n+\tgdb_test_no_output \"$set_cmd on\"\n+\tshow_setting \"$show_cmd\" \"on\"\n+\n+\tgdb_test_no_output \"$set_cmd $value\"\n+\tshow_setting \"$show_cmd\" \"off\"\n+    }\n+\n+    test_gdb_complete_multiple \"$set_cmd \" \"\" \"o\" {\n+\t\"off\"\n+\t\"on\"\n+    }\n+\n+    test_gdb_complete_unique \\\n+\t\"$set_cmd of\" \\\n+\t\"$set_cmd off\"\n+\n+    test_gdb_complete_none \"$set_cmd x\"\n+\n+    # Check that the show command doesn't complete anything.\n+    test_gdb_complete_unique \\\n+\t\"$show_cmd\" \\\n+\t\"$show_cmd\"\n+    test_gdb_complete_none \"$show_cmd \"\n+}\n+\n+# auto-boolean tests.\n+proc_with_prefix test-auto-boolean {} {\n+    # Use these variables to make sure we don't call the wrong command\n+    # by mistake.\n+    set set_cmd \"maint test-settings set auto-boolean\"\n+    set show_cmd \"maint test-settings show auto-boolean\"\n+\n+    # A bogus value.\n+    gdb_test \"$set_cmd bogus\" \\\n+\t\"\\\"on\\\", \\\"off\\\" or \\\"auto\\\" expected\\\\.\"\n+\n+    # Seemingly-valid but not quite valid value.\n+    gdb_test \"$set_cmd on1\" \\\n+\t\"\\\"on\\\", \\\"off\\\" or \\\"auto\\\" expected\\\\.\"\n+\n+    # Valid value followed by garbage.\n+    gdb_test \"$set_cmd on 1\" \\\n+\t\"\\\"on\\\", \\\"off\\\" or \\\"auto\\\" expected\\\\.\"\n+\n+    # Various valid values.  Test both full value names and\n+    # abbreviations.\n+\n+    foreach_with_prefix value {\n+\t\"o\"\n+\t\"on\"\n+\t\"1\"\n+\t\"y\"\n+\t\"ye\"\n+\t\"yes\"\n+\t\"e\"\n+\t\"en\"\n+\t\"ena\"\n+\t\"enab\"\n+\t\"enabl\"\n+\t\"enable\"\n+    } {\n+\tgdb_test_no_output \"$set_cmd off\"\n+\tshow_setting \"$show_cmd\" \"off\"\n+\n+\tgdb_test_no_output \"$set_cmd $value\"\n+\tshow_setting \"$show_cmd\" \"on\"\n+    }\n+\n+    foreach_with_prefix value {\n+\t\"of\"\n+\t\"off\"\n+\t\"0\"\n+\t\"n\"\n+\t\"no\"\n+\t\"d\"\n+\t\"di\"\n+\t\"dis\"\n+\t\"disa\"\n+\t\"disab\"\n+\t\"disabl\"\n+\t\"disable\"\n+    } {\n+\tgdb_test_no_output \"$set_cmd on\"\n+\tshow_setting \"$show_cmd\" \"on\"\n+\n+\tgdb_test_no_output \"$set_cmd $value\"\n+\tshow_setting \"$show_cmd\" \"off\"\n+    }\n+\n+    foreach_with_prefix value {\n+\t\"a\"\n+\t\"au\"\n+\t\"aut\"\n+\t\"auto\"\n+\t\"-1\"\n+    } {\n+\tgdb_test_no_output \"$set_cmd on\"\n+\tshow_setting \"$show_cmd\" \"on\"\n+\n+\tgdb_test_no_output \"$set_cmd $value\"\n+\tshow_setting \"$show_cmd\" \"auto\"\n+    }\n+\n+    # \"-\" is not accepted as abbreviation of \"-1\".\n+    gdb_test \"$set_cmd -\" \\\n+\t\"\\\"on\\\", \\\"off\\\" or \\\"auto\\\" expected\\\\.\"\n+\n+    test_gdb_complete_multiple \"$set_cmd \" \"\" \"\" {\n+\t\"auto\"\n+\t\"off\"\n+\t\"on\"\n+    }\n+\n+    test_gdb_complete_unique \\\n+\t\"$set_cmd of\" \\\n+\t\"$set_cmd off\"\n+\n+    test_gdb_complete_none \"$set_cmd x\"\n+\n+    # Check that the show command doesn't complete anything.\n+    test_gdb_complete_unique \\\n+\t\"$show_cmd\" \\\n+\t\"$show_cmd\"\n+    test_gdb_complete_none \"$show_cmd \"\n+}\n+\n+# Enum option tests.\n+proc_with_prefix test-enum {} {\n+    # Use these variables to make sure we don't call the wrong command\n+    # by mistake.\n+    set set_cmd \"maint test-settings set enum\"\n+    set show_cmd \"maint test-settings show enum\"\n+\n+    # Missing value.\n+    gdb_test \"$set_cmd\" \\\n+\t\"Requires an argument\\\\. Valid arguments are xxx, yyy, zzz\\\\.\"\n+\n+    # A bogus value.\n+    gdb_test \"$set_cmd bogus\" \\\n+\t\"Undefined item: \\\"bogus\\\".\"\n+\n+    # Seemingly-valid but not quite valid value.\n+    gdb_test \"$set_cmd xxx1\" \\\n+\t\"Undefined item: \\\"xxx1\\\".\"\n+\n+    # Valid value followed by garbage.\n+    gdb_test \"$set_cmd xxx 1\" \\\n+\t\"Junk after item \\\"xxx\\\": 1\"\n+    # Valid value followed by garbage, with extra spaces.\n+    gdb_test \"$set_cmd xxx      1\" \\\n+\t\"Junk after item \\\"xxx\\\": 1\"\n+    # Abbreviated value followed by garbage.\n+    gdb_test \"$set_cmd xx 1\" \\\n+\t\"Junk after item \\\"xx\\\": 1\"\n+\n+    # Various valid values.  Test both full value names and\n+    # abbreviations.\n+    gdb_test_no_output \"$set_cmd x\"\n+    show_setting \"$show_cmd\" \"xxx\"\n+    gdb_test_no_output \"$set_cmd yy\"\n+    show_setting \"$show_cmd\" \"yyy\"\n+    gdb_test_no_output \"$set_cmd zzz\"\n+    show_setting \"$show_cmd\" \"zzz\"\n+\n+    test_gdb_complete_multiple \"$set_cmd \" \"\" \"\" {\n+\t\"xxx\"\n+\t\"yyy\"\n+\t\"zzz\"\n+    }\n+\n+    test_gdb_complete_unique \\\n+\t\"$set_cmd x\" \\\n+\t\"$set_cmd xxx\"\n+\n+    test_gdb_complete_none \"$set_cmd a\"\n+\n+    # Check that the show command doesn't complete anything.\n+    test_gdb_complete_unique \\\n+\t\"$show_cmd\" \\\n+\t\"$show_cmd\"\n+    test_gdb_complete_none \"$show_cmd \"\n+}\n+\n+# string settings tests.\n+proc test-string {variant} {\n+    global gdb_prompt\n+    global srcfile binfile\n+\n+    # Load symbols for the completion test below.\n+    clean_restart $binfile\n+\n+    # Use these variables to make sure we don't call the wrong command\n+    # by mistake.\n+    set set_cmd \"maint test-settings set $variant\"\n+    set show_cmd \"maint test-settings show $variant\"\n+\n+    # Empty string.  Also checks that gdb doesn't crash if we haven't\n+    # set the string yet.\n+    gdb_test \"$show_cmd\" \"^$show_cmd\\r\\n\" \"$show_cmd: empty first time\"\n+\n+    # A string value.\n+    gdb_test_no_output \"$set_cmd hello world\"\n+    show_setting \"$show_cmd\" \"hello world\"\n+\n+    # A quoted string value.\n+    if {$variant == \"string\"} {\n+\tgdb_test_no_output \"$set_cmd \\\"hello world\\\"\"\n+\tshow_setting \"$show_cmd\" \"\\\\\\\\\\\"hello world\\\\\\\\\\\"\"\n+    } else {\n+\tgdb_test_no_output \"$set_cmd \\\"hello world\\\"\"\n+\tshow_setting \"$show_cmd\" \"\\\"hello world\\\"\"\n+    }\n+\n+    # Test clearing the string.\n+    with_test_prefix \"clear string\" {\n+\tif {$variant == \"filename\"} {\n+\t    gdb_test \"$set_cmd\" \\\n+\t\t\"Argument required \\\\(filename to set it to\\\\.\\\\)\\\\.\"\n+\n+\t    # Check the value didn't change.\n+\t    show_setting \"$show_cmd\" \"\\\"hello world\\\"\"\n+\t} else {\n+\t    gdb_test_no_output \"$set_cmd\"\n+\t    gdb_test \"$show_cmd\" \\\n+\t\t\"^$show_cmd\\r\\n\" \"$show_cmd: empty second time\"\n+\t}\n+    }\n+\n+    # Test completion.\n+    if {$variant == \"string\" || $variant == \"string-noescape\" } {\n+\t# Make sure GDB doesn't try to complete on symbols, which\n+\t# doesn't make any sense.\n+\ttest_gdb_complete_none \"$set_cmd \"\n+    } else {\n+\t# Complete on filename.\n+\n+\t# See comments in gdb.base/completion.exp.\n+\n+\t# We `cd' to ${srcdir}, and then do the completion relative to\n+\t# the current directory.\n+\n+\t# ${srcdir} may be a relative path.  We want to make sure we\n+\t# end up in the right directory - so make sure we know where\n+\t# it is.\n+\tglobal srcdir\n+\tset mydir [pwd]\n+\tcd ${srcdir}\n+\tset fullsrcdir [pwd]\n+\tcd ${mydir}\n+\n+\tgdb_test \"cd ${fullsrcdir}\" \\\n+\t    \"Working directory [string_to_regexp ${fullsrcdir}].*\" \\\n+\t    \"cd to \\${srcdir}\"\n+\n+\tset unique_file ../testsuite/gdb.base/comp-dir/subdir/dummy\n+\n+\ttest_gdb_complete_unique \\\n+\t    \"$set_cmd ${unique_file}\" \\\n+\t    \"$set_cmd ${unique_file}.txt\"\n+\n+\ttest_gdb_complete_none \"$set_cmd ${unique_file}.abc\"\n+    }\n+\n+    # Check show command completion.\n+    if {$variant == \"string\"} {\n+\ttest_gdb_complete_multiple \"maint test-settings show \" \"string\" \"\" {\n+\t    \"string\"\n+\t    \"string-noescape\"\n+\t}\n+    } else {\n+\ttest_gdb_complete_unique \\\n+\t    \"$show_cmd\" \\\n+\t    \"$show_cmd\"\n+    }\n+    test_gdb_complete_none \"$show_cmd \"\n+}\n+\n+foreach variant {\n+    uinteger\n+    integer\n+    zinteger\n+    zuinteger\n+    zuinteger-unlimited\n+} {\n+    with_test_prefix \"test-integer $variant\" {\n+\ttest-integer $variant\n+    }\n+}\n+\n+test-boolean\n+test-auto-boolean\n+test-enum\n+\n+foreach variant {\n+    string\n+    string-noescape\n+    optional-filename\n+    filename\n+} {\n+    with_test_prefix \"test-string $variant\" {\n+\ttest-string $variant\n+    }\n+}"
    }
  ]
}