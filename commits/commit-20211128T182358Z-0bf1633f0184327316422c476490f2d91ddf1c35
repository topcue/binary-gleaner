{
  "sha": "0bf1633f0184327316422c476490f2d91ddf1c35",
  "node_id": "C_kwDOANOeidoAKDBiZjE2MzNmMDE4NDMyNzMxNjQyMmM0NzY0OTBmMmQ5MWRkZjFjMzU",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-28T05:20:31Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-28T18:23:58Z"
    },
    "message": "sim: d10v: switch to new target-newlib-syscall\n\nUse the new target-newlib-syscall module.  This is needed to merge all\nthe architectures into a single build, and d10v has a custom syscall\ntable for its newlib/libgloss port.\n\nThis allows cleaning up the syscall ifdef logic.  We know these will\nalways exist now.",
    "tree": {
      "sha": "4e43ea8f8cc3c96f133edcb8e81b692294522612",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4e43ea8f8cc3c96f133edcb8e81b692294522612"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0bf1633f0184327316422c476490f2d91ddf1c35",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0bf1633f0184327316422c476490f2d91ddf1c35",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0bf1633f0184327316422c476490f2d91ddf1c35",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0bf1633f0184327316422c476490f2d91ddf1c35/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c44df9148d58a8152f43cdbe19d90fe19ba52f88",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c44df9148d58a8152f43cdbe19d90fe19ba52f88",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c44df9148d58a8152f43cdbe19d90fe19ba52f88"
    }
  ],
  "stats": {
    "total": 62,
    "additions": 26,
    "deletions": 36
  },
  "files": [
    {
      "sha": "cba370e9e0fa333818745656752e02856637a0fa",
      "filename": "sim/d10v/Makefile.in",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0bf1633f0184327316422c476490f2d91ddf1c35/sim/d10v/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0bf1633f0184327316422c476490f2d91ddf1c35/sim/d10v/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/Makefile.in?ref=0bf1633f0184327316422c476490f2d91ddf1c35",
      "patch": "@@ -27,10 +27,7 @@ SIM_OBJS = \\\n \n SIM_EXTRA_DEPS = simops.h\n \n-INCLUDE = d10v_sim.h $(srcroot)/include/sim/callback.h targ-vals.h endian.c \\\n+INCLUDE = d10v_sim.h $(srcroot)/include/sim/callback.h endian.c \\\n \t$(srcroot)/include/gdb/sim-d10v.h\n \n-# This selects the d10v newlib/libgloss syscall definitions.\n-NL_TARGET = -DNL_TARGET_d10v\n-\n ## COMMON_POST_CONFIG_FRAG"
    },
    {
      "sha": "2a0cf6bc3a01b37b89d4ab75ca89048b2d6272d3",
      "filename": "sim/d10v/interp.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0bf1633f0184327316422c476490f2d91ddf1c35/sim/d10v/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0bf1633f0184327316422c476490f2d91ddf1c35/sim/d10v/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/interp.c?ref=0bf1633f0184327316422c476490f2d91ddf1c35",
      "patch": "@@ -18,6 +18,8 @@\n #include <stdlib.h>\n #include <assert.h>\n \n+#include \"target-newlib-syscall.h\"\n+\n enum _leftright { LEFT_FIRST, RIGHT_FIRST };\n \n struct _state State;\n@@ -758,6 +760,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n \n   /* Set default options before parsing user options.  */\n   current_alignment = STRICT_ALIGNMENT;\n+  cb->syscall_map = cb_d10v_syscall_map;\n \n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)"
    },
    {
      "sha": "6e6bb0209dd4cc04a36cea22baef20a57a5782f4",
      "filename": "sim/d10v/simops.c",
      "status": "modified",
      "additions": 22,
      "deletions": 32,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0bf1633f0184327316422c476490f2d91ddf1c35/sim/d10v/simops.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0bf1633f0184327316422c476490f2d91ddf1c35/sim/d10v/simops.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/simops.c?ref=0bf1633f0184327316422c476490f2d91ddf1c35",
      "patch": "@@ -13,7 +13,7 @@\n #include \"sim-main.h\"\n #include \"sim-signal.h\"\n #include \"simops.h\"\n-#include \"targ-vals.h\"\n+#include \"target-newlib-syscall.h\"\n \n #define EXCEPTION(sig) sim_engine_halt (sd, cpu, NULL, PC, sim_stopped, sig)\n \n@@ -3207,20 +3207,20 @@ OP_5F00 (SIM_DESC sd, SIM_CPU *cpu)\n \tswitch (FUNC)\n \t  {\n #if !defined(__GO32__) && !defined(_WIN32)\n-\t  case TARGET_SYS_fork:\n+\t  case TARGET_NEWLIB_D10V_SYS_fork:\n \t    trace_input (\"<fork>\", OP_VOID, OP_VOID, OP_VOID);\n \t    RETVAL (fork ());\n \t    trace_output_16 (sd, result);\n \t    break;\n \n #define getpid() 47\n-\t  case TARGET_SYS_getpid:\n+\t  case TARGET_NEWLIB_D10V_SYS_getpid:\n \t    trace_input (\"<getpid>\", OP_VOID, OP_VOID, OP_VOID);\n \t    RETVAL (getpid ());\n \t    trace_output_16 (sd, result);\n \t    break;\n \n-\t  case TARGET_SYS_kill:\n+\t  case TARGET_NEWLIB_D10V_SYS_kill:\n \t    trace_input (\"<kill>\", OP_R0, OP_R1, OP_VOID);\n \t    if (PARM1 == getpid ())\n \t      {\n@@ -3348,22 +3348,20 @@ OP_5F00 (SIM_DESC sd, SIM_CPU *cpu)\n \t      }\n \t    break;\n \n-\t  case TARGET_SYS_execve:\n+\t  case TARGET_NEWLIB_D10V_SYS_execve:\n \t    trace_input (\"<execve>\", OP_R0, OP_R1, OP_R2);\n \t    RETVAL (execve (MEMPTR (PARM1), (char **) MEMPTR (PARM2),\n \t\t\t     (char **)MEMPTR (PARM3)));\n \t    trace_output_16 (sd, result);\n \t    break;\n \n-#ifdef TARGET_SYS_execv\n-\t  case TARGET_SYS_execv:\n+\t  case TARGET_NEWLIB_D10V_SYS_execv:\n \t    trace_input (\"<execv>\", OP_R0, OP_R1, OP_VOID);\n \t    RETVAL (execve (MEMPTR (PARM1), (char **) MEMPTR (PARM2), NULL));\n \t    trace_output_16 (sd, result);\n \t    break;\n-#endif\n \n-\t  case TARGET_SYS_pipe:\n+\t  case TARGET_NEWLIB_D10V_SYS_pipe:\n \t    {\n \t      reg_t buf;\n \t      int host_fd[2];\n@@ -3379,8 +3377,7 @@ OP_5F00 (SIM_DESC sd, SIM_CPU *cpu)\n \t  break;\n \n #if 0\n-#ifdef TARGET_SYS_wait\n-\t  case TARGET_SYS_wait:\n+\t  case TARGET_NEWLIB_D10V_SYS_wait:\n \t    {\n \t      int status;\n \t      trace_input (\"<wait>\", OP_R0, OP_VOID, OP_VOID);\n@@ -3391,28 +3388,27 @@ OP_5F00 (SIM_DESC sd, SIM_CPU *cpu)\n \t    }\n \t  break;\n #endif\n-#endif\n #else\n-\t  case TARGET_SYS_getpid:\n+\t  case TARGET_NEWLIB_D10V_SYS_getpid:\n \t    trace_input (\"<getpid>\", OP_VOID, OP_VOID, OP_VOID);\n \t    RETVAL (1);\n \t    trace_output_16 (sd, result);\n \t    break;\n \n-\t  case TARGET_SYS_kill:\n+\t  case TARGET_NEWLIB_D10V_SYS_kill:\n \t    trace_input (\"<kill>\", OP_REG, OP_REG, OP_VOID);\n \t    trace_output_void (sd);\n \t    sim_engine_halt (sd, cpu, NULL, PC, sim_stopped, PARM2);\n \t    break;\n #endif\n \n-\t  case TARGET_SYS_read:\n+\t  case TARGET_NEWLIB_D10V_SYS_read:\n \t    trace_input (\"<read>\", OP_R0, OP_R1, OP_R2);\n \t    RETVAL (cb->read (cb, PARM1, MEMPTR (PARM2), PARM3));\n \t    trace_output_16 (sd, result);\n \t    break;\n \n-\t  case TARGET_SYS_write:\n+\t  case TARGET_NEWLIB_D10V_SYS_write:\n \t    trace_input (\"<write>\", OP_R0, OP_R1, OP_R2);\n \t    if (PARM1 == 1)\n \t      RETVAL ((int)cb->write_stdout (cb, MEMPTR (PARM2), PARM3));\n@@ -3421,7 +3417,7 @@ OP_5F00 (SIM_DESC sd, SIM_CPU *cpu)\n \t    trace_output_16 (sd, result);\n \t    break;\n \n-\t  case TARGET_SYS_lseek:\n+\t  case TARGET_NEWLIB_D10V_SYS_lseek:\n \t    trace_input (\"<lseek>\", OP_R0, OP_R1, OP_R2);\n \t    RETVAL32 (cb->lseek (cb, PARM1,\n \t\t\t\t ((((unsigned long) PARM2) << 16)\n@@ -3430,26 +3426,25 @@ OP_5F00 (SIM_DESC sd, SIM_CPU *cpu)\n \t    trace_output_32 (sd, result);\n \t    break;\n \n-\t  case TARGET_SYS_close:\n+\t  case TARGET_NEWLIB_D10V_SYS_close:\n \t    trace_input (\"<close>\", OP_R0, OP_VOID, OP_VOID);\n \t    RETVAL (cb->close (cb, PARM1));\n \t    trace_output_16 (sd, result);\n \t    break;\n \n-\t  case TARGET_SYS_open:\n+\t  case TARGET_NEWLIB_D10V_SYS_open:\n \t    trace_input (\"<open>\", OP_R0, OP_R1, OP_R2);\n \t    RETVAL (cb->open (cb, MEMPTR (PARM1), PARM2));\n \t    trace_output_16 (sd, result);\n \t    break;\n \n-\t  case TARGET_SYS_exit:\n+\t  case TARGET_NEWLIB_D10V_SYS_exit:\n \t    trace_input (\"<exit>\", OP_R0, OP_VOID, OP_VOID);\n \t    trace_output_void (sd);\n \t    sim_engine_halt (sd, cpu, NULL, PC, sim_exited, GPR (0));\n \t    break;\n \n-#ifdef TARGET_SYS_stat\n-\t  case TARGET_SYS_stat:\n+\t  case TARGET_NEWLIB_D10V_SYS_stat:\n \t    trace_input (\"<stat>\", OP_R0, OP_R1, OP_VOID);\n \t    /* stat system call */\n \t    {\n@@ -3477,42 +3472,37 @@ OP_5F00 (SIM_DESC sd, SIM_CPU *cpu)\n \t    }\n \t    trace_output_16 (sd, result);\n \t    break;\n-#endif\n \n-\t  case TARGET_SYS_chown:\n+\t  case TARGET_NEWLIB_D10V_SYS_chown:\n \t    trace_input (\"<chown>\", OP_R0, OP_R1, OP_R2);\n \t    RETVAL (chown (MEMPTR (PARM1), PARM2, PARM3));\n \t    trace_output_16 (sd, result);\n \t    break;\n \n-\t  case TARGET_SYS_chmod:\n+\t  case TARGET_NEWLIB_D10V_SYS_chmod:\n \t    trace_input (\"<chmod>\", OP_R0, OP_R1, OP_R2);\n \t    RETVAL (chmod (MEMPTR (PARM1), PARM2));\n \t    trace_output_16 (sd, result);\n \t    break;\n \n #if 0\n-#ifdef TARGET_SYS_utime\n-\t  case TARGET_SYS_utime:\n+\t  case TARGET_NEWLIB_D10V_SYS_utime:\n \t    trace_input (\"<utime>\", OP_R0, OP_R1, OP_R2);\n \t    /* Cast the second argument to void *, to avoid type mismatch\n \t       if a prototype is present.  */\n \t    RETVAL (utime (MEMPTR (PARM1), (void *) MEMPTR (PARM2)));\n \t    trace_output_16 (sd, result);\n \t    break;\n #endif\n-#endif\n \n #if 0\n-#ifdef TARGET_SYS_time\n-\t  case TARGET_SYS_time:\n+\t  case TARGET_NEWLIB_D10V_SYS_time:\n \t    trace_input (\"<time>\", OP_R0, OP_R1, OP_R2);\n \t    RETVAL32 (time (PARM1 ? MEMPTR (PARM1) : NULL));\n \t    trace_output_32 (sd, result);\n \t    break;\n #endif\n-#endif\n-\t    \n+\n \t  default:\n \t    cb->error (cb, \"Unknown syscall %d\", FUNC);\n \t  }"
    }
  ]
}