{
  "sha": "96e3ec29664810995d6d7d3b6fd6ae2d19c532bd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTZlM2VjMjk2NjQ4MTA5OTVkNmQ3ZDNiNmZkNmFlMmQxOWM1MzJiZA==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-06-02T19:49:14Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-07-22T16:57:32Z"
    },
    "message": "libctf, types: ints, floats and typedefs with no name are invalid\n\nReport them as such, rather than letting ctf_decl_sprintf wrongly\nconclude that the printing of zero characters means we are out of\nmemory.\n\nlibctf/\n\t* ctf-types.c (ctf_type_aname): Return ECTF_CORRUPT if\n\tints, floats or typedefs have no name.  Fix comment typo.",
    "tree": {
      "sha": "6b13dd4277d8647d015f6e17b681145d9f9b2550",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6b13dd4277d8647d015f6e17b681145d9f9b2550"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/96e3ec29664810995d6d7d3b6fd6ae2d19c532bd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/96e3ec29664810995d6d7d3b6fd6ae2d19c532bd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/96e3ec29664810995d6d7d3b6fd6ae2d19c532bd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/96e3ec29664810995d6d7d3b6fd6ae2d19c532bd/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "502e838ed9657ee74cdb4f53798e1468004c9524",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/502e838ed9657ee74cdb4f53798e1468004c9524",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/502e838ed9657ee74cdb4f53798e1468004c9524"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 15,
    "deletions": 1
  },
  "files": [
    {
      "sha": "f0e20011f39faad421d5991ef80a1bd1d4bb2197",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96e3ec29664810995d6d7d3b6fd6ae2d19c532bd/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96e3ec29664810995d6d7d3b6fd6ae2d19c532bd/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=96e3ec29664810995d6d7d3b6fd6ae2d19c532bd",
      "patch": "@@ -1,3 +1,8 @@\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-types.c (ctf_type_aname): Return ECTF_CORRUPT if\n+\tints, floats or typedefs have no name.  Fix comment typo.\n+\n 2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-create.c (ctf_add_slice): Support slices of any kind that"
    },
    {
      "sha": "db42b9e8a90d62feb745e461b2197a47e45db62b",
      "filename": "libctf/ctf-types.c",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96e3ec29664810995d6d7d3b6fd6ae2d19c532bd/libctf/ctf-types.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96e3ec29664810995d6d7d3b6fd6ae2d19c532bd/libctf/ctf-types.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-types.c?ref=96e3ec29664810995d6d7d3b6fd6ae2d19c532bd",
      "patch": "@@ -316,7 +316,7 @@ ctf_id_t ctf_lookup_by_rawhash (ctf_file_t *fp, ctf_names_t *np, const char *nam\n   return id;\n }\n \n-/* Lookup the given type ID and return its name as a new dynamcally-allocated\n+/* Lookup the given type ID and return its name as a new dynamically-allocated\n    string.  */\n \n char *\n@@ -379,6 +379,15 @@ ctf_type_aname (ctf_file_t *fp, ctf_id_t type)\n \t    case CTF_K_INTEGER:\n \t    case CTF_K_FLOAT:\n \t    case CTF_K_TYPEDEF:\n+\t      /* Integers, floats, and typedefs must always be named types.  */\n+\n+\t      if (name[0] == '\\0')\n+\t\t{\n+\t\t  ctf_set_errno (fp, ECTF_CORRUPT);\n+\t\t  ctf_decl_fini (&cd);\n+\t\t  return NULL;\n+\t\t}\n+\n \t      ctf_decl_sprintf (&cd, \"%s\", name);\n \t      break;\n \t    case CTF_K_POINTER:"
    }
  ]
}