{
  "sha": "5fff6115feae7aaa23c0ae8d144e1c8418ee2ee1",
  "node_id": "C_kwDOANOeidoAKDVmZmY2MTE1ZmVhZTdhYWEyM2MwYWU4ZDE0NGUxYzg0MThlZTJlZTE",
  "commit": {
    "author": {
      "name": "Jan Kratochvil",
      "email": "jan.kratochvil@redhat.com",
      "date": "2021-11-03T10:29:18Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-11-03T10:29:18Z"
    },
    "message": "Fix LD_PRELOAD=/usr/lib64/libasan.so.6 gdb\n\nCurrently for a binary compiled normally (without -fsanitize=address) but with\nLD_PRELOAD of ASAN one gets:\n\n$ ASAN_OPTIONS=detect_leaks=0:alloc_dealloc_mismatch=1:abort_on_error=1:fast_unwind_on_malloc=0 LD_PRELOAD=/usr/lib64/libasan.so.6 gdb\n=================================================================\n==1909567==ERROR: AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete []) on 0x602000001570\n    #0 0x7f1c98e5efa7 in operator delete[](void*) (/usr/lib64/libasan.so.6+0xb0fa7)\n...\n0x602000001570 is located 0 bytes inside of 2-byte region [0x602000001570,0x602000001572)\nallocated by thread T0 here:\n    #0 0x7f1c98e5cd1f in __interceptor_malloc (/usr/lib64/libasan.so.6+0xaed1f)\n    #1 0x557ee4a42e81 in operator new(unsigned long) (/usr/libexec/gdb+0x74ce81)\nSUMMARY: AddressSanitizer: alloc-dealloc-mismatch (/usr/lib64/libasan.so.6+0xb0fa7) in operator delete[](void*)\n==1909567==HINT: if you don't care about these errors you may set ASAN_OPTIONS=alloc_dealloc_mismatch=0\n==1909567==ABORTING\n\nDespite the code called properly operator new[] and operator delete[].\nBut GDB's new-op.cc provides its own operator new[] which gets translated into\nmalloc() (which gets recogized as operatore new(size_t)) but as it does not\ntranslate also operators delete[] Address Sanitizer gets confused.\n\nThe question is how many variants of the delete operator need to be provided.\nThere could be 14 operators new but there are only 4, GDB uses 3 of them.\nThere could be 16 operators delete but there are only 6, GDB uses 2 of them.\nIt depends on libraries and compiler which of the operators will get used.\nCurrently being used:\n                 U operator new[](unsigned long)\n                 U operator new(unsigned long)\n                 U operator new(unsigned long, std::nothrow_t const&)\n                 U operator delete[](void*)\n                 U operator delete(void*, unsigned long)\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "6d29ab09b64509100fd594ed8b0ed519cf743cd8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6d29ab09b64509100fd594ed8b0ed519cf743cd8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5fff6115feae7aaa23c0ae8d144e1c8418ee2ee1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5fff6115feae7aaa23c0ae8d144e1c8418ee2ee1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5fff6115feae7aaa23c0ae8d144e1c8418ee2ee1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5fff6115feae7aaa23c0ae8d144e1c8418ee2ee1/comments",
  "author": {
    "login": "jankratochvil",
    "id": 1223939,
    "node_id": "MDQ6VXNlcjEyMjM5Mzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1223939?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jankratochvil",
    "html_url": "https://github.com/jankratochvil",
    "followers_url": "https://api.github.com/users/jankratochvil/followers",
    "following_url": "https://api.github.com/users/jankratochvil/following{/other_user}",
    "gists_url": "https://api.github.com/users/jankratochvil/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jankratochvil/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jankratochvil/subscriptions",
    "organizations_url": "https://api.github.com/users/jankratochvil/orgs",
    "repos_url": "https://api.github.com/users/jankratochvil/repos",
    "events_url": "https://api.github.com/users/jankratochvil/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jankratochvil/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6ef4fa071e2c25b71e81a91646b43378cf957388",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ef4fa071e2c25b71e81a91646b43378cf957388",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6ef4fa071e2c25b71e81a91646b43378cf957388"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 42,
    "deletions": 0
  },
  "files": [
    {
      "sha": "2f4c71457b140e5979aef81e6e603871015d25b1",
      "filename": "gdbsupport/new-op.cc",
      "status": "modified",
      "additions": 42,
      "deletions": 0,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fff6115feae7aaa23c0ae8d144e1c8418ee2ee1/gdbsupport/new-op.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fff6115feae7aaa23c0ae8d144e1c8418ee2ee1/gdbsupport/new-op.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/new-op.cc?ref=5fff6115feae7aaa23c0ae8d144e1c8418ee2ee1",
      "patch": "@@ -92,4 +92,46 @@ operator new[] (std::size_t sz, const std::nothrow_t&) noexcept\n {\n   return ::operator new (sz, std::nothrow);\n }\n+\n+/* Define also operators delete as one can LD_PRELOAD=libasan.so.*\n+   without recompiling the program with -fsanitize=address and then one would\n+   get false positive alloc-dealloc-mismatch (malloc vs operator delete [])\n+   errors from AddressSanitizers.  */\n+\n+void\n+operator delete (void *p)\n+{\n+  free (p);\n+}\n+\n+void\n+operator delete (void *p, const std::nothrow_t&) noexcept\n+{\n+  return ::operator delete (p);\n+}\n+\n+void\n+operator delete (void *p, std::size_t) noexcept\n+{\n+  return ::operator delete (p, std::nothrow);\n+}\n+\n+void\n+operator delete[] (void *p)\n+{\n+  return ::operator delete (p);\n+}\n+\n+void\n+operator delete[] (void *p, const std::nothrow_t&) noexcept\n+{\n+  return ::operator delete (p, std::nothrow);\n+}\n+\n+void\n+operator delete[] (void *p, std::size_t) noexcept\n+{\n+  return ::operator delete[] (p, std::nothrow);\n+}\n+\n #endif"
    }
  ]
}