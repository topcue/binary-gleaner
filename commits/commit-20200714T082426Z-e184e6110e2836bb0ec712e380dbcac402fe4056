{
  "sha": "e184e6110e2836bb0ec712e380dbcac402fe4056",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTE4NGU2MTEwZTI4MzZiYjBlYzcxMmUzODBkYmNhYzQwMmZlNDA1Ng==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-07-14T08:24:26Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-07-14T08:24:26Z"
    },
    "message": "x86-64: don't hide an empty but meaningless REX prefix\n\nUnlike for non-zero values passed to USED_REX(), where rex_used gets\nupdated only when the respective bit was actually set in the encoding,\nzero getting passed in is not further guarded, yet such a (potentially\n\"empty\") REX prefix takes effect only when there are registers numbered\n4 and up.",
    "tree": {
      "sha": "93fc77dc46849ff3754484d0bcafd453d2c5af3f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/93fc77dc46849ff3754484d0bcafd453d2c5af3f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e184e6110e2836bb0ec712e380dbcac402fe4056",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e184e6110e2836bb0ec712e380dbcac402fe4056",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e184e6110e2836bb0ec712e380dbcac402fe4056",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e184e6110e2836bb0ec712e380dbcac402fe4056/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3"
    }
  ],
  "stats": {
    "total": 49,
    "additions": 36,
    "deletions": 13
  },
  "files": [
    {
      "sha": "557e75fef4847b6fa5e4ddd674c9c1c14f9f62d2",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e184e6110e2836bb0ec712e380dbcac402fe4056/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e184e6110e2836bb0ec712e380dbcac402fe4056/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=e184e6110e2836bb0ec712e380dbcac402fe4056",
      "patch": "@@ -1,3 +1,11 @@\n+2020-07-14  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* testsuite/gas/i386/x86-64-pseudos.s: Add empty-REX tests for\n+\tModR/M-encoded byte register cases.\n+\t* testsuite/gas/i386/x86-64-pseudos.d,\n+\ttestsuite/gas/i386/x86-64-reg-intel.d,\n+\ttestsuite/gas/i386/x86-64-reg.d: Adjust expectations.\n+\n 2020-07-14  Jan Beulich  <jbeulich@suse.com>\n \n \t* testsuite/gas/i386/x86-64-pseudos.s: Add empty-REX tests for"
    },
    {
      "sha": "7e17b14f5b11fefef8e73c5e03f614c78265c65a",
      "filename": "gas/testsuite/gas/i386/x86-64-pseudos.d",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e184e6110e2836bb0ec712e380dbcac402fe4056/gas/testsuite/gas/i386/x86-64-pseudos.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e184e6110e2836bb0ec712e380dbcac402fe4056/gas/testsuite/gas/i386/x86-64-pseudos.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-pseudos.d?ref=e184e6110e2836bb0ec712e380dbcac402fe4056",
      "patch": "@@ -303,6 +303,9 @@ Disassembly of section .text:\n  +[a-f0-9]+:\t88 c4                \tmov    %al,%ah\n  +[a-f0-9]+:\t40 d3 e0             \trex shl %cl,%eax\n  +[a-f0-9]+:\t40 a0 01 00 00 00 00 00 00 00 \trex movabs 0x1,%al\n+ +[a-f0-9]+:\t40 38 ca             \trex cmp %cl,%dl\n+ +[a-f0-9]+:\t40 b3 01             \trex mov \\$(0x)?1,%bl\n+ +[a-f0-9]+:\tf2 40 0f 38 f0 c1    \trex crc32b? %cl,%eax\n  +[a-f0-9]+:\t40 89 c3             \trex mov %eax,%ebx\n  +[a-f0-9]+:\t41 89 c6             \tmov    %eax,%r14d\n  +[a-f0-9]+:\t41 89 00             \tmov    %eax,\\(%r8\\)"
    },
    {
      "sha": "1bd88181212856f25fe47495cf26aa898802309d",
      "filename": "gas/testsuite/gas/i386/x86-64-pseudos.s",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e184e6110e2836bb0ec712e380dbcac402fe4056/gas/testsuite/gas/i386/x86-64-pseudos.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e184e6110e2836bb0ec712e380dbcac402fe4056/gas/testsuite/gas/i386/x86-64-pseudos.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-pseudos.s?ref=e184e6110e2836bb0ec712e380dbcac402fe4056",
      "patch": "@@ -307,6 +307,9 @@ _start:\n \t{rex} mov %al,%ah\n \t{rex} shl %cl, %eax\n \t{rex} movabs 1, %al\n+\t{rex} cmp %cl, %dl\n+\t{rex} mov $1, %bl\n+\t{rex} crc32 %cl, %eax\n \t{rex} movl %eax,%ebx\n \t{rex} movl %eax,%r14d\n \t{rex} movl %eax,(%r8)"
    },
    {
      "sha": "f6974c8672bcd133aca48ca9556027767ffa0106",
      "filename": "gas/testsuite/gas/i386/x86-64-reg-intel.d",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e184e6110e2836bb0ec712e380dbcac402fe4056/gas/testsuite/gas/i386/x86-64-reg-intel.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e184e6110e2836bb0ec712e380dbcac402fe4056/gas/testsuite/gas/i386/x86-64-reg-intel.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-reg-intel.d?ref=e184e6110e2836bb0ec712e380dbcac402fe4056",
      "patch": "@@ -26,10 +26,10 @@ Disassembly of section .text:\n [ \t]*[a-f0-9]+:\t0f 73 f6 02          \tpsllq  mm6,0x2\n [ \t]*[a-f0-9]+:\t66 41 0f 73 f2 02    \tpsllq  xmm10,0x2\n [ \t]*[a-f0-9]+:\t66 41 0f 73 fa 02    \tpslldq xmm10,0x2\n-[ \t]*[a-f0-9]+:\t40 80 c0 01[ \t]+add    al,0x1\n-[ \t]*[a-f0-9]+:\t40 80 c1 01[ \t]+add    cl,0x1\n-[ \t]*[a-f0-9]+:\t40 80 c2 01[ \t]+add    dl,0x1\n-[ \t]*[a-f0-9]+:\t40 80 c3 01[ \t]+add    bl,0x1\n+[ \t]*[a-f0-9]+:\t40 80 c0 01[ \t]+rex add al,0x1\n+[ \t]*[a-f0-9]+:\t40 80 c1 01[ \t]+rex add cl,0x1\n+[ \t]*[a-f0-9]+:\t40 80 c2 01[ \t]+rex add dl,0x1\n+[ \t]*[a-f0-9]+:\t40 80 c3 01[ \t]+rex add bl,0x1\n [ \t]*[a-f0-9]+:\t40 80 c4 01[ \t]+add    spl,0x1\n [ \t]*[a-f0-9]+:\t40 80 c5 01[ \t]+add    bpl,0x1\n [ \t]*[a-f0-9]+:\t40 80 c6 01[ \t]+add    sil,0x1"
    },
    {
      "sha": "ae9c0545a34241f61305e7657ce3e58d0edaafd5",
      "filename": "gas/testsuite/gas/i386/x86-64-reg.d",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e184e6110e2836bb0ec712e380dbcac402fe4056/gas/testsuite/gas/i386/x86-64-reg.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e184e6110e2836bb0ec712e380dbcac402fe4056/gas/testsuite/gas/i386/x86-64-reg.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-reg.d?ref=e184e6110e2836bb0ec712e380dbcac402fe4056",
      "patch": "@@ -25,10 +25,10 @@ Disassembly of section .text:\n [ \t]*[a-f0-9]+:\t0f 73 f6 02          \tpsllq  \\$0x2,%mm6\n [ \t]*[a-f0-9]+:\t66 41 0f 73 f2 02    \tpsllq  \\$0x2,%xmm10\n [ \t]*[a-f0-9]+:\t66 41 0f 73 fa 02    \tpslldq \\$0x2,%xmm10\n-[ \t]*[a-f0-9]+:\t40 80 c0 01[ \t]+add    \\$0x1,%al\n-[ \t]*[a-f0-9]+:\t40 80 c1 01[ \t]+add    \\$0x1,%cl\n-[ \t]*[a-f0-9]+:\t40 80 c2 01[ \t]+add    \\$0x1,%dl\n-[ \t]*[a-f0-9]+:\t40 80 c3 01[ \t]+add    \\$0x1,%bl\n+[ \t]*[a-f0-9]+:\t40 80 c0 01[ \t]+rex add \\$0x1,%al\n+[ \t]*[a-f0-9]+:\t40 80 c1 01[ \t]+rex add \\$0x1,%cl\n+[ \t]*[a-f0-9]+:\t40 80 c2 01[ \t]+rex add \\$0x1,%dl\n+[ \t]*[a-f0-9]+:\t40 80 c3 01[ \t]+rex add \\$0x1,%bl\n [ \t]*[a-f0-9]+:\t40 80 c4 01[ \t]+add    \\$0x1,%spl\n [ \t]*[a-f0-9]+:\t40 80 c5 01[ \t]+add    \\$0x1,%bpl\n [ \t]*[a-f0-9]+:\t40 80 c6 01[ \t]+add    \\$0x1,%sil"
    },
    {
      "sha": "4ac10ce186dd02f08a79c4c7435f33d5b3cbdf88",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e184e6110e2836bb0ec712e380dbcac402fe4056/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e184e6110e2836bb0ec712e380dbcac402fe4056/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=e184e6110e2836bb0ec712e380dbcac402fe4056",
      "patch": "@@ -1,3 +1,8 @@\n+2020-07-14  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (OP_E_register, OP_G, OP_REG, CRC32_Fixup):\n+\tConditionalize invocations of \"USED_REX (0)\".\n+\n 2020-07-14  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-dis.c (eBX, eCX, eDX, eSP, eBP, eSI, eDI, DL, BL, AH,"
    },
    {
      "sha": "4940c8a93d7d96150beb9cde8cd255707fc55807",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 9,
      "deletions": 5,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e184e6110e2836bb0ec712e380dbcac402fe4056/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e184e6110e2836bb0ec712e380dbcac402fe4056/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=e184e6110e2836bb0ec712e380dbcac402fe4056",
      "patch": "@@ -14398,7 +14398,8 @@ OP_E_register (int bytemode, int sizeflag)\n     {\n     case b_mode:\n     case b_swap_mode:\n-      USED_REX (0);\n+      if (reg & 4)\n+\tUSED_REX (0);\n       if (rex)\n \tnames = names8rex;\n       else\n@@ -15027,7 +15028,8 @@ OP_G (int bytemode, int sizeflag)\n   switch (bytemode)\n     {\n     case b_mode:\n-      USED_REX (0);\n+      if (modrm.reg & 4)\n+\tUSED_REX (0);\n       if (rex)\n \toappend (names8rex[modrm.reg + add]);\n       else\n@@ -15218,9 +15220,10 @@ OP_REG (int code, int sizeflag)\n     case sp_reg: case bp_reg: case si_reg: case di_reg:\n       s = names16[code - ax_reg + add];\n       break;\n-    case al_reg: case ah_reg: case cl_reg: case ch_reg:\n-    case dl_reg: case dh_reg: case bl_reg: case bh_reg:\n+    case ah_reg: case ch_reg: case dh_reg: case bh_reg:\n       USED_REX (0);\n+      /* Fall through.  */\n+    case al_reg: case cl_reg: case dl_reg: case bl_reg:\n       if (rex)\n \ts = names8rex[code - al_reg + add];\n       else\n@@ -16416,7 +16419,8 @@ CRC32_Fixup (int bytemode, int sizeflag)\n       add = (rex & REX_B) ? 8 : 0;\n       if (bytemode == b_mode)\n \t{\n-\t  USED_REX (0);\n+\t  if (modrm.rm & 4)\n+\t    USED_REX (0);\n \t  if (rex)\n \t    oappend (names8rex[modrm.rm + add]);\n \t  else"
    }
  ]
}