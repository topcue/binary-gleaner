{
  "sha": "b7c5246bbfad67b60a820db5e548e665171645ec",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjdjNTI0NmJiZmFkNjdiNjBhODIwZGI1ZTU0OGU2NjUxNzE2NDVlYw==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-04-19T02:43:06Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-04-19T03:03:08Z"
    },
    "message": "sim: sh: switch syscalls to common nltvals\n\nRather than hand duplicate the syscall table, switch to the common\nnltvals framework.  We have to tweak the constant names, but we get\neverything else for free.  I made sure the constants have the same\nvalues before & after too :).",
    "tree": {
      "sha": "3e3bf2509358ee5cdf3f8c89f6ded780c375ebe9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3e3bf2509358ee5cdf3f8c89f6ded780c375ebe9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b7c5246bbfad67b60a820db5e548e665171645ec",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b7c5246bbfad67b60a820db5e548e665171645ec",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b7c5246bbfad67b60a820db5e548e665171645ec",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b7c5246bbfad67b60a820db5e548e665171645ec/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b3d4da0f120444d98d76bb56646af682d64907dd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b3d4da0f120444d98d76bb56646af682d64907dd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b3d4da0f120444d98d76bb56646af682d64907dd"
    }
  ],
  "stats": {
    "total": 136,
    "additions": 77,
    "deletions": 59
  },
  "files": [
    {
      "sha": "20a425731f52186c96f94fadafce012281009fac",
      "filename": "sim/common/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c5246bbfad67b60a820db5e548e665171645ec/sim/common/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c5246bbfad67b60a820db5e548e665171645ec/sim/common/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/ChangeLog?ref=b7c5246bbfad67b60a820db5e548e665171645ec",
      "patch": "@@ -1,3 +1,8 @@\n+2021-04-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* gennltvals.py (TARGET_DIRS, TARGETS): Add sh.\n+\t* nltvals.def: Regenerate.\n+\n 2021-04-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* gennltvals.py (TARGETS): Add rx."
    },
    {
      "sha": "5831607a17c70c2f645ce981ab2eaac179c87ff2",
      "filename": "sim/common/gennltvals.py",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c5246bbfad67b60a820db5e548e665171645ec/sim/common/gennltvals.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c5246bbfad67b60a820db5e548e665171645ec/sim/common/gennltvals.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/gennltvals.py?ref=b7c5246bbfad67b60a820db5e548e665171645ec",
      "patch": "@@ -51,6 +51,7 @@\n     'i960': 'libgloss/i960',\n     'mcore': 'libgloss/mcore',\n     'riscv': 'libgloss/riscv/machine',\n+    'sh': 'newlib/libc/sys/sh/sys',\n     'v850': 'libgloss/v850/sys',\n }\n TARGETS = {\n@@ -71,6 +72,7 @@\n     'pru',\n     'riscv',\n     'rx',\n+    'sh',\n     'sparc',\n     'v850',\n }"
    },
    {
      "sha": "3b890af0639f2e371b90bae19d7e8f9721924257",
      "filename": "sim/common/nltvals.def",
      "status": "modified",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c5246bbfad67b60a820db5e548e665171645ec/sim/common/nltvals.def",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c5246bbfad67b60a820db5e548e665171645ec/sim/common/nltvals.def",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/nltvals.def?ref=b7c5246bbfad67b60a820db5e548e665171645ec",
      "patch": "@@ -688,6 +688,44 @@\n /* end rx sys target macros */\n #endif\n #endif\n+#ifdef NL_TARGET_sh\n+#ifdef sys_defs\n+/* from syscall.h */\n+/* begin sh sys target macros */\n+ { \"SYS_ARG\", 24 },\n+ { \"SYS_argc\", 172 },\n+ { \"SYS_argn\", 174 },\n+ { \"SYS_argnlen\", 173 },\n+ { \"SYS_chdir\", 12 },\n+ { \"SYS_chmod\", 15 },\n+ { \"SYS_chown\", 16 },\n+ { \"SYS_close\", 6 },\n+ { \"SYS_creat\", 8 },\n+ { \"SYS_execv\", 11 },\n+ { \"SYS_execve\", 59 },\n+ { \"SYS_exit\", 1 },\n+ { \"SYS_fork\", 2 },\n+ { \"SYS_fstat\", 22 },\n+ { \"SYS_ftruncate\", 130 },\n+ { \"SYS_getpid\", 20 },\n+ { \"SYS_isatty\", 21 },\n+ { \"SYS_link\", 9 },\n+ { \"SYS_lseek\", 19 },\n+ { \"SYS_mknod\", 14 },\n+ { \"SYS_open\", 5 },\n+ { \"SYS_pipe\", 42 },\n+ { \"SYS_read\", 3 },\n+ { \"SYS_stat\", 38 },\n+ { \"SYS_time\", 23 },\n+ { \"SYS_truncate\", 129 },\n+ { \"SYS_unlink\", 10 },\n+ { \"SYS_utime\", 201 },\n+ { \"SYS_wait\", 202 },\n+ { \"SYS_wait4\", 7 },\n+ { \"SYS_write\", 4 },\n+/* end sh sys target macros */\n+#endif\n+#endif\n #ifdef NL_TARGET_sparc\n #ifdef sys_defs\n /* from syscall.h */"
    },
    {
      "sha": "984ff5e63211d8ecf964ed61ab41057ca6104565",
      "filename": "sim/sh/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c5246bbfad67b60a820db5e548e665171645ec/sim/sh/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c5246bbfad67b60a820db5e548e665171645ec/sim/sh/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/ChangeLog?ref=b7c5246bbfad67b60a820db5e548e665171645ec",
      "patch": "@@ -1,3 +1,10 @@\n+2021-04-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (NL_TARGET): Define.\n+\t* interp.c: Change syscall.h include to targ-vals.h.\n+\t(trap): Add TARGET_ prefix to all SYS_ constants.\n+\t* syscall.h: Removed.\n+\n 2021-04-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "e92b7843dab85aaed6ae8b796ca4ddaf885a7001",
      "filename": "sim/sh/Makefile.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c5246bbfad67b60a820db5e548e665171645ec/sim/sh/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c5246bbfad67b60a820db5e548e665171645ec/sim/sh/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/Makefile.in?ref=b7c5246bbfad67b60a820db5e548e665171645ec",
      "patch": "@@ -15,6 +15,9 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n+# This selects the newlib/libgloss syscall definitions.\n+NL_TARGET = -DNL_TARGET_sh\n+\n ## COMMON_PRE_CONFIG_FRAG\n \n SIM_OBJS = \\"
    },
    {
      "sha": "2fafcfd6628560650d5256686530d530b19822bf",
      "filename": "sim/sh/interp.c",
      "status": "modified",
      "additions": 22,
      "deletions": 23,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b7c5246bbfad67b60a820db5e548e665171645ec/sim/sh/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b7c5246bbfad67b60a820db5e548e665171645ec/sim/sh/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/interp.c?ref=b7c5246bbfad67b60a820db5e548e665171645ec",
      "patch": "@@ -60,8 +60,7 @@\n #include \"sim-base.h\"\n #include \"sim-options.h\"\n \n-/* This file is local - if newlib changes, then so should this.  */\n-#include \"syscall.h\"\n+#include \"targ-vals.h\"\n \n #include <math.h>\n \n@@ -887,40 +886,40 @@ trap (SIM_DESC sd, int i, int *regs, unsigned char *insn_ptr,\n \t  {\n \n #if !defined(__GO32__) && !defined(_WIN32)\n-\t  case SYS_fork:\n+\t  case TARGET_SYS_fork:\n \t    regs[0] = fork ();\n \t    break;\n /* This would work only if endianness matched between host and target.\n    Besides, it's quite dangerous.  */\n #if 0\n-\t  case SYS_execve:\n+\t  case TARGET_SYS_execve:\n \t    regs[0] = execve (ptr (regs[5]), (char **) ptr (regs[6]), \n \t\t\t      (char **) ptr (regs[7]));\n \t    break;\n-\t  case SYS_execv:\n+\t  case TARGET_SYS_execv:\n \t    regs[0] = execve (ptr (regs[5]), (char **) ptr (regs[6]), 0);\n \t    break;\n #endif\n-\t  case SYS_pipe:\n+\t  case TARGET_SYS_pipe:\n \t    {\n \t      regs[0] = (BUSERROR (regs[5], maskl)\n \t\t\t ? -EINVAL\n \t\t\t : pipe ((int *) ptr (regs[5])));\n \t    }\n \t    break;\n \n-\t  case SYS_wait:\n+\t  case TARGET_SYS_wait:\n \t    regs[0] = wait ((int *) ptr (regs[5]));\n \t    break;\n #endif /* !defined(__GO32__) && !defined(_WIN32) */\n \n-\t  case SYS_read:\n+\t  case TARGET_SYS_read:\n \t    strnswap (regs[6], regs[7]);\n \t    regs[0]\n \t      = callback->read (callback, regs[5], ptr (regs[6]), regs[7]);\n \t    strnswap (regs[6], regs[7]);\n \t    break;\n-\t  case SYS_write:\n+\t  case TARGET_SYS_write:\n \t    strnswap (regs[6], regs[7]);\n \t    if (regs[5] == 1)\n \t      regs[0] = (int) callback->write_stdout (callback, \n@@ -930,27 +929,27 @@ trap (SIM_DESC sd, int i, int *regs, unsigned char *insn_ptr,\n \t\t\t\t\t       ptr (regs[6]), regs[7]);\n \t    strnswap (regs[6], regs[7]);\n \t    break;\n-\t  case SYS_lseek:\n+\t  case TARGET_SYS_lseek:\n \t    regs[0] = callback->lseek (callback,regs[5], regs[6], regs[7]);\n \t    break;\n-\t  case SYS_close:\n+\t  case TARGET_SYS_close:\n \t    regs[0] = callback->close (callback,regs[5]);\n \t    break;\n-\t  case SYS_open:\n+\t  case TARGET_SYS_open:\n \t    {\n \t      int len = strswaplen (regs[5]);\n \t      strnswap (regs[5], len);\n \t      regs[0] = callback->open (callback, ptr (regs[5]), regs[6]);\n \t      strnswap (regs[5], len);\n \t      break;\n \t    }\n-\t  case SYS_exit:\n+\t  case TARGET_SYS_exit:\n \t    /* EXIT - caller can look in r5 to work out the reason */\n \t    raise_exception (SIGQUIT);\n \t    regs[0] = regs[5];\n \t    break;\n \n-\t  case SYS_stat:\t/* added at hmsi */\n+\t  case TARGET_SYS_stat:\t/* added at hmsi */\n \t    /* stat system call */\n \t    {\n \t      struct stat host_stat;\n@@ -999,7 +998,7 @@ trap (SIM_DESC sd, int i, int *regs, unsigned char *insn_ptr,\n \t    break;\n \n #ifndef _WIN32\n-\t  case SYS_chown:\n+\t  case TARGET_SYS_chown:\n \t    {\n \t      int len = strswaplen (regs[5]);\n \n@@ -1009,7 +1008,7 @@ trap (SIM_DESC sd, int i, int *regs, unsigned char *insn_ptr,\n \t      break;\n \t    }\n #endif /* _WIN32 */\n-\t  case SYS_chmod:\n+\t  case TARGET_SYS_chmod:\n \t    {\n \t      int len = strswaplen (regs[5]);\n \n@@ -1018,7 +1017,7 @@ trap (SIM_DESC sd, int i, int *regs, unsigned char *insn_ptr,\n \t      strnswap (regs[5], len);\n \t      break;\n \t    }\n-\t  case SYS_utime:\n+\t  case TARGET_SYS_utime:\n \t    {\n \t      /* Cast the second argument to void *, to avoid type mismatch\n \t\t if a prototype is present.  */\n@@ -1029,16 +1028,16 @@ trap (SIM_DESC sd, int i, int *regs, unsigned char *insn_ptr,\n \t      strnswap (regs[5], len);\n \t      break;\n \t    }\n-\t  case SYS_argc:\n+\t  case TARGET_SYS_argc:\n \t    regs[0] = countargv (prog_argv);\n \t    break;\n-\t  case SYS_argnlen:\n+\t  case TARGET_SYS_argnlen:\n \t    if (regs[5] < countargv (prog_argv))\n \t      regs[0] = strlen (prog_argv[regs[5]]);\n \t    else\n \t      regs[0] = -1;\n \t    break;\n-\t  case SYS_argn:\n+\t  case TARGET_SYS_argn:\n \t    if (regs[5] < countargv (prog_argv))\n \t      {\n \t\t/* Include the termination byte.  */\n@@ -1048,13 +1047,13 @@ trap (SIM_DESC sd, int i, int *regs, unsigned char *insn_ptr,\n \t    else\n \t      regs[0] = -1;\n \t    break;\n-\t  case SYS_time:\n+\t  case TARGET_SYS_time:\n \t    regs[0] = get_now ();\n \t    break;\n-\t  case SYS_ftruncate:\n+\t  case TARGET_SYS_ftruncate:\n \t    regs[0] = callback->ftruncate (callback, regs[5], regs[6]);\n \t    break;\n-\t  case SYS_truncate:\n+\t  case TARGET_SYS_truncate:\n \t    {\n \t      int len = strswaplen (regs[5]);\n \t      strnswap (regs[5], len);"
    },
    {
      "sha": "aebce2ce26d92976a0b9ee316ff761ad2db1c869",
      "filename": "sim/sh/syscall.h",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b3d4da0f120444d98d76bb56646af682d64907dd/sim/sh/syscall.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b3d4da0f120444d98d76bb56646af682d64907dd/sim/sh/syscall.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/syscall.h?ref=b3d4da0f120444d98d76bb56646af682d64907dd",
      "patch": "@@ -1,36 +0,0 @@\n-\n-/* !!! DANGER !!!\n-   This was copied from newlib. */\n-\n-\n-#define\tSYS_exit\t1\n-#define\tSYS_fork\t2\n-#define\tSYS_read\t3\n-#define\tSYS_write\t4\n-#define\tSYS_open\t5\n-#define\tSYS_close\t6\n-#define\tSYS_wait4\t7\n-#define\tSYS_creat\t8\n-#define\tSYS_link\t9\n-#define\tSYS_unlink\t10\n-#define\tSYS_execv\t11\n-#define\tSYS_chdir\t12\n-#define\tSYS_mknod\t14\n-#define\tSYS_chmod\t15\n-#define\tSYS_chown\t16\n-#define\tSYS_lseek\t19\n-#define\tSYS_getpid\t20\n-#define SYS_isatty      21\n-#define SYS_fstat       22\n-#define SYS_time \t23\n-#define SYS_ARG\t\t24\n-#define\tSYS_stat\t38\n-#define\tSYS_pipe\t42\n-#define\tSYS_execve\t59\n-#define\tSYS_truncate\t129\n-#define\tSYS_ftruncate\t130\n-#define\tSYS_argc\t172\n-#define\tSYS_argnlen\t173\n-#define\tSYS_argn\t174\n-#define SYS_utime       201 /* not really a system call */\n-#define SYS_wait        202 /* nor is this */"
    }
  ]
}