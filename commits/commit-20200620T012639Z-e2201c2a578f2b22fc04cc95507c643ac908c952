{
  "sha": "e2201c2a578f2b22fc04cc95507c643ac908c952",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTIyMDFjMmE1NzhmMmIyMmZjMDRjYzk1NTA3YzY0M2FjOTA4Yzk1Mg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-06-20T01:11:40Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-06-20T01:26:39Z"
    },
    "message": "SH gas configure and ld tests\n\nAll current SH gas targets use BFD.  sh-coff was incorrectly reported\nas unsupported.\n\ngas/\n\t* configure.tgt: Set bfd_gas for all SH targets.\nld/\n\t* testsuite/ld-sh/sh.exp: Don't run relax tests for non-ELF.\n\tFail when ld_assemble fails.  Use elseif to reduce indentation.",
    "tree": {
      "sha": "b5e2d2109b22030df32a9d40f96bbff7c28d57ba",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b5e2d2109b22030df32a9d40f96bbff7c28d57ba"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e2201c2a578f2b22fc04cc95507c643ac908c952",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e2201c2a578f2b22fc04cc95507c643ac908c952",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e2201c2a578f2b22fc04cc95507c643ac908c952",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e2201c2a578f2b22fc04cc95507c643ac908c952/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "17fc27167f678285d2f64040837b8cc41b6a664a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/17fc27167f678285d2f64040837b8cc41b6a664a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/17fc27167f678285d2f64040837b8cc41b6a664a"
    }
  ],
  "stats": {
    "total": 146,
    "additions": 78,
    "deletions": 68
  },
  "files": [
    {
      "sha": "56c2f63526937444c2c8758fa9ea2ea04c5e1f55",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2201c2a578f2b22fc04cc95507c643ac908c952/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2201c2a578f2b22fc04cc95507c643ac908c952/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=e2201c2a578f2b22fc04cc95507c643ac908c952",
      "patch": "@@ -1,3 +1,7 @@\n+2020-06-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure.tgt: Set bfd_gas for all SH targets.\n+\n 2020-06-18  Jan Beulich  <jbeulich@suse.com>\n \n \t* testsuite/gas/i386/arch-13.s: Add alternative VMGEXIT case."
    },
    {
      "sha": "7c2d178ab5990ceafc7ac038dc468fcd76be117d",
      "filename": "gas/configure.tgt",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2201c2a578f2b22fc04cc95507c643ac908c952/gas/configure.tgt",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2201c2a578f2b22fc04cc95507c643ac908c952/gas/configure.tgt",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/configure.tgt?ref=e2201c2a578f2b22fc04cc95507c643ac908c952",
      "patch": "@@ -386,7 +386,7 @@ case ${generic_target} in\n   sh-*-uclinux* | sh[12]-*-uclinux*)\tfmt=elf em=uclinux ;;\n   sh-*-coff*)\t\t\t\tfmt=coff ;;\n   sh-*-nto*)\t\t\t\tfmt=elf ;;\n-  sh-*-pe*)\t\t\t\tfmt=coff em=pe bfd_gas=yes endian=little ;;\n+  sh-*-pe*)\t\t\t\tfmt=coff em=pe endian=little ;;\n   sh-*-kaos*)\t\t\t\tfmt=elf ;;\n   shle*-*-kaos*)\t\t\tfmt=elf ;;\n \n@@ -437,7 +437,8 @@ case ${generic_target} in\n esac\n \n case ${cpu_type} in\n-  aarch64 | alpha | arm | csky | i386 | ia64 | microblaze | mips | ns32k | or1k | or1knd | pdp11 | ppc | riscv | sparc | z80 | z8k)\n+  aarch64 | alpha | arm | csky | i386 | ia64 | microblaze | mips | ns32k | \\\n+  or1k | or1knd | pdp11 | ppc | riscv | sh | sparc | z80 | z8k)\n     bfd_gas=yes\n     ;;\n esac"
    },
    {
      "sha": "c47fbca01c80d7bf0407ac9562ca82312dab7a9d",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2201c2a578f2b22fc04cc95507c643ac908c952/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2201c2a578f2b22fc04cc95507c643ac908c952/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=e2201c2a578f2b22fc04cc95507c643ac908c952",
      "patch": "@@ -1,3 +1,8 @@\n+2020-06-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/ld-sh/sh.exp: Don't run relax tests for non-ELF.\n+\tFail when ld_assemble fails.  Use elseif to reduce indentation.\n+\n 2020-06-19  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-elf/dynamic-1.rd: Accept st_other notations."
    },
    {
      "sha": "0096b5b706d0573f4f795bf7f73f83d0de405d06",
      "filename": "ld/testsuite/ld-sh/sh.exp",
      "status": "modified",
      "additions": 66,
      "deletions": 66,
      "changes": 132,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2201c2a578f2b22fc04cc95507c643ac908c952/ld/testsuite/ld-sh/sh.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2201c2a578f2b22fc04cc95507c643ac908c952/ld/testsuite/ld-sh/sh.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-sh/sh.exp?ref=e2201c2a578f2b22fc04cc95507c643ac908c952",
      "patch": "@@ -30,98 +30,98 @@ if ![istarget sh*-*-*] {\n \n set testsimple \"SH simple relaxing\"\n \n-if ![ld_assemble $as \"-relax $srcdir/$subdir/sh1.s\" tmpdir/sh1.o] {\n+if { ![is_elf_format] } {\n     unresolved $testsimple\n-} else { if ![ld_link $ld tmpdir/sh1 \"-relax tmpdir/sh1.o\"] {\n+} elseif { ![ld_assemble $as \"-relax $srcdir/$subdir/sh1.s\" tmpdir/sh1.o] } {\n+    fail $testsimple\n+} elseif { ![ld_link $ld tmpdir/sh1 \"-relax tmpdir/sh1.o\"] } {\n+    fail $testsimple\n+} elseif { ![ld_nm $nm \"\" tmpdir/sh1] } {\n+    fail $testsimple\n+} elseif { ![info exists nm_output(bar)]\n+\t   || ![info exists nm_output(foo)]} {\n+    send_log \"bad output from nm\\n\"\n+    verbose \"bad output from nm\"\n+    fail $testsimple\n+} elseif {$nm_output(bar) != $nm_output(foo) + 0xc} {\n+    send_log \"foo == $nm_output(foo)\\n\"\n+    verbose \"foo == $nm_output(foo)\"\n+    send_log \"bar == $nm_output(bar)\\n\"\n+    verbose \"bar == $nm_output(bar)\"\n     fail $testsimple\n } else {\n-    if ![ld_nm $nm \"\" tmpdir/sh1] {\n-\tunresolved $testsimple\n-    } else {\n-\tif {![info exists nm_output(bar)] \\\n-\t     || ![info exists nm_output(foo)]} {\n-\t    send_log \"bad output from nm\\n\"\n-\t    verbose \"bad output from nm\"\n-\t    fail $testsimple\n-\t} else {\n-\t    if {$nm_output(bar) != $nm_output(foo) + 0xc} {\n-\t\tsend_log \"foo == $nm_output(foo)\\n\"\n-\t\tverbose \"foo == $nm_output(foo)\"\n-\t\tsend_log \"bar == $nm_output(bar)\\n\"\n-\t\tverbose \"bar == $nm_output(bar)\"\n-\t\tfail $testsimple\n-\t    } else {\n-\t\tpass $testsimple\n-\t    }\n-\t}\n-    }\n-} }\n+    pass $testsimple\n+}\n \n set testsrec \"SH relaxing to S-records\"\n \n-if { [istarget sh*-linux-*] || [istarget sh-*-vxworks] } {\n-    # On these \"non-embedded\" targets, the default ELF and srec start\n-    # addresses will be SIZEOF_HEADERS bytes apart.  Ensure consistency\n-    # by feeding the ELF start address to the srec link line.\n-    catch \"exec $objdump -x tmpdir/sh1 | grep start\\\\ address | sed s/start\\\\ address//\" entry_addr\n-    set srec_relax_arg \"-Ttext $entry_addr -relax --oformat srec tmpdir/sh1.o\"\n-} else {\n-    set srec_relax_arg \"-relax --oformat srec tmpdir/sh1.o\"\n-}\n-if ![ld_link $ld tmpdir/sh1.s1 $srec_relax_arg ] {\n-    fail $testsrec\n+if { ![remote_file host exists tmpdir/sh1] } {\n+    unresolved $testsrec\n } else {\n-    # The file name is embedded in the S-records, so create both\n-    # files with the same name.\n-    catch \"exec rm -f tmpdir/sh1.s2\" exec_output\n-    send_log \"mv tmpdir/sh1.s1 tmpdir/sh1.s2\\n\"\n-    verbose \"mv tmpdir/sh1.s1 tmpdir/sh1.s2\"\n-    catch \"exec mv tmpdir/sh1.s1 tmpdir/sh1.s2\" exec_output\n-    if ![string match \"\" $exec_output] {\n-\tsend_log \"$exec_output\\n\"\n-\tverbose \"$exec_output\"\n-\tunresolved $testsrec\n+    if { [istarget sh*-linux-*] || [istarget sh-*-vxworks] } {\n+\t# On these \"non-embedded\" targets, the default ELF and srec start\n+\t# addresses will be SIZEOF_HEADERS bytes apart.  Ensure consistency\n+\t# by feeding the ELF start address to the srec link line.\n+\tcatch \"exec $objdump -x tmpdir/sh1 | grep start\\\\ address | sed s/start\\\\ address//\" entry_addr\n+\tset srec_relax_arg \"-Ttext $entry_addr -relax --oformat srec tmpdir/sh1.o\"\n+    } else {\n+\tset srec_relax_arg \"-relax --oformat srec tmpdir/sh1.o\"\n+    }\n+    if ![ld_link $ld tmpdir/sh1.s1 $srec_relax_arg ] {\n+\tfail $testsrec\n     } else {\n-\tsend_log \"$objcopy -O srec tmpdir/sh1 tmpdir/sh1.s1\\n\"\n-\tverbose \"$objcopy -O srec tmpdir/sh1 tmpdir/sh1.s1\"\n-\tcatch \"exec $objcopy -O srec tmpdir/sh1 tmpdir/sh1.s1\" exec_output\n+\t# The file name is embedded in the S-records, so create both\n+\t# files with the same name.\n+\tcatch \"exec rm -f tmpdir/sh1.s2\" exec_output\n+\tsend_log \"mv tmpdir/sh1.s1 tmpdir/sh1.s2\\n\"\n+\tverbose \"mv tmpdir/sh1.s1 tmpdir/sh1.s2\"\n+\tcatch \"exec mv tmpdir/sh1.s1 tmpdir/sh1.s2\" exec_output\n \tif ![string match \"\" $exec_output] {\n \t    send_log \"$exec_output\\n\"\n \t    verbose \"$exec_output\"\n \t    unresolved $testsrec\n \t} else {\n-\t    send_log \"cmp tmpdir/sh1.s1 tmpdir/sh1.s2\\n\"\n-\t    verbose \"cmp tmpdir/sh1.s1 tmpdir/sh1.s2\"\n-\t    catch \"exec cmp tmpdir/sh1.s1 tmpdir/sh1.s2\" exec_output\n-\t    set exec_output [prune_warnings $exec_output]\n+\t    send_log \"$objcopy -O srec tmpdir/sh1 tmpdir/sh1.s1\\n\"\n+\t    verbose \"$objcopy -O srec tmpdir/sh1 tmpdir/sh1.s1\"\n+\t    catch \"exec $objcopy -O srec tmpdir/sh1 tmpdir/sh1.s1\" exec_output\n \t    if ![string match \"\" $exec_output] {\n \t\tsend_log \"$exec_output\\n\"\n \t\tverbose \"$exec_output\"\n-\t\tfail $testsrec\n+\t\tunresolved $testsrec\n \t    } else {\n-\t\tpass $testsrec\n+\t\tsend_log \"cmp tmpdir/sh1.s1 tmpdir/sh1.s2\\n\"\n+\t\tverbose \"cmp tmpdir/sh1.s1 tmpdir/sh1.s2\"\n+\t\tcatch \"exec cmp tmpdir/sh1.s1 tmpdir/sh1.s2\" exec_output\n+\t\tset exec_output [prune_warnings $exec_output]\n+\t\tif ![string match \"\" $exec_output] {\n+\t\t    send_log \"$exec_output\\n\"\n+\t\t    verbose \"$exec_output\"\n+\t\t    fail $testsrec\n+\t\t} else {\n+\t\t    pass $testsrec\n+\t\t}\n \t    }\n \t}\n     }\n }\n \n set testadjsw8 \"SH switch8 adjustment after relax\"\n-if ![ld_assemble $as \"-relax $srcdir/$subdir/adjsw8.s\" tmpdir/adjsw8.o] {\n+if { ![is_elf_format] } {\n     unresolved $testadjsw8\n+} elseif { ![ld_assemble $as \"-relax $srcdir/$subdir/adjsw8.s\" tmpdir/adjsw8.o] } {\n+    fail $testadjsw8\n+} elseif { ![ld_link $ld tmpdir/adjsw8 \"-relax tmpdir/adjsw8.o\"] } {\n+    fail $testadjsw8\n } else {\n-    if ![ld_link $ld tmpdir/adjsw8 \"-relax tmpdir/adjsw8.o\"] {\n-\tfail $testadjsw8\n+    send_log \"exec $objdump -s tmpdir/adjsw8\\n\"\n+    verbose \"exec $objdump -s tmpdir/adjsw8\"\n+    catch \"exec $objdump -s tmpdir/adjsw8\" exec_output\n+    if [string match \"*04080c00*\" $exec_output] {\n+\tpass $testadjsw8\n     } else {\n-\tsend_log \"exec $objdump -s tmpdir/adjsw8\\n\"\n-\tverbose \"exec $objdump -s tmpdir/adjsw8\"\n-\tcatch \"exec $objdump -s tmpdir/adjsw8\" exec_output\n-\tif [string match \"*04080c00*\" $exec_output] {\n-\t    pass $testadjsw8\n-\t} else {\n-\t    send_log \"bad switch table\\n\"\n-\t    verbose \"bad switch table\"\n-\t    fail $testadjsw8\n-\t}\n+\tsend_log \"bad switch table\\n\"\n+\tverbose \"bad switch table\"\n+\tfail $testadjsw8\n     }\n }\n "
    }
  ]
}