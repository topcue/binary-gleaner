{
  "sha": "1d61b032265e69317f42e8019e072506f11890c5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWQ2MWIwMzIyNjVlNjkzMTdmNDJlODAxOWUwNzI1MDZmMTE4OTBjNQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-11T06:15:14Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-11T10:44:19Z"
    },
    "message": "Remove more shifts for sign/zero extension\n\ncpu/\n\t* epiphany.cpu (f-sdisp11): Don't sign extend with shifts.\n\t* lm32.cpu (f-branch, f-vall): Likewise.\n\t* m32.cpu (f-lab-8-16): Likewise.\nopcodes/\n\t* arc-dis.c (BITS): Don't truncate high bits with shifts.\n\t* nios2-dis.c (nios2_print_insn_arg): Don't sign extend with shifts.\n\t* tic54x-dis.c (print_instruction): Likewise.\n\t* tilegx-opc.c (parse_insn_tilegx): Likewise.\n\t* tilepro-opc.c (parse_insn_tilepro): Likewise.\n\t* visium-dis.c (disassem_class0): Likewise.\n\t* pdp11-dis.c (sign_extend): Likewise.\n\t(SIGN_BITS): Delete.\n\t* epiphany-ibld.c: Regenerate.\n\t* lm32-ibld.c: Regenerate.\n\t* m32c-ibld.c: Regenerate.",
    "tree": {
      "sha": "226c023afd93046735bb928dc67d6490f8466e97",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/226c023afd93046735bb928dc67d6490f8466e97"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1d61b032265e69317f42e8019e072506f11890c5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1d61b032265e69317f42e8019e072506f11890c5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1d61b032265e69317f42e8019e072506f11890c5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1d61b032265e69317f42e8019e072506f11890c5/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "13c9c48599ebc8ad2f3a1fb9f672740219cd3841",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13c9c48599ebc8ad2f3a1fb9f672740219cd3841",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/13c9c48599ebc8ad2f3a1fb9f672740219cd3841"
    }
  ],
  "stats": {
    "total": 91,
    "additions": 58,
    "deletions": 33
  },
  "files": [
    {
      "sha": "c5a44ab45f0f63b579d9aecbc24203c50d4eb046",
      "filename": "cpu/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d61b032265e69317f42e8019e072506f11890c5/cpu/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d61b032265e69317f42e8019e072506f11890c5/cpu/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/cpu/ChangeLog?ref=1d61b032265e69317f42e8019e072506f11890c5",
      "patch": "@@ -1,3 +1,9 @@\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* epiphany.cpu (f-sdisp11): Don't sign extend with shifts.\n+\t* lm32.cpu (f-branch, f-vall): Likewise.\n+\t* m32.cpu (f-lab-8-16): Likewise.\n+\n 2019-12-11  Alan Modra  <amodra@gmail.com>\n \n \t* epiphany.cpu (f-simm8, f-simm24): Use multiply rather than"
    },
    {
      "sha": "02bce0779d5db97b06dd54b5cd53cc88fdd41a54",
      "filename": "cpu/epiphany.cpu",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d61b032265e69317f42e8019e072506f11890c5/cpu/epiphany.cpu",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d61b032265e69317f42e8019e072506f11890c5/cpu/epiphany.cpu",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/cpu/epiphany.cpu?ref=1d61b032265e69317f42e8019e072506f11890c5",
      "patch": "@@ -228,10 +228,11 @@\n \t\t(set (ifield f-disp3)  (and SI (ifield f-sdisp11) 7)))\n       (sequence ()\t\t\t;decode\n \t\t(set (ifield f-sdisp11)\n-\t\t     (sra SI (sll SI (or SI (sll (ifield f-disp8) 3)\n-\t\t\t\t\t (ifield f-disp3))\n-\t\t\t\t  21)\n-\t\t\t  21)))\n+\t\t     (sub SI (xor (and (or (sll (ifield f-disp8) 3)\n+\t\t\t\t\t   (ifield f-disp3))\n+\t\t\t\t       #x7ff)\n+\t\t\t\t  #x400)\n+\t\t\t  #x400)))\n       )\n \n (dnmf f-imm16 \"Short immediate for move/add/sub\" () UINT (f-imm8 f-imm-27-8)"
    },
    {
      "sha": "ecd8160816efce2ba20896089763c86cdc5a5f5b",
      "filename": "cpu/lm32.cpu",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d61b032265e69317f42e8019e072506f11890c5/cpu/lm32.cpu",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d61b032265e69317f42e8019e072506f11890c5/cpu/lm32.cpu",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/cpu/lm32.cpu?ref=1d61b032265e69317f42e8019e072506f11890c5",
      "patch": "@@ -128,11 +128,15 @@\n \n (df f-branch \"branch offset field\" (PCREL-ADDR) 15 16 INT\n         ((value pc) (sra SI (sub SI value pc) 2))\n-        ((value pc) (add SI pc (sra SI (sll SI value 16) 14)))\n+\t((value pc) (add SI pc (sub (xor (sll (and value #xffff) 2)\n+\t\t\t\t\t #x20000)\n+\t\t\t\t    #x20000)))\n )\n (df f-call \"call offset field\" (PCREL-ADDR) 25 26 INT \n         ((value pc) (sra SI (sub SI value pc) 2))\n-        ((value pc) (add SI pc (sra SI (sll SI value 6) 4)))\n+\t((value pc) (add SI pc (sub (xor (sll (and value #x3ffffff) 2)\n+\t\t\t\t\t #x8000000)\n+\t\t\t\t    #x8000000)))\n )\n \n \f"
    },
    {
      "sha": "5a38f1bd5264a574ae95c8569dc3d02fd185466b",
      "filename": "cpu/m32c.cpu",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d61b032265e69317f42e8019e072506f11890c5/cpu/m32c.cpu",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d61b032265e69317f42e8019e072506f11890c5/cpu/m32c.cpu",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/cpu/m32c.cpu?ref=1d61b032265e69317f42e8019e072506f11890c5",
      "patch": "@@ -956,9 +956,12 @@\n )\n (df  f-lab-8-16 \"16 bit pc relative signed offset\" (PCREL-ADDR SIGN-OPT all-isas) 8 16 UINT\n      ((value pc) (or SI (sll (and (sub value (add pc 1)) #xff) 8)\n-\t\t     (srl (and (sub value (add pc 1)) #xffff) 8)))\n-     ((value pc) (add SI (or (srl (and value #xffff) 8)\n-\t\t\t     (sra (sll (and value #xff) 24) 16)) (add pc 1)))\n+\t\t     (srl (and (sub value (add pc 1)) #xff00) 8)))\n+     ((value pc) (add SI (sub (xor (or (srl (and value #xff00) 8)\n+\t\t\t\t       (sll (and value #xff) 8))\n+\t\t\t\t    #x8000)\n+\t\t\t       #x8000)\n+\t\t      (add pc 1)))\n  )\n (df  f-lab-8-24 \"24 bit absolute\" (all-isas ABS-ADDR) 8 24 UINT\n      ((value pc) (or SI"
    },
    {
      "sha": "2a44855e4f7cc7ee74d854ac16d889cbe231e84a",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d61b032265e69317f42e8019e072506f11890c5/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d61b032265e69317f42e8019e072506f11890c5/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=1d61b032265e69317f42e8019e072506f11890c5",
      "patch": "@@ -1,3 +1,17 @@\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* arc-dis.c (BITS): Don't truncate high bits with shifts.\n+\t* nios2-dis.c (nios2_print_insn_arg): Don't sign extend with shifts.\n+\t* tic54x-dis.c (print_instruction): Likewise.\n+\t* tilegx-opc.c (parse_insn_tilegx): Likewise.\n+\t* tilepro-opc.c (parse_insn_tilepro): Likewise.\n+\t* visium-dis.c (disassem_class0): Likewise.\n+\t* pdp11-dis.c (sign_extend): Likewise.\n+\t(SIGN_BITS): Delete.\n+\t* epiphany-ibld.c: Regenerate.\n+\t* lm32-ibld.c: Regenerate.\n+\t* m32c-ibld.c: Regenerate.\n+\n 2019-12-11  Alan Modra  <amodra@gmail.com>\n \n \t* ns32k-dis.c (sign_extend): Correct last patch."
    },
    {
      "sha": "a47e81f0a28be49522bb9e2e38bb43ec0b7c0b93",
      "filename": "opcodes/arc-dis.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d61b032265e69317f42e8019e072506f11890c5/opcodes/arc-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d61b032265e69317f42e8019e072506f11890c5/opcodes/arc-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/arc-dis.c?ref=1d61b032265e69317f42e8019e072506f11890c5",
      "patch": "@@ -137,8 +137,7 @@ static bfd_boolean print_hex = FALSE;\n   (info->endian == BFD_ENDIAN_LITTLE ? bfd_getm32 (bfd_getl32 (buf))\t\\\n    : bfd_getb32 (buf))\n \n-#define BITS(word,s,e)  (((word) << (sizeof (word) * 8 - 1 - e)) >>\t\\\n-\t\t\t (s + (sizeof (word) * 8 - 1 - e)))\n+#define BITS(word,s,e)  (((word) >> (s)) & ((1ull << ((e) - (s)) << 1) - 1))\n #define OPCODE_32BIT_INSN(word)\t(BITS ((word), 27, 31))\n \n /* Functions implementation.  */"
    },
    {
      "sha": "aa567d8541dfb217dac3e8623202f718a1c34964",
      "filename": "opcodes/epiphany-ibld.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d61b032265e69317f42e8019e072506f11890c5/opcodes/epiphany-ibld.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d61b032265e69317f42e8019e072506f11890c5/opcodes/epiphany-ibld.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/epiphany-ibld.c?ref=1d61b032265e69317f42e8019e072506f11890c5",
      "patch": "@@ -1092,7 +1092,7 @@ epiphany_cgen_extract_operand (CGEN_CPU_DESC cd,\n         length = extract_normal (cd, ex_info, insn_value, 0, 0, 23, 8, 32, total_length, pc, & fields->f_disp8);\n         if (length <= 0) break;\n {\n-  FLD (f_sdisp11) = ((SI) (((((((FLD (f_disp8)) << (3))) | (FLD (f_disp3)))) << (21))) >> (21));\n+  FLD (f_sdisp11) = ((((((((((FLD (f_disp8)) << (3))) | (FLD (f_disp3)))) & (2047))) ^ (1024))) - (1024));\n }\n       }\n       break;"
    },
    {
      "sha": "a79398d46a5f6d714d2e5883c361711d8bfd0881",
      "filename": "opcodes/lm32-ibld.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d61b032265e69317f42e8019e072506f11890c5/opcodes/lm32-ibld.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d61b032265e69317f42e8019e072506f11890c5/opcodes/lm32-ibld.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/lm32-ibld.c?ref=1d61b032265e69317f42e8019e072506f11890c5",
      "patch": "@@ -680,15 +680,15 @@ lm32_cgen_extract_operand (CGEN_CPU_DESC cd,\n       {\n         long value;\n         length = extract_normal (cd, ex_info, insn_value, 0|(1<<CGEN_IFLD_SIGNED)|(1<<CGEN_IFLD_PCREL_ADDR), 0, 15, 16, 32, total_length, pc, & value);\n-        value = ((pc) + (((SI) (((value) << (16))) >> (14))));\n+        value = ((pc) + (((((((((value) & (65535))) << (2))) ^ (131072))) - (131072))));\n         fields->f_branch = value;\n       }\n       break;\n     case LM32_OPERAND_CALL :\n       {\n         long value;\n         length = extract_normal (cd, ex_info, insn_value, 0|(1<<CGEN_IFLD_SIGNED)|(1<<CGEN_IFLD_PCREL_ADDR), 0, 25, 26, 32, total_length, pc, & value);\n-        value = ((pc) + (((SI) (((value) << (6))) >> (4))));\n+        value = ((pc) + (((((((((value) & (67108863))) << (2))) ^ (134217728))) - (134217728))));\n         fields->f_call = value;\n       }\n       break;"
    },
    {
      "sha": "8473e17d2090e489b6cec5bcceb3f1e05165d4ba",
      "filename": "opcodes/m32c-ibld.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d61b032265e69317f42e8019e072506f11890c5/opcodes/m32c-ibld.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d61b032265e69317f42e8019e072506f11890c5/opcodes/m32c-ibld.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/m32c-ibld.c?ref=1d61b032265e69317f42e8019e072506f11890c5",
      "patch": "@@ -1489,7 +1489,7 @@ m32c_cgen_insert_operand (CGEN_CPU_DESC cd,\n     case M32C_OPERAND_LAB_8_16 :\n       {\n         long value = fields->f_lab_8_16;\n-        value = ((((((((value) - (((pc) + (1))))) & (255))) << (8))) | (((USI) (((((value) - (((pc) + (1))))) & (65535))) >> (8))));\n+        value = ((((((((value) - (((pc) + (1))))) & (255))) << (8))) | (((USI) (((((value) - (((pc) + (1))))) & (65280))) >> (8))));\n         errmsg = insert_normal (cd, value, 0|(1<<CGEN_IFLD_SIGN_OPT)|(1<<CGEN_IFLD_PCREL_ADDR), 0, 8, 16, 32, total_length, buffer);\n       }\n       break;\n@@ -2654,7 +2654,7 @@ m32c_cgen_extract_operand (CGEN_CPU_DESC cd,\n       {\n         long value;\n         length = extract_normal (cd, ex_info, insn_value, 0|(1<<CGEN_IFLD_SIGN_OPT)|(1<<CGEN_IFLD_PCREL_ADDR), 0, 8, 16, 32, total_length, pc, & value);\n-        value = ((((((USI) (((value) & (65535))) >> (8))) | (((SI) (((((value) & (255))) << (24))) >> (16))))) + (((pc) + (1))));\n+        value = ((((((((((USI) (((value) & (65280))) >> (8))) | (((((value) & (255))) << (8))))) ^ (32768))) - (32768))) + (((pc) + (1))));\n         fields->f_lab_8_16 = value;\n       }\n       break;"
    },
    {
      "sha": "731860c40986881ac64be6a43333cbddd195ea50",
      "filename": "opcodes/nios2-dis.c",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d61b032265e69317f42e8019e072506f11890c5/opcodes/nios2-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d61b032265e69317f42e8019e072506f11890c5/opcodes/nios2-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/nios2-dis.c?ref=1d61b032265e69317f42e8019e072506f11890c5",
      "patch": "@@ -554,10 +554,10 @@ nios2_print_insn_arg (const char *argptr,\n       switch (op->format)\n \t{\n \tcase iw_i_type:\n-\t  s = (int32_t) (GET_IW_I_IMM16 (opcode) << 16) >> 16;\n+\t  s = ((GET_IW_I_IMM16 (opcode) & 0xffff) ^ 0x8000) - 0x8000;\n \t  break;\n \tcase iw_F2I16_type:\n-\t  s = (int32_t) (GET_IW_F2I16_IMM16 (opcode) << 16) >> 16;\n+\t  s = ((GET_IW_F2I16_IMM16 (opcode) & 0xffff) ^ 0x8000) - 0x8000;\n \t  break;\n \tdefault:\n \t  bad_opcode (op);\n@@ -570,10 +570,10 @@ nios2_print_insn_arg (const char *argptr,\n       switch (op->format)\n \t{\n \tcase iw_F2X4I12_type:\n-\t  s = (int32_t) (GET_IW_F2X4I12_IMM12 (opcode) << 20) >> 20;\n+\t  s = ((GET_IW_F2X4I12_IMM12 (opcode) & 0xfff) ^ 0x800) - 0x800;\n \t  break;\n \tcase iw_F1X4I12_type:\n-\t  s = (int32_t) (GET_IW_F1X4I12_IMM12 (opcode) << 20) >> 20;\n+\t  s = ((GET_IW_F1X4I12_IMM12 (opcode) & 0xfff) ^ 0x800) - 0x800;\n \t  break;\n \tdefault:\n \t  bad_opcode (op);\n@@ -673,10 +673,10 @@ nios2_print_insn_arg (const char *argptr,\n       switch (op->format)\n \t{\n \tcase iw_i_type:\n-\t  o = (int32_t) (GET_IW_I_IMM16 (opcode) << 16) >> 16;\n+\t  o = ((GET_IW_I_IMM16 (opcode) & 0xffff) ^ 0x8000) - 0x8000;\n \t  break;\n \tcase iw_F2I16_type:\n-\t  o = (int32_t) (GET_IW_F2I16_IMM16 (opcode) << 16) >> 16;\n+\t  o = ((GET_IW_F2I16_IMM16 (opcode) & 0xffff) ^ 0x8000) - 0x8000;\n \t  break;\n \tdefault:\n \t  bad_opcode (op);\n@@ -690,7 +690,7 @@ nios2_print_insn_arg (const char *argptr,\n       switch (op->format)\n \t{\n \tcase iw_I10_type:\n-\t  o = (int32_t) (GET_IW_I10_IMM10 (opcode) << 22) >> 21;\n+\t  o = (((GET_IW_I10_IMM10 (opcode) & 0x3ff) ^ 0x400) - 0x400) << 1;\n \t  break;\n \tdefault:\n \t  bad_opcode (op);\n@@ -704,7 +704,7 @@ nios2_print_insn_arg (const char *argptr,\n       switch (op->format)\n \t{\n \tcase iw_T1I7_type:\n-\t  o = (int32_t) (GET_IW_T1I7_IMM7 (opcode) << 25) >> 24;\n+\t  o = (((GET_IW_T1I7_IMM7 (opcode) & 0x7f) ^ 0x40) - 0x40) << 1;\n \t  break;\n \tdefault:\n \t  bad_opcode (op);"
    },
    {
      "sha": "a19fbc0f3d9d6ccd8b67a6ffc55cd48dd72e55c5",
      "filename": "opcodes/pdp11-dis.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d61b032265e69317f42e8019e072506f11890c5/opcodes/pdp11-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d61b032265e69317f42e8019e072506f11890c5/opcodes/pdp11-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/pdp11-dis.c?ref=1d61b032265e69317f42e8019e072506f11890c5",
      "patch": "@@ -31,8 +31,7 @@\n #define F\tinfo->stream\n \n /* Sign-extend a 16-bit number in an int.  */\n-#define SIGN_BITS\t(8 * sizeof (int) - 16)\n-#define sign_extend(x) (((x) << SIGN_BITS) >> SIGN_BITS)\n+#define sign_extend(x) ((((x) & 0xffff) ^ 0x8000) - 0x8000)\n \n static int\n read_word (bfd_vma memaddr, int *word, disassemble_info *info)"
    },
    {
      "sha": "d8b80a3bf7dbb45492e955ba14ba917650c5906f",
      "filename": "opcodes/tic54x-dis.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d61b032265e69317f42e8019e072506f11890c5/opcodes/tic54x-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d61b032265e69317f42e8019e072506f11890c5/opcodes/tic54x-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/tic54x-dis.c?ref=1d61b032265e69317f42e8019e072506f11890c5",
      "patch": "@@ -394,8 +394,7 @@ print_instruction (disassemble_info *info,\n             break;\n           }\n         case OP_k5:\n-          sprintf (operand[i], \"#%d\",\n-                   (int) (((signed char) opcode & 0x1F) << 3) >> 3);\n+          sprintf (operand[i], \"#%d\", ((opcode & 0x1F) ^ 0x10) - 0x10);\n           info->fprintf_func (info->stream, \"%s%s\", comma, operand[i]);\n           break;\n         case OP_k8u:"
    },
    {
      "sha": "cc9ce861b9a506cececa8c4f72fad563b443e47b",
      "filename": "opcodes/tilegx-opc.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d61b032265e69317f42e8019e072506f11890c5/opcodes/tilegx-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d61b032265e69317f42e8019e072506f11890c5/opcodes/tilegx-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/tilegx-opc.c?ref=1d61b032265e69317f42e8019e072506f11890c5",
      "patch": "@@ -8102,8 +8102,8 @@ parse_insn_tilegx (tilegx_bundle_bits bits,\n \t  if (op->is_signed)\n \t    {\n \t      /* Sign-extend the operand.  */\n-\t      int shift = (int)((sizeof(int) * 8) - op->num_bits);\n-\t      raw_opval = (raw_opval << shift) >> shift;\n+\t      unsigned int sign = 1u << (op->num_bits - 1);\n+\t      raw_opval = ((raw_opval & (sign + sign - 1)) ^ sign) - sign;\n \t    }\n \n \t  /* Adjust PC-relative scaled branch offsets.  */"
    },
    {
      "sha": "c71da3df8a11c04796cbbe0d45426614884cf0e6",
      "filename": "opcodes/tilepro-opc.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d61b032265e69317f42e8019e072506f11890c5/opcodes/tilepro-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d61b032265e69317f42e8019e072506f11890c5/opcodes/tilepro-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/tilepro-opc.c?ref=1d61b032265e69317f42e8019e072506f11890c5",
      "patch": "@@ -10220,8 +10220,8 @@ parse_insn_tilepro (tilepro_bundle_bits bits,\n \t  if (op->is_signed)\n \t    {\n \t      /* Sign-extend the operand.  */\n-\t      int shift = (int)((sizeof(int) * 8) - op->num_bits);\n-\t      opval = (opval << shift) >> shift;\n+\t      unsigned int sign = 1u << (op->num_bits - 1);\n+\t      opval = ((opval & (sign + sign - 1)) ^ sign) - sign;\n \t    }\n \n \t  /* Adjust PC-relative scaled branch offsets.  */"
    },
    {
      "sha": "41943ade7264b73b2c3eae33baf93ae231c3042b",
      "filename": "opcodes/visium-dis.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d61b032265e69317f42e8019e072506f11890c5/opcodes/visium-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d61b032265e69317f42e8019e072506f11890c5/opcodes/visium-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/visium-dis.c?ref=1d61b032265e69317f42e8019e072506f11890c5",
      "patch": "@@ -94,7 +94,7 @@ disassem_class0 (disassemble_info *info, unsigned int ins)\n       /* BRR instruction.  */\n       {\n \tunsigned cbf = (ins >> 27) & 0x000f;\n-\tint displacement = ((int) (ins << 16)) >> 16;\n+\tint displacement = ((ins & 0xffff) ^ 0x8000) - 0x8000;\n \n \tif (ins == 0)\n \t  (*info->fprintf_func) (info->stream, \"nop\");"
    }
  ]
}