{
  "sha": "fd86991bc5f1d0ff256b396fbb41f0125ed00c17",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmQ4Njk5MWJjNWYxZDBmZjI1NmIzOTZmYmI0MWYwMTI1ZWQwMGMxNw==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2019-08-02T23:41:05Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2019-10-03T16:04:56Z"
    },
    "message": "objdump: get CTF parent importing right\n\nThe linker emits CTF into a single section named .ctf, which is a CTF\narchive where the default member (itself named \".ctf\", or simply NULL)\nis the parent of all other members.  Teach objdump to look for this by\ndefault, rather than only trying to do it if a specific CTF parent\nsection was specified.  (If no parent name is specified, we get the .ctf\nmember from the same section as everything else, which matches what the\nlinker generates.)\n\nbinutils/\n\t* objdump.c (dump_ctf): Use the default CTF archive member as the\n\tparent even when no parent section is specified.\n\t(dump_ctf_archive_member): Only import from the parent\n\tif this is not the default \".ctf\" member.",
    "tree": {
      "sha": "1bf926421bddb8b020d1eecaf6ca4dbbdfbac295",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1bf926421bddb8b020d1eecaf6ca4dbbdfbac295"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fd86991bc5f1d0ff256b396fbb41f0125ed00c17",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fd86991bc5f1d0ff256b396fbb41f0125ed00c17",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fd86991bc5f1d0ff256b396fbb41f0125ed00c17",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fd86991bc5f1d0ff256b396fbb41f0125ed00c17/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "87279e3cef5b2c54f4a01962cf9dcea38664a336",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/87279e3cef5b2c54f4a01962cf9dcea38664a336",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/87279e3cef5b2c54f4a01962cf9dcea38664a336"
    }
  ],
  "stats": {
    "total": 47,
    "additions": 33,
    "deletions": 14
  },
  "files": [
    {
      "sha": "50eeb5cf4d0d41e4a4b65d51cd65985bfb34dddc",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd86991bc5f1d0ff256b396fbb41f0125ed00c17/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd86991bc5f1d0ff256b396fbb41f0125ed00c17/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=fd86991bc5f1d0ff256b396fbb41f0125ed00c17",
      "patch": "@@ -1,3 +1,10 @@\n+2019-08-03  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* objdump.c (dump_ctf): Use the default CTF archive member as the\n+\tparent even when no parent section is specified.\n+\t(dump_ctf_archive_member): Only import from the parent\n+\tif this is not the default \".ctf\" member.\n+\n 2019-09-23  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* Makefile.am (LIBCTF): Mention the .la file."
    },
    {
      "sha": "bb9946a80081142c04858c15d026baec9e89e864",
      "filename": "binutils/doc/ctf.options.texi",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd86991bc5f1d0ff256b396fbb41f0125ed00c17/binutils/doc/ctf.options.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd86991bc5f1d0ff256b396fbb41f0125ed00c17/binutils/doc/ctf.options.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/doc/ctf.options.texi?ref=fd86991bc5f1d0ff256b396fbb41f0125ed00c17",
      "patch": "@@ -10,5 +10,6 @@ contain many subsections, all of which are displayed in order.\n \n @item --ctf-parent=@var{section}\n \n-Specify the name of another section from which the CTF file can inherit\n-types.\n+Specify the name of another section from which the CTF dictionary can inherit\n+types.  (If none is specified, we assume the CTF dictionary inherits types\n+from the default-named member of the archive contained within this section.)"
    },
    {
      "sha": "ae50d871082b86bbcd5a69e2451141a058012a1a",
      "filename": "binutils/objdump.c",
      "status": "modified",
      "additions": 23,
      "deletions": 12,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd86991bc5f1d0ff256b396fbb41f0125ed00c17/binutils/objdump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd86991bc5f1d0ff256b396fbb41f0125ed00c17/binutils/objdump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objdump.c?ref=fd86991bc5f1d0ff256b396fbb41f0125ed00c17",
      "patch": "@@ -3290,11 +3290,18 @@ dump_ctf_archive_member (ctf_file_t *ctf, const char *name, void *arg)\n \n   /* Only print out the name of non-default-named archive members.\n      The name .ctf appears everywhere, even for things that aren't\n-     really archives, so printing it out is liable to be confusing.  */\n+     really archives, so printing it out is liable to be confusing.\n+\n+     The parent, if there is one, is the default-owned archive member:\n+     avoid importing it into itself.  (This does no harm, but looks\n+     confusing.)  */\n+\n   if (strcmp (name, \".ctf\") != 0)\n-    printf (_(\"\\nCTF archive member: %s:\\n\"), sanitize_string (name));\n+    {\n+      printf (_(\"\\nCTF archive member: %s:\\n\"), sanitize_string (name));\n+      ctf_import (ctf, parent);\n+    }\n \n-  ctf_import (ctf, parent);\n   for (i = 0, thing = things; *thing[0]; thing++, i++)\n     {\n       ctf_dump_state_t *s = NULL;\n@@ -3323,7 +3330,7 @@ dump_ctf_archive_member (ctf_file_t *ctf, const char *name, void *arg)\n static void\n dump_ctf (bfd *abfd, const char *sect_name, const char *parent_name)\n {\n-  ctf_archive_t *ctfa, *parenta = NULL;\n+  ctf_archive_t *ctfa, *parenta = NULL, *lookparent;\n   bfd_byte *ctfdata, *parentdata = NULL;\n   bfd_size_type ctfsize, parentsize;\n   ctf_sect_t ctfsect;\n@@ -3356,14 +3363,18 @@ dump_ctf (bfd *abfd, const char *sect_name, const char *parent_name)\n \t  bfd_fatal (bfd_get_filename (abfd));\n \t}\n \n-      /* Assume that the applicable parent archive member is the default one.\n-\t (This is what all known implementations are expected to do, if they\n-\t put CTFs and their parents in archives together.)  */\n-      if ((parent = ctf_arc_open_by_name (parenta, NULL, &err)) == NULL)\n-\t{\n-\t  non_fatal (_(\"CTF open failure: %s\\n\"), ctf_errmsg (err));\n-\t  bfd_fatal (bfd_get_filename (abfd));\n-\t}\n+      lookparent = parenta;\n+    }\n+  else\n+    lookparent = ctfa;\n+\n+  /* Assume that the applicable parent archive member is the default one.\n+     (This is what all known implementations are expected to do, if they\n+     put CTFs and their parents in archives together.)  */\n+  if ((parent = ctf_arc_open_by_name (lookparent, NULL, &err)) == NULL)\n+    {\n+      non_fatal (_(\"CTF open failure: %s\\n\"), ctf_errmsg (err));\n+      bfd_fatal (bfd_get_filename (abfd));\n     }\n \n   printf (_(\"Contents of CTF section %s:\\n\"), sanitize_string (sect_name));"
    }
  ]
}