{
  "sha": "6d89e2962a8cc245b8364e1968396873bd0bb9b1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmQ4OWUyOTYyYThjYzI0NWI4MzY0ZTE5NjgzOTY4NzNiZDBiYjliMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:21Z"
    },
    "message": "Implement unary increment and decrement operations\n\nThis implements the unary increment and decrement operations, \"++\" and\n\"--\".\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* expop.h (unop_incr_operation): New template.\n\t(preinc_operation, predec_operation, postinc_operation)\n\t(postdec_operation): New typedefs.\n\t* eval.c (eval_op_preinc, eval_op_predec, eval_op_postinc)\n\t(eval_op_postdec): No longer static.",
    "tree": {
      "sha": "887a2ef7f58f1b8cf0872dfa24ae6f455c22fa70",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/887a2ef7f58f1b8cf0872dfa24ae6f455c22fa70"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6d89e2962a8cc245b8364e1968396873bd0bb9b1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d89e2962a8cc245b8364e1968396873bd0bb9b1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6d89e2962a8cc245b8364e1968396873bd0bb9b1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d89e2962a8cc245b8364e1968396873bd0bb9b1/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9307d17b7a97bd49baf0d877785c43cf203b7cee",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9307d17b7a97bd49baf0d877785c43cf203b7cee",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9307d17b7a97bd49baf0d877785c43cf203b7cee"
    }
  ],
  "stats": {
    "total": 66,
    "additions": 62,
    "deletions": 4
  },
  "files": [
    {
      "sha": "582489891b48bc9480fd3e28fe9fe76d3f2ce558",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d89e2962a8cc245b8364e1968396873bd0bb9b1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d89e2962a8cc245b8364e1968396873bd0bb9b1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6d89e2962a8cc245b8364e1968396873bd0bb9b1",
      "patch": "@@ -1,3 +1,11 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* expop.h (unop_incr_operation): New template.\n+\t(preinc_operation, predec_operation, postinc_operation)\n+\t(postdec_operation): New typedefs.\n+\t* eval.c (eval_op_preinc, eval_op_predec, eval_op_postinc)\n+\t(eval_op_postdec): No longer static.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* expop.h (unary_ftype): New typedef."
    },
    {
      "sha": "4f12c7b666a725793f7267207348c557c827ebb9",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d89e2962a8cc245b8364e1968396873bd0bb9b1/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d89e2962a8cc245b8364e1968396873bd0bb9b1/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=6d89e2962a8cc245b8364e1968396873bd0bb9b1",
      "patch": "@@ -1912,7 +1912,7 @@ eval_op_memval (struct type *expect_type, struct expression *exp,\n \n /* A helper function for UNOP_PREINCREMENT.  */\n \n-static struct value *\n+struct value *\n eval_op_preinc (struct type *expect_type, struct expression *exp,\n \t\tenum noside noside, enum exp_opcode op,\n \t\tstruct value *arg1)\n@@ -1943,7 +1943,7 @@ eval_op_preinc (struct type *expect_type, struct expression *exp,\n \n /* A helper function for UNOP_PREDECREMENT.  */\n \n-static struct value *\n+struct value *\n eval_op_predec (struct type *expect_type, struct expression *exp,\n \t\tenum noside noside, enum exp_opcode op,\n \t\tstruct value *arg1)\n@@ -1974,7 +1974,7 @@ eval_op_predec (struct type *expect_type, struct expression *exp,\n \n /* A helper function for UNOP_POSTINCREMENT.  */\n \n-static struct value *\n+struct value *\n eval_op_postinc (struct type *expect_type, struct expression *exp,\n \t\t enum noside noside, enum exp_opcode op,\n \t\t struct value *arg1)\n@@ -2008,7 +2008,7 @@ eval_op_postinc (struct type *expect_type, struct expression *exp,\n \n /* A helper function for UNOP_POSTDECREMENT.  */\n \n-static struct value *\n+struct value *\n eval_op_postdec (struct type *expect_type, struct expression *exp,\n \t\t enum noside noside, enum exp_opcode op,\n \t\t struct value *arg1)"
    },
    {
      "sha": "ec73109f8a341f205afbc3a5cc02603fb2370e00",
      "filename": "gdb/expop.h",
      "status": "modified",
      "additions": 50,
      "deletions": 0,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d89e2962a8cc245b8364e1968396873bd0bb9b1/gdb/expop.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d89e2962a8cc245b8364e1968396873bd0bb9b1/gdb/expop.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/expop.h?ref=6d89e2962a8cc245b8364e1968396873bd0bb9b1",
      "patch": "@@ -162,6 +162,26 @@ extern struct value *eval_op_lognot (struct type *expect_type,\n \t\t\t\t     enum noside noside,\n \t\t\t\t     enum exp_opcode op,\n \t\t\t\t     struct value *arg1);\n+extern struct value *eval_op_preinc (struct type *expect_type,\n+\t\t\t\t     struct expression *exp,\n+\t\t\t\t     enum noside noside,\n+\t\t\t\t     enum exp_opcode op,\n+\t\t\t\t     struct value *arg1);\n+extern struct value *eval_op_predec (struct type *expect_type,\n+\t\t\t\t     struct expression *exp,\n+\t\t\t\t     enum noside noside,\n+\t\t\t\t     enum exp_opcode op,\n+\t\t\t\t     struct value *arg1);\n+extern struct value *eval_op_postinc (struct type *expect_type,\n+\t\t\t\t      struct expression *exp,\n+\t\t\t\t      enum noside noside,\n+\t\t\t\t      enum exp_opcode op,\n+\t\t\t\t      struct value *arg1);\n+extern struct value *eval_op_postdec (struct type *expect_type,\n+\t\t\t\t      struct expression *exp,\n+\t\t\t\t      enum noside noside,\n+\t\t\t\t      enum exp_opcode op,\n+\t\t\t\t      struct value *arg1);\n \n namespace expr\n {\n@@ -1316,6 +1336,36 @@ using unary_complement_operation\n using unary_logical_not_operation\n      = usual_ax_unop_operation<UNOP_LOGICAL_NOT, eval_op_lognot>;\n \n+/* Handle pre- and post- increment and -decrement.  */\n+template<enum exp_opcode OP, unary_ftype FUNC>\n+class unop_incr_operation\n+  : public tuple_holding_operation<operation_up>\n+{\n+public:\n+\n+  using tuple_holding_operation::tuple_holding_operation;\n+\n+  value *evaluate (struct type *expect_type,\n+\t\t   struct expression *exp,\n+\t\t   enum noside noside) override\n+  {\n+    value *val = std::get<0> (m_storage)->evaluate (expect_type, exp, noside);\n+    return FUNC (expect_type, exp, noside, OP, val);\n+  }\n+\n+  enum exp_opcode opcode () const override\n+  { return OP; }\n+};\n+\n+using preinc_operation\n+     = unop_incr_operation<UNOP_PREINCREMENT, eval_op_preinc>;\n+using predec_operation\n+     = unop_incr_operation<UNOP_PREDECREMENT, eval_op_predec>;\n+using postinc_operation\n+     = unop_incr_operation<UNOP_POSTINCREMENT, eval_op_postinc>;\n+using postdec_operation\n+     = unop_incr_operation<UNOP_POSTDECREMENT, eval_op_postdec>;\n+\n } /* namespace expr */\n \n #endif /* EXPOP_H */"
    }
  ]
}