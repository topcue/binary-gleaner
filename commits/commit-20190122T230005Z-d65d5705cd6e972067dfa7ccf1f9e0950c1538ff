{
  "sha": "d65d5705cd6e972067dfa7ccf1f9e0950c1538ff",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDY1ZDU3MDVjZDZlOTcyMDY3ZGZhN2NjZjFmOWUwOTUwYzE1MzhmZg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-22T08:58:59Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-22T23:00:05Z"
    },
    "message": "Remove the EXTERN define from stabsread.h\n\nThis removes the EXTERN define from stabsread.h.  This is the only\nspot that still uses this approach, and it interfered with sorting the\nincludes in stabsread.c.\n\nTested by rebuilding.\n\ngdb/ChangeLog\n2019-01-22  Tom Tromey  <tom@tromey.com>\n\n\t* stabsread.c (EXTERN): Do not define.\n\t(symnum, next_symbol_text_func, processing_gcc_compilation)\n\t(within_function, global_sym_chain, global_stabs)\n\t(previous_stab_code, this_object_header_files)\n\t(n_this_object_header_files)\n\t(n_allocated_this_object_header_files): Define.\n\t* stabsread.h (EXTERN): Never define.  Use \"extern\".",
    "tree": {
      "sha": "39d5d625e951b37740f152b5012c44caccbecb71",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/39d5d625e951b37740f152b5012c44caccbecb71"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d65d5705cd6e972067dfa7ccf1f9e0950c1538ff",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d65d5705cd6e972067dfa7ccf1f9e0950c1538ff",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d65d5705cd6e972067dfa7ccf1f9e0950c1538ff",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d65d5705cd6e972067dfa7ccf1f9e0950c1538ff/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b1afaa356621e3236ff27fec09e63fb99e9e990e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1afaa356621e3236ff27fec09e63fb99e9e990e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b1afaa356621e3236ff27fec09e63fb99e9e990e"
    }
  ],
  "stats": {
    "total": 61,
    "additions": 34,
    "deletions": 27
  },
  "files": [
    {
      "sha": "c28d2dadc4781c1910a962ea4bcb968cf19f7f9e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d65d5705cd6e972067dfa7ccf1f9e0950c1538ff/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d65d5705cd6e972067dfa7ccf1f9e0950c1538ff/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d65d5705cd6e972067dfa7ccf1f9e0950c1538ff",
      "patch": "@@ -1,3 +1,13 @@\n+2019-01-22  Tom Tromey  <tom@tromey.com>\n+\n+\t* stabsread.c (EXTERN): Do not define.\n+\t(symnum, next_symbol_text_func, processing_gcc_compilation)\n+\t(within_function, global_sym_chain, global_stabs)\n+\t(previous_stab_code, this_object_header_files)\n+\t(n_this_object_header_files)\n+\t(n_allocated_this_object_header_files): Define.\n+\t* stabsread.h (EXTERN): Never define.  Use \"extern\".\n+\n 2019-01-22  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* event-top.c (handle_line_of_input): use unique_xmalloc_ptr for"
    },
    {
      "sha": "fc3db8f19b4b553246c175405053e693d9df8c33",
      "filename": "gdb/stabsread.c",
      "status": "modified",
      "additions": 13,
      "deletions": 5,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d65d5705cd6e972067dfa7ccf1f9e0950c1538ff/gdb/stabsread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d65d5705cd6e972067dfa7ccf1f9e0950c1538ff/gdb/stabsread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stabsread.c?ref=d65d5705cd6e972067dfa7ccf1f9e0950c1538ff",
      "patch": "@@ -47,11 +47,19 @@\n #include \"bcache.h\"\n #include <ctype.h>\n \n-/* Ask stabsread.h to define the vars it normally declares `extern'.  */\n-#define\tEXTERN\n-/**/\n-#include \"stabsread.h\"\t\t/* Our own declarations */\n-#undef\tEXTERN\n+#include \"stabsread.h\"\n+\n+/* See stabsread.h for these globals.  */\n+unsigned int symnum;\n+const char *(*next_symbol_text_func) (struct objfile *);\n+unsigned char processing_gcc_compilation;\n+int within_function;\n+struct symbol *global_sym_chain[HASHSIZE];\n+struct pending_stabs *global_stabs;\n+int previous_stab_code;\n+int *this_object_header_files;\n+int n_this_object_header_files;\n+int n_allocated_this_object_header_files;\n \n struct nextfield\n {"
    },
    {
      "sha": "b872aadb878aa3c7392efbeb8d7cdc220799a9a6",
      "filename": "gdb/stabsread.h",
      "status": "modified",
      "additions": 11,
      "deletions": 22,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d65d5705cd6e972067dfa7ccf1f9e0950c1538ff/gdb/stabsread.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d65d5705cd6e972067dfa7ccf1f9e0950c1538ff/gdb/stabsread.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stabsread.h?ref=d65d5705cd6e972067dfa7ccf1f9e0950c1538ff",
      "patch": "@@ -20,16 +20,7 @@ struct objfile;\n enum language;\n \n /* Definitions, prototypes, etc for stabs debugging format support\n-   functions.\n-\n-   Variables declared in this file can be defined by #define-ing\n-   the name EXTERN to null.  It is used to declare variables that\n-   are normally extern, but which get defined in a single module\n-   using this technique.  */\n-\n-#ifndef EXTERN\n-#define\tEXTERN extern\n-#endif\n+   functions.  */\n \n #define HASHSIZE 127\t\t/* Size of things hashed via\n \t\t\t\t   hashname().  */\n@@ -40,23 +31,23 @@ extern int hashname (const char *name);\n \n /* Count symbols as they are processed, for error messages.  */\n \n-EXTERN unsigned int symnum;\n+extern unsigned int symnum;\n \n #define next_symbol_text(objfile) (*next_symbol_text_func)(objfile)\n \n /* Function to invoke get the next symbol.  Return the symbol name.  */\n \n-EXTERN const char *(*next_symbol_text_func) (struct objfile *);\n+extern const char *(*next_symbol_text_func) (struct objfile *);\n \n /* Global variable which, when set, indicates that we are processing a\n    .o file compiled with gcc */\n \n-EXTERN unsigned char processing_gcc_compilation;\n+extern unsigned char processing_gcc_compilation;\n \n /* Nonzero if within a function (so symbols should be local, if\n    nothing says specifically).  */\n \n-EXTERN int within_function;\n+extern int within_function;\n \n /* Hash table of global symbols whose values are not known yet.\n    They are chained thru the SYMBOL_VALUE_CHAIN, since we don't\n@@ -66,7 +57,7 @@ EXTERN int within_function;\n    it refers to a FORTRAN common block rather than the usual meaning, and\n    the such LOC_BLOCK symbols use their fields in nonstandard ways.  */\n \n-EXTERN struct symbol *global_sym_chain[HASHSIZE];\n+extern struct symbol *global_sym_chain[HASHSIZE];\n \n extern void common_block_start (const char *, struct objfile *);\n extern void common_block_end (struct objfile *);\n@@ -80,12 +71,12 @@ struct pending_stabs\n     char *stab[1];\n   };\n \n-EXTERN struct pending_stabs *global_stabs;\n+extern struct pending_stabs *global_stabs;\n \n /* The type code that process_one_symbol saw on its previous invocation.\n    Used to detect pairs of N_SO symbols.  */\n \n-EXTERN int previous_stab_code;\n+extern int previous_stab_code;\n \f\n /* Support for Sun changes to dbx symbol format.  */\n \n@@ -150,11 +141,11 @@ struct header_file\n    and not to any header file.  FILENUM != 1 is interpreted by looking it up\n    in the following table, which contains indices in header_files.  */\n \n-EXTERN int *this_object_header_files;\n+extern int *this_object_header_files;\n \n-EXTERN int n_this_object_header_files;\n+extern int n_this_object_header_files;\n \n-EXTERN int n_allocated_this_object_header_files;\n+extern int n_allocated_this_object_header_files;\n \n extern void cleanup_undefined_stabs_types (struct objfile *);\n \n@@ -228,5 +219,3 @@ extern void init_header_files (void);\n    to.  Get these symbols from the minimal symbol table.  */\n \n extern void scan_file_globals (struct objfile *objfile);\n-\n-#undef EXTERN"
    }
  ]
}