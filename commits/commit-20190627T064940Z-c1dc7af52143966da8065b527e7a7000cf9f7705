{
  "sha": "c1dc7af52143966da8065b527e7a7000cf9f7705",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzFkYzdhZjUyMTQzOTY2ZGE4MDY1YjUyN2U3YTcwMDBjZjlmNzcwNQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@novell.com",
      "date": "2019-06-27T06:49:40Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2019-06-27T06:49:40Z"
    },
    "message": "x86: allow VEX et al encodings in 16-bit (protected) mode\n\nThese encodings aren't valid in real and VM86 modes, but they are very\nwell usable in 16-bit protected mode.\n\nA few adjustments in the disassembler tables are needed where Ev or Gv\nwere wrongly used. Additionally an adjustment is needed to avoid\nprinting \"addr32\" when that's already recognizable by the use of %eiz.\n\nFurthermore the Iq operand template was wrong for XOP:0Ah encoding\ninsns: They're having a uniform 32-bit immediate. Drop Iq and introduce\nId instead.\n\nClone a few existing test cases to exercise assembler and disassembler.",
    "tree": {
      "sha": "ce51bfa565271617a9381fe6ab37639feb8818fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ce51bfa565271617a9381fe6ab37639feb8818fd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c1dc7af52143966da8065b527e7a7000cf9f7705",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c1dc7af52143966da8065b527e7a7000cf9f7705",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c1dc7af52143966da8065b527e7a7000cf9f7705",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c1dc7af52143966da8065b527e7a7000cf9f7705/comments",
  "author": null,
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "65bd27298d31c6733b68d0cd6b7a4fc26e0598be",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/65bd27298d31c6733b68d0cd6b7a4fc26e0598be",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/65bd27298d31c6733b68d0cd6b7a4fc26e0598be"
    }
  ],
  "stats": {
    "total": 16872,
    "additions": 16835,
    "deletions": 37
  },
  "files": [
    {
      "sha": "e08db78cc3279cf6157e325bab4806badacb99d9",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=c1dc7af52143966da8065b527e7a7000cf9f7705",
      "patch": "@@ -1,3 +1,21 @@\n+2019-06-27  Jan Beulich  <jbeulich@suse.com>\n+\n+\tconfig/tc-i386.c (md_assemble): Check for protected mode\n+\tincapable processor before encoding VEX and alike insns.\n+\t* testsuite/gas/i386/inval-16.s: For 80186 architecture.\n+\t* testsuite/gas/i386/inval-16.l: Adjust expectations.\n+\t* testsuite/gas/i386/avx-16bit.d,\n+\ttestsuite/gas/i386/avx-16bit.s,\n+\ttestsuite/gas/i386/avx512f-16bit.d,\n+\ttestsuite/gas/i386/avx512f-16bit.s,\n+\ttestsuite/gas/i386/bmi-16bit.d,\n+\ttestsuite/gas/i386/bmi-16bit.s,\n+\ttestsuite/gas/i386/bmi2-16bit.d,\n+\ttestsuite/gas/i386/bmi2-16bit.s,\n+\ttestsuite/gas/i386/lwp-16bit.d,\n+\ttestsuite/gas/i386/lwp-16bit.s: New\n+\ttestsuite/gas/i386/i386.exp: Run new tests.\n+\n 2019-06-26  Jim Wilson  <jimw@sifive.com>\n \n \t* testsuite/gas/xstormy16/allinsn.sh: Change first line to"
    },
    {
      "sha": "4e5518816a4bc06632c243619786c223dc73f1e8",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=c1dc7af52143966da8065b527e7a7000cf9f7705",
      "patch": "@@ -4388,9 +4388,9 @@ md_assemble (char *line)\n \n   if (is_any_vex_encoding (&i.tm))\n     {\n-      if (flag_code == CODE_16BIT)\n+      if (!cpu_arch_flags.bitfield.cpui286)\n \t{\n-\t  as_bad (_(\"instruction `%s' isn't supported in 16-bit mode.\"),\n+\t  as_bad (_(\"instruction `%s' isn't supported outside of protected mode.\"),\n \t\t  i.tm.name);\n \t  return;\n \t}"
    },
    {
      "sha": "1af604227c2272ff597c438a2fa71fdf847c3f93",
      "filename": "gas/testsuite/gas/i386/avx-16bit.d",
      "status": "added",
      "additions": 3274,
      "deletions": 0,
      "changes": 3274,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/avx-16bit.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/avx-16bit.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/avx-16bit.d?ref=c1dc7af52143966da8065b527e7a7000cf9f7705"
    },
    {
      "sha": "1817555c8d722287f5adf995820bd7fea9c2fbf8",
      "filename": "gas/testsuite/gas/i386/avx-16bit.s",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/avx-16bit.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/avx-16bit.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/avx-16bit.s?ref=c1dc7af52143966da8065b527e7a7000cf9f7705",
      "patch": "@@ -0,0 +1,7 @@\n+# Check AVX instructions in 16-bit mode\n+\n+\t.code16\n+\t.include \"avx.s\"\n+\t.att_syntax prefix\n+\n+\tvaddps (%bx),%ymm6,%ymm2"
    },
    {
      "sha": "69f78939aa8d078ef0bcfe2285c6929bc10705a7",
      "filename": "gas/testsuite/gas/i386/avx512f-16bit.d",
      "status": "added",
      "additions": 13297,
      "deletions": 0,
      "changes": 13297,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/avx512f-16bit.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/avx512f-16bit.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/avx512f-16bit.d?ref=c1dc7af52143966da8065b527e7a7000cf9f7705"
    },
    {
      "sha": "a5ae71a3ae914142a07e807a522c9045ec1091db",
      "filename": "gas/testsuite/gas/i386/avx512f-16bit.s",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/avx512f-16bit.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/avx512f-16bit.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/avx512f-16bit.s?ref=c1dc7af52143966da8065b527e7a7000cf9f7705",
      "patch": "@@ -0,0 +1,4 @@\n+# Check AVX512F instructions in 16-bit mode\n+\n+\t.code16\n+\t.include \"avx512f.s\""
    },
    {
      "sha": "0569b019223862e5176e792dfcb94e0e64f94076",
      "filename": "gas/testsuite/gas/i386/bmi-16bit.d",
      "status": "added",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/bmi-16bit.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/bmi-16bit.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/bmi-16bit.d?ref=c1dc7af52143966da8065b527e7a7000cf9f7705",
      "patch": "@@ -0,0 +1,46 @@\n+#as: -I${srcdir}/$subdir\n+#objdump: -dwMaddr16 -Mdata16\n+#name: i386 16-bit BMI\n+\n+.*: +file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+ <_start>:\n+[ \t]*[a-f0-9]+:\tf3 0f bc d8          \ttzcnt  %ax,%bx\n+[ \t]*[a-f0-9]+:\t67 f3 0f bc 19       \ttzcnt  \\(%ecx\\),%bx\n+[ \t]*[a-f0-9]+:\tc4 e2 60 f2 f0       \tandn   %eax,%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 60 f2 31    \tandn   \\(%ecx\\),%ebx,%esi\n+[ \t]*[a-f0-9]+:\tc4 e2 78 f7 f3       \tbextr  %eax,%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 60 f7 31    \tbextr  %ebx,\\(%ecx\\),%esi\n+[ \t]*[a-f0-9]+:\t66 f3 0f bc d8       \ttzcnt  %eax,%ebx\n+[ \t]*[a-f0-9]+:\t67 66 f3 0f bc 19    \ttzcnt  \\(%ecx\\),%ebx\n+[ \t]*[a-f0-9]+:\tc4 e2 60 f3 d8       \tblsi   %eax,%ebx\n+[ \t]*[a-f0-9]+:\t67 c4 e2 60 f3 19    \tblsi   \\(%ecx\\),%ebx\n+[ \t]*[a-f0-9]+:\tc4 e2 60 f3 d0       \tblsmsk %eax,%ebx\n+[ \t]*[a-f0-9]+:\t67 c4 e2 60 f3 11    \tblsmsk \\(%ecx\\),%ebx\n+[ \t]*[a-f0-9]+:\tc4 e2 60 f3 c8       \tblsr   %eax,%ebx\n+[ \t]*[a-f0-9]+:\t67 c4 e2 60 f3 09    \tblsr   \\(%ecx\\),%ebx\n+[ \t]*[a-f0-9]+:\tf3 0f bc d8          \ttzcnt  %ax,%bx\n+[ \t]*[a-f0-9]+:\t67 f3 0f bc 19       \ttzcnt  \\(%ecx\\),%bx\n+[ \t]*[a-f0-9]+:\t67 f3 0f bc 19       \ttzcnt  \\(%ecx\\),%bx\n+[ \t]*[a-f0-9]+:\tc4 e2 60 f2 f0       \tandn   %eax,%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 60 f2 31    \tandn   \\(%ecx\\),%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 60 f2 31    \tandn   \\(%ecx\\),%ebx,%esi\n+[ \t]*[a-f0-9]+:\tc4 e2 78 f7 f3       \tbextr  %eax,%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 60 f7 31    \tbextr  %ebx,\\(%ecx\\),%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 60 f7 31    \tbextr  %ebx,\\(%ecx\\),%esi\n+[ \t]*[a-f0-9]+:\t66 f3 0f bc d8       \ttzcnt  %eax,%ebx\n+[ \t]*[a-f0-9]+:\t67 66 f3 0f bc 19    \ttzcnt  \\(%ecx\\),%ebx\n+[ \t]*[a-f0-9]+:\t67 66 f3 0f bc 19    \ttzcnt  \\(%ecx\\),%ebx\n+[ \t]*[a-f0-9]+:\tc4 e2 60 f3 d8       \tblsi   %eax,%ebx\n+[ \t]*[a-f0-9]+:\t67 c4 e2 60 f3 19    \tblsi   \\(%ecx\\),%ebx\n+[ \t]*[a-f0-9]+:\t67 c4 e2 60 f3 19    \tblsi   \\(%ecx\\),%ebx\n+[ \t]*[a-f0-9]+:\tc4 e2 60 f3 d0       \tblsmsk %eax,%ebx\n+[ \t]*[a-f0-9]+:\t67 c4 e2 60 f3 11    \tblsmsk \\(%ecx\\),%ebx\n+[ \t]*[a-f0-9]+:\t67 c4 e2 60 f3 11    \tblsmsk \\(%ecx\\),%ebx\n+[ \t]*[a-f0-9]+:\tc4 e2 60 f3 c8       \tblsr   %eax,%ebx\n+[ \t]*[a-f0-9]+:\t67 c4 e2 60 f3 09    \tblsr   \\(%ecx\\),%ebx\n+[ \t]*[a-f0-9]+:\t67 c4 e2 60 f3 09    \tblsr   \\(%ecx\\),%ebx\n+#pass"
    },
    {
      "sha": "82b6f5e04d3a44df5911ece2d8a5d50490430508",
      "filename": "gas/testsuite/gas/i386/bmi-16bit.s",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/bmi-16bit.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/bmi-16bit.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/bmi-16bit.s?ref=c1dc7af52143966da8065b527e7a7000cf9f7705",
      "patch": "@@ -0,0 +1,4 @@\n+# Check 16-bit BMI instructions\n+\n+\t.code16\n+\t.include \"bmi.s\""
    },
    {
      "sha": "a7569ba287369a57a301f0faca8ef3a2ad3b373e",
      "filename": "gas/testsuite/gas/i386/bmi2-16bit.d",
      "status": "added",
      "additions": 51,
      "deletions": 0,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/bmi2-16bit.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/bmi2-16bit.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/bmi2-16bit.d?ref=c1dc7af52143966da8065b527e7a7000cf9f7705",
      "patch": "@@ -0,0 +1,51 @@\n+#as: -I${srcdir}/$subdir\n+#objdump: -dwMaddr16 -Mdata16\n+#name: i386 16-bit BMI2\n+\n+.*: +file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+ <_start>:\n+[ \t]*[a-f0-9]+:\tc4 e3 7b f0 d8 07    \trorx   \\$0x7,%eax,%ebx\n+[ \t]*[a-f0-9]+:\t67 c4 e3 7b f0 19 07 \trorx   \\$0x7,\\(%ecx\\),%ebx\n+[ \t]*[a-f0-9]+:\tc4 e2 63 f6 f0       \tmulx   %eax,%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 63 f6 31    \tmulx   \\(%ecx\\),%ebx,%esi\n+[ \t]*[a-f0-9]+:\tc4 e2 63 f5 f0       \tpdep   %eax,%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 63 f5 31    \tpdep   \\(%ecx\\),%ebx,%esi\n+[ \t]*[a-f0-9]+:\tc4 e2 62 f5 f0       \tpext   %eax,%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 62 f5 31    \tpext   \\(%ecx\\),%ebx,%esi\n+[ \t]*[a-f0-9]+:\tc4 e2 78 f5 f3       \tbzhi   %eax,%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 60 f5 31    \tbzhi   %ebx,\\(%ecx\\),%esi\n+[ \t]*[a-f0-9]+:\tc4 e2 7a f7 f3       \tsarx   %eax,%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 62 f7 31    \tsarx   %ebx,\\(%ecx\\),%esi\n+[ \t]*[a-f0-9]+:\tc4 e2 79 f7 f3       \tshlx   %eax,%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 61 f7 31    \tshlx   %ebx,\\(%ecx\\),%esi\n+[ \t]*[a-f0-9]+:\tc4 e2 7b f7 f3       \tshrx   %eax,%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 63 f7 31    \tshrx   %ebx,\\(%ecx\\),%esi\n+[ \t]*[a-f0-9]+:\tc4 e3 7b f0 d8 07    \trorx   \\$0x7,%eax,%ebx\n+[ \t]*[a-f0-9]+:\t67 c4 e3 7b f0 19 07 \trorx   \\$0x7,\\(%ecx\\),%ebx\n+[ \t]*[a-f0-9]+:\t67 c4 e3 7b f0 19 07 \trorx   \\$0x7,\\(%ecx\\),%ebx\n+[ \t]*[a-f0-9]+:\tc4 e2 63 f6 f0       \tmulx   %eax,%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 63 f6 31    \tmulx   \\(%ecx\\),%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 63 f6 31    \tmulx   \\(%ecx\\),%ebx,%esi\n+[ \t]*[a-f0-9]+:\tc4 e2 63 f5 f0       \tpdep   %eax,%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 63 f5 31    \tpdep   \\(%ecx\\),%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 63 f5 31    \tpdep   \\(%ecx\\),%ebx,%esi\n+[ \t]*[a-f0-9]+:\tc4 e2 62 f5 f0       \tpext   %eax,%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 62 f5 31    \tpext   \\(%ecx\\),%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 62 f5 31    \tpext   \\(%ecx\\),%ebx,%esi\n+[ \t]*[a-f0-9]+:\tc4 e2 78 f5 f3       \tbzhi   %eax,%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 60 f5 31    \tbzhi   %ebx,\\(%ecx\\),%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 60 f5 31    \tbzhi   %ebx,\\(%ecx\\),%esi\n+[ \t]*[a-f0-9]+:\tc4 e2 7a f7 f3       \tsarx   %eax,%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 62 f7 31    \tsarx   %ebx,\\(%ecx\\),%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 62 f7 31    \tsarx   %ebx,\\(%ecx\\),%esi\n+[ \t]*[a-f0-9]+:\tc4 e2 79 f7 f3       \tshlx   %eax,%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 61 f7 31    \tshlx   %ebx,\\(%ecx\\),%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 61 f7 31    \tshlx   %ebx,\\(%ecx\\),%esi\n+[ \t]*[a-f0-9]+:\tc4 e2 7b f7 f3       \tshrx   %eax,%ebx,%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 63 f7 31    \tshrx   %ebx,\\(%ecx\\),%esi\n+[ \t]*[a-f0-9]+:\t67 c4 e2 63 f7 31    \tshrx   %ebx,\\(%ecx\\),%esi\n+#pass"
    },
    {
      "sha": "cc50a2fabaa37faf83f299dfeb4e8e96f78aa654",
      "filename": "gas/testsuite/gas/i386/bmi2-16bit.s",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/bmi2-16bit.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/bmi2-16bit.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/bmi2-16bit.s?ref=c1dc7af52143966da8065b527e7a7000cf9f7705",
      "patch": "@@ -0,0 +1,4 @@\n+# Check 16-bit BMI2 instructions\n+\n+\t.code16\n+\t.include \"bmi2.s\""
    },
    {
      "sha": "09f5dec2d2a71bdfd62a823f12d0a186312bda20",
      "filename": "gas/testsuite/gas/i386/i386.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/i386.exp?ref=c1dc7af52143966da8065b527e7a7000cf9f7705",
      "patch": "@@ -209,6 +209,7 @@ if [expr ([istarget \"i*86-*-*\"] ||  [istarget \"x86_64-*-*\"]) && [gas_32_check]]\n     run_dump_test \"avx-scalar\"\n     run_dump_test \"avx-scalar-intel\"\n     run_dump_test \"avx-scalar-2\"\n+    run_dump_test \"avx-16bit\"\n     run_dump_test \"avx256int\"\n     run_dump_test \"avx256int-intel\"\n     run_dump_test \"avx2\"\n@@ -225,6 +226,7 @@ if [expr ([istarget \"i*86-*-*\"] ||  [istarget \"x86_64-*-*\"]) && [gas_32_check]]\n     run_dump_test \"avx512f-nondef\"\n     run_list_test \"avx512f-plain\" \"-al\"\n     run_dump_test \"avx512f-ymm\"\n+    run_dump_test \"avx512f-16bit\"\n     run_dump_test \"avx512cd\"\n     run_dump_test \"avx512cd-intel\"\n     run_dump_test \"avx512er\"\n@@ -276,6 +278,7 @@ if [expr ([istarget \"i*86-*-*\"] ||  [istarget \"x86_64-*-*\"]) && [gas_32_check]]\n     run_dump_test \"sse2avx-opts-intel\"\n     run_dump_test \"bmi2\"\n     run_dump_test \"bmi2-intel\"\n+    run_dump_test \"bmi2-16bit\"\n     run_dump_test \"fma\"\n     run_dump_test \"fma-intel\"\n     run_dump_test \"fma-scalar\"\n@@ -287,12 +290,15 @@ if [expr ([istarget \"i*86-*-*\"] ||  [istarget \"x86_64-*-*\"]) && [gas_32_check]]\n     run_dump_test \"rtm-intel\"\n     run_dump_test \"fma4\"\n     run_dump_test \"lwp\"\n+    run_dump_test \"lwp-16bit\"\n     run_dump_test \"xop\"\n     run_dump_test \"xop32reg\"\n     run_dump_test \"bmi\"\n     run_dump_test \"bmi-intel\"\n+    run_dump_test \"bmi-16bit\"\n     run_dump_test \"tbm\"\n     run_dump_test \"tbm-intel\"\n+    run_dump_test \"tbm-16bit\"\n     run_dump_test \"f16c\"\n     run_dump_test \"f16c-intel\"\n     run_dump_test \"fsgs\""
    },
    {
      "sha": "bf5d4cde1900d27a15a0b8a0b9ecd99168c443d6",
      "filename": "gas/testsuite/gas/i386/inval-16.l",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/inval-16.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/inval-16.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/inval-16.l?ref=c1dc7af52143966da8065b527e7a7000cf9f7705",
      "patch": "@@ -10,7 +10,7 @@ GAS LISTING .*\n \n \n [ \t]*1[ \t]+\\.text\n-[ \t]*2[ \t]+\\.code16\n+[ \t]*2[ \t]+\\.arch i186; \\.code16\n [ \t]*3[ \t]+vmovapd\t%xmm0,%xmm1\n [ \t]*4[ \t]+vaddsd\t%xmm4, %xmm5, %xmm6\\{%k7\\}\n [ \t]*5[ \t]+vfrczpd\t%xmm7,%xmm7"
    },
    {
      "sha": "d3966daa91332253f7ae6851e20ab429f2cc71c3",
      "filename": "gas/testsuite/gas/i386/inval-16.s",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/inval-16.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/inval-16.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/inval-16.s?ref=c1dc7af52143966da8065b527e7a7000cf9f7705",
      "patch": "@@ -1,5 +1,5 @@\n \t.text\n-\t.code16\n+\t.arch i186; .code16\n \tvmovapd\t%xmm0,%xmm1\n \tvaddsd\t%xmm4, %xmm5, %xmm6{%k7}\n \tvfrczpd\t%xmm7,%xmm7"
    },
    {
      "sha": "b6d31570cf70d75281410b37cdf9b2c2f5ce33e6",
      "filename": "gas/testsuite/gas/i386/lwp-16bit.d",
      "status": "added",
      "additions": 74,
      "deletions": 0,
      "changes": 74,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/lwp-16bit.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/lwp-16bit.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/lwp-16bit.d?ref=c1dc7af52143966da8065b527e7a7000cf9f7705",
      "patch": "@@ -0,0 +1,74 @@\n+#as: -I${srcdir}/$subdir\n+#objdump: -dwMaddr16 -Mdata16\n+#name: i386 16-bit LWP\n+\n+.*: +file format .*\n+\n+Disassembly of section .text:\n+\n+0+ <_start>:\n+[ \t]*[a-f0-9]+:\t8f e9 78 12 c0[ \t]+llwpcb %eax\n+[ \t]*[a-f0-9]+:\t8f e9 78 12 c1[ \t]+llwpcb %ecx\n+[ \t]*[a-f0-9]+:\t8f e9 78 12 c2[ \t]+llwpcb %edx\n+[ \t]*[a-f0-9]+:\t8f e9 78 12 c3[ \t]+llwpcb %ebx\n+[ \t]*[a-f0-9]+:\t8f e9 78 12 c4[ \t]+llwpcb %esp\n+[ \t]*[a-f0-9]+:\t8f e9 78 12 c5[ \t]+llwpcb %ebp\n+[ \t]*[a-f0-9]+:\t8f e9 78 12 c6[ \t]+llwpcb %esi\n+[ \t]*[a-f0-9]+:\t8f e9 78 12 c7[ \t]+llwpcb %edi\n+[ \t]*[a-f0-9]+:\t8f e9 78 12 cf[ \t]+slwpcb %edi\n+[ \t]*[a-f0-9]+:\t8f e9 78 12 ce[ \t]+slwpcb %esi\n+[ \t]*[a-f0-9]+:\t8f e9 78 12 cd[ \t]+slwpcb %ebp\n+[ \t]*[a-f0-9]+:\t8f e9 78 12 cc[ \t]+slwpcb %esp\n+[ \t]*[a-f0-9]+:\t8f e9 78 12 cb[ \t]+slwpcb %ebx\n+[ \t]*[a-f0-9]+:\t8f e9 78 12 ca[ \t]+slwpcb %edx\n+[ \t]*[a-f0-9]+:\t8f e9 78 12 c9[ \t]+slwpcb %ecx\n+[ \t]*[a-f0-9]+:\t8f e9 78 12 c8[ \t]+slwpcb %eax\n+[ \t]*[a-f0-9]+:\t8f ea 78 12 c7 78 56 34 12[ \t]+lwpins \\$0x12345678,%edi,%eax\n+[ \t]*[a-f0-9]+:\t8f ea 70 12 c6 78 56 34 12[ \t]+lwpins \\$0x12345678,%esi,%ecx\n+[ \t]*[a-f0-9]+:\t8f ea 68 12 c5 78 56 34 12[ \t]+lwpins \\$0x12345678,%ebp,%edx\n+[ \t]*[a-f0-9]+:\t8f ea 60 12 c4 78 56 34 12[ \t]+lwpins \\$0x12345678,%esp,%ebx\n+[ \t]*[a-f0-9]+:\t8f ea 58 12 c3 78 56 34 12[ \t]+lwpins \\$0x12345678,%ebx,%esp\n+[ \t]*[a-f0-9]+:\t8f ea 50 12 c2 78 56 34 12[ \t]+lwpins \\$0x12345678,%edx,%ebp\n+[ \t]*[a-f0-9]+:\t8f ea 48 12 c1 78 56 34 12[ \t]+lwpins \\$0x12345678,%ecx,%esi\n+[ \t]*[a-f0-9]+:\t8f ea 40 12 c0 78 56 34 12[ \t]+lwpins \\$0x12345678,%eax,%edi\n+[ \t]*[a-f0-9]+:\t8f ea 78 12 cf 78 56 34 12[ \t]+lwpval \\$0x12345678,%edi,%eax\n+[ \t]*[a-f0-9]+:\t8f ea 70 12 ce 78 56 34 12[ \t]+lwpval \\$0x12345678,%esi,%ecx\n+[ \t]*[a-f0-9]+:\t8f ea 68 12 cd 78 56 34 12[ \t]+lwpval \\$0x12345678,%ebp,%edx\n+[ \t]*[a-f0-9]+:\t8f ea 60 12 cc 78 56 34 12[ \t]+lwpval \\$0x12345678,%esp,%ebx\n+[ \t]*[a-f0-9]+:\t8f ea 58 12 cb 78 56 34 12[ \t]+lwpval \\$0x12345678,%ebx,%esp\n+[ \t]*[a-f0-9]+:\t8f ea 50 12 ca 78 56 34 12[ \t]+lwpval \\$0x12345678,%edx,%ebp\n+[ \t]*[a-f0-9]+:\t8f ea 48 12 c9 78 56 34 12[ \t]+lwpval \\$0x12345678,%ecx,%esi\n+[ \t]*[a-f0-9]+:\t8f ea 40 12 c8 78 56 34 12[ \t]+lwpval \\$0x12345678,%eax,%edi\n+[ \t]*[a-f0-9]+:\t67 8f ea 78 12 07 78 56 34 12[ \t]+lwpins \\$0x12345678,\\(%edi\\),%eax\n+[ \t]*[a-f0-9]+:\t67 8f ea 70 12 06 78 56 34 12[ \t]+lwpins \\$0x12345678,\\(%esi\\),%ecx\n+[ \t]*[a-f0-9]+:\t67 8f ea 68 12 45 00 78 56 34 12[ \t]+lwpins \\$0x12345678,0x0\\(%ebp\\),%edx\n+[ \t]*[a-f0-9]+:\t67 8f ea 60 12 04 24 78 56 34 12[ \t]+lwpins \\$0x12345678,\\(%esp\\),%ebx\n+[ \t]*[a-f0-9]+:\t67 8f ea 58 12 03 78 56 34 12[ \t]+lwpins \\$0x12345678,\\(%ebx\\),%esp\n+[ \t]*[a-f0-9]+:\t67 8f ea 50 12 02 78 56 34 12[ \t]+lwpins \\$0x12345678,\\(%edx\\),%ebp\n+[ \t]*[a-f0-9]+:\t67 8f ea 48 12 01 78 56 34 12[ \t]+lwpins \\$0x12345678,\\(%ecx\\),%esi\n+[ \t]*[a-f0-9]+:\t67 8f ea 40 12 00 78 56 34 12[ \t]+lwpins \\$0x12345678,\\(%eax\\),%edi\n+[ \t]*[a-f0-9]+:\t67 8f ea 78 12 0f 78 56 34 12[ \t]+lwpval \\$0x12345678,\\(%edi\\),%eax\n+[ \t]*[a-f0-9]+:\t67 8f ea 70 12 0e 78 56 34 12[ \t]+lwpval \\$0x12345678,\\(%esi\\),%ecx\n+[ \t]*[a-f0-9]+:\t67 8f ea 68 12 4d 00 78 56 34 12[ \t]+lwpval \\$0x12345678,0x0\\(%ebp\\),%edx\n+[ \t]*[a-f0-9]+:\t67 8f ea 60 12 0c 24 78 56 34 12[ \t]+lwpval \\$0x12345678,\\(%esp\\),%ebx\n+[ \t]*[a-f0-9]+:\t67 8f ea 58 12 0b 78 56 34 12[ \t]+lwpval \\$0x12345678,\\(%ebx\\),%esp\n+[ \t]*[a-f0-9]+:\t67 8f ea 50 12 0a 78 56 34 12[ \t]+lwpval \\$0x12345678,\\(%edx\\),%ebp\n+[ \t]*[a-f0-9]+:\t67 8f ea 48 12 09 78 56 34 12[ \t]+lwpval \\$0x12345678,\\(%ecx\\),%esi\n+[ \t]*[a-f0-9]+:\t67 8f ea 40 12 08 78 56 34 12[ \t]+lwpval \\$0x12345678,\\(%eax\\),%edi\n+[ \t]*[a-f0-9]+:\t67 8f ea 78 12 87 fe ca 00 00 78 56 34 12[ \t]+lwpins \\$0x12345678,0xcafe\\(%edi\\),%eax\n+[ \t]*[a-f0-9]+:\t67 8f ea 70 12 86 fe ca 00 00 78 56 34 12[ \t]+lwpins \\$0x12345678,0xcafe\\(%esi\\),%ecx\n+[ \t]*[a-f0-9]+:\t67 8f ea 68 12 85 fe ca 00 00 78 56 34 12[ \t]+lwpins \\$0x12345678,0xcafe\\(%ebp\\),%edx\n+[ \t]*[a-f0-9]+:\t67 8f ea 60 12 84 24 fe ca 00 00 78 56 34 12[ \t]+lwpins \\$0x12345678,0xcafe\\(%esp\\),%ebx\n+[ \t]*[a-f0-9]+:\t67 8f ea 58 12 83 fe ca 00 00 78 56 34 12[ \t]+lwpins \\$0x12345678,0xcafe\\(%ebx\\),%esp\n+[ \t]*[a-f0-9]+:\t67 8f ea 50 12 82 fe ca 00 00 78 56 34 12[ \t]+lwpins \\$0x12345678,0xcafe\\(%edx\\),%ebp\n+[ \t]*[a-f0-9]+:\t67 8f ea 48 12 81 fe ca 00 00 78 56 34 12[ \t]+lwpins \\$0x12345678,0xcafe\\(%ecx\\),%esi\n+[ \t]*[a-f0-9]+:\t67 8f ea 40 12 80 fe ca 00 00 78 56 34 12[ \t]+lwpins \\$0x12345678,0xcafe\\(%eax\\),%edi\n+[ \t]*[a-f0-9]+:\t67 8f ea 78 12 8f fe ca 00 00 78 56 34 12[ \t]+lwpval \\$0x12345678,0xcafe\\(%edi\\),%eax\n+[ \t]*[a-f0-9]+:\t67 8f ea 70 12 8e fe ca 00 00 78 56 34 12[ \t]+lwpval \\$0x12345678,0xcafe\\(%esi\\),%ecx\n+[ \t]*[a-f0-9]+:\t67 8f ea 68 12 8d fe ca 00 00 78 56 34 12[ \t]+lwpval \\$0x12345678,0xcafe\\(%ebp\\),%edx\n+[ \t]*[a-f0-9]+:\t67 8f ea 60 12 8c 24 fe ca 00 00 78 56 34 12[ \t]+lwpval \\$0x12345678,0xcafe\\(%esp\\),%ebx\n+[ \t]*[a-f0-9]+:\t67 8f ea 58 12 8b fe ca 00 00 78 56 34 12[ \t]+lwpval \\$0x12345678,0xcafe\\(%ebx\\),%esp\n+[ \t]*[a-f0-9]+:\t67 8f ea 50 12 8a fe ca 00 00 78 56 34 12[ \t]+lwpval \\$0x12345678,0xcafe\\(%edx\\),%ebp\n+[ \t]*[a-f0-9]+:\t67 8f ea 48 12 89 fe ca 00 00 78 56 34 12[ \t]+lwpval \\$0x12345678,0xcafe\\(%ecx\\),%esi\n+[ \t]*[a-f0-9]+:\t67 8f ea 40 12 88 fe ca 00 00 78 56 34 12[ \t]+lwpval \\$0x12345678,0xcafe\\(%eax\\),%edi\n+#pass"
    },
    {
      "sha": "50bf455d13dd30f3744e30970b852e91a246527a",
      "filename": "gas/testsuite/gas/i386/lwp-16bit.s",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/lwp-16bit.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1dc7af52143966da8065b527e7a7000cf9f7705/gas/testsuite/gas/i386/lwp-16bit.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/lwp-16bit.s?ref=c1dc7af52143966da8065b527e7a7000cf9f7705",
      "patch": "@@ -0,0 +1,4 @@\n+# Check 16-bit LWP instructions\n+\n+\t.code16\n+\t.include \"lwp.s\""
    },
    {
      "sha": "5a8865739dc85f01799a045f3d57f5f020e3b7b2",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1dc7af52143966da8065b527e7a7000cf9f7705/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1dc7af52143966da8065b527e7a7000cf9f7705/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=c1dc7af52143966da8065b527e7a7000cf9f7705",
      "patch": "@@ -1,3 +1,15 @@\n+2019-06-27  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (Iq): Delete.\n+\t(Id): New.\n+\t(reg_table): Use it for lwpins, lwpval, and bextr. Use Edq for\n+\tTBM insns.\n+\t(vex_len_table): Use Edq for vcvtsi2ss, vcvtsi2sd. Use Gdq for\n+\tvcvttss2si, vcvttsd2si, vcvtss2si, and vcvtsd2si.\n+\t(OP_E_memory): Also honor needindex when deciding whether an\n+\taddress size prefix needs printing.\n+\t(OP_I): Remove handling of q_mode. Add handling of d_mode.\n+\n 2019-06-26  Jim Wilson  <jimw@sifive.com>\n \n \tPR binutils/24739"
    },
    {
      "sha": "d892eabe43e48bd4a93f2460f03119f24de94ac6",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 30,
      "deletions": 33,
      "changes": 63,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1dc7af52143966da8065b527e7a7000cf9f7705/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1dc7af52143966da8065b527e7a7000cf9f7705/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=c1dc7af52143966da8065b527e7a7000cf9f7705",
      "patch": "@@ -291,8 +291,8 @@ fetch_data (struct disassemble_info *info, bfd_byte *addr)\n #define sIbT { OP_sI, b_T_mode } /* sign extened byte like 'T' */\n #define Iv { OP_I, v_mode }\n #define sIv { OP_sI, v_mode }\n-#define Iq { OP_I, q_mode }\n #define Iv64 { OP_I64, v_mode }\n+#define Id { OP_I, d_mode }\n #define Iw { OP_I, w_mode }\n #define I1 { OP_I, const_1_mode }\n #define Jb { OP_J, b_mode }\n@@ -3596,29 +3596,29 @@ static const struct dis386 reg_table[][8] = {\n   },\n   /* REG_XOP_LWP */\n   {\n-    { \"lwpins\", { { OP_LWP_E, 0 }, Ed, Iq }, 0 },\n-    { \"lwpval\",\t{ { OP_LWP_E, 0 }, Ed, Iq }, 0 },\n+    { \"lwpins\", { { OP_LWP_E, 0 }, Ed, Id }, 0 },\n+    { \"lwpval\",\t{ { OP_LWP_E, 0 }, Ed, Id }, 0 },\n   },\n   /* REG_XOP_TBM_01 */\n   {\n     { Bad_Opcode },\n-    { \"blcfill\",\t{ { OP_LWP_E, 0 }, Ev }, 0 },\n-    { \"blsfill\",\t{ { OP_LWP_E, 0 }, Ev }, 0 },\n-    { \"blcs\",\t{ { OP_LWP_E, 0 }, Ev }, 0 },\n-    { \"tzmsk\",\t{ { OP_LWP_E, 0 }, Ev }, 0 },\n-    { \"blcic\",\t{ { OP_LWP_E, 0 }, Ev }, 0 },\n-    { \"blsic\",\t{ { OP_LWP_E, 0 }, Ev }, 0 },\n-    { \"t1mskc\",\t{ { OP_LWP_E, 0 }, Ev }, 0 },\n+    { \"blcfill\",\t{ { OP_LWP_E, 0 }, Edq }, 0 },\n+    { \"blsfill\",\t{ { OP_LWP_E, 0 }, Edq }, 0 },\n+    { \"blcs\",\t{ { OP_LWP_E, 0 }, Edq }, 0 },\n+    { \"tzmsk\",\t{ { OP_LWP_E, 0 }, Edq }, 0 },\n+    { \"blcic\",\t{ { OP_LWP_E, 0 }, Edq }, 0 },\n+    { \"blsic\",\t{ { OP_LWP_E, 0 }, Edq }, 0 },\n+    { \"t1mskc\",\t{ { OP_LWP_E, 0 }, Edq }, 0 },\n   },\n   /* REG_XOP_TBM_02 */\n   {\n     { Bad_Opcode },\n-    { \"blcmsk\",\t{ { OP_LWP_E, 0 }, Ev }, 0 },\n+    { \"blcmsk\",\t{ { OP_LWP_E, 0 }, Edq }, 0 },\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"blci\",\t{ { OP_LWP_E, 0 }, Ev }, 0 },\n+    { \"blci\",\t{ { OP_LWP_E, 0 }, Edq }, 0 },\n   },\n \n #include \"i386-dis-evex-reg.h\"\n@@ -8150,7 +8150,7 @@ static const struct dis386 xop_table[][256] = {\n     { Bad_Opcode },\n     { Bad_Opcode },\n     /* 10 */\n-    { \"bextr\",\t{ Gv, Ev, Iq }, 0 },\n+    { \"bextrS\",\t{ Gdq, Edq, Id }, 0 },\n     { Bad_Opcode },\n     { REG_TABLE (REG_XOP_LWP) },\n     { Bad_Opcode },\n@@ -9343,38 +9343,38 @@ static const struct dis386 vex_len_table[][2] = {\n \n   /* VEX_LEN_0F2A_P_1 */\n   {\n-    { \"vcvtsi2ss%LQ\",\t{ XMScalar, VexScalar, Ev }, 0 },\n-    { \"vcvtsi2ss%LQ\",\t{ XMScalar, VexScalar, Ev }, 0 },\n+    { \"vcvtsi2ss%LQ\",\t{ XMScalar, VexScalar, Edq }, 0 },\n+    { \"vcvtsi2ss%LQ\",\t{ XMScalar, VexScalar, Edq }, 0 },\n   },\n \n   /* VEX_LEN_0F2A_P_3 */\n   {\n-    { \"vcvtsi2sd%LQ\",\t{ XMScalar, VexScalar, Ev }, 0 },\n-    { \"vcvtsi2sd%LQ\",\t{ XMScalar, VexScalar, Ev }, 0 },\n+    { \"vcvtsi2sd%LQ\",\t{ XMScalar, VexScalar, Edq }, 0 },\n+    { \"vcvtsi2sd%LQ\",\t{ XMScalar, VexScalar, Edq }, 0 },\n   },\n \n   /* VEX_LEN_0F2C_P_1 */\n   {\n-    { \"vcvttss2si\",\t{ Gv, EXdScalar }, 0 },\n-    { \"vcvttss2si\",\t{ Gv, EXdScalar }, 0 },\n+    { \"vcvttss2si\",\t{ Gdq, EXdScalar }, 0 },\n+    { \"vcvttss2si\",\t{ Gdq, EXdScalar }, 0 },\n   },\n \n   /* VEX_LEN_0F2C_P_3 */\n   {\n-    { \"vcvttsd2si\",\t{ Gv, EXqScalar }, 0 },\n-    { \"vcvttsd2si\",\t{ Gv, EXqScalar }, 0 },\n+    { \"vcvttsd2si\",\t{ Gdq, EXqScalar }, 0 },\n+    { \"vcvttsd2si\",\t{ Gdq, EXqScalar }, 0 },\n   },\n \n   /* VEX_LEN_0F2D_P_1 */\n   {\n-    { \"vcvtss2si\",\t{ Gv, EXdScalar }, 0 },\n-    { \"vcvtss2si\",\t{ Gv, EXdScalar }, 0 },\n+    { \"vcvtss2si\",\t{ Gdq, EXdScalar }, 0 },\n+    { \"vcvtss2si\",\t{ Gdq, EXdScalar }, 0 },\n   },\n \n   /* VEX_LEN_0F2D_P_3 */\n   {\n-    { \"vcvtsd2si\",\t{ Gv, EXqScalar }, 0 },\n-    { \"vcvtsd2si\",\t{ Gv, EXqScalar }, 0 },\n+    { \"vcvtsd2si\",\t{ Gdq, EXqScalar }, 0 },\n+    { \"vcvtsd2si\",\t{ Gdq, EXqScalar }, 0 },\n   },\n \n   /* VEX_LEN_0F41_P_0 */\n@@ -14203,7 +14203,7 @@ OP_E_memory (int bytemode, int sizeflag)\n \t      }\n \t  }\n \n-      if ((havebase || haveindex || needaddr32 || riprel)\n+      if ((havebase || haveindex || needindex || needaddr32 || riprel)\n \t  && (bytemode != v_bnd_mode)\n \t  && (bytemode != v_bndmk_mode)\n \t  && (bytemode != bnd_mode)\n@@ -14729,13 +14729,6 @@ OP_I (int bytemode, int sizeflag)\n       op = *codep++;\n       mask = 0xff;\n       break;\n-    case q_mode:\n-      if (address_mode == mode_64bit)\n-\t{\n-\t  op = get32s ();\n-\t  break;\n-\t}\n-      /* Fall through.  */\n     case v_mode:\n       USED_REX (REX_W);\n       if (rex & REX_W)\n@@ -14755,6 +14748,10 @@ OP_I (int bytemode, int sizeflag)\n \t  used_prefixes |= (prefixes & PREFIX_DATA);\n \t}\n       break;\n+    case d_mode:\n+      mask = 0xffffffff;\n+      op = get32 ();\n+      break;\n     case w_mode:\n       mask = 0xfffff;\n       op = get16 ();"
    }
  ]
}