{
  "sha": "3db19b2d7241efde4ca9a7b0e6f33b0929f0cf03",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2RiMTliMmQ3MjQxZWZkZTRjYTlhN2IwZTZmMzNiMDkyOWYwY2YwMw==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-05-12T14:03:02Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-05-12T14:03:02Z"
    },
    "message": "Revert \"[gdb/symtab] Fix infinite recursion in dwarf2_cu::get_builder()\"\n\nThis reverts commit 4cf88725da1cb503be04d3237354105ec170bc86.\n\nIt causes the following regression:\n...\n$ cat shadow.cc\nnamespace A {}\n\nint\nmain()\n{\n  using namespace A;\n  return 0;\n}\n$ g++-10 -g shadow.cc -flto -o shadow\n$ ./gdb -q -batch ./shadow  -ex \"b main\"\nAborted (core dumped)\n...",
    "tree": {
      "sha": "68c8bdedbf0083e0fc8fcd37d6931d0541519127",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/68c8bdedbf0083e0fc8fcd37d6931d0541519127"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3db19b2d7241efde4ca9a7b0e6f33b0929f0cf03",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3db19b2d7241efde4ca9a7b0e6f33b0929f0cf03",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3db19b2d7241efde4ca9a7b0e6f33b0929f0cf03",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3db19b2d7241efde4ca9a7b0e6f33b0929f0cf03/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a7077ce7604f78b896595dceccd89d70d2a050a0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a7077ce7604f78b896595dceccd89d70d2a050a0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a7077ce7604f78b896595dceccd89d70d2a050a0"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 25,
    "deletions": 18
  },
  "files": [
    {
      "sha": "d564621f4c64784f92656c9a3d79a5ded42406c3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3db19b2d7241efde4ca9a7b0e6f33b0929f0cf03/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3db19b2d7241efde4ca9a7b0e6f33b0929f0cf03/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3db19b2d7241efde4ca9a7b0e6f33b0929f0cf03",
      "patch": "@@ -209,15 +209,6 @@\n \n \t* Re-format all Python files using black.\n \n-2021-05-07  Tom de Vries  <tdevries@suse.de>\n-\n-\tPR symtab/26327\n-\t* dwarf2/read.c (struct dwarf2_cu): Remove ancestor.\n-\t(dwarf2_cu::get_builder): Remove ancestor-related code.\n-\t(new_symbol): Remove code supporting pre-4.1 gcc that show arguments\n-\tof inlined functions as locals.\n-\t(follow_die_offset, follow_die_sig_1): Remove setting of ancestor.\n-\n 2021-05-07  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* guile/guile-internal.h (gdbscm_safe_source_script): Change"
    },
    {
      "sha": "9990cd904852a694b66ecdff37f95e49bc213284",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3db19b2d7241efde4ca9a7b0e6f33b0929f0cf03/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3db19b2d7241efde4ca9a7b0e6f33b0929f0cf03/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=3db19b2d7241efde4ca9a7b0e6f33b0929f0cf03",
      "patch": "@@ -29,11 +29,6 @@\n \t* python.texinfo (Python Commands): Document 'set debug\n \tpy-breakpoint' and 'show debug py-breakpoint'.\n \n-2021-05-07  Tom de Vries  <tdevries@suse.de>\n-\n-\tPR symtab/26327\n-\t* gdb.texinfo (Inline Functions): Update.\n-\n 2021-05-06  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \t* gdb.texinfo (GDB/MI Breakpoint Commands): Mention the"
    },
    {
      "sha": "56f37eb22886a4a309bbdb128b325e7449ca7147",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3db19b2d7241efde4ca9a7b0e6f33b0929f0cf03/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3db19b2d7241efde4ca9a7b0e6f33b0929f0cf03/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=3db19b2d7241efde4ca9a7b0e6f33b0929f0cf03",
      "patch": "@@ -13842,8 +13842,8 @@ when using @sc{dwarf 2}.  Versions of @value{NGCC} before 4.1\n do not emit two required attributes (@samp{DW_AT_call_file} and\n @samp{DW_AT_call_line}); @value{GDBN} does not display inlined\n function calls with earlier versions of @value{NGCC}.  It instead\n-displays local variables of inlined functions as local variables in\n-the caller.\n+displays the arguments and local variables of inlined functions as\n+local variables in the caller.\n \n The body of an inlined function is directly included at its call site;\n unlike a non-inlined function, there are no instructions devoted to"
    },
    {
      "sha": "ac786abf6d2363be7836b8e8ef095f40777fbe63",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 23,
      "deletions": 2,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3db19b2d7241efde4ca9a7b0e6f33b0929f0cf03/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3db19b2d7241efde4ca9a7b0e6f33b0929f0cf03/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=3db19b2d7241efde4ca9a7b0e6f33b0929f0cf03",
      "patch": "@@ -684,13 +684,21 @@ struct dwarf2_cu\n \n   struct partial_die_info *find_partial_die (sect_offset sect_off);\n \n+  /* If this CU was inherited by another CU (via specification,\n+     abstract_origin, etc), this is the ancestor CU.  */\n+  dwarf2_cu *ancestor;\n+\n   /* Get the buildsym_compunit for this CU.  */\n   buildsym_compunit *get_builder ()\n   {\n     /* If this CU has a builder associated with it, use that.  */\n     if (m_builder != nullptr)\n       return m_builder.get ();\n \n+    /* Otherwise, search ancestors for a valid builder.  */\n+    if (ancestor != nullptr)\n+      return ancestor->get_builder ();\n+\n     return nullptr;\n   }\n };\n@@ -22037,7 +22045,15 @@ new_symbol (struct die_info *die, struct type *type, struct dwarf2_cu *cu,\n \t  break;\n \tcase DW_TAG_formal_parameter:\n \t  {\n-\t    SYMBOL_IS_ARGUMENT (sym) = 1;\n+\t    /* If we are inside a function, mark this as an argument.  If\n+\t       not, we might be looking at an argument to an inlined function\n+\t       when we do not have enough information to show inlined frames;\n+\t       pretend it's a local variable in that case so that the user can\n+\t       still see it.  */\n+\t    struct context_stack *curr\n+\t      = cu->get_builder ()->get_current_context_stack ();\n+\t    if (curr != nullptr && curr->name != nullptr)\n+\t      SYMBOL_IS_ARGUMENT (sym) = 1;\n \t    attr = dwarf2_attr (die, DW_AT_location, cu);\n \t    if (attr != nullptr)\n \t      {\n@@ -23373,6 +23389,9 @@ follow_die_offset (sect_offset sect_off, int offset_in_dwz,\n   *ref_cu = target_cu;\n   temp_die.sect_off = sect_off;\n \n+  if (target_cu != cu)\n+    target_cu->ancestor = cu;\n+\n   return (struct die_info *) htab_find_with_hash (target_cu->die_hash,\n \t\t\t\t\t\t  &temp_die,\n \t\t\t\t\t\t  to_underlying (sect_off));\n@@ -23722,7 +23741,7 @@ follow_die_sig_1 (struct die_info *src_die, struct signatured_type *sig_type,\n \t\t  struct dwarf2_cu **ref_cu)\n {\n   struct die_info temp_die;\n-  struct dwarf2_cu *sig_cu;\n+  struct dwarf2_cu *sig_cu, *cu = *ref_cu;\n   struct die_info *die;\n   dwarf2_per_objfile *per_objfile = (*ref_cu)->per_objfile;\n \n@@ -23758,6 +23777,8 @@ follow_die_sig_1 (struct die_info *src_die, struct signatured_type *sig_type,\n \t}\n \n       *ref_cu = sig_cu;\n+      if (sig_cu != cu)\n+\tsig_cu->ancestor = cu;\n \n       return die;\n     }"
    }
  ]
}