{
  "sha": "19c659f164b9dc672580ec459c9cfef84dd0f879",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTljNjU5ZjE2NGI5ZGM2NzI1ODBlYzQ1OWM5Y2ZlZjg0ZGQwZjg3OQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-12-10T16:03:31Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-12-11T22:10:50Z"
    },
    "message": "gdb: improve the warning given for deprecated aliases with a prefix\n\nConsider this GDB session:\n\n  (gdb) define set xxx_yyy\n  Type commands for definition of \"set xxx_yyy\".\n  End with a line saying just \"end\".\n  >echo in set xxx_yyy command\\n\n  >end\n  (gdb) alias set qqq_aaa=set xxx_yyy\n  (gdb) maintenance deprecate set qqq_aaa\n  (gdb) set qqq_aaa\n  Warning: 'qqq_aaa', an alias for the command 'xxx_yyy' is deprecated.\n  No alternative known.\n\n  in set xxx_yyy command\n  (gdb)\n\nNotice the warning mentions 'qqq_aaa' and 'xxx_yyy', I consider this\nto be wrong.  I think the proper warning should read:\n\n  (gdb) set qqq_aaa\n  Warning: 'set qqq_aaa', an alias for the command 'set xxx_yyy', is deprecated.\n  No alternative known.\n\nWith the 'set' prefixes added and a comma before the final 'is\ndeprecated'.  That is what this patch does.  The expected results are\nupdated as needed.\n\ngdb/ChangeLog:\n\n\t* cli/cli-decode.c (deprecated_cmd_warning): Ignore the prefix\n\tresult from lookup_cmd_composition_1, use the prefixes from both\n\tthe command and the alias instead.\n\t(lookup_cmd_composition_1): Initial prefix command is the based on\n\tthe search list being passed in.  Simplify the logic for tracking\n\tthe prefix command.  Replace a use of alloca with a local\n\tstd::string.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/commands.exp: Update expected results.",
    "tree": {
      "sha": "d04ecee3ab4fa36b055f2754dbc731cf7b3e21ac",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d04ecee3ab4fa36b055f2754dbc731cf7b3e21ac"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/19c659f164b9dc672580ec459c9cfef84dd0f879",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/19c659f164b9dc672580ec459c9cfef84dd0f879",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/19c659f164b9dc672580ec459c9cfef84dd0f879",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/19c659f164b9dc672580ec459c9cfef84dd0f879/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "44c77c32720c25f56a34ec4114c7addf5836ba97",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44c77c32720c25f56a34ec4114c7addf5836ba97",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/44c77c32720c25f56a34ec4114c7addf5836ba97"
    }
  ],
  "stats": {
    "total": 102,
    "additions": 59,
    "deletions": 43
  },
  "files": [
    {
      "sha": "d2105e5cf02452db08fb184250f0f36c0037ad99",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/19c659f164b9dc672580ec459c9cfef84dd0f879/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/19c659f164b9dc672580ec459c9cfef84dd0f879/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=19c659f164b9dc672580ec459c9cfef84dd0f879",
      "patch": "@@ -1,3 +1,13 @@\n+2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* cli/cli-decode.c (deprecated_cmd_warning): Ignore the prefix\n+\tresult from lookup_cmd_composition_1, use the prefixes from both\n+\tthe command and the alias instead.\n+\t(lookup_cmd_composition_1): Initial prefix command is the based on\n+\tthe search list being passed in.  Simplify the logic for tracking\n+\tthe prefix command.  Replace a use of alloca with a local\n+\tstd::string.\n+\n 2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* cli/cli-decode.c (deprecated_cmd_warning): Use nullptr instead"
    },
    {
      "sha": "13260ac44e654825dcede458cb31ff27b458b565",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 43,
      "deletions": 41,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/19c659f164b9dc672580ec459c9cfef84dd0f879/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/19c659f164b9dc672580ec459c9cfef84dd0f879/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=19c659f164b9dc672580ec459c9cfef84dd0f879",
      "patch": "@@ -1901,12 +1901,21 @@ void\n deprecated_cmd_warning (const char *text, struct cmd_list_element *list)\n {\n   struct cmd_list_element *alias = nullptr;\n-  struct cmd_list_element *prefix_cmd = nullptr;\n   struct cmd_list_element *cmd = nullptr;\n \n-  /* Return if text doesn't evaluate to a command.  */\n-  if (!lookup_cmd_composition_1 (text, &alias, &prefix_cmd, &cmd, list))\n-    return;\n+  /* Return if text doesn't evaluate to a command.  We place this lookup\n+     within its own scope so that the PREFIX_CMD local is not visible\n+     later in this function.  The value returned in PREFIX_CMD is based on\n+     the prefix found in TEXT, and is our case this prefix can be missing\n+     in some situations (when LIST is not the global CMDLIST).\n+\n+     It is better for our purposes to use the prefix commands directly from\n+     the ALIAS and CMD results.  */\n+  {\n+    struct cmd_list_element *prefix_cmd = nullptr;\n+    if (!lookup_cmd_composition_1 (text, &alias, &prefix_cmd, &cmd, list))\n+      return;\n+  }\n \n   /* Return if nothing is deprecated.  */\n   if (!((alias != nullptr ? alias->deprecated_warn_user : 0)\n@@ -1915,21 +1924,27 @@ deprecated_cmd_warning (const char *text, struct cmd_list_element *list)\n \n   /* Join command prefix (if any) and the command name.  */\n   std::string tmp_cmd_str;\n-  if (prefix_cmd != nullptr)\n-    tmp_cmd_str += std::string (prefix_cmd->prefixname);\n+  if (cmd->prefix != nullptr)\n+    tmp_cmd_str += std::string (cmd->prefix->prefixname);\n   tmp_cmd_str += std::string (cmd->name);\n \n   /* Display the appropriate first line, this warns that the thing the user\n      entered is deprecated.  */\n   if (alias != nullptr)\n     {\n+      /* Join the alias prefix (if any) and the alias name.  */\n+      std::string tmp_alias_str;\n+      if (alias->prefix != nullptr)\n+\ttmp_alias_str += std::string (alias->prefix->prefixname);\n+      tmp_alias_str += std::string (alias->name);\n+\n       if (cmd->cmd_deprecated)\n \tprintf_filtered (_(\"Warning: command '%s' (%s) is deprecated.\\n\"),\n-\t\t\t tmp_cmd_str.c_str (), alias->name);\n+\t\t\t tmp_cmd_str.c_str (), tmp_alias_str.c_str ());\n       else\n-\tprintf_filtered (_(\"Warning: '%s', an alias for the command '%s' \"\n+\tprintf_filtered (_(\"Warning: '%s', an alias for the command '%s', \"\n \t\t\t   \"is deprecated.\\n\"),\n-\t\t\t alias->name, tmp_cmd_str.c_str ());\n+\t\t\t tmp_alias_str.c_str (), tmp_cmd_str.c_str ());\n     }\n   else\n     printf_filtered (_(\"Warning: command '%s' is deprecated.\\n\"),\n@@ -1976,66 +1991,53 @@ lookup_cmd_composition_1 (const char *text,\n \t\t\t  struct cmd_list_element **cmd,\n \t\t\t  struct cmd_list_element *cur_list)\n {\n-  char *command;\n-  int len, nfound;\n-  struct cmd_list_element *prev_cmd;\n-\n-  *alias = NULL;\n-  *prefix_cmd = NULL;\n-  *cmd = NULL;\n+  *alias = nullptr;\n+  *prefix_cmd = cur_list->prefix;\n+  *cmd = nullptr;\n \n   text = skip_spaces (text);\n \n+  /* Go through as many command lists as we need to, to find the command\n+     TEXT refers to.  */\n   while (1)\n     {\n-      /* Go through as many command lists as we need to,\n-\t to find the command TEXT refers to.  */\n-\n-      prev_cmd = *cmd;\n-\n       /* Identify the name of the command.  */\n-      len = find_command_name_length (text);\n+      int len = find_command_name_length (text);\n \n       /* If nothing but whitespace, return.  */\n       if (len == 0)\n \treturn 0;\n \n       /* TEXT is the start of the first command word to lookup (and\n \t it's length is LEN).  We copy this into a local temporary.  */\n-\n-      command = (char *) alloca (len + 1);\n-      memcpy (command, text, len);\n-      command[len] = '\\0';\n+      std::string command (text, len);\n \n       /* Look it up.  */\n-      *cmd = 0;\n-      nfound = 0;\n-      *cmd = find_cmd (command, len, cur_list, 1, &nfound);\n-\n-      if (*cmd == CMD_LIST_AMBIGUOUS)\n-\t{\n-\t  return 0;              /* ambiguous */\n-\t}\n+      int nfound = 0;\n+      *cmd = find_cmd (command.c_str (), len, cur_list, 1, &nfound);\n \n-      if (*cmd == NULL)\n-\treturn 0;                /* nothing found */\n+      /* We only handle the case where a single command was found.  */\n+      if (*cmd == CMD_LIST_AMBIGUOUS || *cmd == nullptr)\n+\treturn 0;\n       else\n \t{\n \t  if ((*cmd)->cmd_pointer)\n \t    {\n-\t      /* cmd was actually an alias, we note that an alias was\n-\t\t used (by assigning *ALIAS) and we set *CMD.  */\n+\t      /* If the command was actually an alias, we note that an\n+\t\t alias was used (by assigning *ALIAS) and we set *CMD.  */\n \t      *alias = *cmd;\n \t      *cmd = (*cmd)->cmd_pointer;\n \t    }\n-\t  *prefix_cmd = prev_cmd;\n \t}\n \n       text += len;\n       text = skip_spaces (text);\n \n-      if ((*cmd)->prefixlist && *text != '\\0')\n-\tcur_list = *(*cmd)->prefixlist;\n+      if ((*cmd)->prefixlist != nullptr && *text != '\\0')\n+\t{\n+\t  cur_list = *(*cmd)->prefixlist;\n+\t  *prefix_cmd = *cmd;\n+\t}\n       else\n \treturn 1;\n     }"
    },
    {
      "sha": "5796e61688bec5d6c44ce90b03a9e7769d9331f1",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/19c659f164b9dc672580ec459c9cfef84dd0f879/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/19c659f164b9dc672580ec459c9cfef84dd0f879/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=19c659f164b9dc672580ec459c9cfef84dd0f879",
      "patch": "@@ -1,3 +1,7 @@\n+2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.base/commands.exp: Update expected results.\n+\n 2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \tPR cli/15104"
    },
    {
      "sha": "f621815e4b69b4d50c346b2ca591539288001e23",
      "filename": "gdb/testsuite/gdb.base/commands.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/19c659f164b9dc672580ec459c9cfef84dd0f879/gdb/testsuite/gdb.base/commands.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/19c659f164b9dc672580ec459c9cfef84dd0f879/gdb/testsuite/gdb.base/commands.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/commands.exp?ref=19c659f164b9dc672580ec459c9cfef84dd0f879",
      "patch": "@@ -663,7 +663,7 @@ proc_with_prefix deprecated_command_test {} {\n \n     gdb_test_no_output \"maintenance deprecate p \\\"new_p\\\"\" \"maintenance deprecate p \\\"new_p\\\" /1/\"\n     gdb_test \"p 5\" \\\n-\t    \"Warning: 'p', an alias for the command 'print' is deprecated.*Use 'new_p'.*\" \\\n+\t    \"Warning: 'p', an alias for the command 'print', is deprecated.*Use 'new_p'.*\" \\\n \t    \"p deprecated warning, with replacement\"\n     gdb_test \"p 5\" \".\\[0-9\\]* = 5.*\" \"deprecated warning goes away /1/\"\n \n@@ -704,7 +704,7 @@ maintenance deprecate set qqq_aaa\"\n     gdb_test_no_output \"source $file1\" \\\n \t\"source file containing xxx_yyy command and its alias\"\n     gdb_test \"set qqq_aaa\" \\\n-\t\"Warning: 'qqq_aaa', an alias for the command 'xxx_yyy' is deprecated\\\\.\\r\\n.*No alternative known\\\\..*\" \\\n+\t\"Warning: 'set qqq_aaa', an alias for the command 'set xxx_yyy', is deprecated\\\\.\\r\\n.*No alternative known\\\\..*\" \\\n \t\"deprecated alias with prefix give a warning\"\n \n     file delete $file1"
    }
  ]
}