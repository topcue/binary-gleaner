{
  "sha": "dec7b24be89fe0496f9442232bcbfcb16e030742",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGVjN2IyNGJlODlmZTA0OTZmOTQ0MjIzMmJjYmZjYjE2ZTAzMDc0Mg==",
  "commit": {
    "author": {
      "name": "YunQiang Su",
      "email": "syq@debian.org",
      "date": "2020-02-28T07:58:13Z"
    },
    "committer": {
      "name": "Chenghua Xu",
      "email": "paul.hua.gm@gmail.com",
      "date": "2020-02-28T08:47:55Z"
    },
    "message": "MIPS/fix_loongson3_llsc: fix when target has multi labels\n\nWhen there is multi-labels on the same insn, the current code\nwill take care about the last one. it may cause that no sync\nis added at the target.\n\nHere we scan all labels with same value of\n   S_GET_VALUE(label_list->label)\nby label_list->next.\n\n2020-02-28  YunQiang Su  <syq@debian.org>\n\n    PR gas/25539\n    * config/tc-mips.c (fix_loongson3_llsc): Compare label value\n    to handle multi-labels.\n    (has_label_name): New.",
    "tree": {
      "sha": "87f51fe199f60f36ee0ea1a85437f0f9f002be1d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/87f51fe199f60f36ee0ea1a85437f0f9f002be1d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dec7b24be89fe0496f9442232bcbfcb16e030742",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dec7b24be89fe0496f9442232bcbfcb16e030742",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dec7b24be89fe0496f9442232bcbfcb16e030742",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dec7b24be89fe0496f9442232bcbfcb16e030742/comments",
  "author": {
    "login": "wzssyqa",
    "id": 163337,
    "node_id": "MDQ6VXNlcjE2MzMzNw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/163337?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wzssyqa",
    "html_url": "https://github.com/wzssyqa",
    "followers_url": "https://api.github.com/users/wzssyqa/followers",
    "following_url": "https://api.github.com/users/wzssyqa/following{/other_user}",
    "gists_url": "https://api.github.com/users/wzssyqa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wzssyqa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wzssyqa/subscriptions",
    "organizations_url": "https://api.github.com/users/wzssyqa/orgs",
    "repos_url": "https://api.github.com/users/wzssyqa/repos",
    "events_url": "https://api.github.com/users/wzssyqa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wzssyqa/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ChenghuaXu",
    "id": 87753117,
    "node_id": "MDQ6VXNlcjg3NzUzMTE3",
    "avatar_url": "https://avatars.githubusercontent.com/u/87753117?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ChenghuaXu",
    "html_url": "https://github.com/ChenghuaXu",
    "followers_url": "https://api.github.com/users/ChenghuaXu/followers",
    "following_url": "https://api.github.com/users/ChenghuaXu/following{/other_user}",
    "gists_url": "https://api.github.com/users/ChenghuaXu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ChenghuaXu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ChenghuaXu/subscriptions",
    "organizations_url": "https://api.github.com/users/ChenghuaXu/orgs",
    "repos_url": "https://api.github.com/users/ChenghuaXu/repos",
    "events_url": "https://api.github.com/users/ChenghuaXu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ChenghuaXu/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "182ec6707c9fcca84d488413d4ddbbd9d12639fe",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/182ec6707c9fcca84d488413d4ddbbd9d12639fe",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/182ec6707c9fcca84d488413d4ddbbd9d12639fe"
    }
  ],
  "stats": {
    "total": 56,
    "additions": 51,
    "deletions": 5
  },
  "files": [
    {
      "sha": "d146fe321e7302f772e79e3bbfca29a27756c210",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dec7b24be89fe0496f9442232bcbfcb16e030742/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dec7b24be89fe0496f9442232bcbfcb16e030742/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=dec7b24be89fe0496f9442232bcbfcb16e030742",
      "patch": "@@ -1,3 +1,10 @@\n+2020-02-28  YunQiang Su  <syq@debian.org>\n+\n+\tPR gas/25539\n+\t* config/tc-mips.c (fix_loongson3_llsc): Compare label value\n+\tto handle multi-labels.\n+\t(has_label_name): New.\n+\n 2020-02-26  Matthew Malcomson  <matthew.malcomson@arm.com>\n \n \t* config/tc-arm.c (enum pred_instruction_type): Remove"
    },
    {
      "sha": "a00c69b689574f58ac96e6b16eb2f9b28315b3be",
      "filename": "gas/config/tc-mips.c",
      "status": "modified",
      "additions": 44,
      "deletions": 5,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dec7b24be89fe0496f9442232bcbfcb16e030742/gas/config/tc-mips.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dec7b24be89fe0496f9442232bcbfcb16e030742/gas/config/tc-mips.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-mips.c?ref=dec7b24be89fe0496f9442232bcbfcb16e030742",
      "patch": "@@ -812,6 +812,9 @@ static int mips_debug = 0;\n    fill a branch delay slot.  */\n static struct mips_cl_insn history[1 + MAX_NOPS + MAX_LLSC_RANGE];\n \n+/* The maximum number of LABELS detect for the same address.  */\n+#define MAX_LABELS_SAME 10\n+\n /* Arrays of operands for each instruction.  */\n #define MAX_OPERANDS 6\n struct mips_operand_array\n@@ -6901,7 +6904,21 @@ fix_loongson2f (struct mips_cl_insn * ip)\n     fix_loongson2f_jump (ip);\n }\n \n-/* Fix loongson3 llsc errata: Insert sync before ll/lld. */\n+static bfd_boolean\n+has_label_name (const char *arr[], size_t len ,const char *s)\n+{\n+  unsigned long i;\n+  for (i = 0; i < len; i++)\n+    {\n+      if (!arr[i])\n+\treturn FALSE;\n+      if (streq (arr[i], s))\n+\treturn TRUE;\n+    }\n+  return FALSE;\n+}\n+\n+/* Fix loongson3 llsc errata: Insert sync before ll/lld.  */\n \n static void\n fix_loongson3_llsc (struct mips_cl_insn * ip)\n@@ -6915,10 +6932,30 @@ fix_loongson3_llsc (struct mips_cl_insn * ip)\n       && S_IS_LOCAL (seg_info (now_seg)->label_list->label)\n       && (strcmp (ip->insn_mo->name, \"sync\") != 0))\n     {\n-      const char *label_name = S_GET_NAME (seg_info (now_seg)->label_list->label);\n-      unsigned long lookback = ARRAY_SIZE (history);\n       unsigned long i;\n+      valueT label_value;\n+      const char *label_names[MAX_LABELS_SAME];\n+      const char *label_name;\n+\n+      label_name = S_GET_NAME (seg_info (now_seg)->label_list->label);\n+      label_names[0] = label_name;\n+      struct insn_label_list *llist = seg_info (now_seg)->label_list;\n+      label_value = S_GET_VALUE (llist->label);\n \n+      for (i = 1; i < MAX_LABELS_SAME; i++)\n+\t{\n+\t  llist = llist->next;\n+\t  if (!llist)\n+\t    break;\n+\t  if (S_GET_VALUE (llist->label) == label_value)\n+\t    label_names[i] = S_GET_NAME (llist->label);\n+\t  else\n+\t    break;\n+\t}\n+      for (; i < MAX_LABELS_SAME; i++)\n+\tlabel_names[i] = NULL;\n+\n+      unsigned long lookback = ARRAY_SIZE (history);\n       for (i = 0; i < lookback; i++)\n \t{\n \t  if (streq (history[i].insn_mo->name, \"ll\")\n@@ -6938,7 +6975,9 @@ fix_loongson3_llsc (struct mips_cl_insn * ip)\n \n \t\t  if (delayed_branch_p (&history[j]))\n \t\t    {\n-\t\t      if (streq (history[j].target, label_name))\n+\t\t      if (has_label_name (label_names,\n+\t\t\t\t\t  MAX_LABELS_SAME,\n+\t\t\t\t\t  history[j].target))\n \t\t\t{\n \t\t\t  add_fixed_insn (&sync_insn);\n \t\t\t  insert_into_history (0, 1, &sync_insn);\n@@ -6952,7 +6991,7 @@ fix_loongson3_llsc (struct mips_cl_insn * ip)\n     }\n   /* If we find a sc, we look forward to look for an branch insn,\n      and see whether it jump back and out of ll/sc.  */\n-  else if (streq(ip->insn_mo->name, \"sc\") || streq(ip->insn_mo->name, \"scd\"))\n+  else if (streq (ip->insn_mo->name, \"sc\") || streq (ip->insn_mo->name, \"scd\"))\n     {\n       unsigned long lookback = ARRAY_SIZE (history) - 1;\n       unsigned long i;"
    }
  ]
}