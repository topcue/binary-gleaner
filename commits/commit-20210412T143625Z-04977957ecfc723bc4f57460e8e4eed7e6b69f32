{
  "sha": "04977957ecfc723bc4f57460e8e4eed7e6b69f32",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDQ5Nzc5NTdlY2ZjNzIzYmM0ZjU3NDYwZThlNGVlZDdlNmI2OWYzMg==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2021-04-12T12:14:06Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2021-04-12T14:36:25Z"
    },
    "message": "gdbserver: constify the 'pid_to_exec_file' target op\n\ngdbserver/ChangeLog:\n2021-04-12  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* target.h (class process_stratum_target) <pid_to_exec_file>:\n\tConstify the return type.  Update the definition/references below.\n\t* target.cc (process_stratum_target::pid_to_exec_file)\n\t* linux-low.h (class linux_process_target) <pid_to_exec_file>\n\t* linux-low.cc (linux_process_target::pid_to_exec_file)\n\t* netbsd-low.h (class netbsd_process_target) <pid_to_exec_file>\n\t* netbsd-low.cc (netbsd_process_target::pid_to_exec_file)\n\t* server.cc (handle_qxfer_exec_file)",
    "tree": {
      "sha": "f81ccf59234a4a9aa2f325d6b6d31995229a359a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f81ccf59234a4a9aa2f325d6b6d31995229a359a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/04977957ecfc723bc4f57460e8e4eed7e6b69f32",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/04977957ecfc723bc4f57460e8e4eed7e6b69f32",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/04977957ecfc723bc4f57460e8e4eed7e6b69f32",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/04977957ecfc723bc4f57460e8e4eed7e6b69f32/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9d8f30221b70361930fb82bf81e448b82f36cd58",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d8f30221b70361930fb82bf81e448b82f36cd58",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9d8f30221b70361930fb82bf81e448b82f36cd58"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 19,
    "deletions": 9
  },
  "files": [
    {
      "sha": "7692979f2513635656ba71fb266781f13f2060ac",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/04977957ecfc723bc4f57460e8e4eed7e6b69f32/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/04977957ecfc723bc4f57460e8e4eed7e6b69f32/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=04977957ecfc723bc4f57460e8e4eed7e6b69f32",
      "patch": "@@ -1,3 +1,14 @@\n+2021-04-12  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* target.h (class process_stratum_target) <pid_to_exec_file>:\n+\tConstify the return type.  Update the definition/references below.\n+\t* target.cc (process_stratum_target::pid_to_exec_file)\n+\t* linux-low.h (class linux_process_target) <pid_to_exec_file>\n+\t* linux-low.cc (linux_process_target::pid_to_exec_file)\n+\t* netbsd-low.h (class netbsd_process_target) <pid_to_exec_file>\n+\t* netbsd-low.cc (netbsd_process_target::pid_to_exec_file)\n+\t* server.cc (handle_qxfer_exec_file)\n+\n 2021-04-11  Eli Zaretskii  <eliz@gnu.org>\n \n \t* win32-low.cc (win32_add_dll): New function, with body almost"
    },
    {
      "sha": "251a54f5c4aa0bad78c23405fd1be375a3d876da",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/04977957ecfc723bc4f57460e8e4eed7e6b69f32/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/04977957ecfc723bc4f57460e8e4eed7e6b69f32/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=04977957ecfc723bc4f57460e8e4eed7e6b69f32",
      "patch": "@@ -6265,7 +6265,7 @@ linux_process_target::supports_pid_to_exec_file ()\n   return true;\n }\n \n-char *\n+const char *\n linux_process_target::pid_to_exec_file (int pid)\n {\n   return linux_proc_pid_to_exec_file (pid);"
    },
    {
      "sha": "d59ad386bd5daccccb9390cdc50424cc7d781c57",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/04977957ecfc723bc4f57460e8e4eed7e6b69f32/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/04977957ecfc723bc4f57460e8e4eed7e6b69f32/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=04977957ecfc723bc4f57460e8e4eed7e6b69f32",
      "patch": "@@ -292,7 +292,7 @@ class linux_process_target : public process_stratum_target\n \n   bool supports_pid_to_exec_file () override;\n \n-  char *pid_to_exec_file (int pid) override;\n+  const char *pid_to_exec_file (int pid) override;\n \n   bool supports_multifs () override;\n "
    },
    {
      "sha": "84e34d0e065ea2431ca00b383ec280e2b4efd186",
      "filename": "gdbserver/netbsd-low.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/04977957ecfc723bc4f57460e8e4eed7e6b69f32/gdbserver/netbsd-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/04977957ecfc723bc4f57460e8e4eed7e6b69f32/gdbserver/netbsd-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/netbsd-low.cc?ref=04977957ecfc723bc4f57460e8e4eed7e6b69f32",
      "patch": "@@ -1193,10 +1193,10 @@ netbsd_process_target::supports_qxfer_libraries_svr4 ()\n /* Return the name of a file that can be opened to get the symbols for\n    the child process identified by PID.  */\n \n-char *\n+const char *\n netbsd_process_target::pid_to_exec_file (pid_t pid)\n {\n-  return const_cast<char *> (netbsd_nat::pid_to_exec_file (pid));\n+  return netbsd_nat::pid_to_exec_file (pid);\n }\n \n /* Implementation of the target_ops method \"supports_pid_to_exec_file\".  */"
    },
    {
      "sha": "b98588fdf33eb04f23e5cc49c13629ba92e19bca",
      "filename": "gdbserver/netbsd-low.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/04977957ecfc723bc4f57460e8e4eed7e6b69f32/gdbserver/netbsd-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/04977957ecfc723bc4f57460e8e4eed7e6b69f32/gdbserver/netbsd-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/netbsd-low.h?ref=04977957ecfc723bc4f57460e8e4eed7e6b69f32",
      "patch": "@@ -121,7 +121,7 @@ class netbsd_process_target : public process_stratum_target\n \n   bool supports_pid_to_exec_file () override;\n \n-  char *pid_to_exec_file (int pid) override;\n+  const char *pid_to_exec_file (int pid) override;\n \n   const char *thread_name (ptid_t thread) override;\n "
    },
    {
      "sha": "a5d9f85216d1e2e8bf2823da519dbc494e9ced87",
      "filename": "gdbserver/server.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/04977957ecfc723bc4f57460e8e4eed7e6b69f32/gdbserver/server.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/04977957ecfc723bc4f57460e8e4eed7e6b69f32/gdbserver/server.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/server.cc?ref=04977957ecfc723bc4f57460e8e4eed7e6b69f32",
      "patch": "@@ -1466,7 +1466,6 @@ handle_qxfer_exec_file (const char *annex,\n \t\t\tgdb_byte *readbuf, const gdb_byte *writebuf,\n \t\t\tULONGEST offset, LONGEST len)\n {\n-  char *file;\n   ULONGEST pid;\n   int total_len;\n \n@@ -1490,7 +1489,7 @@ handle_qxfer_exec_file (const char *annex,\n   if (pid <= 0)\n     return -1;\n \n-  file = the_target->pid_to_exec_file (pid);\n+  const char *file = the_target->pid_to_exec_file (pid);\n   if (file == NULL)\n     return -1;\n "
    },
    {
      "sha": "5ec3e5cce9f9184dd49bfbad9a0b4fb0e1c99bfe",
      "filename": "gdbserver/target.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/04977957ecfc723bc4f57460e8e4eed7e6b69f32/gdbserver/target.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/04977957ecfc723bc4f57460e8e4eed7e6b69f32/gdbserver/target.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.cc?ref=04977957ecfc723bc4f57460e8e4eed7e6b69f32",
      "patch": "@@ -783,7 +783,7 @@ process_stratum_target::supports_pid_to_exec_file ()\n   return false;\n }\n \n-char *\n+const char *\n process_stratum_target::pid_to_exec_file (int pid)\n {\n   gdb_assert_not_reached (\"target op pid_to_exec_file not supported\");"
    },
    {
      "sha": "769d82811766572258d352ab99cd1e2c08629de8",
      "filename": "gdbserver/target.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/04977957ecfc723bc4f57460e8e4eed7e6b69f32/gdbserver/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/04977957ecfc723bc4f57460e8e4eed7e6b69f32/gdbserver/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.h?ref=04977957ecfc723bc4f57460e8e4eed7e6b69f32",
      "patch": "@@ -440,7 +440,7 @@ class process_stratum_target\n      character string containing the pathname is returned.  This\n      string should be copied into a buffer by the client if the string\n      will not be immediately used, or if it must persist.  */\n-  virtual char *pid_to_exec_file (int pid);\n+  virtual const char *pid_to_exec_file (int pid);\n \n   /* Return true if any of the multifs ops is supported.  */\n   virtual bool supports_multifs ();"
    }
  ]
}