{
  "sha": "8b301fbb6114faba4e95e24e3a1c3108f64885c6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGIzMDFmYmI2MTE0ZmFiYTRlOTVlMjRlM2ExYzMxMDhmNjQ4ODVjNg==",
  "commit": {
    "author": {
      "name": "Mihail Ionescu",
      "email": "mihail.ionescu@arm.com",
      "date": "2019-11-22T13:44:17Z"
    },
    "committer": {
      "name": "Tamar Christina",
      "email": "tamar.christina@arm.com",
      "date": "2019-11-22T13:47:26Z"
    },
    "message": "Arm: Change CRC from fpu feature to archititectural extension\n\nThis patch changes the CRC extension to use the core feature bits instead\nof the coproc/fpu feature bits.\nCRC is not an fpu feature and it causes issues with the new fpu reset\npatch (f439988037a589de3798f44e7268301adaec21a9). CRC can be set using\nthe '.arch_extension' directive, which sets bits in the coproc bitfield. When\na '.fpu' directive is encountered, the CRC feature bit gets removed and\nthere is no way to set it back using '.fpu'.\nWith this patch, CRC will be marked in the feature core bits, which prevents\nit from getting removed when setting/changing the fpu options.\n\ngas/ChangeLog:\n\n\t* config/tc-arm.c (arm_ext_crc): New.\n\t(crc_ext_armv8): Remove.\n\t(insns): Rename crc_ext_armv8 to arm_ext_crc.\n\t(arm_cpus): Replace CRC_EXT_ARMV8 with ARM_EXT2_CRC.\n\t(armv8a_ext_table, armv8r_ext_table,\n\tarm_option_extension_value_table): Redefine the crc\n\textension in terms of ARM_EXT2_CRC.\n\t* gas/testsuite/gas/arm/crc-ext.s: New.\n\t* gas/testsuite/gas/arm/crc-ext.d: New.\n\ninclude/ChangeLog:\n\n\t* opcode/arm.h (ARM_EXT2_CRC): New extension feature\n\tto replace CRC_EXT_ARMV8.\n\t(CRC_EXT_ARMV8): Remove and mark bit as unused.\n\t(ARM_ARCH_V8A_CRC, ARM_ARCH_V8_1A, ARM_ARCH_V8_2A,\n\tARM_ARCH_V8_3A, ARM_ARCH_V8_4A, ARM_ARCH_V8_5A,\n\tARM_ARCH_V8_6A): Redefine using ARM_EXT2_CRC instead of\n\tCRC_EXT_ARMV8.\n\nopcodes/ChangeLog:\n\n\t* opcodes/arm-dis.c (arm_opcodes, thumb32_opcodes):\n\tChange the coproc CRC conditions to use the extension\n\tfeature set, second word, base on ARM_EXT2_CRC.",
    "tree": {
      "sha": "3dffe085e8fd31163d34995522f90f4ebf97c532",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3dffe085e8fd31163d34995522f90f4ebf97c532"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8b301fbb6114faba4e95e24e3a1c3108f64885c6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8b301fbb6114faba4e95e24e3a1c3108f64885c6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8b301fbb6114faba4e95e24e3a1c3108f64885c6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8b301fbb6114faba4e95e24e3a1c3108f64885c6/comments",
  "author": null,
  "committer": {
    "login": "TamarChristinaArm",
    "id": 48126768,
    "node_id": "MDQ6VXNlcjQ4MTI2NzY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TamarChristinaArm",
    "html_url": "https://github.com/TamarChristinaArm",
    "followers_url": "https://api.github.com/users/TamarChristinaArm/followers",
    "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}",
    "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions",
    "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs",
    "repos_url": "https://api.github.com/users/TamarChristinaArm/repos",
    "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a2e098c378a96e7d7760aa52c1b49680c67674be",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a2e098c378a96e7d7760aa52c1b49680c67674be",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a2e098c378a96e7d7760aa52c1b49680c67674be"
    }
  ],
  "stats": {
    "total": 150,
    "additions": 106,
    "deletions": 44
  },
  "files": [
    {
      "sha": "1eefec93bf691202e00c337d66cd1e03cc8d01d9",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8b301fbb6114faba4e95e24e3a1c3108f64885c6/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8b301fbb6114faba4e95e24e3a1c3108f64885c6/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=8b301fbb6114faba4e95e24e3a1c3108f64885c6",
      "patch": "@@ -1,3 +1,15 @@\n+2019-11-22  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* config/tc-arm.c (arm_ext_crc): New.\n+\t(crc_ext_armv8): Remove.\n+\t(insns): Rename crc_ext_armv8 to arm_ext_crc.\n+\t(arm_cpus): Replace CRC_EXT_ARMV8 with ARM_EXT2_CRC.\n+\t(armv8a_ext_table, armv8r_ext_table,\n+\tarm_option_extension_value_table): Redefine the crc\n+\textension in terms of ARM_EXT2_CRC.\n+\t* gas/testsuite/gas/arm/crc-ext.s: New.\n+\t* gas/testsuite/gas/arm/crc-ext.d: New.\n+\n 2019-11-20  Alan Modra  <amodra@gmail.com>\n \n \tPR 24944"
    },
    {
      "sha": "28dc6244510f66f456f036ec3b66b77db7cb61b0",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 17,
      "deletions": 16,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8b301fbb6114faba4e95e24e3a1c3108f64885c6/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8b301fbb6114faba4e95e24e3a1c3108f64885c6/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=8b301fbb6114faba4e95e24e3a1c3108f64885c6",
      "patch": "@@ -279,6 +279,8 @@ static const arm_feature_set arm_ext_bf16 =\n   ARM_FEATURE_CORE_HIGH (ARM_EXT2_BF16);\n static const arm_feature_set arm_ext_i8mm =\n   ARM_FEATURE_CORE_HIGH (ARM_EXT2_I8MM);\n+static const arm_feature_set arm_ext_crc =\n+  ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC);\n \n static const arm_feature_set arm_arch_any = ARM_ANY;\n static const arm_feature_set fpu_any = FPU_ANY;\n@@ -334,8 +336,6 @@ static const arm_feature_set fpu_neon_ext_armv8 =\n   ARM_FEATURE_COPROC (FPU_NEON_EXT_ARMV8);\n static const arm_feature_set fpu_crypto_ext_armv8 =\n   ARM_FEATURE_COPROC (FPU_CRYPTO_EXT_ARMV8);\n-static const arm_feature_set crc_ext_armv8 =\n-  ARM_FEATURE_COPROC (CRC_EXT_ARMV8);\n static const arm_feature_set fpu_neon_ext_v8_1 =\n   ARM_FEATURE_COPROC (FPU_NEON_EXT_RDMA);\n static const arm_feature_set fpu_neon_ext_dotprod =\n@@ -24502,9 +24502,9 @@ static const struct asm_opcode insns[] =\n   nUF(sha256su0, _sha2op, 2, (RNQ, RNQ), sha256su0),\n \n #undef  ARM_VARIANT\n-#define ARM_VARIANT   & crc_ext_armv8\n+#define ARM_VARIANT   & arm_ext_crc\n #undef  THUMB_VARIANT\n-#define THUMB_VARIANT & crc_ext_armv8\n+#define THUMB_VARIANT & arm_ext_crc\n   TUEc(\"crc32b\", 1000040, fac0f080, 3, (RR, oRR, RR), crc32b),\n   TUEc(\"crc32h\", 1200040, fac0f090, 3, (RR, oRR, RR), crc32h),\n   TUEc(\"crc32w\", 1400040, fac0f0a0, 3, (RR, oRR, RR), crc32w),\n@@ -30946,25 +30946,25 @@ static const struct arm_cpu_option_table arm_cpus[] =\n \t       ARM_ARCH_NONE,\n \t       FPU_ARCH_NEON_VFP_V4),\n   ARM_CPU_OPT (\"cortex-a32\",\t  \"Cortex-A32\",\t       ARM_ARCH_V8A,\n-\t       ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+\t       ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n \t       FPU_ARCH_CRYPTO_NEON_VFP_ARMV8),\n   ARM_CPU_OPT (\"cortex-a35\",\t  \"Cortex-A35\",\t       ARM_ARCH_V8A,\n-\t       ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+\t       ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n \t       FPU_ARCH_CRYPTO_NEON_VFP_ARMV8),\n   ARM_CPU_OPT (\"cortex-a53\",\t  \"Cortex-A53\",\t       ARM_ARCH_V8A,\n-\t       ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+\t       ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n \t       FPU_ARCH_CRYPTO_NEON_VFP_ARMV8),\n   ARM_CPU_OPT (\"cortex-a55\",    \"Cortex-A55\",\t       ARM_ARCH_V8_2A,\n \t       ARM_FEATURE_CORE_HIGH (ARM_EXT2_FP16_INST),\n \t       FPU_ARCH_CRYPTO_NEON_VFP_ARMV8_DOTPROD),\n   ARM_CPU_OPT (\"cortex-a57\",\t  \"Cortex-A57\",\t       ARM_ARCH_V8A,\n-\t       ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+\t       ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n \t       FPU_ARCH_CRYPTO_NEON_VFP_ARMV8),\n   ARM_CPU_OPT (\"cortex-a72\",\t  \"Cortex-A72\",\t       ARM_ARCH_V8A,\n-\t      ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+\t       ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n \t      FPU_ARCH_CRYPTO_NEON_VFP_ARMV8),\n   ARM_CPU_OPT (\"cortex-a73\",\t  \"Cortex-A73\",\t       ARM_ARCH_V8A,\n-\t      ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+\t       ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n \t      FPU_ARCH_CRYPTO_NEON_VFP_ARMV8),\n   ARM_CPU_OPT (\"cortex-a75\",    \"Cortex-A75\",\t       ARM_ARCH_V8_2A,\n \t       ARM_FEATURE_CORE_HIGH (ARM_EXT2_FP16_INST),\n@@ -30997,7 +30997,7 @@ static const struct arm_cpu_option_table arm_cpus[] =\n \t       ARM_FEATURE_CORE_LOW (ARM_EXT_ADIV),\n \t       FPU_ARCH_VFP_V3D16),\n   ARM_CPU_OPT (\"cortex-r52\",\t  \"Cortex-R52\",\t       ARM_ARCH_V8R,\n-\t      ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+\t       ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n \t      FPU_ARCH_NEON_VFP_ARMV8),\n   ARM_CPU_OPT (\"cortex-m35p\",\t  \"Cortex-M35P\",       ARM_ARCH_V8M_MAIN,\n \t       ARM_FEATURE_CORE_LOW (ARM_EXT_V5ExP | ARM_EXT_V6_DSP),\n@@ -31027,7 +31027,7 @@ static const struct arm_cpu_option_table arm_cpus[] =\n \t       ARM_ARCH_NONE,\n \t       FPU_NONE),\n   ARM_CPU_OPT (\"exynos-m1\",\t  \"Samsung Exynos M1\", ARM_ARCH_V8A,\n-\t       ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+\t       ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n \t       FPU_ARCH_CRYPTO_NEON_VFP_ARMV8),\n   ARM_CPU_OPT (\"neoverse-n1\",    \"Neoverse N1\",\t       ARM_ARCH_V8_2A,\n \t       ARM_FEATURE_CORE_HIGH (ARM_EXT2_FP16_INST),\n@@ -31066,7 +31066,7 @@ static const struct arm_cpu_option_table arm_cpus[] =\n \t       ARM_ARCH_NONE,\n \t       FPU_ARCH_CRYPTO_NEON_VFP_ARMV8),\n   ARM_CPU_OPT (\"xgene2\",\t  \"APM X-Gene 2\",      ARM_ARCH_V8A,\n-\t       ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+\t       ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n \t       FPU_ARCH_CRYPTO_NEON_VFP_ARMV8),\n \n   { NULL, 0, ARM_ARCH_NONE, ARM_ARCH_NONE, ARM_ARCH_NONE, NULL }\n@@ -31186,7 +31186,7 @@ static const struct arm_ext_table armv7em_ext_table[] =\n \n static const struct arm_ext_table armv8a_ext_table[] =\n {\n-  ARM_ADD (\"crc\", ARCH_CRC_ARMV8),\n+  ARM_ADD (\"crc\", ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC)),\n   ARM_ADD (\"simd\", FPU_ARCH_NEON_VFP_ARMV8),\n   ARM_EXT (\"crypto\", FPU_ARCH_CRYPTO_NEON_VFP_ARMV8,\n \t   ARM_FEATURE_COPROC (FPU_CRYPTO_ARMV8)),\n@@ -31302,7 +31302,7 @@ static const struct arm_ext_table armv8_1m_main_ext_table[] =\n \n static const struct arm_ext_table armv8r_ext_table[] =\n {\n-  ARM_ADD (\"crc\", ARCH_CRC_ARMV8),\n+  ARM_ADD (\"crc\", ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC)),\n   ARM_ADD (\"simd\", FPU_ARCH_NEON_VFP_ARMV8),\n   ARM_EXT (\"crypto\", FPU_ARCH_CRYPTO_NEON_VFP_ARMV8,\n \t   ARM_FEATURE_COPROC (FPU_CRYPTO_ARMV8)),\n@@ -31407,7 +31407,8 @@ struct arm_option_extension_value_table\n    use the context sensitive approach using arm_ext_table's.  */\n static const struct arm_option_extension_value_table arm_extensions[] =\n {\n-  ARM_EXT_OPT (\"crc\",  ARCH_CRC_ARMV8, ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+  ARM_EXT_OPT (\"crc\",\t ARM_FEATURE_CORE_HIGH(ARM_EXT2_CRC),\n+\t\t\t ARM_FEATURE_CORE_HIGH(ARM_EXT2_CRC),\n \t\t\t ARM_FEATURE_CORE_LOW (ARM_EXT_V8)),\n   ARM_EXT_OPT (\"crypto\", FPU_ARCH_CRYPTO_NEON_VFP_ARMV8,\n \t\t\t ARM_FEATURE_COPROC (FPU_CRYPTO_ARMV8),"
    },
    {
      "sha": "0075b8b6ea78270532dc7d658d5fa36a73cc0464",
      "filename": "gas/testsuite/gas/arm/crc-ext.d",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8b301fbb6114faba4e95e24e3a1c3108f64885c6/gas/testsuite/gas/arm/crc-ext.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8b301fbb6114faba4e95e24e3a1c3108f64885c6/gas/testsuite/gas/arm/crc-ext.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/crc-ext.d?ref=8b301fbb6114faba4e95e24e3a1c3108f64885c6",
      "patch": "@@ -0,0 +1,14 @@\n+#as: -mno-warn-deprecated\n+#objdump: -dr\n+\n+.*:     file format .*\n+\n+Disassembly of section \\.text:\n+\n+00000000 <\\.text>:\n+ *[0-9a-f]+:\te1400042 \tcrc32w\tr0, r0, r2\n+ *[0-9a-f]+:\te1400042 \tcrc32w\tr0, r0, r2\n+ *[0-9a-f]+:\te1400042 \tcrc32w\tr0, r0, r2\n+ *[0-9a-f]+:\te1400042 \tcrc32w\tr0, r0, r2\n+ *[0-9a-f]+:\te1400042 \tcrc32w\tr0, r0, r2\n+ *[0-9a-f]+:\te1400042 \tcrc32w\tr0, r0, r2"
    },
    {
      "sha": "3f0cdb0d98d022e1d576dc37629f7f09e009729f",
      "filename": "gas/testsuite/gas/arm/crc-ext.s",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8b301fbb6114faba4e95e24e3a1c3108f64885c6/gas/testsuite/gas/arm/crc-ext.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8b301fbb6114faba4e95e24e3a1c3108f64885c6/gas/testsuite/gas/arm/crc-ext.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/crc-ext.s?ref=8b301fbb6114faba4e95e24e3a1c3108f64885c6",
      "patch": "@@ -0,0 +1,19 @@\n+.text\n+.arch\tarmv8-a\n+.arch_extension\tcrc\n+crc32w r0,r0,r2\n+\n+.fpu\tcrypto-neon-fp-armv8\n+crc32w r0,r0,r2\n+\n+.arch\tarmv8.1-a\n+crc32w r0,r0,r2\n+\n+.cpu cortex-a53\n+crc32w r0,r0,r2\n+\n+.cpu cortex-a55\n+crc32w r0,r0,r2\n+\n+.cpu cortex-a57\n+crc32w r0,r0,r2"
    },
    {
      "sha": "3ead0119101910a5c222af82b99efd0bf6772f50",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8b301fbb6114faba4e95e24e3a1c3108f64885c6/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8b301fbb6114faba4e95e24e3a1c3108f64885c6/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=8b301fbb6114faba4e95e24e3a1c3108f64885c6",
      "patch": "@@ -1,3 +1,13 @@\n+2019-11-22  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* opcode/arm.h (ARM_EXT2_CRC): New extension feature\n+\tto replace CRC_EXT_ARMV8.\n+\t(CRC_EXT_ARMV8): Remove and mark bit as unused.\n+\t(ARM_ARCH_V8A_CRC, ARM_ARCH_V8_1A, ARM_ARCH_V8_2A,\n+\tARM_ARCH_V8_3A, ARM_ARCH_V8_4A, ARM_ARCH_V8_5A,\n+\tARM_ARCH_V8_6A): Redefine using ARM_EXT2_CRC instead of\n+\tCRC_EXT_ARMV8.\n+\n 2019-11-18  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* dwarf2.h (DW_CIE_VERSION): Delete."
    },
    {
      "sha": "14bd1d17c9165846cf8b0156c35ede26c6ac4d07",
      "filename": "include/opcode/arm.h",
      "status": "modified",
      "additions": 16,
      "deletions": 16,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8b301fbb6114faba4e95e24e3a1c3108f64885c6/include/opcode/arm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8b301fbb6114faba4e95e24e3a1c3108f64885c6/include/opcode/arm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/arm.h?ref=8b301fbb6114faba4e95e24e3a1c3108f64885c6",
      "patch": "@@ -76,6 +76,7 @@\n #define ARM_EXT2_V8_6A\t     0x00010000\t/* ARM V8.6A.\t\t\t     */\n #define ARM_EXT2_BF16\t     0x00020000 /* ARMv8 bfloat16.\t\t     */\n #define ARM_EXT2_I8MM\t     0x00040000 /* ARMv8.6A i8mm.\t\t     */\n+#define ARM_EXT2_CRC\t     0x00080000\t/* ARMv8 CRC32 */\n \n /* Co-processor space extensions.  */\n #define ARM_CEXT_XSCALE\t     0x00000001\t/* Allow MIA etc.\t \t   */\n@@ -102,7 +103,7 @@\n #define FPU_VFP_EXT_ARMV8    0x00020000\t/* Double-precision FP for ARMv8.  */\n #define FPU_NEON_EXT_ARMV8   0x00010000\t/* Neon for ARMv8.\t\t   */\n #define FPU_CRYPTO_EXT_ARMV8 0x00008000\t/* Crypto for ARMv8.\t\t   */\n-#define CRC_EXT_ARMV8\t     0x00004000\t/* CRC32 for ARMv8.\t\t   */\n+/* Unused                    0x00004000\t*/\n #define FPU_VFP_EXT_ARMV8xD  0x00002000\t/* Single-precision FP for ARMv8.  */\n #define FPU_NEON_EXT_RDMA    0x00001000\t/* v8.1 Adv.SIMD extensions.\t   */\n #define FPU_NEON_EXT_DOTPROD 0x00000800\t/* Dot Product extension.\t   */\n@@ -273,7 +274,6 @@\n \t\t\t\t\t\t    | FPU_NEON_ARMV8\t \\\n \t\t\t\t\t\t    | FPU_VFP_ARMV8\t \\\n \t\t\t\t\t\t    | FPU_NEON_EXT_DOTPROD)\n-#define ARCH_CRC_ARMV8\t\tARM_FEATURE_COPROC (CRC_EXT_ARMV8)\n #define FPU_ARCH_NEON_VFP_ARMV8_1\t\t\t\t\t \\\n \t\t\t\tARM_FEATURE_COPROC (FPU_NEON_ARMV8_1\t \\\n \t\t\t\t\t\t    | FPU_VFP_ARMV8)\n@@ -342,22 +342,22 @@\n #define ARM_ARCH_V7M\t ARM_FEATURE_CORE (ARM_AEXT_V7M, ARM_EXT2_V6T2_V8M)\n #define ARM_ARCH_V7EM\t ARM_FEATURE_CORE (ARM_AEXT_V7EM, ARM_EXT2_V6T2_V8M)\n #define ARM_ARCH_V8A\t ARM_FEATURE_CORE (ARM_AEXT_V8A, ARM_AEXT2_V8A)\n-#define ARM_ARCH_V8A_CRC ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8A,\t   \\\n-\t\t\t\t      CRC_EXT_ARMV8)\n-#define ARM_ARCH_V8_1A\t ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8_1A,\t   \\\n-\t\t\t\t      CRC_EXT_ARMV8 | FPU_NEON_EXT_RDMA)\n-#define ARM_ARCH_V8_2A\t ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8_2A,\t   \\\n-\t\t\t\t      CRC_EXT_ARMV8 | FPU_NEON_EXT_RDMA)\n-#define ARM_ARCH_V8_3A\t ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8_3A,\t   \\\n-\t\t\t\t      CRC_EXT_ARMV8 | FPU_NEON_EXT_RDMA)\n-#define ARM_ARCH_V8_4A\t ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8_4A,\t   \\\n-\t\t\t\t      CRC_EXT_ARMV8 | FPU_NEON_EXT_RDMA\t   \\\n+#define ARM_ARCH_V8A_CRC ARM_FEATURE (ARM_AEXT_V8A,\t   \\\n+\t\t\t\t      ARM_AEXT2_V8A | ARM_EXT2_CRC)\n+#define ARM_ARCH_V8_1A\t ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8_1A\t   \\\n+\t\t\t\t      | ARM_EXT2_CRC,  FPU_NEON_EXT_RDMA)\n+#define ARM_ARCH_V8_2A\t ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8_2A\t   \\\n+\t\t\t\t      | ARM_EXT2_CRC,  FPU_NEON_EXT_RDMA)\n+#define ARM_ARCH_V8_3A\t ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8_3A\t   \\\n+\t\t\t\t      | ARM_EXT2_CRC, FPU_NEON_EXT_RDMA)\n+#define ARM_ARCH_V8_4A\t ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8_4A\t   \\\n+\t\t\t\t      | ARM_EXT2_CRC, FPU_NEON_EXT_RDMA\t   \\\n \t\t\t\t\t\t    | FPU_NEON_EXT_DOTPROD)\n-#define ARM_ARCH_V8_5A\t ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8_5A,\t   \\\n-\t\t\t\t      CRC_EXT_ARMV8 | FPU_NEON_EXT_RDMA\t   \\\n+#define ARM_ARCH_V8_5A\t ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8_5A\t   \\\n+\t\t\t\t      | ARM_EXT2_CRC, FPU_NEON_EXT_RDMA\t   \\\n \t\t\t\t\t\t    | FPU_NEON_EXT_DOTPROD)\n-#define ARM_ARCH_V8_6A\t ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8_6A,\t   \\\n-\t\t\t\t      CRC_EXT_ARMV8 | FPU_NEON_EXT_RDMA\t   \\\n+#define ARM_ARCH_V8_6A\t ARM_FEATURE (ARM_AEXT_V8A, ARM_AEXT2_V8_6A\t   \\\n+\t\t\t\t      | ARM_EXT2_CRC, FPU_NEON_EXT_RDMA\t   \\\n \t\t\t\t\t\t    | FPU_NEON_EXT_DOTPROD)\n #define ARM_ARCH_V8M_BASE      ARM_FEATURE_CORE (ARM_AEXT_V8M_BASE,\t   \\\n \t\t\t\t\t\t ARM_AEXT2_V8M_BASE)"
    },
    {
      "sha": "fbd74873f26282608e9c3903c7fcce9c700a480f",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8b301fbb6114faba4e95e24e3a1c3108f64885c6/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8b301fbb6114faba4e95e24e3a1c3108f64885c6/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=8b301fbb6114faba4e95e24e3a1c3108f64885c6",
      "patch": "@@ -1,3 +1,9 @@\n+2019-11-22  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* opcodes/arm-dis.c (arm_opcodes, thumb32_opcodes):\n+\tChange the coproc CRC conditions to use the extension\n+\tfeature set, second word, base on ARM_EXT2_CRC.\n+\n 2019-11-14  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-opc.tbl (syscall, sysret): Drop Cpu64 forms."
    },
    {
      "sha": "f6937584e8bc57501e5cd0dca147f05b8e53429e",
      "filename": "opcodes/arm-dis.c",
      "status": "modified",
      "additions": 12,
      "deletions": 12,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8b301fbb6114faba4e95e24e3a1c3108f64885c6/opcodes/arm-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8b301fbb6114faba4e95e24e3a1c3108f64885c6/opcodes/arm-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/arm-dis.c?ref=8b301fbb6114faba4e95e24e3a1c3108f64885c6",
      "patch": "@@ -3641,17 +3641,17 @@ static const struct opcode32 arm_opcodes[] =\n   {ARM_FEATURE_CORE_LOW (ARM_EXT2_ATOMICS),\n     0x01f00c9f, 0x0ff00fff, \"ldah%c\\t%12-15r, [%16-19R]\"},\n   /* CRC32 instructions.  */\n-  {ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n     0xe1000040, 0xfff00ff0, \"crc32b\\t%12-15R, %16-19R, %0-3R\"},\n-  {ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n     0xe1200040, 0xfff00ff0, \"crc32h\\t%12-15R, %16-19R, %0-3R\"},\n-  {ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n     0xe1400040, 0xfff00ff0, \"crc32w\\t%12-15R, %16-19R, %0-3R\"},\n-  {ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n     0xe1000240, 0xfff00ff0, \"crc32cb\\t%12-15R, %16-19R, %0-3R\"},\n-  {ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n     0xe1200240, 0xfff00ff0, \"crc32ch\\t%12-15R, %16-19R, %0-3R\"},\n-  {ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n     0xe1400240, 0xfff00ff0, \"crc32cw\\t%12-15R, %16-19R, %0-3R\"},\n \n   /* Privileged Access Never extension instructions.  */\n@@ -4657,17 +4657,17 @@ static const struct opcode32 thumb32_opcodes[] =\n     0xe8d000ff, 0xfff000ff, \"ldaexd%c\\t%12-15r, %8-11r, [%16-19R]\"},\n \n   /* CRC32 instructions.  */\n-  {ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n     0xfac0f080, 0xfff0f0f0, \"crc32b\\t%8-11R, %16-19R, %0-3R\"},\n-  {ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n     0xfac0f090, 0xfff0f0f0, \"crc32h\\t%9-11R, %16-19R, %0-3R\"},\n-  {ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n     0xfac0f0a0, 0xfff0f0f0, \"crc32w\\t%8-11R, %16-19R, %0-3R\"},\n-  {ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n     0xfad0f080, 0xfff0f0f0, \"crc32cb\\t%8-11R, %16-19R, %0-3R\"},\n-  {ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n     0xfad0f090, 0xfff0f0f0, \"crc32ch\\t%8-11R, %16-19R, %0-3R\"},\n-  {ARM_FEATURE_COPROC (CRC_EXT_ARMV8),\n+  {ARM_FEATURE_CORE_HIGH (ARM_EXT2_CRC),\n     0xfad0f0a0, 0xfff0f0f0, \"crc32cw\\t%8-11R, %16-19R, %0-3R\"},\n \n   /* Speculation Barriers.  */"
    }
  ]
}