{
  "sha": "f7c7700d3241d862512b1fe5bebc0fc74c4470d9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjdjNzcwMGQzMjQxZDg2MjUxMmIxZmU1YmViYzBmYzc0YzQ0NzBkOQ==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-08-28T23:11:35Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-08-28T23:55:58Z"
    },
    "message": "Adjust \"maint info program-spaces\" to per-inferior target stack\n\nBy inspection, I noticed that print_program_space is calling\ntarget_pid_to_str on the wrong target stack.  Most targets print a\nprocess pid the same way, so it isn't actually visible.\n\ngdb/ChangeLog:\n\n\t* progspace.c (print_program_space): Use all_inferiors.  Switch to\n\tthe inferior before calling target_pid_to_str.",
    "tree": {
      "sha": "eda0577343b95c8ffcef4fd5d4ef286dfdf4279d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/eda0577343b95c8ffcef4fd5d4ef286dfdf4279d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f7c7700d3241d862512b1fe5bebc0fc74c4470d9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f7c7700d3241d862512b1fe5bebc0fc74c4470d9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f7c7700d3241d862512b1fe5bebc0fc74c4470d9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f7c7700d3241d862512b1fe5bebc0fc74c4470d9/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8f57f343104b8d3632e65ac1fbb12ee69891ef5f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8f57f343104b8d3632e65ac1fbb12ee69891ef5f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8f57f343104b8d3632e65ac1fbb12ee69891ef5f"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 13,
    "deletions": 2
  },
  "files": [
    {
      "sha": "1ff47c3355dc10f5af4913b0a39ad26caab93c48",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f7c7700d3241d862512b1fe5bebc0fc74c4470d9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f7c7700d3241d862512b1fe5bebc0fc74c4470d9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f7c7700d3241d862512b1fe5bebc0fc74c4470d9",
      "patch": "@@ -1,3 +1,8 @@\n+2020-08-29  Pedro Alves  <pedro@palves.net>\n+\n+\t* progspace.c (print_program_space): Use all_inferiors.  Switch to\n+\tthe inferior before calling target_pid_to_str.\n+\n 2020-08-28  Tom Tromey  <tom@tromey.com>\n \n \t* xcoffread.c (xcoff_end_psymtab): Update comment."
    },
    {
      "sha": "3f5121612154751d480f2648df7c483df571fc71",
      "filename": "gdb/progspace.c",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f7c7700d3241d862512b1fe5bebc0fc74c4470d9/gdb/progspace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f7c7700d3241d862512b1fe5bebc0fc74c4470d9/gdb/progspace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/progspace.c?ref=f7c7700d3241d862512b1fe5bebc0fc74c4470d9",
      "patch": "@@ -302,7 +302,6 @@ print_program_space (struct ui_out *uiout, int requested)\n \n   for (struct program_space *pspace : program_spaces)\n     {\n-      struct inferior *inf;\n       int printed_header;\n \n       if (requested != -1 && requested != pspace->num)\n@@ -328,9 +327,16 @@ print_program_space (struct ui_out *uiout, int requested)\n \t e.g., both parent/child inferiors in a vfork, or, on targets\n \t that share pspaces between inferiors.  */\n       printed_header = 0;\n-      for (inf = inferior_list; inf; inf = inf->next)\n+\n+      /* We're going to switch inferiors.  */\n+      scoped_restore_current_thread restore_thread;\n+\n+      for (inferior *inf : all_inferiors ())\n \tif (inf->pspace == pspace)\n \t  {\n+\t    /* Switch to inferior in order to call target methods.  */\n+\t    switch_to_inferior_no_thread (inf);\n+\n \t    if (!printed_header)\n \t      {\n \t\tprinted_header = 1;"
    }
  ]
}