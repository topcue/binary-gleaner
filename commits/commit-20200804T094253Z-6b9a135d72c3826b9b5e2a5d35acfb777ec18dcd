{
  "sha": "6b9a135d72c3826b9b5e2a5d35acfb777ec18dcd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmI5YTEzNWQ3MmMzODI2YjliNWUyYTVkMzVhY2ZiNzc3ZWMxOGRjZA==",
  "commit": {
    "author": {
      "name": "Mark Wielaard",
      "email": "mark@klomp.org",
      "date": "2020-08-03T20:02:24Z"
    },
    "committer": {
      "name": "Mark Wielaard",
      "email": "mark@klomp.org",
      "date": "2020-08-04T09:42:53Z"
    },
    "message": "gas: Use udata for DW_AT_high_pc when emitting DWARF4\n\nFor DWARF4 DW_AT_high_pc can be expressed as constant offset from\nDW_AT_low_pc which saves a relocation. Use DW_FORM_udate (uleb128)\nto keep the constant value as small as possible.\n\ngas/ChangeLog:\n\n       * dwarf2dbg.c (out_debug_abbrev): When DWARF2_VERSION >= 4, use\n       DW_FORM_udata for DW_AT_high_pc.\n       (out_debug_info): Use emit_leb128_expr for DW_AT_high_pc, when\n       DWARF2_VERSION >= 4.\n       * read.c (emit_leb128_exp): No longer static.\n       * read.h (emit_leb128_exp): Define.",
    "tree": {
      "sha": "8d49ce5f3a515c53d657750160adda825017a990",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8d49ce5f3a515c53d657750160adda825017a990"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6b9a135d72c3826b9b5e2a5d35acfb777ec18dcd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6b9a135d72c3826b9b5e2a5d35acfb777ec18dcd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6b9a135d72c3826b9b5e2a5d35acfb777ec18dcd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6b9a135d72c3826b9b5e2a5d35acfb777ec18dcd/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "f63d03dde00449e71e32fea3496edc69d2e7d386",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f63d03dde00449e71e32fea3496edc69d2e7d386",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f63d03dde00449e71e32fea3496edc69d2e7d386"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 16,
    "deletions": 4
  },
  "files": [
    {
      "sha": "28a6b1b2b93d693ec58c0a44395e6e80e172b736",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b9a135d72c3826b9b5e2a5d35acfb777ec18dcd/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b9a135d72c3826b9b5e2a5d35acfb777ec18dcd/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=6b9a135d72c3826b9b5e2a5d35acfb777ec18dcd",
      "patch": "@@ -1,3 +1,12 @@\n+2020-08-04  Mark Wielaard  <mark@klomp.org>\n+\n+\t* dwarf2dbg.c (out_debug_abbrev): When DWARF2_VERSION >= 4, use\n+\tDW_FORM_udata for DW_AT_high_pc.\n+\t(out_debug_info): Use emit_leb128_expr for DW_AT_high_pc, when\n+\tDWARF2_VERSION >= 4.\n+\t* read.c (emit_leb128_exp): No longer static.\n+\t* read.h (emit_leb128_exp): Define.\n+\n 2020-08-02  Mark Wielaard  <mark@klomp.org>\n \n \t* gas/dwarf2dbg.c (out_dir_and_file_list): For DWARF5 emit at"
    },
    {
      "sha": "a95c29736f0b6d33a03255788415023fb4d6636a",
      "filename": "gas/dwarf2dbg.c",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b9a135d72c3826b9b5e2a5d35acfb777ec18dcd/gas/dwarf2dbg.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b9a135d72c3826b9b5e2a5d35acfb777ec18dcd/gas/dwarf2dbg.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/dwarf2dbg.c?ref=6b9a135d72c3826b9b5e2a5d35acfb777ec18dcd",
      "patch": "@@ -2444,8 +2444,7 @@ out_debug_abbrev (segT abbrev_seg,\n       if (DWARF2_VERSION < 4)\n \tout_abbrev (DW_AT_high_pc, DW_FORM_addr);\n       else\n-\tout_abbrev (DW_AT_high_pc, (sizeof_address == 4\n-\t\t\t\t    ? DW_FORM_data4 : DW_FORM_data8));\n+\tout_abbrev (DW_AT_high_pc, DW_FORM_udata);\n     }\n   else\n     {\n@@ -2528,7 +2527,10 @@ out_debug_info (segT info_seg, segT abbrev_seg, segT line_seg, segT ranges_seg,\n \t}\n       exp.X_add_symbol = all_segs->text_end;\n       exp.X_add_number = 0;\n-      emit_expr (&exp, sizeof_address);\n+      if (DWARF2_VERSION < 4)\n+\temit_expr (&exp, sizeof_address);\n+      else\n+\temit_leb128_expr (&exp, 0);\n     }\n   else\n     {"
    },
    {
      "sha": "f192cc16d579d05443051fc33fe759bb08d4cc09",
      "filename": "gas/read.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b9a135d72c3826b9b5e2a5d35acfb777ec18dcd/gas/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b9a135d72c3826b9b5e2a5d35acfb777ec18dcd/gas/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/read.c?ref=6b9a135d72c3826b9b5e2a5d35acfb777ec18dcd",
      "patch": "@@ -5138,7 +5138,7 @@ output_big_leb128 (char *p, LITTLENUM_TYPE *bignum, unsigned int size, int sign)\n /* Generate the appropriate fragments for a given expression to emit a\n    leb128 value.  SIGN is 1 for sleb, 0 for uleb.  */\n \n-static void\n+void\n emit_leb128_expr (expressionS *exp, int sign)\n {\n   operatorT op = exp->X_op;"
    },
    {
      "sha": "ffcdbb69a7b96518c03f0ba6cd420bb72ef9040e",
      "filename": "gas/read.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b9a135d72c3826b9b5e2a5d35acfb777ec18dcd/gas/read.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b9a135d72c3826b9b5e2a5d35acfb777ec18dcd/gas/read.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/read.h?ref=6b9a135d72c3826b9b5e2a5d35acfb777ec18dcd",
      "patch": "@@ -132,6 +132,7 @@ extern void emit_expr_with_reloc (expressionS *exp, unsigned int nbytes,\n \t\t\t\t  TC_PARSE_CONS_RETURN_TYPE);\n extern void emit_expr_fix (expressionS *, unsigned int, fragS *, char *,\n \t\t\t   TC_PARSE_CONS_RETURN_TYPE);\n+extern void emit_leb128_expr (expressionS *, int);\n extern void equals (char *, int);\n extern void float_cons (int);\n extern void ignore_rest_of_line (void);"
    }
  ]
}