{
  "sha": "8ab484c23b9f3533fcd942e95887383786331f06",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGFiNDg0YzIzYjlmMzUzM2ZjZDk0MmU5NTg4NzM4Mzc4NjMzMWYwNg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-13T23:09:47Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-14T00:32:28Z"
    },
    "message": "ubsan: alpha-vms: segv\n\nI thought the fuzzers were really going overboard by defining\nVMS_DEBUG but that wasn't the case.  VMS_DEBUG is defined by\ndefault.  Let's not do that, and fix the segv as well.\n\n\t* vms.h (VMS_DEBUG): Define as 0.\n\t* vms-alpha.c (image_write): Move debug output after bounds check.\n\tTidy bounds check.\n\t(_bfd_vms_slurp_eihd): Warning fix.\n\t(_bfd_vms_slurp_etir): Init variables to avoid bogus warnings.",
    "tree": {
      "sha": "26427886f9b18b09a6197ac79be54323d598da8a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/26427886f9b18b09a6197ac79be54323d598da8a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8ab484c23b9f3533fcd942e95887383786331f06",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8ab484c23b9f3533fcd942e95887383786331f06",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8ab484c23b9f3533fcd942e95887383786331f06",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8ab484c23b9f3533fcd942e95887383786331f06/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ca1eaac0edd9f5f6b5708dcfd04e5b8deb6527f8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ca1eaac0edd9f5f6b5708dcfd04e5b8deb6527f8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ca1eaac0edd9f5f6b5708dcfd04e5b8deb6527f8"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 20,
    "deletions": 10
  },
  "files": [
    {
      "sha": "acb545cd03cd43eeb50ab6d19fa99f1fc6e88516",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ab484c23b9f3533fcd942e95887383786331f06/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ab484c23b9f3533fcd942e95887383786331f06/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=8ab484c23b9f3533fcd942e95887383786331f06",
      "patch": "@@ -1,3 +1,11 @@\n+2020-01-14  Alan Modra  <amodra@gmail.com>\n+\n+\t* vms.h (VMS_DEBUG): Define as 0.\n+\t* vms-alpha.c (image_write): Move debug output after bounds check.\n+\tTidy bounds check.\n+\t(_bfd_vms_slurp_eihd): Warning fix.\n+\t(_bfd_vms_slurp_etir): Init variables to avoid bogus warnings.\n+\n 2020-01-13  Alan Modra  <amodra@gmail.com>\n \n \t* vms-alpha.c (_bfd_vms_slurp_egsd): Ensure minimum size even"
    },
    {
      "sha": "586a157cb1be9b9e7f68855ab494b6b34633b6b9",
      "filename": "bfd/vms-alpha.c",
      "status": "modified",
      "additions": 11,
      "deletions": 9,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ab484c23b9f3533fcd942e95887383786331f06/bfd/vms-alpha.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ab484c23b9f3533fcd942e95887383786331f06/bfd/vms-alpha.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/vms-alpha.c?ref=8ab484c23b9f3533fcd942e95887383786331f06",
      "patch": "@@ -503,6 +503,7 @@ _bfd_vms_slurp_eihd (bfd *abfd, unsigned int *eisd_offset,\n   vms_debug2 ((4, \"EIHD size %d imgtype %d symvva 0x%lx eisd %d eihs %d\\n\",\n \t       size, imgtype, (unsigned long)symvva,\n \t       *eisd_offset, *eihs_offset));\n+  (void) size;\n \n   return TRUE;\n }\n@@ -1594,25 +1595,26 @@ image_write (bfd *abfd, unsigned char *ptr, unsigned int size)\n #if VMS_DEBUG\n   _bfd_vms_debug (8, \"image_write from (%p, %d) to (%ld)\\n\", ptr, size,\n \t\t  (long)PRIV (image_offset));\n-  _bfd_hexdump (9, ptr, size, 0);\n #endif\n \n   if (PRIV (image_section)->contents != NULL)\n     {\n       asection *sec = PRIV (image_section);\n-      file_ptr off = PRIV (image_offset);\n+      size_t off = PRIV (image_offset);\n \n       /* Check bounds.  */\n-      if (off > (file_ptr)sec->size\n-\t  || size > (file_ptr)sec->size\n-\t  || off + size > (file_ptr)sec->size)\n+      if (off > sec->size\n+\t  || size > sec->size - off)\n \t{\n \t  bfd_set_error (bfd_error_bad_value);\n \t  return FALSE;\n \t}\n \n       memcpy (sec->contents + off, ptr, size);\n     }\n+#if VMS_DEBUG\n+  _bfd_hexdump (9, ptr, size, 0);\n+#endif\n \n   PRIV (image_offset) += size;\n   return TRUE;\n@@ -1861,10 +1863,10 @@ _bfd_vms_slurp_etir (bfd *abfd, struct bfd_link_info *info)\n   unsigned char *ptr;\n   unsigned int length;\n   unsigned char *maxptr;\n-  bfd_vma op1;\n-  bfd_vma op2;\n-  unsigned int rel1;\n-  unsigned int rel2;\n+  bfd_vma op1 = 0;\n+  bfd_vma op2 = 0;\n+  unsigned int rel1 = RELC_NONE;\n+  unsigned int rel2 = RELC_NONE;\n   struct alpha_vms_link_hash_entry *h;\n \n   PRIV (recrd.rec) += ETIR__C_HEADER_SIZE;"
    },
    {
      "sha": "88cf83e4820cfa4f8eab1b49f5f47d46f7fef0d4",
      "filename": "bfd/vms.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ab484c23b9f3533fcd942e95887383786331f06/bfd/vms.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ab484c23b9f3533fcd942e95887383786331f06/bfd/vms.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/vms.h?ref=8ab484c23b9f3533fcd942e95887383786331f06",
      "patch": "@@ -98,7 +98,7 @@ struct evax_private_udata_struct\n \n /* vms-misc.c.  */\n \n-#define VMS_DEBUG 1\n+#define VMS_DEBUG 0\n \n #if VMS_DEBUG\n extern void _bfd_vms_debug (int, char *, ...) ATTRIBUTE_PRINTF_2;"
    }
  ]
}