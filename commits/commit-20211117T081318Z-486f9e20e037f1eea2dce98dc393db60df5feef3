{
  "sha": "486f9e20e037f1eea2dce98dc393db60df5feef3",
  "node_id": "C_kwDOANOeidoAKDQ4NmY5ZTIwZTAzN2YxZWVhMmRjZTk4ZGMzOTNkYjYwZGY1ZmVlZjM",
  "commit": {
    "author": {
      "name": "Sergei Trofimovich",
      "email": "siarheit@google.com",
      "date": "2021-11-14T15:50:01Z"
    },
    "committer": {
      "name": "Sergei Trofimovich",
      "email": "siarheit@google.com",
      "date": "2021-11-17T08:13:18Z"
    },
    "message": "gdb/nat/linux-osdata.c: fix build on gcc-12 (string overfow)\n\nOn gcc-12 build fails as:\n\n    ../../gdbserver/../gdb/nat/linux-osdata.c: In function 'void linux_xfer_osdata_processes(buffer*)':\n    ../../gdbserver/../gdb/nat/linux-osdata.c:330:39: error:\n      '__builtin___sprintf_chk' may write a terminating nul past the end of the destination [-Werror=format-overflow=]\n      330 |                 sprintf (core_str, \"%d\", i);\n          |                                       ^\n\nIt's an off-by-one case in an infeasible scenario for negative\nhuge core count. The change switches to std::string for memory\nhandling.\n\nTested by running 'info os processes' and checking CPU cores column.",
    "tree": {
      "sha": "a424b4616427e24c0f6466f744bfe51b97fd4235",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a424b4616427e24c0f6466f744bfe51b97fd4235"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/486f9e20e037f1eea2dce98dc393db60df5feef3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/486f9e20e037f1eea2dce98dc393db60df5feef3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/486f9e20e037f1eea2dce98dc393db60df5feef3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/486f9e20e037f1eea2dce98dc393db60df5feef3/comments",
  "author": {
    "login": "trofi",
    "id": 226650,
    "node_id": "MDQ6VXNlcjIyNjY1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/226650?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/trofi",
    "html_url": "https://github.com/trofi",
    "followers_url": "https://api.github.com/users/trofi/followers",
    "following_url": "https://api.github.com/users/trofi/following{/other_user}",
    "gists_url": "https://api.github.com/users/trofi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/trofi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/trofi/subscriptions",
    "organizations_url": "https://api.github.com/users/trofi/orgs",
    "repos_url": "https://api.github.com/users/trofi/repos",
    "events_url": "https://api.github.com/users/trofi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/trofi/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "trofi",
    "id": 226650,
    "node_id": "MDQ6VXNlcjIyNjY1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/226650?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/trofi",
    "html_url": "https://github.com/trofi",
    "followers_url": "https://api.github.com/users/trofi/followers",
    "following_url": "https://api.github.com/users/trofi/following{/other_user}",
    "gists_url": "https://api.github.com/users/trofi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/trofi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/trofi/subscriptions",
    "organizations_url": "https://api.github.com/users/trofi/orgs",
    "repos_url": "https://api.github.com/users/trofi/repos",
    "events_url": "https://api.github.com/users/trofi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/trofi/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "aa95b2d43883666937d31335d0178d2218d9c9aa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aa95b2d43883666937d31335d0178d2218d9c9aa",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/aa95b2d43883666937d31335d0178d2218d9c9aa"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 4,
    "deletions": 9
  },
  "files": [
    {
      "sha": "91bbe10e515499dd191f1629fb7dd65c32bd4927",
      "filename": "gdb/nat/linux-osdata.c",
      "status": "modified",
      "additions": 4,
      "deletions": 9,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/486f9e20e037f1eea2dce98dc393db60df5feef3/gdb/nat/linux-osdata.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/486f9e20e037f1eea2dce98dc393db60df5feef3/gdb/nat/linux-osdata.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/linux-osdata.c?ref=486f9e20e037f1eea2dce98dc393db60df5feef3",
      "patch": "@@ -302,7 +302,7 @@ linux_xfer_osdata_processes (struct buffer *buffer)\n \t  char *command_line;\n \t  int *cores;\n \t  int task_count;\n-\t  char *cores_str;\n+\t  std::string cores_str;\n \t  int i;\n \n \t  if (!isdigit (dp->d_name[0])\n@@ -320,19 +320,15 @@ linux_xfer_osdata_processes (struct buffer *buffer)\n \t  /* Find CPU cores used by the process.  */\n \t  cores = XCNEWVEC (int, num_cores);\n \t  task_count = get_cores_used_by_process (pid, cores, num_cores);\n-\t  cores_str = (char *) xcalloc (task_count, sizeof (\"4294967295\") + 1);\n \n \t  for (i = 0; i < num_cores && task_count > 0; ++i)\n \t    if (cores[i])\n \t      {\n-\t\tchar core_str[sizeof (\"4294967295\")];\n-\n-\t\tsprintf (core_str, \"%d\", i);\n-\t\tstrcat (cores_str, core_str);\n+\t\tstring_appendf (cores_str, \"%d\", i);\n \n \t\ttask_count -= cores[i];\n \t\tif (task_count > 0)\n-\t\t  strcat (cores_str, \",\");\n+\t\t  cores_str += \",\";\n \t      }\n \n \t  xfree (cores);\n@@ -348,10 +344,9 @@ linux_xfer_osdata_processes (struct buffer *buffer)\n \t     pid,\n \t     user,\n \t     command_line ? command_line : \"\",\n-\t     cores_str);\n+\t     cores_str.c_str());\n \n \t  xfree (command_line);\n-\t  xfree (cores_str);\n \t}\n \n       closedir (dirp);"
    }
  ]
}