{
  "sha": "00158a68d1c382f9afe16630ac327695a4904556",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDAxNThhNjhkMWMzODJmOWFmZTE2NjMwYWMzMjc2OTVhNDkwNDU1Ng==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-12-07T04:34:25Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-12-07T04:34:25Z"
    },
    "message": "Fix struct expression regression\n\nThe patch to change struct expression to use new introduced a\nregression -- there is a spot that reallocates expressions that I\nfailed to update.\n\nThis patch rewrites this code to follow the new approach.  Now the\nrewriting is done in place.\n\ngdb/ChangeLog\n2020-12-06  Tom Tromey  <tom@tromey.com>\n\n\tPR ada/26999\n\t* ada-lang.c (replace_operator_with_call): Rewrite.",
    "tree": {
      "sha": "24ab9542af6751f6651d90e6d20fb32b1443d108",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/24ab9542af6751f6651d90e6d20fb32b1443d108"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/00158a68d1c382f9afe16630ac327695a4904556",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/00158a68d1c382f9afe16630ac327695a4904556",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/00158a68d1c382f9afe16630ac327695a4904556",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/00158a68d1c382f9afe16630ac327695a4904556/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "13f11b0b61ca2620611b08eeaece0ce62c862f4b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13f11b0b61ca2620611b08eeaece0ce62c862f4b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/13f11b0b61ca2620611b08eeaece0ce62c862f4b"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 18,
    "deletions": 18
  },
  "files": [
    {
      "sha": "3c21cff271f62e74edafcc5cf6b9f9290271a7e8",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/00158a68d1c382f9afe16630ac327695a4904556/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/00158a68d1c382f9afe16630ac327695a4904556/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=00158a68d1c382f9afe16630ac327695a4904556",
      "patch": "@@ -1,3 +1,8 @@\n+2020-12-06  Tom Tromey  <tom@tromey.com>\n+\n+\tPR ada/26999\n+\t* ada-lang.c (replace_operator_with_call): Rewrite.\n+\n 2020-12-06  Giancarlo Frix  <gfrix@rocketsoftware.com>  (tiny change)\n \n \tPR breakpoints/27009"
    },
    {
      "sha": "7d062294aa5b7c7fbb3ad78049d475a92bbe98dc",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 13,
      "deletions": 18,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/00158a68d1c382f9afe16630ac327695a4904556/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/00158a68d1c382f9afe16630ac327695a4904556/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=00158a68d1c382f9afe16630ac327695a4904556",
      "patch": "@@ -4000,28 +4000,23 @@ replace_operator_with_call (expression_up *expp, int pc, int nargs,\n \t\t\t    int oplen, struct symbol *sym,\n \t\t\t    const struct block *block)\n {\n-  /* A new expression, with 6 more elements (3 for funcall, 4 for function\n-     symbol, -oplen for operator being replaced).  */\n-  struct expression *newexp = (struct expression *)\n-    xzalloc (sizeof (struct expression)\n-\t     + EXP_ELEM_TO_BYTES ((*expp)->nelts + 7 - oplen));\n+  /* We want to add 6 more elements (3 for funcall, 4 for function\n+     symbol, -OPLEN for operator being replaced) to the\n+     expression.  */\n   struct expression *exp = expp->get ();\n+  int save_nelts = exp->nelts;\n+  exp->nelts = exp->nelts + 7 - oplen;\n+  exp->resize (exp->nelts);\n \n-  newexp->nelts = exp->nelts + 7 - oplen;\n-  newexp->language_defn = exp->language_defn;\n-  newexp->gdbarch = exp->gdbarch;\n-  memcpy (newexp->elts, exp->elts, EXP_ELEM_TO_BYTES (pc));\n-  memcpy (newexp->elts + pc + 7, exp->elts + pc + oplen,\n-\t  EXP_ELEM_TO_BYTES (exp->nelts - pc - oplen));\n+  memmove (exp->elts + pc + 7, exp->elts + pc + oplen,\n+\t   EXP_ELEM_TO_BYTES (save_nelts - pc - oplen));\n \n-  newexp->elts[pc].opcode = newexp->elts[pc + 2].opcode = OP_FUNCALL;\n-  newexp->elts[pc + 1].longconst = (LONGEST) nargs;\n+  exp->elts[pc].opcode = exp->elts[pc + 2].opcode = OP_FUNCALL;\n+  exp->elts[pc + 1].longconst = (LONGEST) nargs;\n \n-  newexp->elts[pc + 3].opcode = newexp->elts[pc + 6].opcode = OP_VAR_VALUE;\n-  newexp->elts[pc + 4].block = block;\n-  newexp->elts[pc + 5].symbol = sym;\n-\n-  expp->reset (newexp);\n+  exp->elts[pc + 3].opcode = exp->elts[pc + 6].opcode = OP_VAR_VALUE;\n+  exp->elts[pc + 4].block = block;\n+  exp->elts[pc + 5].symbol = sym;\n }\n \n /* Type-class predicates */"
    }
  ]
}