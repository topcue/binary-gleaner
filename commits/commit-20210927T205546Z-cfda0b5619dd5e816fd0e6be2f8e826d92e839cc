{
  "sha": "cfda0b5619dd5e816fd0e6be2f8e826d92e839cc",
  "node_id": "C_kwDOANOeidoAKGNmZGEwYjU2MTlkZDVlODE2ZmQwZTZiZTJmOGU4MjZkOTJlODM5Y2M",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-09-10T20:42:53Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-09-27T20:55:46Z"
    },
    "message": "gdb.base/foll-fork.exp: rename variables\n\nRename the variables / parameters used to match the corresponding GDB\nsetting name, I find that easier to follow.\n\nChange-Id: Idcbddbbb369279fcf1e808b11a8c478f21b2a946",
    "tree": {
      "sha": "aed02554cff6bf1a64de6d0188fad382db620aeb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/aed02554cff6bf1a64de6d0188fad382db620aeb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cfda0b5619dd5e816fd0e6be2f8e826d92e839cc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cfda0b5619dd5e816fd0e6be2f8e826d92e839cc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cfda0b5619dd5e816fd0e6be2f8e826d92e839cc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cfda0b5619dd5e816fd0e6be2f8e826d92e839cc/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b45781ddac54c8d4b8d771d1f0823c4b5a072af3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b45781ddac54c8d4b8d771d1f0823c4b5a072af3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b45781ddac54c8d4b8d771d1f0823c4b5a072af3"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 20,
    "deletions": 20
  },
  "files": [
    {
      "sha": "3b90bb2e785815a91bcfb5b7e72df48d95691667",
      "filename": "gdb/testsuite/gdb.base/foll-fork.exp",
      "status": "modified",
      "additions": 20,
      "deletions": 20,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cfda0b5619dd5e816fd0e6be2f8e826d92e839cc/gdb/testsuite/gdb.base/foll-fork.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cfda0b5619dd5e816fd0e6be2f8e826d92e839cc/gdb/testsuite/gdb.base/foll-fork.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/foll-fork.exp?ref=cfda0b5619dd5e816fd0e6be2f8e826d92e839cc",
      "patch": "@@ -74,12 +74,12 @@ proc_with_prefix check_fork_catchpoints {} {\n # execute the program past the fork.  If the value of WHO or DETACH is\n # 'default', the corresponding GDB command is skipped for that test.\n # The value of CMD must be either 'next 2' or 'continue'.\n-proc_with_prefix test_follow_fork { who detach cmd } {\n+proc_with_prefix test_follow_fork { follow-fork-mode detach-on-fork cmd } {\n     global gdb_prompt\n     global srcfile\n     global testfile\n \n-    with_test_prefix \"follow $who, detach $detach, command \\\"$cmd\\\"\" {\n+    with_test_prefix \"follow ${follow-fork-mode}, detach ${detach-on-fork}, command \\\"$cmd\\\"\" {\n \n \t# Start a new debugger session each time so defaults are legitimate.\n \tif { ![setup] } {\n@@ -91,24 +91,24 @@ proc_with_prefix test_follow_fork { who detach cmd } {\n \tgdb_test_no_output \"set verbose\"\n \n \t# Set follow-fork-mode if we aren't using the default.\n-\tif {$who == \"default\"} {\n-\t    set who \"parent\"\n+\tif {${follow-fork-mode} == \"default\"} {\n+\t    set follow-fork-mode \"parent\"\n \t} else {\n-\t    gdb_test_no_output \"set follow-fork $who\"\n+\t    gdb_test_no_output \"set follow-fork ${follow-fork-mode}\"\n \t}\n \n \tgdb_test \"show follow-fork\" \\\n-\t\"Debugger response to a program call of fork or vfork is \\\"$who\\\".\"\n+\t\"Debugger response to a program call of fork or vfork is \\\"${follow-fork-mode}\\\".\"\n \n \t# Set detach-on-fork mode if we aren't using the default.\n-\tif {$detach == \"default\"} {\n-\t    set detach \"on\"\n+\tif {${detach-on-fork} == \"default\"} {\n+\t    set detach-on-fork \"on\"\n \t} else {\n-\t    gdb_test_no_output \"set detach-on-fork $detach\"\n+\t    gdb_test_no_output \"set detach-on-fork ${detach-on-fork}\"\n \t}\n \n \tgdb_test \"show detach-on-fork\" \\\n-\t\t \"Whether gdb will detach.* fork is $detach.\"\n+\t\t \"Whether gdb will detach.* fork is ${detach-on-fork}.\"\n \n \t# Set a breakpoint after the fork if we aren't single-stepping\n \t# past the fork.\n@@ -121,13 +121,13 @@ proc_with_prefix test_follow_fork { who detach cmd } {\n \n \t# Set up the output we expect to see after we run.\n \tset expected_re \"\"\n-\tif {$who == \"child\"} {\n+\tif {${follow-fork-mode} == \"child\"} {\n \t    set expected_re \"\\\\\\[Attaching after.* fork to.*\"\n-\t    if {$detach == \"on\"} {\n+\t    if {${detach-on-fork} == \"on\"} {\n \t\tappend expected_re \"\\\\\\[Detaching after fork from .*\"\n \t    }\n \t    append expected_re \"set breakpoint here.*\"\n-\t} elseif {$who == \"parent\" && $detach == \"on\"} {\n+\t} elseif {${follow-fork-mode} == \"parent\" && ${detach-on-fork} == \"on\"} {\n \t    set expected_re \"\\\\\\[Detaching after fork from .*set breakpoint here.*\"\n \t} else {\n \t    set expected_re \".*set breakpoint here.*\"\n@@ -140,12 +140,12 @@ proc_with_prefix test_follow_fork { who detach cmd } {\n \t# Check that we have the inferiors arranged correctly after \n \t# following the fork.\n \tset resume_unfollowed 0\n-\tif {$who == \"parent\" && $detach == \"on\"} {\n+\tif {${follow-fork-mode} == \"parent\" && ${detach-on-fork} == \"on\"} {\n \n \t    # Follow parent / detach child: the only inferior is the parent.\n \t    gdb_test \"info inferiors\" \"\\\\* 1 .* process.*\"\n \n-\t} elseif {$who == \"parent\" && $detach == \"off\"} {\n+\t} elseif {${follow-fork-mode} == \"parent\" && ${detach-on-fork} == \"off\"} {\n \n \t    # Follow parent / keep child: two inferiors under debug, the\n \t    # parent is the current inferior.\n@@ -154,14 +154,14 @@ proc_with_prefix test_follow_fork { who detach cmd } {\n \t    gdb_test \"inferior 2\" \"Switching to inferior 2 .*\"\n \t    set resume_unfollowed 1\n \n-\t} elseif {$who == \"child\" && $detach == \"on\"} {\n+\t} elseif {${follow-fork-mode} == \"child\" && ${detach-on-fork} == \"on\"} {\n \n \t    # Follow child / detach parent: the child is under debug and is\n \t    # the current inferior.  The parent is listed but is not under\n \t    # debug.\n \t    gdb_test \"info inferiors\" \" 1 .*<null>.*\\\\* 2 .*process.*\"\n \n-\t} elseif {$who == \"child\" && $detach == \"off\"} {\n+\t} elseif {${follow-fork-mode} == \"child\" && ${detach-on-fork} == \"off\"} {\n \n \t    # Follow child / keep parent: two inferiors under debug, the\n \t    # child is the current inferior.\n@@ -400,10 +400,10 @@ foreach cmd {\"next 2\" \"continue\"} {\n }\n \n # Now test all explicit permutations.\n-foreach who {\"parent\" \"child\"} {\n-    foreach detach {\"on\" \"off\"} {\n+foreach follow-fork-mode {\"parent\" \"child\"} {\n+    foreach detach-on-fork {\"on\" \"off\"} {\n \tforeach cmd {\"next 2\" \"continue\"} {\n-\t    test_follow_fork $who $detach $cmd\n+\t    test_follow_fork ${follow-fork-mode} ${detach-on-fork} $cmd\n \t}\n     }\n }"
    }
  ]
}