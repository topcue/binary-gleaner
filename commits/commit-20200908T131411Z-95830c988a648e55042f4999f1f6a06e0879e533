{
  "sha": "95830c988a648e55042f4999f1f6a06e0879e533",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTU4MzBjOTg4YTY0OGU1NTA0MmY0OTk5ZjFmNmEwNmUwODc5ZTUzMw==",
  "commit": {
    "author": {
      "name": "Alex Coplan",
      "email": "alex.coplan@arm.com",
      "date": "2020-09-08T13:13:45Z"
    },
    "committer": {
      "name": "Alex Coplan",
      "email": "alex.coplan@arm.com",
      "date": "2020-09-08T13:14:11Z"
    },
    "message": "aarch64: Add base support for Armv8-R\n\nThis patch adds the basic infrastructure needed to support Armv8-R in\nAArch64 binutils: new command-line flags, new feature bits, a new BFD\narchitecture, and support for differentiating between architecture\nvariants in the disassembler.\n\nThe new command-line options added by this patch are -march=armv8-r in\nGAS and -m aarch64:armv8-r in objdump.\n\nThe disassembler support is necessary since Armv8-R AArch64 introduces a\nsystem register (VSCTLR_EL2) which shares an encoding with a different\nsystem register (TTBR0_EL2) in Armv8-A. This also allows us to use the\ncorrect preferred disassembly for the new DFB alias introduced in\nArmv8-R.\n\nbfd/ChangeLog:\n\n2020-09-08  Alex Coplan  <alex.coplan@arm.com>\n\n\t* archures.c (bfd_mach_aarch64_8R): New.\n\t* bfd-in2.h: Regenerate.\n\t* cpu-aarch64.c (bfd_aarch64_arch_v8_r): New.\n\t(bfd_aarch64_arch_ilp32): Update tail pointer.\n\ngas/ChangeLog:\n\n2020-09-08  Alex Coplan  <alex.coplan@arm.com>\n\n\t* config/tc-aarch64.c (aarch64_archs): Add armv8-r.\n\t* doc/c-aarch64.texi: Document -march=armv8-r.\n\ninclude/ChangeLog:\n\n2020-09-08  Alex Coplan  <alex.coplan@arm.com>\n\n\t* opcode/aarch64.h (AARCH64_FEATURE_V8_A): New.\n\t(AARCH64_FEATURE_V8_R): New.\n\t(AARCH64_ARCH_V8): Include new A-profile feature bit.\n\t(AARCH64_ARCH_V8_R): New.\n\nopcodes/ChangeLog:\n\n2020-09-08  Alex Coplan  <alex.coplan@arm.com>\n\n\t* aarch64-dis.c (arch_variant): New.\n\t(determine_disassembling_preference): Disassemble according to\n\tarch variant.\n\t(select_aarch64_variant): New.\n\t(print_insn_aarch64): Set feature set.",
    "tree": {
      "sha": "c2af09d241b50395a615952b976cf2e95029407c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c2af09d241b50395a615952b976cf2e95029407c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/95830c988a648e55042f4999f1f6a06e0879e533",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95830c988a648e55042f4999f1f6a06e0879e533",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/95830c988a648e55042f4999f1f6a06e0879e533",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95830c988a648e55042f4999f1f6a06e0879e533/comments",
  "author": {
    "login": "acoplan-arm",
    "id": 86676934,
    "node_id": "MDQ6VXNlcjg2Njc2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acoplan-arm",
    "html_url": "https://github.com/acoplan-arm",
    "followers_url": "https://api.github.com/users/acoplan-arm/followers",
    "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/acoplan-arm/orgs",
    "repos_url": "https://api.github.com/users/acoplan-arm/repos",
    "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acoplan-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "acoplan-arm",
    "id": 86676934,
    "node_id": "MDQ6VXNlcjg2Njc2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acoplan-arm",
    "html_url": "https://github.com/acoplan-arm",
    "followers_url": "https://api.github.com/users/acoplan-arm/followers",
    "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/acoplan-arm/orgs",
    "repos_url": "https://api.github.com/users/acoplan-arm/repos",
    "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acoplan-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7ba115508aa02ffbb01a09613b5dffdd0c6563e3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7ba115508aa02ffbb01a09613b5dffdd0c6563e3"
    }
  ],
  "stats": {
    "total": 79,
    "additions": 76,
    "deletions": 3
  },
  "files": [
    {
      "sha": "0ae5d3047c2a6d9a2eabfda5d16707cdd900d649",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95830c988a648e55042f4999f1f6a06e0879e533/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95830c988a648e55042f4999f1f6a06e0879e533/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=95830c988a648e55042f4999f1f6a06e0879e533",
      "patch": "@@ -1,3 +1,10 @@\n+2020-09-08  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* archures.c (bfd_mach_aarch64_8R): New.\n+\t* bfd-in2.h: Regenerate.\n+\t* cpu-aarch64.c (bfd_aarch64_arch_v8_r): New.\n+\t(bfd_aarch64_arch_ilp32): Update tail pointer.\n+\n 2020-09-08  Alan Modra  <amodra@gmail.com>\n \n \tPR 13250"
    },
    {
      "sha": "50698648d6a0c154329d00a9040137b3e8c66bab",
      "filename": "bfd/archures.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95830c988a648e55042f4999f1f6a06e0879e533/bfd/archures.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95830c988a648e55042f4999f1f6a06e0879e533/bfd/archures.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/archures.c?ref=95830c988a648e55042f4999f1f6a06e0879e533",
      "patch": "@@ -530,6 +530,7 @@ DESCRIPTION\n .#define bfd_mach_tilegx32\t2\n .  bfd_arch_aarch64,   {* AArch64.  *}\n .#define bfd_mach_aarch64 0\n+.#define bfd_mach_aarch64_8R\t1\n .#define bfd_mach_aarch64_ilp32\t32\n .  bfd_arch_nios2,     {* Nios II.  *}\n .#define bfd_mach_nios2\t\t0"
    },
    {
      "sha": "2202cab43938e352a3b6ab85dddab1ca4be67776",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95830c988a648e55042f4999f1f6a06e0879e533/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95830c988a648e55042f4999f1f6a06e0879e533/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=95830c988a648e55042f4999f1f6a06e0879e533",
      "patch": "@@ -1930,6 +1930,7 @@ enum bfd_architecture\n #define bfd_mach_tilegx32      2\n   bfd_arch_aarch64,   /* AArch64.  */\n #define bfd_mach_aarch64 0\n+#define bfd_mach_aarch64_8R    1\n #define bfd_mach_aarch64_ilp32 32\n   bfd_arch_nios2,     /* Nios II.  */\n #define bfd_mach_nios2         0"
    },
    {
      "sha": "8d9b420a425c3806ee3b50bd47d20650397fbf1c",
      "filename": "bfd/cpu-aarch64.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95830c988a648e55042f4999f1f6a06e0879e533/bfd/cpu-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95830c988a648e55042f4999f1f6a06e0879e533/bfd/cpu-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/cpu-aarch64.c?ref=95830c988a648e55042f4999f1f6a06e0879e533",
      "patch": "@@ -107,8 +107,12 @@ scan (const struct bfd_arch_info *info, const char *string)\n     \"aarch64\", PRINT, 4, DEFAULT, compatible, scan,\t\t\\\n       bfd_arch_default_fill, NEXT, 0 }\n \n+static const bfd_arch_info_type bfd_aarch64_arch_v8_r =\n+  N (bfd_mach_aarch64_8R, \"aarch64:armv8-r\", 64, FALSE, NULL);\n+\n static const bfd_arch_info_type bfd_aarch64_arch_ilp32 =\n-  N (bfd_mach_aarch64_ilp32, \"aarch64:ilp32\", 32, FALSE, NULL);\n+  N (bfd_mach_aarch64_ilp32, \"aarch64:ilp32\", 32, FALSE,\n+     &bfd_aarch64_arch_v8_r);\n \n const bfd_arch_info_type bfd_aarch64_arch =\n   N (0, \"aarch64\", 64, TRUE, &bfd_aarch64_arch_ilp32);"
    },
    {
      "sha": "1c5929d90abdc25f1b879cbfda3473adcd46e51a",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95830c988a648e55042f4999f1f6a06e0879e533/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95830c988a648e55042f4999f1f6a06e0879e533/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=95830c988a648e55042f4999f1f6a06e0879e533",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-08  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* config/tc-aarch64.c (aarch64_archs): Add armv8-r.\n+\t* doc/c-aarch64.texi: Document -march=armv8-r.\n+\n 2020-09-07  Mark Wielaard  <mark@klomp.org>\n \n \t* dwarf2dbg.c (add_line_strp): New function."
    },
    {
      "sha": "effa976980aa030d14a4dd6a08e2501c12a085f0",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95830c988a648e55042f4999f1f6a06e0879e533/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95830c988a648e55042f4999f1f6a06e0879e533/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=95830c988a648e55042f4999f1f6a06e0879e533",
      "patch": "@@ -8997,6 +8997,7 @@ static const struct aarch64_arch_option_table aarch64_archs[] = {\n   {\"armv8.4-a\", AARCH64_ARCH_V8_4},\n   {\"armv8.5-a\", AARCH64_ARCH_V8_5},\n   {\"armv8.6-a\", AARCH64_ARCH_V8_6},\n+  {\"armv8-r\",\tAARCH64_ARCH_V8_R},\n   {NULL, AARCH64_ARCH_NONE}\n };\n "
    },
    {
      "sha": "89725a7e2f8abdbd6162f3d618627017dfd454c3",
      "filename": "gas/doc/c-aarch64.texi",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95830c988a648e55042f4999f1f6a06e0879e533/gas/doc/c-aarch64.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95830c988a648e55042f4999f1f6a06e0879e533/gas/doc/c-aarch64.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-aarch64.texi?ref=95830c988a648e55042f4999f1f6a06e0879e533",
      "patch": "@@ -100,7 +100,7 @@ issue an error message if an attempt is made to assemble an\n instruction which will not execute on the target architecture.  The\n following architecture names are recognized: @code{armv8-a},\n @code{armv8.1-a}, @code{armv8.2-a}, @code{armv8.3-a}, @code{armv8.4-a}\n-@code{armv8.5-a}, and @code{armv8.6-a}.\n+@code{armv8.5-a}, @code{armv8.6-a}, and @code{armv8-r}.\n \n If both @option{-mcpu} and @option{-march} are specified, the\n assembler will use the setting for @option{-mcpu}.  If neither are"
    },
    {
      "sha": "10a3c7d4ca5fb99e7e9252254e383dd6d83f79ac",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95830c988a648e55042f4999f1f6a06e0879e533/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95830c988a648e55042f4999f1f6a06e0879e533/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=95830c988a648e55042f4999f1f6a06e0879e533",
      "patch": "@@ -1,3 +1,10 @@\n+2020-09-08  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_V8_A): New.\n+\t(AARCH64_FEATURE_V8_R): New.\n+\t(AARCH64_ARCH_V8): Include new A-profile feature bit.\n+\t(AARCH64_ARCH_V8_R): New.\n+\n 2020-09-02  Alan Modra  <amodra@gmail.com>\n \n \t* opcode/v850.h (struct v850_operand <insert>): Make param op an"
    },
    {
      "sha": "85f4fb5961ede7350564920a26ee652c4390500e",
      "filename": "include/opcode/aarch64.h",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95830c988a648e55042f4999f1f6a06e0879e533/include/opcode/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95830c988a648e55042f4999f1f6a06e0879e533/include/opcode/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/aarch64.h?ref=95830c988a648e55042f4999f1f6a06e0879e533",
      "patch": "@@ -40,6 +40,7 @@ typedef uint32_t aarch64_insn;\n #define AARCH64_FEATURE_V8\t     (1ULL << 0) /* All processors.  */\n #define AARCH64_FEATURE_V8_6\t     (1ULL << 1) /* ARMv8.6 processors.  */\n #define AARCH64_FEATURE_BFLOAT16     (1ULL << 2) /* Bfloat16 insns.  */\n+#define AARCH64_FEATURE_V8_A\t     (1ULL << 3) /* Armv8-A processors.  */\n #define AARCH64_FEATURE_SVE2\t     (1ULL << 4) /* SVE2 instructions.  */\n #define AARCH64_FEATURE_V8_2\t     (1ULL << 5) /* ARMv8.2 processors.  */\n #define AARCH64_FEATURE_V8_3\t     (1ULL << 6) /* ARMv8.3 processors.  */\n@@ -48,6 +49,7 @@ typedef uint32_t aarch64_insn;\n #define AARCH64_FEATURE_SVE2_SM4     (1ULL << 9)\n #define AARCH64_FEATURE_SVE2_SHA3    (1ULL << 10)\n #define AARCH64_FEATURE_V8_4\t     (1ULL << 11) /* ARMv8.4 processors.  */\n+#define AARCH64_FEATURE_V8_R\t     (1ULL << 12) /* Armv8-R processors.  */\n #define AARCH64_FEATURE_FP\t     (1ULL << 17) /* FP instructions.  */\n #define AARCH64_FEATURE_SIMD\t     (1ULL << 18) /* SIMD instructions.  */\n #define AARCH64_FEATURE_CRC\t     (1ULL << 19) /* CRC instructions.  */\n@@ -90,7 +92,8 @@ typedef uint32_t aarch64_insn;\n \n /* Architectures are the sum of the base and extensions.  */\n #define AARCH64_ARCH_V8\t\tAARCH64_FEATURE (AARCH64_FEATURE_V8, \\\n-\t\t\t\t\t\t AARCH64_FEATURE_FP  \\\n+\t\t\t\t\t\t AARCH64_FEATURE_V8_A \\\n+\t\t\t\t\t\t | AARCH64_FEATURE_FP  \\\n \t\t\t\t\t\t | AARCH64_FEATURE_SIMD)\n #define AARCH64_ARCH_V8_1\tAARCH64_FEATURE (AARCH64_ARCH_V8, \\\n \t\t\t\t\t\t AARCH64_FEATURE_CRC\t\\\n@@ -125,6 +128,9 @@ typedef uint32_t aarch64_insn;\n \t\t\t\t\t\t AARCH64_FEATURE_V8_6   \\\n \t\t\t\t\t\t | AARCH64_FEATURE_BFLOAT16 \\\n \t\t\t\t\t\t | AARCH64_FEATURE_I8MM)\n+#define AARCH64_ARCH_V8_R\t(AARCH64_FEATURE (AARCH64_ARCH_V8_4,\t\\\n+\t\t\t\t\t\t AARCH64_FEATURE_V8_R)\t\\\n+\t\t\t      & ~(AARCH64_FEATURE_V8_A | AARCH64_FEATURE_LOR))\n \n #define AARCH64_ARCH_NONE\tAARCH64_FEATURE (0, 0)\n #define AARCH64_ANY\t\tAARCH64_FEATURE (-1, 0)\t/* Any basic core.  */"
    },
    {
      "sha": "bbba2553020b7892894df19c36577e0f033be81e",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95830c988a648e55042f4999f1f6a06e0879e533/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95830c988a648e55042f4999f1f6a06e0879e533/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=95830c988a648e55042f4999f1f6a06e0879e533",
      "patch": "@@ -1,3 +1,11 @@\n+2020-09-08  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* aarch64-dis.c (arch_variant): New.\n+\t(determine_disassembling_preference): Disassemble according to\n+\tarch variant.\n+\t(select_aarch64_variant): New.\n+\t(print_insn_aarch64): Set feature set.\n+\n 2020-09-02  Alan Modra  <amodra@gmail.com>\n \n \t* v850-opc.c (insert_i5div1, insert_i5div2, insert_i5div3),"
    },
    {
      "sha": "9d23b3154a2ab1978e837b856c911f92a17fd2e5",
      "filename": "opcodes/aarch64-dis.c",
      "status": "modified",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95830c988a648e55042f4999f1f6a06e0879e533/opcodes/aarch64-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95830c988a648e55042f4999f1f6a06e0879e533/opcodes/aarch64-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-dis.c?ref=95830c988a648e55042f4999f1f6a06e0879e533",
      "patch": "@@ -35,6 +35,7 @@ enum map_type\n   MAP_DATA\n };\n \n+static aarch64_feature_set arch_variant; /* See select_aarch64_variant.  */\n static enum map_type last_type;\n static int last_mapping_sym = -1;\n static bfd_vma last_stop_offset = 0;\n@@ -2690,6 +2691,13 @@ determine_disassembling_preference (struct aarch64_inst *inst,\n \t  DEBUG_TRACE (\"skip %s as base opcode not match\", alias->name);\n \t  continue;\n \t}\n+\n+      if (!AARCH64_CPU_HAS_FEATURE (arch_variant, *alias->avariant))\n+\t{\n+\t  DEBUG_TRACE (\"skip %s: we're missing features\", alias->name);\n+\t  continue;\n+\t}\n+\n       /* No need to do any complicated transformation on operands, if the alias\n \t opcode does not have any operand.  */\n       if (aarch64_num_of_operands (alias) == 0 && alias->opcode == inst->value)\n@@ -3360,6 +3368,24 @@ get_sym_code_type (struct disassemble_info *info, int n,\n   return FALSE;\n }\n \n+/* Set the feature bits in arch_variant in order to get the correct disassembly\n+   for the chosen architecture variant.\n+\n+   Currently we only restrict disassembly for Armv8-R and otherwise enable all\n+   non-R-profile features.  */\n+static void\n+select_aarch64_variant (unsigned mach)\n+{\n+  switch (mach)\n+    {\n+    case bfd_mach_aarch64_8R:\n+      arch_variant = AARCH64_ARCH_V8_R;\n+      break;\n+    default:\n+      arch_variant = AARCH64_ANY & ~(AARCH64_FEATURE_V8_R);\n+    }\n+}\n+\n /* Entry-point of the AArch64 disassembler.  */\n \n int\n@@ -3374,6 +3400,7 @@ print_insn_aarch64 (bfd_vma pc,\n   unsigned int\tsize = 4;\n   unsigned long\tdata;\n   aarch64_operand_error errors;\n+  static bfd_boolean set_features;\n \n   if (info->disassembler_options)\n     {\n@@ -3385,6 +3412,12 @@ print_insn_aarch64 (bfd_vma pc,\n       info->disassembler_options = NULL;\n     }\n \n+  if (!set_features)\n+    {\n+      select_aarch64_variant (info->mach);\n+      set_features = TRUE;\n+    }\n+\n   /* Aarch64 instructions are always little-endian */\n   info->endian_code = BFD_ENDIAN_LITTLE;\n "
    }
  ]
}