{
  "sha": "a68aa5d3020948564ef99d704d27e458ba22ad9d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTY4YWE1ZDMwMjA5NDg1NjRlZjk5ZDcwNGQyN2U0NThiYTIyYWQ5ZA==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-06-26T16:03:32Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-06-26T16:03:32Z"
    },
    "message": "Ensure that when attempting to process an ARM Mach-O file with unknown relocs, that a suitable error message is displayed.\n\n\tPR 24703\nbinutils* bucomm.c (bfd_nonfatal): If no bfd error code has been set then\n\tindicate this in the output.\n\t(bfd_nonfatal_message): Likewise.\n\nbfd\t* mach-o-arm.c (bfd_mach_o_arm_canonicalize_one_reloc): Add error\n\tmessages for failures.\n\t* mach-o.c (bfd_mach_o_canonicalize_relocs): Set an bfd error code\n\tif returning an error value.",
    "tree": {
      "sha": "e413d62d4438b6a7605e7771c0028d89eba01e97",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e413d62d4438b6a7605e7771c0028d89eba01e97"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a68aa5d3020948564ef99d704d27e458ba22ad9d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a68aa5d3020948564ef99d704d27e458ba22ad9d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a68aa5d3020948564ef99d704d27e458ba22ad9d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a68aa5d3020948564ef99d704d27e458ba22ad9d/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "762c164d754fc456aa4764d2ed19cc4a3ec625fb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/762c164d754fc456aa4764d2ed19cc4a3ec625fb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/762c164d754fc456aa4764d2ed19cc4a3ec625fb"
    }
  ],
  "stats": {
    "total": 62,
    "additions": 57,
    "deletions": 5
  },
  "files": [
    {
      "sha": "0e1847e6e7ff0d400700b1aff062fb66057dbf82",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a68aa5d3020948564ef99d704d27e458ba22ad9d/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a68aa5d3020948564ef99d704d27e458ba22ad9d/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=a68aa5d3020948564ef99d704d27e458ba22ad9d",
      "patch": "@@ -1,3 +1,11 @@\n+2019-06-26  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24703\n+\t* mach-o-arm.c (bfd_mach_o_arm_canonicalize_one_reloc): Add error\n+\tmessages for failures.\n+\t* mach-o.c (bfd_mach_o_canonicalize_relocs): Set an bfd error code\n+\tif returning an error value.\n+\n 2019-06-25  Jan Beulich  <jbeulich@suse.com>\n \n \t* elf-properties.c (elf_find_and_remove_property): Rename last"
    },
    {
      "sha": "2a25d703eeddb93f632461730a872bcde5f37dec",
      "filename": "bfd/mach-o-arm.c",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a68aa5d3020948564ef99d704d27e458ba22ad9d/bfd/mach-o-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a68aa5d3020948564ef99d704d27e458ba22ad9d/bfd/mach-o-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/mach-o-arm.c?ref=a68aa5d3020948564ef99d704d27e458ba22ad9d",
      "patch": "@@ -156,7 +156,10 @@ bfd_mach_o_arm_canonicalize_one_reloc (bfd *       abfd,\n   bfd_mach_o_reloc_info reloc;\n \n   if (!bfd_mach_o_pre_canonicalize_one_reloc (abfd, raw, &reloc, res, syms))\n+    {\n+fprintf (stderr, \"ARm 1\\n\");\n     return FALSE;\n+    }\n \n   if (reloc.r_scattered)\n     {\n@@ -165,7 +168,11 @@ bfd_mach_o_arm_canonicalize_one_reloc (bfd *       abfd,\n \tcase BFD_MACH_O_ARM_RELOC_PAIR:\n \t  /* PR 21813: Check for a corrupt PAIR reloc at the start.  */\n \t  if (res == res_base)\n+\t    {\n+\t      _bfd_error_handler (_(\"\\\n+malformed mach-o ARM reloc pair: reloc is first reloc\"));\n \t    return FALSE;\n+\t    }\n \t  if (reloc.r_length == 2)\n \t    {\n \t      res->howto = &arm_howto_table[7];\n@@ -178,6 +185,8 @@ bfd_mach_o_arm_canonicalize_one_reloc (bfd *       abfd,\n \t      res->address = res[-1].address;\n \t      return TRUE;\n \t    }\n+\t  _bfd_error_handler (_(\"\\\n+malformed mach-o ARM reloc pair: invalid length: %d\"), reloc.r_length);\n \t  return FALSE;\n \n \tcase BFD_MACH_O_ARM_RELOC_SECTDIFF:\n@@ -191,6 +200,8 @@ bfd_mach_o_arm_canonicalize_one_reloc (bfd *       abfd,\n \t      res->howto = &arm_howto_table[8];\n \t      return TRUE;\n \t    }\n+\t  _bfd_error_handler (_(\"\\\n+malformed mach-o ARM sectdiff reloc: invalid length: %d\"), reloc.r_length);\n \t  return FALSE;\n \n \tcase BFD_MACH_O_ARM_RELOC_LOCAL_SECTDIFF:\n@@ -204,6 +215,9 @@ bfd_mach_o_arm_canonicalize_one_reloc (bfd *       abfd,\n \t      res->howto = &arm_howto_table[9];\n \t      return TRUE;\n \t    }\n+\t  _bfd_error_handler (_(\"\\\n+malformed mach-o ARM local sectdiff reloc: invalid length: %d\"),\n+\t\t\t      reloc.r_length);\n \t  return FALSE;\n \n \tcase BFD_MACH_O_ARM_RELOC_HALF_SECTDIFF:\n@@ -216,6 +230,9 @@ bfd_mach_o_arm_canonicalize_one_reloc (bfd *       abfd,\n \t      res->howto = &arm_howto_table[14];\n \t      return TRUE;\n \t    }\n+\t  _bfd_error_handler (_(\"\\\n+malformed mach-o ARM half sectdiff reloc: invalid length: %d\"),\n+\t\t\t      reloc.r_length);\n \t  return FALSE;\n \n \tdefault:\n@@ -245,6 +262,9 @@ bfd_mach_o_arm_canonicalize_one_reloc (bfd *       abfd,\n \t      res->howto = &arm_howto_table[3];\n \t      return TRUE;\n \t    default:\n+\t      _bfd_error_handler (_(\"\\\n+malformed mach-o ARM vanilla reloc: invalid length: %d (pcrel: %d)\"),\n+\t\t\t\t  reloc.r_length, reloc.r_pcrel);\n \t      return FALSE;\n \t    }\n \t  break;\n@@ -306,6 +326,8 @@ bfd_mach_o_arm_canonicalize_one_reloc (bfd *       abfd,\n \t}\n     }\n \n+  _bfd_error_handler (_(\"\\\n+malformed mach-o ARM reloc: unknown reloc type: %d\"), reloc.r_length);\n   return FALSE;\n }\n "
    },
    {
      "sha": "4e6408670dd7c1dfe2f2f59671934324bd79cd26",
      "filename": "bfd/mach-o.c",
      "status": "modified",
      "additions": 10,
      "deletions": 3,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a68aa5d3020948564ef99d704d27e458ba22ad9d/bfd/mach-o.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a68aa5d3020948564ef99d704d27e458ba22ad9d/bfd/mach-o.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/mach-o.c?ref=a68aa5d3020948564ef99d704d27e458ba22ad9d",
      "patch": "@@ -1501,7 +1501,11 @@ bfd_mach_o_canonicalize_non_scattered_reloc (bfd *abfd,\n     {\n       /* PR 17512: file: 006-2964-0.004.  */\n       if (num > mdata->nsects)\n-\treturn FALSE;\n+\t{\n+\t  _bfd_error_handler (_(\"\\\n+malformed mach-o reloc: section index is greater than the number of sections\"));\n+\t  return FALSE;\n+\t}\n \n       /* A section number.  */\n       sym = mdata->sections[num - 1]->bfdsection->symbol_ptr_ptr;\n@@ -1609,15 +1613,15 @@ bfd_mach_o_canonicalize_relocs (bfd *abfd, unsigned long filepos,\n {\n   bfd_mach_o_backend_data *bed = bfd_mach_o_get_backend_data (abfd);\n   unsigned long i;\n-  struct mach_o_reloc_info_external *native_relocs;\n+  struct mach_o_reloc_info_external *native_relocs = NULL;\n   bfd_size_type native_size;\n \n   /* Allocate and read relocs.  */\n   native_size = count * BFD_MACH_O_RELENT_SIZE;\n \n   /* PR 17512: file: 09477b57.  */\n   if (native_size < count)\n-    return -1;\n+    goto err;\n \n   native_relocs =\n     (struct mach_o_reloc_info_external *) bfd_malloc (native_size);\n@@ -1636,8 +1640,11 @@ bfd_mach_o_canonicalize_relocs (bfd *abfd, unsigned long filepos,\n     }\n   free (native_relocs);\n   return i;\n+\n  err:\n   free (native_relocs);\n+  if (bfd_get_error () == bfd_error_no_error)\n+    bfd_set_error (bfd_error_invalid_operation);\n   return -1;\n }\n "
    },
    {
      "sha": "07c8bb69d2af7bf6d53ed96d08ff525a51a1d915",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a68aa5d3020948564ef99d704d27e458ba22ad9d/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a68aa5d3020948564ef99d704d27e458ba22ad9d/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=a68aa5d3020948564ef99d704d27e458ba22ad9d",
      "patch": "@@ -1,3 +1,10 @@\n+2019-06-26  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24703\n+\t* bucomm.c (bfd_nonfatal): If no bfd error code has been set then\n+\tindicate this in the output.\n+\t(bfd_nonfatal_message): Likewise.\n+\n 2019-06-25  Jan Beulich  <jbeulich@suse.com>\n \n \t* readelf.c (dump_ctf_indent_lines): Rename local variable"
    },
    {
      "sha": "21adb05c4188556de5273df9088c9dc6d4b3fc8b",
      "filename": "binutils/bucomm.c",
      "status": "modified",
      "additions": 10,
      "deletions": 2,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a68aa5d3020948564ef99d704d27e458ba22ad9d/binutils/bucomm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a68aa5d3020948564ef99d704d27e458ba22ad9d/binutils/bucomm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/bucomm.c?ref=a68aa5d3020948564ef99d704d27e458ba22ad9d",
      "patch": "@@ -44,8 +44,12 @@ void\n bfd_nonfatal (const char *string)\n {\n   const char *errmsg;\n+  enum bfd_error err = bfd_get_error ();\n \n-  errmsg = bfd_errmsg (bfd_get_error ());\n+  if (err == bfd_error_no_error)\n+    errmsg = _(\"cause of error unknown\");\n+  else\n+    errmsg = bfd_errmsg (err);\n   fflush (stdout);\n   if (string)\n     fprintf (stderr, \"%s: %s: %s\\n\", program_name, string, errmsg);\n@@ -74,8 +78,12 @@ bfd_nonfatal_message (const char *filename,\n   const char *errmsg;\n   const char *section_name;\n   va_list args;\n+  enum bfd_error err = bfd_get_error ();\n \n-  errmsg = bfd_errmsg (bfd_get_error ());\n+  if (err == bfd_error_no_error)\n+    errmsg = _(\"cause of error unknown\");\n+  else\n+    errmsg = bfd_errmsg (err);\n   fflush (stdout);\n   section_name = NULL;\n   va_start (args, format);"
    }
  ]
}