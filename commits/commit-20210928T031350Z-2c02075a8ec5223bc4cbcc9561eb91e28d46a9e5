{
  "sha": "2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5",
  "node_id": "C_kwDOANOeidoAKDJjMDIwNzVhOGVjNTIyM2JjNGNiY2M5NTYxZWI5MWUyOGQ0NmE5ZTU",
  "commit": {
    "author": {
      "name": "Cui,Lili",
      "email": "lili.cui@intel.com",
      "date": "2021-09-28T03:13:33Z"
    },
    "committer": {
      "name": "Cui,Lili",
      "email": "lili.cui@intel.com",
      "date": "2021-09-28T03:13:50Z"
    },
    "message": "x86: Print {bad} on invalid broadcast in OP_E_memory\n\nDon't print broadcast for scalar_mode, and print {bad} for invalid broadcast.\n\ngas/\n\n\tPR binutils/28381\n\t* testsuite/gas/i386/bad-bcast.s: Add a new testcase.\n\t* testsuite/gas/i386/bad-bcast.d: Likewise.\n\t* testsuite/gas/i386/bad-bcast-intel.d: New.\n\nopcodes/\n\n\tPR binutils/28381\n\t* i386-dis.c (static struct): Add no_broadcast.\n\t(OP_E_memory): Mark invalid broadcast with no_broadcast=1 and Print \"{bad}\"for it.\n\t(intel_operand_size): mark invalid broadcast with no_broadcast=1.\n\t(OP_XMM): Mark scalar_mode with no_broadcast=1.",
    "tree": {
      "sha": "e256cbf3e6f20078a9ed58e2bac723e52b926382",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e256cbf3e6f20078a9ed58e2bac723e52b926382"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5/comments",
  "author": {
    "login": "cuilili8868",
    "id": 54013017,
    "node_id": "MDQ6VXNlcjU0MDEzMDE3",
    "avatar_url": "https://avatars.githubusercontent.com/u/54013017?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cuilili8868",
    "html_url": "https://github.com/cuilili8868",
    "followers_url": "https://api.github.com/users/cuilili8868/followers",
    "following_url": "https://api.github.com/users/cuilili8868/following{/other_user}",
    "gists_url": "https://api.github.com/users/cuilili8868/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cuilili8868/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cuilili8868/subscriptions",
    "organizations_url": "https://api.github.com/users/cuilili8868/orgs",
    "repos_url": "https://api.github.com/users/cuilili8868/repos",
    "events_url": "https://api.github.com/users/cuilili8868/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cuilili8868/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cuilili8868",
    "id": 54013017,
    "node_id": "MDQ6VXNlcjU0MDEzMDE3",
    "avatar_url": "https://avatars.githubusercontent.com/u/54013017?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cuilili8868",
    "html_url": "https://github.com/cuilili8868",
    "followers_url": "https://api.github.com/users/cuilili8868/followers",
    "following_url": "https://api.github.com/users/cuilili8868/following{/other_user}",
    "gists_url": "https://api.github.com/users/cuilili8868/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cuilili8868/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cuilili8868/subscriptions",
    "organizations_url": "https://api.github.com/users/cuilili8868/orgs",
    "repos_url": "https://api.github.com/users/cuilili8868/repos",
    "events_url": "https://api.github.com/users/cuilili8868/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cuilili8868/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "901b98215e767bbffb1bfa869e02d7dc5ea786ec",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/901b98215e767bbffb1bfa869e02d7dc5ea786ec",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/901b98215e767bbffb1bfa869e02d7dc5ea786ec"
    }
  ],
  "stats": {
    "total": 183,
    "additions": 104,
    "deletions": 79
  },
  "files": [
    {
      "sha": "29de3de299cc76b87140d089cf686e673a7c6851",
      "filename": "gas/testsuite/gas/i386/bad-bcast-intel.d",
      "status": "added",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5/gas/testsuite/gas/i386/bad-bcast-intel.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5/gas/testsuite/gas/i386/bad-bcast-intel.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/bad-bcast-intel.d?ref=2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5",
      "patch": "@@ -0,0 +1,15 @@\n+#source: bad-bcast.s\n+#objdump: -dw -Mintel\n+#name: Disassemble bad broadcast (Intel mode)\n+\n+.*: +file format .*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+[ \t]*[a-f0-9]+:[ \t]*62 c3 8c 1d 66\\s*\\(bad\\)\n+[ \t]*[a-f0-9]+:[ \t]*90\\s*nop\n+[ \t]*[a-f0-9]+:[ \t]*66 90\\s*xchg   ax,ax\n+[ \t]*[a-f0-9]+:[ \t]*66 90\\s*xchg   ax,ax\n+[ \t]*[a-f0-9]+:[ \t]*62 c1 ff 38 2a 20\\s*vcvtsi2sd xmm4,xmm0,\\[eax\\]{bad}\n+#pass"
    },
    {
      "sha": "4f829259994a11f03d9c0cc858cd1d4697ae0c68",
      "filename": "gas/testsuite/gas/i386/bad-bcast.d",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5/gas/testsuite/gas/i386/bad-bcast.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5/gas/testsuite/gas/i386/bad-bcast.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/bad-bcast.d?ref=2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5",
      "patch": "@@ -7,8 +7,8 @@\n Disassembly of section .text:\n \n 0+ <.text>:\n- +[a-f0-9]+:\t62                   \t.byte 0x62\n- +[a-f0-9]+:\tc3                   \tret    \n- +[a-f0-9]+:\t8c 1d 66 90 66 90    \tmov    %ds,0x90669066\n- +[a-f0-9]+:\t66 90                \txchg   %ax,%ax\n-#pass\n+ +[a-f0-9]+:\t62 c3 8c 1d 66\\s+\\(bad\\)\n+ +[a-f0-9]+:\t90\\s+nop\n+ +[a-f0-9]+:\t66 90\\s+xchg   %ax,%ax\n+ +[a-f0-9]+:\t66 90\\s+xchg   %ax,%ax\n+ +[a-f0-9]+:\t62 c1 ff 38 2a 20\\s+vcvtsi2sd \\(%eax\\){bad},%xmm0,%xmm4"
    },
    {
      "sha": "6c55dcbbbd8c4f7a49e63b9e0dba82bcf74318db",
      "filename": "gas/testsuite/gas/i386/bad-bcast.s",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5/gas/testsuite/gas/i386/bad-bcast.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5/gas/testsuite/gas/i386/bad-bcast.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/bad-bcast.s?ref=2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5",
      "patch": "@@ -1,3 +1,5 @@\n \t.text\n # Invalid 16-bit broadcast with EVEX.W == 1.\n \t.byte 0x62, 0xc3, 0x8c, 0x1d, 0x66, 0x90, 0x66, 0x90, 0x66, 0x90\n+# Invalid vcvtsi2sd with EVEX.b == 1.\n+\t.byte 0x62,0xc1,0xff,0x38,0x2a,0x20"
    },
    {
      "sha": "680259b1c4e491a9d2e276639123f99792108d81",
      "filename": "gas/testsuite/gas/i386/i386.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5/gas/testsuite/gas/i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5/gas/testsuite/gas/i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/i386.exp?ref=2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5",
      "patch": "@@ -646,6 +646,7 @@ if [gas_32_check] then {\n \trun_dump_test \"dw2-compress-2\"\n \trun_dump_test \"dw2-compressed-2\"\n \n+\trun_dump_test \"bad-bcast-intel\"\n \trun_dump_test \"bad-bcast\"\n \trun_dump_test \"bad-size\"\n "
    },
    {
      "sha": "926f776de88a79c1a2a90fc0d65f94c6ca08ac66",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 81,
      "deletions": 74,
      "changes": 155,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=2c02075a8ec5223bc4cbcc9561eb91e28d46a9e5",
      "patch": "@@ -2422,6 +2422,7 @@ static struct\n     int zeroing;\n     int ll;\n     int b;\n+    int no_broadcast;\n   }\n vex;\n static unsigned char need_vex;\n@@ -11059,23 +11060,25 @@ intel_operand_size (int bytemode, int sizeflag)\n {\n   if (vex.b)\n     {\n-      switch (bytemode)\n-\t{\n-\tcase x_mode:\n-\tcase evex_half_bcst_xmmq_mode:\n-\t  if (vex.w)\n-\t    oappend (\"QWORD PTR \");\n-\t  else\n-\t    oappend (\"DWORD PTR \");\n-\t  break;\n-\tcase xh_mode:\n-\tcase evex_half_bcst_xmmqh_mode:\n-\tcase evex_half_bcst_xmmqdh_mode:\n-\t  oappend (\"WORD PTR \");\n-\t  break;\n-\tdefault:\n-\t  abort ();\n-\t}\n+      if (!vex.no_broadcast)\n+\tswitch (bytemode)\n+\t  {\n+\t  case x_mode:\n+\t  case evex_half_bcst_xmmq_mode:\n+\t    if (vex.w)\n+\t      oappend (\"QWORD PTR \");\n+\t    else\n+\t      oappend (\"DWORD PTR \");\n+\t    break;\n+\t  case xh_mode:\n+\t  case evex_half_bcst_xmmqh_mode:\n+\t  case evex_half_bcst_xmmqdh_mode:\n+\t    oappend (\"WORD PTR \");\n+\t    break;\n+\t  default:\n+\t    vex.no_broadcast = 1;\n+\t    break;\n+\t  }\n       return;\n     }\n   switch (bytemode)\n@@ -11908,69 +11911,71 @@ OP_E_memory (int bytemode, int sizeflag)\n   if (vex.b)\n     {\n       evex_used |= EVEX_b_used;\n-      if (bytemode == xh_mode)\n-        {\n-          if (vex.w)\n-            {\n-\t      oappend (\"{bad}\");\n-            }\n-          else\n-            {\n-              switch (vex.length)\n-                {\n-                case 128:\n-                  oappend (\"{1to8}\");\n-                  break;\n-                case 256:\n-                  oappend (\"{1to16}\");\n-                  break;\n-                case 512:\n-                  oappend (\"{1to32}\");\n-                  break;\n-                default:\n-\t\t  abort ();\n-                }\n-            }\n-        }\n-      else if (vex.w\n-\t  || bytemode == evex_half_bcst_xmmqdh_mode\n-\t  || bytemode == evex_half_bcst_xmmq_mode)\n+      if (!vex.no_broadcast)\n \t{\n-\t  switch (vex.length)\n+\t  if (bytemode == xh_mode)\n \t    {\n-\t    case 128:\n-\t      oappend (\"{1to2}\");\n-\t      break;\n-\t    case 256:\n-\t      oappend (\"{1to4}\");\n-\t      break;\n-\t    case 512:\n-\t      oappend (\"{1to8}\");\n-\t      break;\n-\t    default:\n-\t      abort ();\n+\t      if (vex.w)\n+\t\toappend (\"{bad}\");\n+\t      else\n+\t\t{\n+\t\t  switch (vex.length)\n+\t\t    {\n+\t\t    case 128:\n+\t\t      oappend (\"{1to8}\");\n+\t\t      break;\n+\t\t    case 256:\n+\t\t      oappend (\"{1to16}\");\n+\t\t      break;\n+\t\t    case 512:\n+\t\t      oappend (\"{1to32}\");\n+\t\t      break;\n+\t\t    default:\n+\t\t      abort ();\n+\t\t    }\n+\t\t}\n \t    }\n-\t}\n-      else if (bytemode == x_mode\n-\t  || bytemode == evex_half_bcst_xmmqh_mode)\n-\t{\n-\t  switch (vex.length)\n+\t  else if (vex.w\n+\t\t   || bytemode == evex_half_bcst_xmmqdh_mode\n+\t\t   || bytemode == evex_half_bcst_xmmq_mode)\n \t    {\n-\t    case 128:\n-\t      oappend (\"{1to4}\");\n-\t      break;\n-\t    case 256:\n-\t      oappend (\"{1to8}\");\n-\t      break;\n-\t    case 512:\n-\t      oappend (\"{1to16}\");\n-\t      break;\n-\t    default:\n-\t      abort ();\n+\t      switch (vex.length)\n+\t\t{\n+\t\tcase 128:\n+\t\t  oappend (\"{1to2}\");\n+\t\t  break;\n+\t\tcase 256:\n+\t\t  oappend (\"{1to4}\");\n+\t\t  break;\n+\t\tcase 512:\n+\t\t  oappend (\"{1to8}\");\n+\t\t  break;\n+\t\tdefault:\n+\t\t  abort ();\n+\t\t}\n+\t    }\n+\t  else if (bytemode == x_mode\n+\t\t   || bytemode == evex_half_bcst_xmmqh_mode)\n+\t    {\n+\t      switch (vex.length)\n+\t\t{\n+\t\tcase 128:\n+\t\t  oappend (\"{1to4}\");\n+\t\t  break;\n+\t\tcase 256:\n+\t\t  oappend (\"{1to8}\");\n+\t\t  break;\n+\t\tcase 512:\n+\t\t  oappend (\"{1to16}\");\n+\t\t  break;\n+\t\tdefault:\n+\t\t  abort ();\n+\t\t}\n \t    }\n+\t  else\n+\t    vex.no_broadcast = 1;\n \t}\n-      else\n-\t/* If operand doesn't allow broadcast, vex.b should be 0.  */\n+      if (vex.no_broadcast)\n \toappend (\"{bad}\");\n     }\n }\n@@ -12685,6 +12690,8 @@ OP_XMM (int bytemode, int sizeflag ATTRIBUTE_UNUSED)\n \n   if (bytemode == tmm_mode)\n     modrm.reg = reg;\n+  else if (bytemode == scalar_mode)\n+    vex.no_broadcast = 1;\n \n   print_vector_reg (reg, bytemode);\n }"
    }
  ]
}