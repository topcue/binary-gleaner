{
  "sha": "0a50df5dabfe12c8bf20f4f724622ff38ef7828b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGE1MGRmNWRhYmZlMTJjOGJmMjBmNGY3MjQ2MjJmZjM4ZWY3ODI4Yg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-05-14T18:03:45Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-02T12:53:11Z"
    },
    "message": "gdb: Convert language la_demangle field to a method\n\nThis commit changes the language_data::la_demangle function pointer\nmember variable into a member function of language_defn.\n\nThe only slightly \"weird\" change in this commit is in f-lang.c, where\nI have given the Fortran language a demangle method that is identical\nto the default language_defn::demangle.  The only reason for this is\nto give me somewhere to copy the comment that was previously embedded\nwithin the f_language_data structure.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* ada-lang.c (ada_language_data): Delete la_demangle initializer.\n\t(ada_language::demangle): New member function.\n\t* c-lang.c (c_language_data): Delete la_demangle initializer.\n\t(cplus_language_data): Delete la_demangle initializer.\n\t(cplus_language::demangle): New member function.\n\t(asm_language_data): Delete la_demangle initializer.\n\t(minimal_language_data): Delete la_demangle initializer.\n\t* d-lang.c (d_language_data): Delete la_demangle initializer.\n\t(d_language::demangle): New member function.\n\t* f-lang.c (f_language_data): Delete la_demangle initializer.\n\t(f_language::demangle): New member function.\n\t* go-lang.c (go_language_data): Delete la_demangle initializer.\n\t(go_language::demangle): New member function.\n\t* language.c (language_demangle): Update.\n\t(unk_lang_demangle): Delete.\n\t(unknown_language_data): Delete la_demangle initializer.\n\t(unknown_language::demangle): New member function.\n\t(auto_language_data): Delete la_demangle initializer.\n\t(auto_language::demangle): New member function.\n\t* language.h (language_data): Delete la_demangle field.\n\t(language_defn::demangle): New function.\n\t* m2-lang.c (m2_language_data): Delete la_demangle initializer.\n\t* objc-lang.c (objc_language_data): Delete la_demangle\n\tinitializer.\n\t(objc_language::demangle): New member function.\n\t* opencl-lang.c (opencl_language_data): Delete la_demangle\n\tinitializer.\n\t* p-lang.c (pascal_language_data): Likewise.\n\t* rust-lang.c (rust_language_data): Likewise.\n\t(rust_language::demangle): New member functi",
    "tree": {
      "sha": "94db36b29dc0e23875a6b604d07338a12962fe82",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/94db36b29dc0e23875a6b604d07338a12962fe82"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0a50df5dabfe12c8bf20f4f724622ff38ef7828b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0a50df5dabfe12c8bf20f4f724622ff38ef7828b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0a50df5dabfe12c8bf20f4f724622ff38ef7828b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fbfb0a463fc7de88a2da8858ac5cd6c2f4796514",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fbfb0a463fc7de88a2da8858ac5cd6c2f4796514",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fbfb0a463fc7de88a2da8858ac5cd6c2f4796514"
    }
  ],
  "stats": {
    "total": 143,
    "additions": 111,
    "deletions": 32
  },
  "files": [
    {
      "sha": "1390be1933f9fa960b1b0409d5c2af309c02c809",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0a50df5dabfe12c8bf20f4f724622ff38ef7828b",
      "patch": "@@ -1,3 +1,36 @@\n+2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* ada-lang.c (ada_language_data): Delete la_demangle initializer.\n+\t(ada_language::demangle): New member function.\n+\t* c-lang.c (c_language_data): Delete la_demangle initializer.\n+\t(cplus_language_data): Delete la_demangle initializer.\n+\t(cplus_language::demangle): New member function.\n+\t(asm_language_data): Delete la_demangle initializer.\n+\t(minimal_language_data): Delete la_demangle initializer.\n+\t* d-lang.c (d_language_data): Delete la_demangle initializer.\n+\t(d_language::demangle): New member function.\n+\t* f-lang.c (f_language_data): Delete la_demangle initializer.\n+\t(f_language::demangle): New member function.\n+\t* go-lang.c (go_language_data): Delete la_demangle initializer.\n+\t(go_language::demangle): New member function.\n+\t* language.c (language_demangle): Update.\n+\t(unk_lang_demangle): Delete.\n+\t(unknown_language_data): Delete la_demangle initializer.\n+\t(unknown_language::demangle): New member function.\n+\t(auto_language_data): Delete la_demangle initializer.\n+\t(auto_language::demangle): New member function.\n+\t* language.h (language_data): Delete la_demangle field.\n+\t(language_defn::demangle): New function.\n+\t* m2-lang.c (m2_language_data): Delete la_demangle initializer.\n+\t* objc-lang.c (objc_language_data): Delete la_demangle\n+\tinitializer.\n+\t(objc_language::demangle): New member function.\n+\t* opencl-lang.c (opencl_language_data): Delete la_demangle\n+\tinitializer.\n+\t* p-lang.c (pascal_language_data): Likewise.\n+\t* rust-lang.c (rust_language_data): Likewise.\n+\t(rust_language::demangle): New member function.\n+\n 2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* ada-lang.c (ada_language_data): Delete la_print_type"
    },
    {
      "sha": "42e57093bf97eed48711b31560825cde4e921b8e",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=0a50df5dabfe12c8bf20f4f724622ff38ef7828b",
      "patch": "@@ -13926,7 +13926,6 @@ extern const struct language_data ada_language_data =\n   NULL,                         /* name_of_this */\n   true,                         /* la_store_sym_names_in_linkage_form_p */\n   ada_lookup_symbol_nonlocal,   /* Looking up non-local symbols.  */\n-  ada_la_decode,                /* Language specific symbol demangler */\n   NULL,                         /* Language specific\n \t\t\t\t   class_name_from_physname */\n   ada_op_print_tab,             /* expression operators for printing */\n@@ -14108,6 +14107,13 @@ class ada_language : public language_defn\n \n   /* See language.h.  */\n \n+  char *demangle (const char *mangled, int options) const override\n+  {\n+    return ada_la_decode (mangled, options);\n+  }\n+\n+  /* See language.h.  */\n+\n   void print_type (struct type *type, const char *varstring,\n \t\t   struct ui_file *stream, int show, int level,\n \t\t   const struct type_print_options *flags) const override"
    },
    {
      "sha": "de7a1bda3466449652623baa2b49345c7e4f4b96",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=0a50df5dabfe12c8bf20f4f724622ff38ef7828b",
      "patch": "@@ -912,7 +912,6 @@ extern const struct language_data c_language_data =\n   NULL,\t\t\t\t/* name_of_this */\n   true,\t\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */\n-  NULL,\t\t\t\t/* Language specific symbol demangler */\n   NULL,\t\t\t\t/* Language specific\n \t\t\t\t   class_name_from_physname */\n   c_op_print_tab,\t\t/* expression operators for printing */\n@@ -1022,7 +1021,6 @@ extern const struct language_data cplus_language_data =\n   \"this\",                       /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   cp_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */\n-  gdb_demangle,\t\t\t/* Language specific symbol demangler */\n   cp_class_name_from_physname,  /* Language specific\n \t\t\t\t   class_name_from_physname */\n   c_op_print_tab,\t\t/* expression operators for printing */\n@@ -1146,6 +1144,13 @@ class cplus_language : public language_defn\n \n   /* See language.h.  */\n \n+  char *demangle (const char *mangled, int options) const override\n+  {\n+    return gdb_demangle (mangled, options);\n+  }\n+\n+  /* See language.h.  */\n+\n   void print_type (struct type *type, const char *varstring,\n \t\t   struct ui_file *stream, int show, int level,\n \t\t   const struct type_print_options *flags) const override\n@@ -1188,7 +1193,6 @@ extern const struct language_data asm_language_data =\n   NULL,\t\t\t\t/* name_of_this */\n   true,\t\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */\n-  NULL,\t\t\t\t/* Language specific symbol demangler */\n   NULL,\t\t\t\t/* Language specific\n \t\t\t\t   class_name_from_physname */\n   c_op_print_tab,\t\t/* expression operators for printing */\n@@ -1263,7 +1267,6 @@ extern const struct language_data minimal_language_data =\n   NULL,\t\t\t\t/* name_of_this */\n   true,\t\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */\n-  NULL,\t\t\t\t/* Language specific symbol demangler */\n   NULL,\t\t\t\t/* Language specific\n \t\t\t\t   class_name_from_physname */\n   c_op_print_tab,\t\t/* expression operators for printing */"
    },
    {
      "sha": "fb56e1e9bafd105aed46b784f962047c8720c7ef",
      "filename": "gdb/d-lang.c",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/d-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/d-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-lang.c?ref=0a50df5dabfe12c8bf20f4f724622ff38ef7828b",
      "patch": "@@ -155,7 +155,6 @@ extern const struct language_data d_language_data =\n   \"this\",\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   d_lookup_symbol_nonlocal,\n-  d_demangle,\t\t\t/* Language specific symbol demangler.  */\n   NULL,\t\t\t\t/* Language specific\n \t\t\t\t   class_name_from_physname.  */\n   d_op_print_tab,\t\t/* Expression operators for printing.  */\n@@ -254,6 +253,13 @@ class d_language : public language_defn\n \n   /* See language.h.  */\n \n+  char *demangle (const char *mangled, int options) const override\n+  {\n+    return d_demangle (mangled, options);\n+  }\n+\n+  /* See language.h.  */\n+\n   void print_type (struct type *type, const char *varstring,\n \t\t   struct ui_file *stream, int show, int level,\n \t\t   const struct type_print_options *flags) const override"
    },
    {
      "sha": "bd5f78ccbef23292c21c4c3e2a07c7cfdc50a379",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 12,
      "deletions": 7,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=0a50df5dabfe12c8bf20f4f724622ff38ef7828b",
      "patch": "@@ -615,13 +615,6 @@ extern const struct language_data f_language_data =\n   NULL,                    \t/* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   cp_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */\n-\n-  /* We could support demangling here to provide module namespaces\n-     also for inferiors with only minimal symbol table (ELF symbols).\n-     Just the mangling standard is not standardized across compilers\n-     and there is no DW_AT_producer available for inferiors with only\n-     the ELF symbols to check the mangling kind.  */\n-  NULL,\t\t\t\t/* Language specific symbol demangler */\n   NULL,\t\t\t\t/* Language specific\n \t\t\t\t   class_name_from_physname */\n   f_op_print_tab,\t\t/* expression operators for printing */\n@@ -692,6 +685,18 @@ class f_language : public language_defn\n \n   /* See language.h.  */\n \n+  char *demangle (const char *mangled, int options) const override\n+  {\n+      /* We could support demangling here to provide module namespaces\n+\t also for inferiors with only minimal symbol table (ELF symbols).\n+\t Just the mangling standard is not standardized across compilers\n+\t and there is no DW_AT_producer available for inferiors with only\n+\t the ELF symbols to check the mangling kind.  */\n+    return nullptr;\n+  }\n+\n+  /* See language.h.  */\n+\n   void print_type (struct type *type, const char *varstring,\n \t\t   struct ui_file *stream, int show, int level,\n \t\t   const struct type_print_options *flags) const override"
    },
    {
      "sha": "6bd87aa597bba0af39d7481aa82e8c21334a9cf4",
      "filename": "gdb/go-lang.c",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/go-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/go-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-lang.c?ref=0a50df5dabfe12c8bf20f4f724622ff38ef7828b",
      "patch": "@@ -540,7 +540,6 @@ extern const struct language_data go_language_data =\n   NULL,\t\t\t\t/* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal, \n-  go_demangle,\t\t\t/* Language specific symbol demangler.  */\n   NULL,\t\t\t\t/* Language specific\n \t\t\t\t   class_name_from_physname.  */\n   go_op_print_tab,\t\t/* Expression operators for printing.  */\n@@ -628,6 +627,13 @@ class go_language : public language_defn\n \n   /* See language.h.  */\n \n+  char *demangle (const char *mangled, int options) const override\n+  {\n+    return go_demangle (mangled, options);\n+  }\n+\n+  /* See language.h.  */\n+\n   void print_type (struct type *type, const char *varstring,\n \t\t   struct ui_file *stream, int show, int level,\n \t\t   const struct type_print_options *flags) const override"
    },
    {
      "sha": "c447eaba0c5540a64cdf10715eb2628d687e729c",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 18,
      "deletions": 10,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=0a50df5dabfe12c8bf20f4f724622ff38ef7828b",
      "patch": "@@ -589,8 +589,8 @@ char *\n language_demangle (const struct language_defn *current_language, \n \t\t\t\tconst char *mangled, int options)\n {\n-  if (current_language != NULL && current_language->la_demangle)\n-    return current_language->la_demangle (mangled, options);\n+  if (current_language != NULL)\n+    return current_language->demangle (mangled, options);\n   return NULL;\n }\n \n@@ -749,12 +749,6 @@ static CORE_ADDR unk_lang_trampoline (struct frame_info *frame, CORE_ADDR pc)\n   return 0;\n }\n \n-/* Unknown languages just use the cplus demangler.  */\n-static char *unk_lang_demangle (const char *mangled, int options)\n-{\n-  return gdb_demangle (mangled, options);\n-}\n-\n static char *unk_lang_class_name (const char *mangled)\n {\n   return NULL;\n@@ -800,7 +794,6 @@ extern const struct language_data unknown_language_data =\n   \"this\",        \t    \t/* name_of_this */\n   true,\t\t\t\t/* store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal, /* lookup_symbol_nonlocal */\n-  unk_lang_demangle,\t\t/* Language specific symbol demangler */\n   unk_lang_class_name,\t\t/* Language specific\n \t\t\t\t   class_name_from_physname */\n   unk_op_print_tab,\t\t/* expression operators for printing */\n@@ -840,6 +833,14 @@ class unknown_language : public language_defn\n   {\n     error (_(\"unimplemented unknown_language::print_type called\"));\n   }\n+\n+  /* See language.h.  */\n+\n+  char *demangle (const char *mangled, int options) const override\n+  {\n+    /* The unknown language just uses the C++ demangler.  */\n+    return gdb_demangle (mangled, options);\n+  }\n };\n \n /* Single instance of the unknown language class.  */\n@@ -871,7 +872,6 @@ extern const struct language_data auto_language_data =\n   \"this\",\t\t        /* name_of_this */\n   false,\t\t\t/* store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */\n-  unk_lang_demangle,\t\t/* Language specific symbol demangler */\n   unk_lang_class_name,\t\t/* Language specific\n \t\t\t\t   class_name_from_physname */\n   unk_op_print_tab,\t\t/* expression operators for printing */\n@@ -911,6 +911,14 @@ class auto_language : public language_defn\n   {\n     error (_(\"unimplemented auto_language::print_type called\"));\n   }\n+\n+  /* See language.h.  */\n+\n+  char *demangle (const char *mangled, int options) const override\n+  {\n+    /* The auto language just uses the C++ demangler.  */\n+    return gdb_demangle (mangled, options);\n+  }\n };\n \n /* Single instance of the fake \"auto\" language.  */"
    },
    {
      "sha": "c456189b14dc359b32357cc693c1375a33b2e520",
      "filename": "gdb/language.h",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/language.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/language.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.h?ref=0a50df5dabfe12c8bf20f4f724622ff38ef7828b",
      "patch": "@@ -310,9 +310,6 @@ struct language_data\n        const struct block *,\n        const domain_enum);\n \n-    /* Return demangled language symbol, or NULL.  */\n-    char *(*la_demangle) (const char *mangled, int options);\n-\n     /* Return class name of a mangled method name or NULL.  */\n     char *(*la_class_name_from_physname) (const char *physname);\n \n@@ -512,6 +509,12 @@ struct language_defn : language_data\n     return false;\n   }\n \n+  /* Return demangled language symbol version of MANGLED, or NULL.  */\n+  virtual char *demangle (const char *mangled, int options) const\n+  {\n+    return nullptr;\n+  }\n+\n   /* Print a type using syntax appropriate for this language.  */\n \n   virtual void print_type (struct type *, const char *, struct ui_file *, int,"
    },
    {
      "sha": "a83cf1451b1297280e1748c779bce59217d79d34",
      "filename": "gdb/m2-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/m2-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/m2-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-lang.c?ref=0a50df5dabfe12c8bf20f4f724622ff38ef7828b",
      "patch": "@@ -374,7 +374,6 @@ extern const struct language_data m2_language_data =\n   NULL,\t\t                /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */\n-  NULL,\t\t\t\t/* Language specific symbol demangler */\n   NULL,\t\t\t\t/* Language specific\n \t\t\t\t   class_name_from_physname */\n   m2_op_print_tab,\t\t/* expression operators for printing */"
    },
    {
      "sha": "1e3d1fd3616510c207437c3c1c7570690de00acc",
      "filename": "gdb/objc-lang.c",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/objc-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/objc-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objc-lang.c?ref=0a50df5dabfe12c8bf20f4f724622ff38ef7828b",
      "patch": "@@ -380,7 +380,6 @@ extern const struct language_data objc_language_data =\n   \"self\",\t\t        /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */\n-  objc_demangle,\t\t/* Language specific symbol demangler */\n   NULL,\t\t\t\t/* Language specific\n \t\t\t\t   class_name_from_physname */\n   objc_op_print_tab,\t\t/* Expression operators for printing */\n@@ -422,6 +421,13 @@ class objc_language : public language_defn\n \n   /* See language.h.  */\n \n+  char *demangle (const char *mangled, int options) const override\n+  {\n+    return objc_demangle (mangled, options);\n+  }\n+\n+  /* See language.h.  */\n+\n   void print_type (struct type *type, const char *varstring,\n \t\t   struct ui_file *stream, int show, int level,\n \t\t   const struct type_print_options *flags) const override"
    },
    {
      "sha": "d98b228bc74dcb86488c80e9188d226853b773f7",
      "filename": "gdb/opencl-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/opencl-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/opencl-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/opencl-lang.c?ref=0a50df5dabfe12c8bf20f4f724622ff38ef7828b",
      "patch": "@@ -1028,7 +1028,6 @@ extern const struct language_data opencl_language_data =\n   NULL,                         /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */\n-  NULL,\t\t\t\t/* Language specific symbol demangler */\n   NULL,\t\t\t\t/* Language specific\n \t\t\t\t   class_name_from_physname */\n   c_op_print_tab,\t\t/* expression operators for printing */"
    },
    {
      "sha": "50b913e8b6c12900cc7360646b3bd1ef81013e4b",
      "filename": "gdb/p-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/p-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/p-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-lang.c?ref=0a50df5dabfe12c8bf20f4f724622ff38ef7828b",
      "patch": "@@ -405,7 +405,6 @@ extern const struct language_data pascal_language_data =\n   \"this\",\t\t        /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   basic_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */\n-  NULL,\t\t\t\t/* Language specific symbol demangler */\n   NULL,\t\t\t\t/* Language specific class_name_from_physname */\n   pascal_op_print_tab,\t\t/* expression operators for printing */\n   1,\t\t\t\t/* c-style arrays */"
    },
    {
      "sha": "8848e975228b003426dcd8ab8c6755a4d4f1d682",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a50df5dabfe12c8bf20f4f724622ff38ef7828b/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=0a50df5dabfe12c8bf20f4f724622ff38ef7828b",
      "patch": "@@ -2060,7 +2060,6 @@ extern const struct language_data rust_language_data =\n   NULL,\t\t\t\t/* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   rust_lookup_symbol_nonlocal,\t/* lookup_symbol_nonlocal */\n-  gdb_demangle,\t\t\t/* Language specific symbol demangler */\n   NULL,\t\t\t\t/* Language specific\n \t\t\t\t   class_name_from_physname */\n   c_op_print_tab,\t\t/* expression operators for printing */\n@@ -2136,6 +2135,13 @@ class rust_language : public language_defn\n \n   /* See language.h.  */\n \n+  char *demangle (const char *mangled, int options) const override\n+  {\n+    return gdb_demangle (mangled, options);\n+  }\n+\n+  /* See language.h.  */\n+\n   void print_type (struct type *type, const char *varstring,\n \t\t   struct ui_file *stream, int show, int level,\n \t\t   const struct type_print_options *flags) const override"
    }
  ]
}