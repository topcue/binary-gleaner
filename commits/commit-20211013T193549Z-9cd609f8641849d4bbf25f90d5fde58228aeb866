{
  "sha": "9cd609f8641849d4bbf25f90d5fde58228aeb866",
  "node_id": "C_kwDOANOeidoAKDljZDYwOWY4NjQxODQ5ZDRiYmYyNWY5MGQ1ZmRlNTgyMjhhZWI4NjY",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-10-13T19:35:49Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-10-13T19:35:49Z"
    },
    "message": "[gdb/exp] Improve <error reading variable> message\n\nWhen printing a variable x in a subroutine foo:\n...\nsubroutine foo (x)\n  integer(4) :: x (*)\n  x(3) = 1\nend subroutine foo\n...\nwhere x is an array with unknown bounds, we get:\n...\n$ gdb -q -batch outputs/gdb.fortran/array-no-bounds/array-no-bounds \\\n  -ex \"break foo\" \\\n  -ex run \\\n  -ex \"print x\"\nBreakpoint 1 at 0x4005cf: file array-no-bounds.f90, line 18.\n\nBreakpoint 1, foo (x=...) at array-no-bounds.f90:18\n18        x(3) = 1\n$1 = <error reading variable>\n...\n\nImprove the error message by printing the details of the error, such that we\nhave instead:\n...\n$1 = <error reading variable: failed to get range bounds>\n...\n\nThis is a change in gdb/valprint.c, and grepping through the sources reveals\nthat this is a common pattern.\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "d5e2bf089f9d44e971ea9390d5ce8f04bbd94588",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d5e2bf089f9d44e971ea9390d5ce8f04bbd94588"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9cd609f8641849d4bbf25f90d5fde58228aeb866",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9cd609f8641849d4bbf25f90d5fde58228aeb866",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9cd609f8641849d4bbf25f90d5fde58228aeb866",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9cd609f8641849d4bbf25f90d5fde58228aeb866/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1284c2264cca5c848e2f9622ea53e42c97e4e838",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1284c2264cca5c848e2f9622ea53e42c97e4e838",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1284c2264cca5c848e2f9622ea53e42c97e4e838"
    }
  ],
  "stats": {
    "total": 76,
    "additions": 75,
    "deletions": 1
  },
  "files": [
    {
      "sha": "a686232cb0eb09ef88b7c76f8b25002d1a2991f4",
      "filename": "gdb/testsuite/gdb.fortran/array-no-bounds.exp",
      "status": "added",
      "additions": 44,
      "deletions": 0,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9cd609f8641849d4bbf25f90d5fde58228aeb866/gdb/testsuite/gdb.fortran/array-no-bounds.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9cd609f8641849d4bbf25f90d5fde58228aeb866/gdb/testsuite/gdb.fortran/array-no-bounds.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/array-no-bounds.exp?ref=9cd609f8641849d4bbf25f90d5fde58228aeb866",
      "patch": "@@ -0,0 +1,44 @@\n+# Copyright 2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# This file is part of the gdb testsuite.  It contains test to ensure that\n+# array bounds accept LONGEST.\n+\n+if { [skip_fortran_tests] } { return -1 }\n+\n+standard_testfile .f90\n+load_lib fortran.exp\n+\n+if { [prepare_for_testing \"failed to prepare\" $testfile $srcfile \\\n+\t {f90 debug}] } {\n+    return -1\n+}\n+\n+if { ![fortran_runto_main] } {\n+    perror \"Could not run to main.\"\n+    continue\n+}\n+\n+# Go to foo.\n+gdb_breakpoint foo\n+gdb_continue_to_breakpoint \"foo\"\n+\n+# Print x, and check that we get a useful error message.\n+gdb_test \"p x\" \\\n+    \" = <error reading variable: failed to get range bounds>\"\n+\n+# Print x using @ syntax.\n+gdb_test \"p x(1)@5\" \\\n+    \" = \\\\(0, 0, 0, 0, 0\\\\)\""
    },
    {
      "sha": "7b9ca998fffa22e8c1cc4b4f97c06738525a243a",
      "filename": "gdb/testsuite/gdb.fortran/array-no-bounds.f90",
      "status": "added",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9cd609f8641849d4bbf25f90d5fde58228aeb866/gdb/testsuite/gdb.fortran/array-no-bounds.f90",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9cd609f8641849d4bbf25f90d5fde58228aeb866/gdb/testsuite/gdb.fortran/array-no-bounds.f90",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/array-no-bounds.f90?ref=9cd609f8641849d4bbf25f90d5fde58228aeb866",
      "patch": "@@ -0,0 +1,30 @@\n+! Copyright 2021 Free Software Foundation, Inc.\n+\n+! This program is free software; you can redistribute it and/or modify\n+! it under the terms of the GNU General Public License as published by\n+! the Free Software Foundation; either version 3 of the License, or\n+! (at your option) any later version.\n+!\n+! This program is distributed in the hope that it will be useful,\n+! but WITHOUT ANY WARRANTY; without even the implied warranty of\n+! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+! GNU General Public License for more details.\n+!\n+! You should have received a copy of the GNU General Public License\n+! along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+subroutine foo (x)\n+  integer(4) :: x (*)\n+  x(3) = 1\n+end subroutine foo\n+\n+program test\n+  interface\n+    subroutine foo (x)\n+    integer(4) :: x (*)\n+    end subroutine\n+  end interface\n+  integer(4) :: x (5)\n+  x(:) = 0\n+  call foo (x)\n+end program"
    },
    {
      "sha": "485b5b9857fd827d1825e5a49a4bbfb3fcd12607",
      "filename": "gdb/valprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9cd609f8641849d4bbf25f90d5fde58228aeb866/gdb/valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9cd609f8641849d4bbf25f90d5fde58228aeb866/gdb/valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.c?ref=9cd609f8641849d4bbf25f90d5fde58228aeb866",
      "patch": "@@ -1050,7 +1050,7 @@ do_val_print (struct value *value, struct ui_file *stream, int recurse,\n   catch (const gdb_exception_error &except)\n     {\n       fprintf_styled (stream, metadata_style.style (),\n-\t\t      _(\"<error reading variable>\"));\n+\t\t      _(\"<error reading variable: %s>\"), except.what ());\n     }\n }\n "
    }
  ]
}