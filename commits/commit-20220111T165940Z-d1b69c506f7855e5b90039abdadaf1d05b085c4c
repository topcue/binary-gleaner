{
  "sha": "d1b69c506f7855e5b90039abdadaf1d05b085c4c",
  "node_id": "C_kwDOANOeidoAKGQxYjY5YzUwNmY3ODU1ZTViOTAwMzlhYmRhZGFmMWQwNWIwODVjNGM",
  "commit": {
    "author": {
      "name": "Fangrui Song",
      "email": "maskray@google.com",
      "date": "2022-01-11T16:59:40Z"
    },
    "committer": {
      "name": "Fangrui Song",
      "email": "maskray@google.com",
      "date": "2022-01-11T16:59:40Z"
    },
    "message": "ar: Add --thin for creating thin archives\n\nIn many ar implementations (FreeBSD, elfutils, etc), -T has the X/Open\nSystem Interface specified semantics. Therefore -T for thin archives is\nnot recommended for portability. -T is deprecated without diagnostics.\n\n    PR binutils/28759\n    * ar.c (long_options): Add --thin.\n    (usage) Add --thin. Deprecate -T without diagnostics.\n    * doc/binutils.texi: Add doc.\n    * NEWS: Mention --thin.\n    * binutils/testsuite/binutils-all/ar.exp: Add tests.",
    "tree": {
      "sha": "6b5758b36eb4440cbe4d4ec50fed93ee9175f18a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6b5758b36eb4440cbe4d4ec50fed93ee9175f18a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d1b69c506f7855e5b90039abdadaf1d05b085c4c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1b69c506f7855e5b90039abdadaf1d05b085c4c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d1b69c506f7855e5b90039abdadaf1d05b085c4c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1b69c506f7855e5b90039abdadaf1d05b085c4c/comments",
  "author": {
    "login": "MaskRay",
    "id": 416322,
    "node_id": "MDQ6VXNlcjQxNjMyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/416322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaskRay",
    "html_url": "https://github.com/MaskRay",
    "followers_url": "https://api.github.com/users/MaskRay/followers",
    "following_url": "https://api.github.com/users/MaskRay/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaskRay/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaskRay/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaskRay/subscriptions",
    "organizations_url": "https://api.github.com/users/MaskRay/orgs",
    "repos_url": "https://api.github.com/users/MaskRay/repos",
    "events_url": "https://api.github.com/users/MaskRay/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaskRay/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "MaskRay",
    "id": 416322,
    "node_id": "MDQ6VXNlcjQxNjMyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/416322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaskRay",
    "html_url": "https://github.com/MaskRay",
    "followers_url": "https://api.github.com/users/MaskRay/followers",
    "following_url": "https://api.github.com/users/MaskRay/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaskRay/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaskRay/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaskRay/subscriptions",
    "organizations_url": "https://api.github.com/users/MaskRay/orgs",
    "repos_url": "https://api.github.com/users/MaskRay/repos",
    "events_url": "https://api.github.com/users/MaskRay/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaskRay/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84"
    }
  ],
  "stats": {
    "total": 49,
    "additions": 43,
    "deletions": 6
  },
  "files": [
    {
      "sha": "9c2c3e557778caf293975e434bee00cc33bbbb2b",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1b69c506f7855e5b90039abdadaf1d05b085c4c/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1b69c506f7855e5b90039abdadaf1d05b085c4c/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=d1b69c506f7855e5b90039abdadaf1d05b085c4c",
      "patch": "@@ -1,3 +1,12 @@\n+2022-01-11  Fangrui Song  <maskray@google.com>\n+\n+\tPR binutils/28759\n+\t* ar.c (long_options): Add --thin.\n+\t(usage) Add --thin. Deprecate -T without diagnostics.\n+\t* doc/binutils.texi: Add doc.\n+\t* NEWS: Mention --thin.\n+\t* binutils/testsuite/binutils-all/ar.exp: Add tests.\n+\n 2022-01-11  Martin Storsj\u00f6  <martin@martin.st>\n \n \t* dlltool.c (main): If a prefix has not been provided, attempt to"
    },
    {
      "sha": "ffba42ccd5e86c5506d2dcdfcb17114cfd0301f2",
      "filename": "binutils/NEWS",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1b69c506f7855e5b90039abdadaf1d05b085c4c/binutils/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1b69c506f7855e5b90039abdadaf1d05b085c4c/binutils/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/NEWS?ref=d1b69c506f7855e5b90039abdadaf1d05b085c4c",
      "patch": "@@ -18,6 +18,10 @@\n * Support for efi-app-aarch64, efi-rtdrv-aarch64 and efi-bsdrv-aarch64 has been\n   added to objcopy in order to enable UEFI development using binutils.\n \n+* ar: Add --thin for creating thin archives. -T is a deprecated alias without\n+  diagnostics. In many ar implementations -T has a different meaning, as\n+  specified by X/Open System Interface.\n+\n Changes in 2.37:\n \n * The readelf tool has a new command line option which can be used to specify"
    },
    {
      "sha": "0d4c7cf16a6538f315c7cc02372bfb86a9253d3b",
      "filename": "binutils/ar.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1b69c506f7855e5b90039abdadaf1d05b085c4c/binutils/ar.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1b69c506f7855e5b90039abdadaf1d05b085c4c/binutils/ar.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ar.c?ref=d1b69c506f7855e5b90039abdadaf1d05b085c4c",
      "patch": "@@ -172,6 +172,7 @@ static struct option long_options[] =\n   {\"version\", no_argument, &show_version, 1},\n   {\"output\", required_argument, NULL, OPTION_OUTPUT},\n   {\"record-libdeps\", required_argument, NULL, 'l'},\n+  {\"thin\", no_argument, NULL, 'T'},\n   {NULL, no_argument, NULL, 0}\n };\n \n@@ -337,13 +338,14 @@ usage (int help)\n   fprintf (s, _(\"  [s]          - create an archive index (cf. ranlib)\\n\"));\n   fprintf (s, _(\"  [l <text> ]  - specify the dependencies of this library\\n\"));\n   fprintf (s, _(\"  [S]          - do not build a symbol table\\n\"));\n-  fprintf (s, _(\"  [T]          - make a thin archive\\n\"));\n+  fprintf (s, _(\"  [T]          - deprecated, use --thin instead\\n\"));\n   fprintf (s, _(\"  [v]          - be verbose\\n\"));\n   fprintf (s, _(\"  [V]          - display the version number\\n\"));\n   fprintf (s, _(\"  @<file>      - read options from <file>\\n\"));\n   fprintf (s, _(\"  --target=BFDNAME - specify the target object format as BFDNAME\\n\"));\n   fprintf (s, _(\"  --output=DIRNAME - specify the output directory for extraction operations\\n\"));\n   fprintf (s, _(\"  --record-libdeps=<text> - specify the dependencies of this library\\n\"));\n+  fprintf (s, _(\"  --thin       - make a thin archive\\n\"));\n #if BFD_SUPPORTS_PLUGINS\n   fprintf (s, _(\" optional:\\n\"));\n   fprintf (s, _(\"  --plugin <p> - load the specified plugin\\n\"));"
    },
    {
      "sha": "54845c5dc086f21f7a26a0302dc4436fd44032ad",
      "filename": "binutils/doc/binutils.texi",
      "status": "modified",
      "additions": 10,
      "deletions": 5,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1b69c506f7855e5b90039abdadaf1d05b085c4c/binutils/doc/binutils.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1b69c506f7855e5b90039abdadaf1d05b085c4c/binutils/doc/binutils.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/doc/binutils.texi?ref=d1b69c506f7855e5b90039abdadaf1d05b085c4c",
      "patch": "@@ -256,7 +256,7 @@ program.\n \n @smallexample\n @c man begin SYNOPSIS ar\n-ar [@option{-X32_64}] [@option{-}]@var{p}[@var{mod}] [@option{--plugin} @var{name}] [@option{--target} @var{bfdname}] [@option{--output} @var{dirname}] [@option{--record-libdeps} @var{libdeps}] [@var{relpos}] [@var{count}] @var{archive} [@var{member}@dots{}]\n+ar [@option{-X32_64}] [@option{-}]@var{p}[@var{mod}] [@option{--plugin} @var{name}] [@option{--target} @var{bfdname}] [@option{--output} @var{dirname}] [@option{--record-libdeps} @var{libdeps}] [@option{--thin}] [@var{relpos}] [@var{count}] @var{archive} [@var{member}@dots{}]\n @c man end\n @end smallexample\n \n@@ -507,10 +507,9 @@ with the linker.  In order to build a symbol table, you must omit the\n @samp{ranlib} on the archive.\n \n @item T\n-@cindex creating thin archive\n-Make the specified @var{archive} a @emph{thin} archive.  If it already\n-exists and is a regular archive, the existing members must be present\n-in the same directory as @var{archive}.\n+Deprecated alias for @option{--thin}.  @option{T} is not recommended because in\n+many ar implementations @option{T} has a different meaning, as specified by\n+X/Open System Interface.\n \n @item u\n @cindex updating an archive\n@@ -603,6 +602,12 @@ line.\n The @option{--record-libdeps} option is identical to the @option{l} modifier,\n just handled in long form.\n \n+@item --thin\n+@cindex creating thin archive\n+Make the specified @var{archive} a @emph{thin} archive.  If it already\n+exists and is a regular archive, the existing members must be present\n+in the same directory as @var{archive}.\n+\n @end table\n @c man end\n "
    },
    {
      "sha": "3b841825f6f0b93d7efd64859960a839cb43506e",
      "filename": "binutils/testsuite/binutils-all/ar.exp",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1b69c506f7855e5b90039abdadaf1d05b085c4c/binutils/testsuite/binutils-all/ar.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1b69c506f7855e5b90039abdadaf1d05b085c4c/binutils/testsuite/binutils-all/ar.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/ar.exp?ref=d1b69c506f7855e5b90039abdadaf1d05b085c4c",
      "patch": "@@ -309,11 +309,13 @@ proc thin_archive_with_nested { bfdtests } {\n     if [is_remote host] {\n \tset archive artest.a\n \tset archive2 artest2.a\n+\tset archive3 artest3.a\n \tset objfile [remote_download host tmpdir/bintest.${obj}]\n \tremote_file host delete $archive\n     } else {\n \tset archive tmpdir/artest.a\n \tset archive2 tmpdir/artest2.a\n+\tset archive3 tmpdir/artest3.a\n \tset objfile tmpdir/bintest.${obj}\n     }\n \n@@ -333,6 +335,14 @@ proc thin_archive_with_nested { bfdtests } {\n \treturn\n     }\n \n+    remote_file build delete tmpdir/artest3.a\n+\n+    set got [binutils_run $AR \"rc --thin $archive3 ${archive}\"]\n+    if ![string match \"\" $got] {\n+\tfail $testname\n+\treturn\n+    }\n+\n     foreach bfdtest $bfdtests {\n \tset exec_output [binutils_run \"$base_dir/$bfdtest\" \"$archive\"]\n \tif ![string match \"\" $exec_output] {\n@@ -347,6 +357,13 @@ proc thin_archive_with_nested { bfdtests } {\n \t    fail \"$testname ($bfdtest)\"\n \t    return\n \t}\n+\n+\tset exec_output [binutils_run \"$base_dir/$bfdtest\" \"$archive3\"]\n+\tif ![string match \"\" $exec_output] {\n+\t    verbose -log $exec_output\n+\t    fail \"$testname ($bfdtest)\"\n+\t    return\n+\t}\n     }\n \n     set got [binutils_run $NM \"--print-armap $archive\"]"
    }
  ]
}