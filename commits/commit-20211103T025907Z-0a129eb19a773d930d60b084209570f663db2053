{
  "sha": "0a129eb19a773d930d60b084209570f663db2053",
  "node_id": "C_kwDOANOeidoAKDBhMTI5ZWIxOWE3NzNkOTMwZDYwYjA4NDIwOTU3MGY2NjNkYjIwNTM",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-10-31T07:29:36Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-03T02:59:07Z"
    },
    "message": "sim: hoist cgen mloop rules up to common builds\n\nThese rules don't depend on the target compiler settings, so hoist\nthe build logic up to the common builds for better parallelization.\n\nWe have to extend the genmloop.sh logic a bit to allow outputting\nto a subdir since it always assumed cwd was the right place.\n\nWe leave the cgen maintainer rules in the subdirs for now as they\naren't normally run, and they rely on cgen logic that has not yet\nbeen generalized.",
    "tree": {
      "sha": "c29451f6fe7b9d2ae8ebc071b7a04fb36033973a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c29451f6fe7b9d2ae8ebc071b7a04fb36033973a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0a129eb19a773d930d60b084209570f663db2053",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0a129eb19a773d930d60b084209570f663db2053",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0a129eb19a773d930d60b084209570f663db2053",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0a129eb19a773d930d60b084209570f663db2053/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d2a5dbc744548e173ba1687e1a63a8c2196c7122",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d2a5dbc744548e173ba1687e1a63a8c2196c7122",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d2a5dbc744548e173ba1687e1a63a8c2196c7122"
    }
  ],
  "stats": {
    "total": 906,
    "additions": 707,
    "deletions": 199
  },
  "files": [
    {
      "sha": "fd4b768774342695fca6360d34a88f7b1256c864",
      "filename": "sim/Makefile.am",
      "status": "modified",
      "additions": 23,
      "deletions": 1,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a129eb19a773d930d60b084209570f663db2053/sim/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a129eb19a773d930d60b084209570f663db2053/sim/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/Makefile.am?ref=0a129eb19a773d930d60b084209570f663db2053",
      "patch": "@@ -18,6 +18,7 @@\n AUTOMAKE_OPTIONS = dejagnu foreign no-dist subdir-objects\n ACLOCAL_AMFLAGS = -Im4 -I.. -I../config\n \n+srccom = $(srcdir)/common\n srcroot = $(srcdir)/..\n \n SUBDIRS = @subdirs@ $(SIM_SUBDIRS)\n@@ -55,7 +56,7 @@ SIM_ALL_RECURSIVE_DEPS =\n # An alternative is to slurp in the tables at runtime.\n .PHONY: nltvals\n nltvals:\n-\t$(srcdir)/common/gennltvals.py --cpp \"$(CPP)\"\n+\t$(srccom)/gennltvals.py --cpp \"$(CPP)\"\n \n pkginclude_HEADERS = \\\n \t$(srcroot)/include/sim/callback.h \\\n@@ -67,21 +68,42 @@ include igen/local.mk\n endif\n include testsuite/local.mk\n \n+if SIM_ENABLE_ARCH_bpf\n+include bpf/local.mk\n+endif\n if SIM_ENABLE_ARCH_cr16\n include cr16/local.mk\n endif\n+if SIM_ENABLE_ARCH_cris\n+include cris/local.mk\n+endif\n if SIM_ENABLE_ARCH_d10v\n include d10v/local.mk\n endif\n+if SIM_ENABLE_ARCH_frv\n+include frv/local.mk\n+endif\n+if SIM_ENABLE_ARCH_iq2000\n+include iq2000/local.mk\n+endif\n+if SIM_ENABLE_ARCH_lm32\n+include lm32/local.mk\n+endif\n if SIM_ENABLE_ARCH_m32c\n include m32c/local.mk\n endif\n+if SIM_ENABLE_ARCH_m32r\n+include m32r/local.mk\n+endif\n if SIM_ENABLE_ARCH_m68hc11\n include m68hc11/local.mk\n endif\n if SIM_ENABLE_ARCH_mn10300\n include mn10300/local.mk\n endif\n+if SIM_ENABLE_ARCH_or1k\n+include or1k/local.mk\n+endif\n if SIM_ENABLE_ARCH_sh\n include sh/local.mk\n endif"
    },
    {
      "sha": "07c89377e97425ca19703e4206a4efa43ce41399",
      "filename": "sim/Makefile.in",
      "status": "modified",
      "additions": 352,
      "deletions": 27,
      "changes": 379,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a129eb19a773d930d60b084209570f663db2053/sim/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a129eb19a773d930d60b084209570f663db2053/sim/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/Makefile.in?ref=0a129eb19a773d930d60b084209570f663db2053",
      "patch": "@@ -101,6 +101,23 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n+# See sim/Makefile.am\n+#\n+# Copyright (C) 2020-2021 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n # See sim/Makefile.am\n #\n # Copyright (C) 2008-2021 Free Software Foundation, Inc.\n@@ -119,6 +136,24 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n+# See sim/Makefile.am\n+#\n+# Copyright (C) 2004-2021 Free Software Foundation, Inc.\n+# Contributed by Axis Communications.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n # See sim/Makefile.am\n #\n # Copyright (C) 1996-2021 Free Software Foundation, Inc.\n@@ -137,6 +172,60 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n+# See sim/Makefile.am\n+#\n+# Copyright (C) 1998-2021 Free Software Foundation, Inc.\n+# Contributed by Red Hat.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# See sim/Makefile.am\n+#\n+# Copyright (C) 1998-2021 Free Software Foundation, Inc.\n+# Contributed by Red Hat.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# See sim/Makefile.am\n+#\n+# Copyright (C) 2009-2021 Free Software Foundation, Inc.\n+# Contributed by Jon Beniston <jon@beniston.com>\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n # See sim/Makefile.am\n #\n # Copyright (C) 2005-2021 Free Software Foundation, Inc.\n@@ -155,6 +244,24 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n+# See sim/Makefile.am\n+#\n+# Copyright (C) 1996-2021 Free Software Foundation, Inc.\n+# Contributed by Cygnus Support.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n # See sim/Makefile.am\n #\n # Copyright (C) 1999-2021 Free Software Foundation, Inc.\n@@ -191,6 +298,23 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n+# See sim/Makefile.am\n+#\n+# Copyright (C) 2017-2021 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n # See sim/Makefile.am\n #\n # Copyright (C) 1990-2021 Free Software Foundation, Inc.\n@@ -322,41 +446,69 @@ TESTS = testsuite/common/bits32m0$(EXEEXT) \\\n \ttestsuite/common/alu-tst$(EXEEXT)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_cr16_TRUE@am__append_5 = $(cr16_BUILD_OUTPUTS)\n-@SIM_ENABLE_ARCH_cr16_TRUE@am__append_6 = cr16/gencode\n+@SIM_ENABLE_ARCH_bpf_TRUE@am__append_5 = $(bpf_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_bpf_TRUE@am__append_6 = $(bpf_BUILD_OUTPUTS)\n+\n+# This makes sure build tools are available before building the arch-subdirs.\n @SIM_ENABLE_ARCH_cr16_TRUE@am__append_7 = $(cr16_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_cr16_TRUE@am__append_8 = cr16/gencode\n+@SIM_ENABLE_ARCH_cr16_TRUE@am__append_9 = $(cr16_BUILD_OUTPUTS)\n+\n+# This makes sure build tools are available before building the arch-subdirs.\n+@SIM_ENABLE_ARCH_cris_TRUE@am__append_10 = $(cris_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_cris_TRUE@am__append_11 = $(cris_BUILD_OUTPUTS)\n+\n+# This makes sure build tools are available before building the arch-subdirs.\n+@SIM_ENABLE_ARCH_d10v_TRUE@am__append_12 = $(d10v_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_d10v_TRUE@am__append_13 = d10v/gencode\n+@SIM_ENABLE_ARCH_d10v_TRUE@am__append_14 = $(d10v_BUILD_OUTPUTS)\n+\n+# This makes sure build tools are available before building the arch-subdirs.\n+@SIM_ENABLE_ARCH_frv_TRUE@am__append_15 = $(frv_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_frv_TRUE@am__append_16 = $(frv_BUILD_OUTPUTS)\n+\n+# This makes sure build tools are available before building the arch-subdirs.\n+@SIM_ENABLE_ARCH_iq2000_TRUE@am__append_17 = $(iq2000_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_iq2000_TRUE@am__append_18 = $(iq2000_BUILD_OUTPUTS)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_d10v_TRUE@am__append_8 = $(d10v_BUILD_OUTPUTS)\n-@SIM_ENABLE_ARCH_d10v_TRUE@am__append_9 = d10v/gencode\n-@SIM_ENABLE_ARCH_d10v_TRUE@am__append_10 = $(d10v_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_lm32_TRUE@am__append_19 = $(lm32_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_lm32_TRUE@am__append_20 = $(lm32_BUILD_OUTPUTS)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_m32c_TRUE@am__append_11 = $(m32c_BUILD_OUTPUTS)\n-@SIM_ENABLE_ARCH_m32c_TRUE@am__append_12 = m32c/opc2c\n-@SIM_ENABLE_ARCH_m32c_TRUE@am__append_13 = \\\n+@SIM_ENABLE_ARCH_m32c_TRUE@am__append_21 = $(m32c_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_m32c_TRUE@am__append_22 = m32c/opc2c\n+@SIM_ENABLE_ARCH_m32c_TRUE@am__append_23 = \\\n @SIM_ENABLE_ARCH_m32c_TRUE@\t$(m32c_BUILD_OUTPUTS) \\\n @SIM_ENABLE_ARCH_m32c_TRUE@\tm32c/m32c.c.log \\\n @SIM_ENABLE_ARCH_m32c_TRUE@\tm32c/r8c.c.log\n \n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_m68hc11_TRUE@am__append_14 = $(m68hc11_BUILD_OUTPUTS)\n-@SIM_ENABLE_ARCH_m68hc11_TRUE@am__append_15 = m68hc11/gencode\n-@SIM_ENABLE_ARCH_m68hc11_TRUE@am__append_16 = $(m68hc11_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_m32r_TRUE@am__append_24 = $(m32r_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_m32r_TRUE@am__append_25 = $(m32r_BUILD_OUTPUTS)\n+\n+# This makes sure build tools are available before building the arch-subdirs.\n+@SIM_ENABLE_ARCH_m68hc11_TRUE@am__append_26 = $(m68hc11_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_m68hc11_TRUE@am__append_27 = m68hc11/gencode\n+@SIM_ENABLE_ARCH_m68hc11_TRUE@am__append_28 = $(m68hc11_BUILD_OUTPUTS)\n+\n+# This makes sure build tools are available before building the arch-subdirs.\n+@SIM_ENABLE_ARCH_mn10300_TRUE@am__append_29 = $(mn10300_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_mn10300_TRUE@am__append_30 = $(mn10300_BUILD_OUTPUTS)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_mn10300_TRUE@am__append_17 = $(mn10300_BUILD_OUTPUTS)\n-@SIM_ENABLE_ARCH_mn10300_TRUE@am__append_18 = $(mn10300_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_or1k_TRUE@am__append_31 = $(or1k_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_or1k_TRUE@am__append_32 = $(or1k_BUILD_OUTPUTS)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_sh_TRUE@am__append_19 = $(sh_BUILD_OUTPUTS)\n-@SIM_ENABLE_ARCH_sh_TRUE@am__append_20 = sh/gencode\n-@SIM_ENABLE_ARCH_sh_TRUE@am__append_21 = $(sh_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_sh_TRUE@am__append_33 = $(sh_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_sh_TRUE@am__append_34 = sh/gencode\n+@SIM_ENABLE_ARCH_sh_TRUE@am__append_35 = $(sh_BUILD_OUTPUTS)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_v850_TRUE@am__append_22 = $(v850_BUILD_OUTPUTS)\n-@SIM_ENABLE_ARCH_v850_TRUE@am__append_23 = $(v850_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_v850_TRUE@am__append_36 = $(v850_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_v850_TRUE@am__append_37 = $(v850_BUILD_OUTPUTS)\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n@@ -1002,6 +1154,7 @@ zlibdir = @zlibdir@\n zlibinc = @zlibinc@\n AUTOMAKE_OPTIONS = dejagnu foreign no-dist subdir-objects\n ACLOCAL_AMFLAGS = -Im4 -I.. -I../config\n+srccom = $(srcdir)/common\n srcroot = $(srcdir)/..\n SUBDIRS = @subdirs@ $(SIM_SUBDIRS)\n AM_MAKEFLAGS = SIM_PRIMARY_TARGET=$(SIM_PRIMARY_TARGET)\n@@ -1015,9 +1168,11 @@ CLEANFILES = common/version.c common/version.c-stamp \\\n \ttestsuite/common/bits64m63.c\n DISTCLEANFILES = \n MOSTLYCLEANFILES = core $(am__append_4) site-srcdir.exp testrun.log \\\n-\ttestrun.sum $(am__append_7) $(am__append_10) $(am__append_13) \\\n-\t$(am__append_16) $(am__append_18) $(am__append_21) \\\n-\t$(am__append_23)\n+\ttestrun.sum $(am__append_6) $(am__append_9) $(am__append_11) \\\n+\t$(am__append_14) $(am__append_16) $(am__append_18) \\\n+\t$(am__append_20) $(am__append_23) $(am__append_25) \\\n+\t$(am__append_28) $(am__append_30) $(am__append_32) \\\n+\t$(am__append_35) $(am__append_37)\n AM_CFLAGS = $(WERROR_CFLAGS) $(WARN_CFLAGS)\n AM_CPPFLAGS = -I$(srcroot)/include $(SIM_INLINE) -I$(srcdir)/common\n COMPILE_FOR_BUILD = $(CC_FOR_BUILD) $(AM_CPPFLAGS) $(CFLAGS_FOR_BUILD)\n@@ -1029,9 +1184,11 @@ LINK_FOR_BUILD = $(CC_FOR_BUILD) $(CFLAGS_FOR_BUILD) $(LDFLAGS_FOR_BUILD) -o $@\n # This makes sure common parts are available before building the arch-subdirs\n # which will refer to these.\n SIM_ALL_RECURSIVE_DEPS = common/libcommon.a $(am__append_1) \\\n-\t$(am__append_5) $(am__append_8) $(am__append_11) \\\n-\t$(am__append_14) $(am__append_17) $(am__append_19) \\\n-\t$(am__append_22)\n+\t$(am__append_5) $(am__append_7) $(am__append_10) \\\n+\t$(am__append_12) $(am__append_15) $(am__append_17) \\\n+\t$(am__append_19) $(am__append_21) $(am__append_24) \\\n+\t$(am__append_26) $(am__append_29) $(am__append_31) \\\n+\t$(am__append_33) $(am__append_36)\n pkginclude_HEADERS = \\\n \t$(srcroot)/include/sim/callback.h \\\n \t$(srcroot)/include/sim/sim.h\n@@ -1105,20 +1262,51 @@ testsuite_common_CPPFLAGS = \\\n \t-I$(srcroot)/include \\\n \t-I../bfd\n \n+@SIM_ENABLE_ARCH_bpf_TRUE@bpf_BUILD_OUTPUTS = \\\n+@SIM_ENABLE_ARCH_bpf_TRUE@\tbpf/eng-le.h \\\n+@SIM_ENABLE_ARCH_bpf_TRUE@\tbpf/mloop-le.c \\\n+@SIM_ENABLE_ARCH_bpf_TRUE@\tbpf/stamp-mloop-le \\\n+@SIM_ENABLE_ARCH_bpf_TRUE@\tbpf/eng-be.h \\\n+@SIM_ENABLE_ARCH_bpf_TRUE@\tbpf/mloop-be.c \\\n+@SIM_ENABLE_ARCH_bpf_TRUE@\tbpf/stamp-mloop-be\n+\n @SIM_ENABLE_ARCH_cr16_TRUE@cr16_BUILD_OUTPUTS = \\\n @SIM_ENABLE_ARCH_cr16_TRUE@\tcr16/gencode$(EXEEXT) \\\n @SIM_ENABLE_ARCH_cr16_TRUE@\tcr16/simops.h \\\n @SIM_ENABLE_ARCH_cr16_TRUE@\tcr16/table.c\n \n @SIM_ENABLE_ARCH_cr16_TRUE@cr16_gencode_SOURCES = cr16/gencode.c\n @SIM_ENABLE_ARCH_cr16_TRUE@cr16_gencode_LDADD = cr16/cr16-opc.o\n+@SIM_ENABLE_ARCH_cris_TRUE@cris_BUILD_OUTPUTS = \\\n+@SIM_ENABLE_ARCH_cris_TRUE@\tcris/engv10.h \\\n+@SIM_ENABLE_ARCH_cris_TRUE@\tcris/mloopv10f.c \\\n+@SIM_ENABLE_ARCH_cris_TRUE@\tcris/stamp-mloop-v10f \\\n+@SIM_ENABLE_ARCH_cris_TRUE@\tcris/engv32.h \\\n+@SIM_ENABLE_ARCH_cris_TRUE@\tcris/mloopv32f.c \\\n+@SIM_ENABLE_ARCH_cris_TRUE@\tcris/stamp-mloop-v32f\n+\n @SIM_ENABLE_ARCH_d10v_TRUE@d10v_BUILD_OUTPUTS = \\\n @SIM_ENABLE_ARCH_d10v_TRUE@\td10v/gencode$(EXEEXT) \\\n @SIM_ENABLE_ARCH_d10v_TRUE@\td10v/simops.h \\\n @SIM_ENABLE_ARCH_d10v_TRUE@\td10v/table.c\n \n @SIM_ENABLE_ARCH_d10v_TRUE@d10v_gencode_SOURCES = d10v/gencode.c\n @SIM_ENABLE_ARCH_d10v_TRUE@d10v_gencode_LDADD = d10v/d10v-opc.o\n+@SIM_ENABLE_ARCH_frv_TRUE@frv_BUILD_OUTPUTS = \\\n+@SIM_ENABLE_ARCH_frv_TRUE@\tfrv/eng.h \\\n+@SIM_ENABLE_ARCH_frv_TRUE@\tfrv/mloop.c \\\n+@SIM_ENABLE_ARCH_frv_TRUE@\tfrv/stamp-mloop\n+\n+@SIM_ENABLE_ARCH_iq2000_TRUE@iq2000_BUILD_OUTPUTS = \\\n+@SIM_ENABLE_ARCH_iq2000_TRUE@\tiq2000/eng.h \\\n+@SIM_ENABLE_ARCH_iq2000_TRUE@\tiq2000/mloop.c \\\n+@SIM_ENABLE_ARCH_iq2000_TRUE@\tiq2000/stamp-mloop\n+\n+@SIM_ENABLE_ARCH_lm32_TRUE@lm32_BUILD_OUTPUTS = \\\n+@SIM_ENABLE_ARCH_lm32_TRUE@\tlm32/eng.h \\\n+@SIM_ENABLE_ARCH_lm32_TRUE@\tlm32/mloop.c \\\n+@SIM_ENABLE_ARCH_lm32_TRUE@\tlm32/stamp-mloop\n+\n @SIM_ENABLE_ARCH_m32c_TRUE@m32c_BUILD_OUTPUTS = \\\n @SIM_ENABLE_ARCH_m32c_TRUE@\tm32c/opc2c$(EXEEXT) \\\n @SIM_ENABLE_ARCH_m32c_TRUE@\tm32c/m32c.c \\\n@@ -1129,6 +1317,17 @@ testsuite_common_CPPFLAGS = \\\n # opc2c leaks memory, and therefore makes AddressSanitizer unhappy.  Disable\n # leak detection while running it.\n @SIM_ENABLE_ARCH_m32c_TRUE@m32c_OPC2C_RUN = ASAN_OPTIONS=detect_leaks=0 m32c/opc2c$(EXEEXT)\n+@SIM_ENABLE_ARCH_m32r_TRUE@m32r_BUILD_OUTPUTS = \\\n+@SIM_ENABLE_ARCH_m32r_TRUE@\tm32r/eng.h \\\n+@SIM_ENABLE_ARCH_m32r_TRUE@\tm32r/mloop.c \\\n+@SIM_ENABLE_ARCH_m32r_TRUE@\tm32r/stamp-mloop \\\n+@SIM_ENABLE_ARCH_m32r_TRUE@\tm32r/engx.h \\\n+@SIM_ENABLE_ARCH_m32r_TRUE@\tm32r/mloopx.c \\\n+@SIM_ENABLE_ARCH_m32r_TRUE@\tm32r/stamp-mloop-x \\\n+@SIM_ENABLE_ARCH_m32r_TRUE@\tm32r/eng2.h \\\n+@SIM_ENABLE_ARCH_m32r_TRUE@\tm32r/mloop2.c \\\n+@SIM_ENABLE_ARCH_m32r_TRUE@\tm32r/stamp-mloop-2\n+\n @SIM_ENABLE_ARCH_m68hc11_TRUE@m68hc11_BUILD_OUTPUTS = \\\n @SIM_ENABLE_ARCH_m68hc11_TRUE@\tm68hc11/gencode$(EXEEXT) \\\n @SIM_ENABLE_ARCH_m68hc11_TRUE@\tm68hc11/m68hc11int.c \\\n@@ -1160,6 +1359,11 @@ testsuite_common_CPPFLAGS = \\\n @SIM_ENABLE_ARCH_mn10300_TRUE@mn10300_IGEN_INSN = $(srcdir)/mn10300/mn10300.igen\n @SIM_ENABLE_ARCH_mn10300_TRUE@mn10300_IGEN_INSN_INC = mn10300/am33.igen mn10300/am33-2.igen\n @SIM_ENABLE_ARCH_mn10300_TRUE@mn10300_IGEN_DC = $(srcdir)/mn10300/mn10300.dc\n+@SIM_ENABLE_ARCH_or1k_TRUE@or1k_BUILD_OUTPUTS = \\\n+@SIM_ENABLE_ARCH_or1k_TRUE@\tor1k/eng.h \\\n+@SIM_ENABLE_ARCH_or1k_TRUE@\tor1k/mloop.c \\\n+@SIM_ENABLE_ARCH_or1k_TRUE@\tor1k/stamp-mloop\n+\n @SIM_ENABLE_ARCH_sh_TRUE@sh_BUILD_OUTPUTS = \\\n @SIM_ENABLE_ARCH_sh_TRUE@\tsh/gencode$(EXEEXT) \\\n @SIM_ENABLE_ARCH_sh_TRUE@\tsh/code.c \\\n@@ -1198,7 +1402,7 @@ all: config.h\n .SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs\n am--refresh: Makefile\n \t@:\n-$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/common/local.mk $(srcdir)/igen/local.mk $(srcdir)/testsuite/local.mk $(srcdir)/testsuite/common/local.mk $(srcdir)/cr16/local.mk $(srcdir)/d10v/local.mk $(srcdir)/m32c/local.mk $(srcdir)/m68hc11/local.mk $(srcdir)/mn10300/local.mk $(srcdir)/sh/local.mk $(srcdir)/v850/local.mk $(am__configure_deps)\n+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/common/local.mk $(srcdir)/igen/local.mk $(srcdir)/testsuite/local.mk $(srcdir)/testsuite/common/local.mk $(srcdir)/bpf/local.mk $(srcdir)/cr16/local.mk $(srcdir)/cris/local.mk $(srcdir)/d10v/local.mk $(srcdir)/frv/local.mk $(srcdir)/iq2000/local.mk $(srcdir)/lm32/local.mk $(srcdir)/m32c/local.mk $(srcdir)/m32r/local.mk $(srcdir)/m68hc11/local.mk $(srcdir)/mn10300/local.mk $(srcdir)/or1k/local.mk $(srcdir)/sh/local.mk $(srcdir)/v850/local.mk $(am__configure_deps)\n \t@for dep in $?; do \\\n \t  case '$(am__configure_deps)' in \\\n \t    *$$dep*) \\\n@@ -1220,7 +1424,7 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \\\n \tesac;\n-$(srcdir)/common/local.mk $(srcdir)/igen/local.mk $(srcdir)/testsuite/local.mk $(srcdir)/testsuite/common/local.mk $(srcdir)/cr16/local.mk $(srcdir)/d10v/local.mk $(srcdir)/m32c/local.mk $(srcdir)/m68hc11/local.mk $(srcdir)/mn10300/local.mk $(srcdir)/sh/local.mk $(srcdir)/v850/local.mk $(am__empty):\n+$(srcdir)/common/local.mk $(srcdir)/igen/local.mk $(srcdir)/testsuite/local.mk $(srcdir)/testsuite/common/local.mk $(srcdir)/bpf/local.mk $(srcdir)/cr16/local.mk $(srcdir)/cris/local.mk $(srcdir)/d10v/local.mk $(srcdir)/frv/local.mk $(srcdir)/iq2000/local.mk $(srcdir)/lm32/local.mk $(srcdir)/m32c/local.mk $(srcdir)/m32r/local.mk $(srcdir)/m68hc11/local.mk $(srcdir)/mn10300/local.mk $(srcdir)/or1k/local.mk $(srcdir)/sh/local.mk $(srcdir)/v850/local.mk $(am__empty):\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \t$(SHELL) ./config.status --recheck\n@@ -2196,7 +2400,7 @@ uninstall-am: uninstall-pkgincludeHEADERS\n # An alternative is to slurp in the tables at runtime.\n .PHONY: nltvals\n nltvals:\n-\t$(srcdir)/common/gennltvals.py --cpp \"$(CPP)\"\n+\t$(srccom)/gennltvals.py --cpp \"$(CPP)\"\n \n common/version.c: common/version.c-stamp ; @true\n common/version.c-stamp: $(srcroot)/gdb/version.in $(srcroot)/bfd/version.h $(srcdir)/common/create-version.sh\n@@ -2281,6 +2485,26 @@ testsuite/common/bits64m63.c: testsuite/common/bits-gen testsuite/common/bits-ts\n \t$(AM_V_at)cat $(srcdir)/testsuite/common/bits-tst.c >> $@.tmp\n \t$(AM_V_at)mv $@.tmp $@\n \n+@SIM_ENABLE_ARCH_bpf_TRUE@bpf/mloop-le.c bpf/eng-le.h: bpf/stamp-mloop-le ; @true\n+@SIM_ENABLE_ARCH_bpf_TRUE@bpf/stamp-mloop-le: $(srccom)/genmloop.sh bpf/mloop.in\n+@SIM_ENABLE_ARCH_bpf_TRUE@\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+@SIM_ENABLE_ARCH_bpf_TRUE@\t\t-mono -scache -prefix bpfbf_ebpfle -cpu bpfbf \\\n+@SIM_ENABLE_ARCH_bpf_TRUE@\t\t-infile $(srcdir)/bpf/mloop.in \\\n+@SIM_ENABLE_ARCH_bpf_TRUE@\t\t-outfile-prefix bpf/ -outfile-suffix -le\n+@SIM_ENABLE_ARCH_bpf_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change bpf/eng-le.hin bpf/eng-le.h\n+@SIM_ENABLE_ARCH_bpf_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change bpf/mloop-le.cin bpf/mloop-le.c\n+@SIM_ENABLE_ARCH_bpf_TRUE@\t$(AM_V_at)touch $@\n+\n+@SIM_ENABLE_ARCH_bpf_TRUE@bpf/mloop-be.c bpf/eng-be.h: bpf/stamp-mloop-be ; @true\n+@SIM_ENABLE_ARCH_bpf_TRUE@bpf/stamp-mloop-be: $(srccom)/genmloop.sh bpf/mloop.in\n+@SIM_ENABLE_ARCH_bpf_TRUE@\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+@SIM_ENABLE_ARCH_bpf_TRUE@\t\t-mono -scache -prefix bpfbf_ebpfbe -cpu bpfbf \\\n+@SIM_ENABLE_ARCH_bpf_TRUE@\t\t-infile $(srcdir)/bpf/mloop.in \\\n+@SIM_ENABLE_ARCH_bpf_TRUE@\t\t-outfile-prefix bpf/ -outfile-suffix -be\n+@SIM_ENABLE_ARCH_bpf_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change bpf/eng-be.hin bpf/eng-be.h\n+@SIM_ENABLE_ARCH_bpf_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change bpf/mloop-be.cin bpf/mloop-be.c\n+@SIM_ENABLE_ARCH_bpf_TRUE@\t$(AM_V_at)touch $@\n+\n # These rules are copied from automake, but tweaked to use FOR_BUILD variables.\n @SIM_ENABLE_ARCH_cr16_TRUE@cr16/gencode$(EXEEXT): $(cr16_gencode_OBJECTS) $(cr16_gencode_DEPENDENCIES) cr16/$(am__dirstamp)\n @SIM_ENABLE_ARCH_cr16_TRUE@\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(cr16_gencode_OBJECTS) $(cr16_gencode_LDADD)\n@@ -2297,6 +2521,30 @@ testsuite/common/bits64m63.c: testsuite/common/bits-gen testsuite/common/bits-ts\n @SIM_ENABLE_ARCH_cr16_TRUE@cr16/table.c: cr16/gencode$(EXEEXT)\n @SIM_ENABLE_ARCH_cr16_TRUE@\t$(AM_V_GEN)$< >$@\n \n+# FIXME: What is mono and what does \"Use of `mono' is wip\" mean (other\n+# than the apparent; some \"mono\" feature is work in progress)?\n+@SIM_ENABLE_ARCH_cris_TRUE@cris/mloopv10f.c cris/engv10.h: cris/stamp-mloop-v10f ; @true\n+@SIM_ENABLE_ARCH_cris_TRUE@cris/stamp-mloop-v10f: $(srccom)/genmloop.sh cris/mloop.in\n+@SIM_ENABLE_ARCH_cris_TRUE@\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+@SIM_ENABLE_ARCH_cris_TRUE@\t\t-mono -no-fast -pbb -switch semcrisv10f-switch.c \\\n+@SIM_ENABLE_ARCH_cris_TRUE@\t\t-cpu crisv10f \\\n+@SIM_ENABLE_ARCH_cris_TRUE@\t\t-infile $(srcdir)/cris/mloop.in -outfile-prefix cris/ -outfile-suffix -v10f\n+@SIM_ENABLE_ARCH_cris_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change cris/eng-v10f.hin cris/engv10.h\n+@SIM_ENABLE_ARCH_cris_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change cris/mloop-v10f.cin cris/mloopv10f.c\n+@SIM_ENABLE_ARCH_cris_TRUE@\t$(AM_V_at)touch $@\n+\n+# FIXME: What is mono and what does \"Use of `mono' is wip\" mean (other\n+# than the apparent; some \"mono\" feature is work in progress)?\n+@SIM_ENABLE_ARCH_cris_TRUE@cris/mloopv32f.c cris/engv32.h: cris/stamp-mloop-v32f ; @true\n+@SIM_ENABLE_ARCH_cris_TRUE@cris/stamp-mloop-v32f: $(srccom)/genmloop.sh cris/mloop.in\n+@SIM_ENABLE_ARCH_cris_TRUE@\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+@SIM_ENABLE_ARCH_cris_TRUE@\t\t-mono -no-fast -pbb -switch semcrisv32f-switch.c \\\n+@SIM_ENABLE_ARCH_cris_TRUE@\t\t-cpu crisv32f \\\n+@SIM_ENABLE_ARCH_cris_TRUE@\t\t-infile $(srcdir)/cris/mloop.in -outfile-prefix cris/ -outfile-suffix -v32f\n+@SIM_ENABLE_ARCH_cris_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change cris/eng-v32f.hin cris/engv32.h\n+@SIM_ENABLE_ARCH_cris_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change cris/mloop-v32f.cin cris/mloopv32f.c\n+@SIM_ENABLE_ARCH_cris_TRUE@\t$(AM_V_at)touch $@\n+\n # These rules are copied from automake, but tweaked to use FOR_BUILD variables.\n @SIM_ENABLE_ARCH_d10v_TRUE@d10v/gencode$(EXEEXT): $(d10v_gencode_OBJECTS) $(d10v_gencode_DEPENDENCIES) d10v/$(am__dirstamp)\n @SIM_ENABLE_ARCH_d10v_TRUE@\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(d10v_gencode_OBJECTS) $(d10v_gencode_LDADD)\n@@ -2313,6 +2561,39 @@ testsuite/common/bits64m63.c: testsuite/common/bits-gen testsuite/common/bits-ts\n @SIM_ENABLE_ARCH_d10v_TRUE@d10v/table.c: d10v/gencode$(EXEEXT)\n @SIM_ENABLE_ARCH_d10v_TRUE@\t$(AM_V_GEN)$< >$@\n \n+# FIXME: Use of `mono' is wip.\n+@SIM_ENABLE_ARCH_frv_TRUE@frv/mloop.c frv/eng.h: frv/stamp-mloop ; @true\n+@SIM_ENABLE_ARCH_frv_TRUE@frv/stamp-mloop: $(srccom)/genmloop.sh frv/mloop.in\n+@SIM_ENABLE_ARCH_frv_TRUE@\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+@SIM_ENABLE_ARCH_frv_TRUE@\t\t-mono -scache -parallel-generic-write -parallel-only \\\n+@SIM_ENABLE_ARCH_frv_TRUE@\t\t-cpu frvbf \\\n+@SIM_ENABLE_ARCH_frv_TRUE@\t\t-infile $(srcdir)/frv/mloop.in -outfile-prefix frv/\n+@SIM_ENABLE_ARCH_frv_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change frv/eng.hin frv/eng.h\n+@SIM_ENABLE_ARCH_frv_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change frv/mloop.cin frv/mloop.c\n+@SIM_ENABLE_ARCH_frv_TRUE@\t$(AM_V_at)touch $@\n+\n+# FIXME: Use of `mono' is wip.\n+@SIM_ENABLE_ARCH_iq2000_TRUE@iq2000/mloop.c iq2000/eng.h: iq2000/stamp-mloop ; @true\n+@SIM_ENABLE_ARCH_iq2000_TRUE@iq2000/stamp-mloop: $(srccom)/genmloop.sh iq2000/mloop.in\n+@SIM_ENABLE_ARCH_iq2000_TRUE@\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+@SIM_ENABLE_ARCH_iq2000_TRUE@\t\t-mono -fast -pbb -switch sem-switch.c \\\n+@SIM_ENABLE_ARCH_iq2000_TRUE@\t\t-cpu iq2000bf \\\n+@SIM_ENABLE_ARCH_iq2000_TRUE@\t\t-infile $(srcdir)/iq2000/mloop.in -outfile-prefix iq2000/\n+@SIM_ENABLE_ARCH_iq2000_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change iq2000/eng.hin iq2000/eng.h\n+@SIM_ENABLE_ARCH_iq2000_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change iq2000/mloop.cin iq2000/mloop.c\n+@SIM_ENABLE_ARCH_iq2000_TRUE@\t$(AM_V_at)touch $@\n+\n+# FIXME: Use of `mono' is wip.\n+@SIM_ENABLE_ARCH_lm32_TRUE@lm32/mloop.c lm32/eng.h: lm32/stamp-mloop ; @true\n+@SIM_ENABLE_ARCH_lm32_TRUE@lm32/stamp-mloop: $(srccom)/genmloop.sh lm32/mloop.in\n+@SIM_ENABLE_ARCH_lm32_TRUE@\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+@SIM_ENABLE_ARCH_lm32_TRUE@\t\t-mono -fast -pbb -switch sem-switch.c \\\n+@SIM_ENABLE_ARCH_lm32_TRUE@\t\t-cpu lm32bf \\\n+@SIM_ENABLE_ARCH_lm32_TRUE@\t\t-infile $(srcdir)/lm32/mloop.in -outfile-prefix lm32/\n+@SIM_ENABLE_ARCH_lm32_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change lm32/eng.hin lm32/eng.h\n+@SIM_ENABLE_ARCH_lm32_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change lm32/mloop.cin lm32/mloop.c\n+@SIM_ENABLE_ARCH_lm32_TRUE@\t$(AM_V_at)touch $@\n+\n # These rules are copied from automake, but tweaked to use FOR_BUILD variables.\n @SIM_ENABLE_ARCH_m32c_TRUE@m32c/opc2c$(EXEEXT): $(m32c_opc2c_OBJECTS) $(m32c_opc2c_DEPENDENCIES) m32c/$(am__dirstamp)\n @SIM_ENABLE_ARCH_m32c_TRUE@\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(m32c_opc2c_OBJECTS) $(m32c_opc2c_LDADD)\n@@ -2329,6 +2610,39 @@ testsuite/common/bits64m63.c: testsuite/common/bits-gen testsuite/common/bits-ts\n @SIM_ENABLE_ARCH_m32c_TRUE@\t$(AM_V_GEN)$(m32c_OPC2C_RUN) -l $@.log $< > $@.tmp\n @SIM_ENABLE_ARCH_m32c_TRUE@\t$(AM_V_at)mv $@.tmp $@\n \n+# FIXME: Use of `mono' is wip.\n+@SIM_ENABLE_ARCH_m32r_TRUE@m32r/mloop.c m32r/eng.h: m32r/stamp-mloop ; @true\n+@SIM_ENABLE_ARCH_m32r_TRUE@m32r/stamp-mloop: $(srccom)/genmloop.sh m32r/mloop.in\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t\t-mono -fast -pbb -switch sem-switch.c \\\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t\t-cpu m32rbf \\\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t\t-infile $(srcdir)/m32r/mloop.in -outfile-prefix m32r/\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change m32r/eng.hin m32r/eng.h\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change m32r/mloop.cin m32r/mloop.c\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t$(AM_V_at)touch $@\n+\n+# FIXME: Use of `mono' is wip.\n+@SIM_ENABLE_ARCH_m32r_TRUE@m32r/mloopx.c m32r/engx.h: m32r/stamp-mloop ; @true\n+@SIM_ENABLE_ARCH_m32r_TRUE@m32r/stamp-mloop-x: $(srccom)/genmloop.sh m32r/mloop.in\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t\t-mono -no-fast -pbb -parallel-write -switch semx-switch.c \\\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t\t-cpu m32rxf \\\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t\t-infile $(srcdir)/m32r/mloopx.in -outfile-prefix m32r/ -outfile-suffix x\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change m32r/engx.hin m32r/engx.h\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change m32r/mloopx.cin m32r/mloopx.c\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t$(AM_V_at)touch $@\n+\n+# FIXME: Use of `mono' is wip.\n+@SIM_ENABLE_ARCH_m32r_TRUE@m32r/mloop2.c m32r/eng2.h: m32r/stamp-mloop ; @true\n+@SIM_ENABLE_ARCH_m32r_TRUE@m32r/stamp-mloop-2: $(srccom)/genmloop.sh m32r/mloop.in\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t\t-mono -no-fast -pbb -parallel-write -switch sem2-switch.c \\\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t\t-cpu m32r2f \\\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t\t-infile $(srcdir)/m32r/mloop2.in -outfile-prefix m32r/ -outfile-suffix 2\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change m32r/eng2.hin m32r/eng2.h\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change m32r/mloop2.cin m32r/mloop2.c\n+@SIM_ENABLE_ARCH_m32r_TRUE@\t$(AM_V_at)touch $@\n+\n # These rules are copied from automake, but tweaked to use FOR_BUILD variables.\n @SIM_ENABLE_ARCH_m68hc11_TRUE@m68hc11/gencode$(EXEEXT): $(m68hc11_gencode_OBJECTS) $(m68hc11_gencode_DEPENDENCIES) m68hc11/$(am__dirstamp)\n @SIM_ENABLE_ARCH_m68hc11_TRUE@\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(m68hc11_gencode_OBJECTS) $(m68hc11_gencode_LDADD)\n@@ -2386,6 +2700,17 @@ testsuite/common/bits64m63.c: testsuite/common/bits-gen testsuite/common/bits-ts\n @SIM_ENABLE_ARCH_mn10300_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change mn10300/tmp-irun.c mn10300/irun.c\n @SIM_ENABLE_ARCH_mn10300_TRUE@\t$(AM_V_at)touch $@\n \n+# FIXME: Use of `mono' is wip.\n+@SIM_ENABLE_ARCH_or1k_TRUE@or1k/mloop.c or1k/eng.h: or1k/stamp-mloop ; @true\n+@SIM_ENABLE_ARCH_or1k_TRUE@or1k/stamp-mloop: $(srccom)/genmloop.sh or1k/mloop.in\n+@SIM_ENABLE_ARCH_or1k_TRUE@\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+@SIM_ENABLE_ARCH_or1k_TRUE@\t\t-mono -fast -pbb -switch sem-switch.c \\\n+@SIM_ENABLE_ARCH_or1k_TRUE@\t\t-cpu or1k32bf \\\n+@SIM_ENABLE_ARCH_or1k_TRUE@\t\t-infile $(srcdir)/or1k/mloop.in -outfile-prefix or1k/\n+@SIM_ENABLE_ARCH_or1k_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change or1k/eng.hin or1k/eng.h\n+@SIM_ENABLE_ARCH_or1k_TRUE@\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change or1k/mloop.cin or1k/mloop.c\n+@SIM_ENABLE_ARCH_or1k_TRUE@\t$(AM_V_at)touch $@\n+\n # These rules are copied from automake, but tweaked to use FOR_BUILD variables.\n @SIM_ENABLE_ARCH_sh_TRUE@sh/gencode$(EXEEXT): $(sh_gencode_OBJECTS) $(sh_gencode_DEPENDENCIES) sh/$(am__dirstamp)\n @SIM_ENABLE_ARCH_sh_TRUE@\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(sh_gencode_OBJECTS) $(sh_gencode_LDADD)"
    },
    {
      "sha": "b12c18d6520bc0283ac4828873456095d7265ab6",
      "filename": "sim/bpf/Makefile.in",
      "status": "modified",
      "additions": 1,
      "deletions": 27,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a129eb19a773d930d60b084209570f663db2053/sim/bpf/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a129eb19a773d930d60b084209570f663db2053/sim/bpf/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/Makefile.in?ref=0a129eb19a773d930d60b084209570f663db2053",
      "patch": "@@ -161,33 +161,7 @@ $(srcdir)/sem-be.c $(srcdir)/decode-be.c $(srcdir)/decode-be.h: \\\n               $(CGEN_MAINT) stamp-decode-be\n \t@true\n \n-# Note the following files are generated in objdir, not srcdir.\n-\n-stamp-mloop: stamp-mloop-le stamp-mloop-be\n-\n-stamp-mloop-le: $(srcdir)/../common/genmloop.sh mloop.in Makefile\n-\t$(ECHO_STAMP) mloop-le.c eng-le.h\n-\t$(SILENCE) $(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n-\t\t-mono -scache -prefix bpfbf_ebpfle -cpu bpfbf \\\n-                -infile $(srcdir)/mloop.in -outfile-suffix -le\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change eng-le.hin eng-le.h\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change mloop-le.cin mloop-le.c\n-\t$(SILENCE) touch $@\n-mloop-le.c eng-le.h: stamp-mloop-le\n-\t@true\n-\n-stamp-mloop-be: $(srcdir)/../common/genmloop.sh mloop.in Makefile\n-\t$(ECHO_STAMP) mloop-be.c eng-be.h\n-\t$(SILENCE) $(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n-\t\t-mono -scache -prefix bpfbf_ebpfbe -cpu bpfbf \\\n-                -infile $(srcdir)/mloop.in -outfile-suffix -be\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change eng-be.hin eng-be.h\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change mloop-be.cin mloop-be.c\n-\t$(SILENCE) touch $@\n-mloop-be.c eng-be.h: stamp-mloop-be\n-\t@true\n-\n .PHONY = bpf-clean\n \n bpf-clean:\n-\trm -f stamp-arch stamp-cpu stamp-decode stamp-defs stamp-mloop\n+\trm -f stamp-arch stamp-cpu stamp-decode stamp-defs"
    },
    {
      "sha": "ebca133d392a46a3b4c6cae9989f1607f7be623d",
      "filename": "sim/bpf/local.mk",
      "status": "added",
      "additions": 49,
      "deletions": 0,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a129eb19a773d930d60b084209570f663db2053/sim/bpf/local.mk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a129eb19a773d930d60b084209570f663db2053/sim/bpf/local.mk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/local.mk?ref=0a129eb19a773d930d60b084209570f663db2053",
      "patch": "@@ -0,0 +1,49 @@\n+# See sim/Makefile.am\n+#\n+# Copyright (C) 2020-2021 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+%C%_BUILD_OUTPUTS = \\\n+\t%D%/eng-le.h \\\n+\t%D%/mloop-le.c \\\n+\t%D%/stamp-mloop-le \\\n+\t%D%/eng-be.h \\\n+\t%D%/mloop-be.c \\\n+\t%D%/stamp-mloop-be\n+\n+# This makes sure build tools are available before building the arch-subdirs.\n+SIM_ALL_RECURSIVE_DEPS += $(%C%_BUILD_OUTPUTS)\n+\n+%D%/mloop-le.c %D%/eng-le.h: %D%/stamp-mloop-le ; @true\n+%D%/stamp-mloop-le: $(srccom)/genmloop.sh %D%/mloop.in\n+\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+\t\t-mono -scache -prefix bpfbf_ebpfle -cpu bpfbf \\\n+\t\t-infile $(srcdir)/%D%/mloop.in \\\n+\t\t-outfile-prefix %D%/ -outfile-suffix -le\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/eng-le.hin %D%/eng-le.h\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/mloop-le.cin %D%/mloop-le.c\n+\t$(AM_V_at)touch $@\n+\n+%D%/mloop-be.c %D%/eng-be.h: %D%/stamp-mloop-be ; @true\n+%D%/stamp-mloop-be: $(srccom)/genmloop.sh %D%/mloop.in\n+\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+\t\t-mono -scache -prefix bpfbf_ebpfbe -cpu bpfbf \\\n+\t\t-infile $(srcdir)/%D%/mloop.in \\\n+\t\t-outfile-prefix %D%/ -outfile-suffix -be\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/eng-be.hin %D%/eng-be.h\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/mloop-be.cin %D%/mloop-be.c\n+\t$(AM_V_at)touch $@\n+\n+MOSTLYCLEANFILES += $(%C%_BUILD_OUTPUTS)"
    },
    {
      "sha": "572dc8a9ed4b74522cbdb2ef95f1708372c9f7f3",
      "filename": "sim/common/genmloop.sh",
      "status": "modified",
      "additions": 9,
      "deletions": 6,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a129eb19a773d930d60b084209570f663db2053/sim/common/genmloop.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a129eb19a773d930d60b084209570f663db2053/sim/common/genmloop.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/genmloop.sh?ref=0a129eb19a773d930d60b084209570f663db2053",
      "patch": "@@ -140,6 +140,7 @@ switch=\n cpu=\"unknown\"\n infile=\"\"\n prefix=\"unknown\"\n+outprefix=\"\"\n outsuffix=\"\"\n \n while test $# -gt 0\n@@ -154,6 +155,7 @@ do\n \t-scache) scache=yes ;;\n \t-pbb) pbb=yes ;;\n \t-no-parallel) ;;\n+\t-outfile-prefix) shift ; outprefix=$1 ;;\n \t-outfile-suffix) shift ; outsuffix=$1 ;;\n \t-parallel-read) parallel=read ;;\n \t-parallel-write) parallel=write ;;\n@@ -197,8 +199,8 @@ PREFIX=`echo ${prefix} | tr \"${lowercase}\" \"${uppercase}\"`\n \n ##########################################################################\n \n-rm -f eng${outsuffix}.hin\n-exec 1>eng${outsuffix}.hin\n+rm -f ${outprefix}eng${outsuffix}.hin\n+exec 1>${outprefix}eng${outsuffix}.hin\n \n echo \"/* engine configuration for ${cpu} */\"\n echo \"\"\n@@ -291,8 +293,8 @@ fi\n \n ##########################################################################\n \n-rm -f tmp-mloop-$$.cin mloop${outsuffix}.cin\n-exec 1>tmp-mloop-$$.cin\n+rm -f ${outprefix}tmp-mloop-$$.cin ${outprefix}mloop${outsuffix}.cin\n+exec 1>${outprefix}tmp-mloop-$$.cin\n \n # We use @cpu@ instead of ${cpu} because we still need to run sed to handle\n # transformation of @cpu@ for mainloop.in, so there's no need to use ${cpu}\n@@ -1334,8 +1336,9 @@ fi # -pbb\n # Expand @..@ macros appearing in tmp-mloop-{pid}.cin.\n sed \\\n   -e \"s/@cpu@/$cpu/g\" -e \"s/@CPU@/$CPU/g\" \\\n-  -e \"s/@prefix@/$prefix/g\" -e \"s/@PREFIX@/$PREFIX/g\" < tmp-mloop-$$.cin > mloop${outsuffix}.cin\n+  -e \"s/@prefix@/$prefix/g\" -e \"s/@PREFIX@/$PREFIX/g\" \\\n+  < ${outprefix}tmp-mloop-$$.cin > ${outprefix}mloop${outsuffix}.cin\n rc=$?\n-rm -f tmp-mloop-$$.cin\n+rm -f ${outprefix}tmp-mloop-$$.cin\n \n exit $rc"
    },
    {
      "sha": "8e6bb2ec79bd47dc96c4dc60f18ca40af8062c5f",
      "filename": "sim/cris/Makefile.in",
      "status": "modified",
      "additions": 1,
      "deletions": 31,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a129eb19a773d930d60b084209570f663db2053/sim/cris/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a129eb19a773d930d60b084209570f663db2053/sim/cris/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/Makefile.in?ref=0a129eb19a773d930d60b084209570f663db2053",
      "patch": "@@ -66,48 +66,18 @@ CRISV10F_INCLUDE_DEPS = \\\n \t$(CGEN_MAIN_CPU_DEPS) \\\n \tcpuv10.h decodev10.h engv10.h\n \n-# FIXME: What is mono and what does \"Use of `mono' is wip\" mean (other\n-# than the apparent; some \"mono\" feature is work in progress)?\n-mloopv10f.c engv10.h: stamp-v10fmloop\n-stamp-v10fmloop: $(srcdir)/../common/genmloop.sh mloop.in Makefile\n-\t$(ECHO_STAMP) mloopv10f.c engv10.h\n-\t$(SILENCE) $(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n-\t\t-mono -no-fast -pbb -switch semcrisv10f-switch.c \\\n-\t\t-cpu crisv10f -infile $(srcdir)/mloop.in\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change eng.hin engv10.h\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change mloop.cin mloopv10f.c\n-\t$(SILENCE) touch $@\n-\n # CRISV32 objs\n \n CRISV32F_INCLUDE_DEPS = \\\n \t$(CGEN_MAIN_CPU_DEPS) \\\n \tcpuv32.h decodev32.h engv32.h\n \n-# FIXME: What is mono and what does \"Use of `mono' is wip\" mean (other\n-# than the apparent; some \"mono\" feature is work in progress)?\n-mloopv32f.c engv32.h: stamp-v32fmloop\n-# We depend on stamp-v10fmloop to get serialization to avoid\n-# racing with it for the same temporary file-names when \"make -j\".\n-stamp-v32fmloop: stamp-v10fmloop $(srcdir)/../common/genmloop.sh mloop.in Makefile\n-\t$(ECHO_STAMP) mloopv32f.c engv32.h\n-\t$(SILENCE) $(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n-\t\t-mono -no-fast -pbb -switch semcrisv32f-switch.c \\\n-\t\t-cpu crisv32f -infile $(srcdir)/mloop.in\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change eng.hin engv32.h\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change mloop.cin mloopv32f.c\n-\t$(SILENCE) touch $@\n-\n cris-clean:\n-\tfor v in 10 32; do \\\n-\t  rm -f mloopv$${v}f.c engv$${v}.h stamp-v$${v}fmloop; \\\n-\t  rm -f stamp-v$${v}fcpu; \\\n-\tdone\n \t-rm -f stamp-arch\n \t-rm -f tmp-*\n \n # Useful when making CGEN-generated files manually, without --enable-cgen-maint.\n-stamps: stamp-v10fmloop stamp-v32fmloop stamp-arch stamp-v10fcpu stamp-v32fcpu\n+stamps: stamp-arch stamp-v10fcpu stamp-v32fcpu\n \n stamp-arch: $(CGEN_READ_SCM) $(CGEN_ARCH_SCM) $(CPU_DIR)/cris.cpu Makefile\n \t$(MAKE) cgen-arch $(CGEN_FLAGS_TO_PASS) mach=crisv10,crisv32 \\"
    },
    {
      "sha": "c810bcdc4446222d54ae86ffb856ecf95ef02c0a",
      "filename": "sim/cris/local.mk",
      "status": "added",
      "additions": 54,
      "deletions": 0,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a129eb19a773d930d60b084209570f663db2053/sim/cris/local.mk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a129eb19a773d930d60b084209570f663db2053/sim/cris/local.mk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/local.mk?ref=0a129eb19a773d930d60b084209570f663db2053",
      "patch": "@@ -0,0 +1,54 @@\n+# See sim/Makefile.am\n+#\n+# Copyright (C) 2004-2021 Free Software Foundation, Inc.\n+# Contributed by Axis Communications.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+%C%_BUILD_OUTPUTS = \\\n+\t%D%/engv10.h \\\n+\t%D%/mloopv10f.c \\\n+\t%D%/stamp-mloop-v10f \\\n+\t%D%/engv32.h \\\n+\t%D%/mloopv32f.c \\\n+\t%D%/stamp-mloop-v32f\n+\n+# This makes sure build tools are available before building the arch-subdirs.\n+SIM_ALL_RECURSIVE_DEPS += $(%C%_BUILD_OUTPUTS)\n+\n+# FIXME: What is mono and what does \"Use of `mono' is wip\" mean (other\n+# than the apparent; some \"mono\" feature is work in progress)?\n+%D%/mloopv10f.c %D%/engv10.h: %D%/stamp-mloop-v10f ; @true\n+%D%/stamp-mloop-v10f: $(srccom)/genmloop.sh %D%/mloop.in\n+\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+\t\t-mono -no-fast -pbb -switch semcrisv10f-switch.c \\\n+\t\t-cpu crisv10f \\\n+\t\t-infile $(srcdir)/%D%/mloop.in -outfile-prefix %D%/ -outfile-suffix -v10f\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/eng-v10f.hin %D%/engv10.h\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/mloop-v10f.cin %D%/mloopv10f.c\n+\t$(AM_V_at)touch $@\n+\n+# FIXME: What is mono and what does \"Use of `mono' is wip\" mean (other\n+# than the apparent; some \"mono\" feature is work in progress)?\n+%D%/mloopv32f.c %D%/engv32.h: %D%/stamp-mloop-v32f ; @true\n+%D%/stamp-mloop-v32f: $(srccom)/genmloop.sh %D%/mloop.in\n+\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+\t\t-mono -no-fast -pbb -switch semcrisv32f-switch.c \\\n+\t\t-cpu crisv32f \\\n+\t\t-infile $(srcdir)/%D%/mloop.in -outfile-prefix %D%/ -outfile-suffix -v32f\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/eng-v32f.hin %D%/engv32.h\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/mloop-v32f.cin %D%/mloopv32f.c\n+\t$(AM_V_at)touch $@\n+\n+MOSTLYCLEANFILES += $(%C%_BUILD_OUTPUTS)"
    },
    {
      "sha": "1159f638c3290324c41eee203274349641ef75fa",
      "filename": "sim/frv/Makefile.in",
      "status": "modified",
      "additions": 0,
      "deletions": 12,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a129eb19a773d930d60b084209570f663db2053/sim/frv/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a129eb19a773d930d60b084209570f663db2053/sim/frv/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/Makefile.in?ref=0a129eb19a773d930d60b084209570f663db2053",
      "patch": "@@ -54,19 +54,7 @@ FRVBF_INCLUDE_DEPS = \\\n \t$(SIM_EXTRA_DEPS) \\\n \tcpu.h decode.h eng.h\n \n-# FIXME: Use of `mono' is wip.\n-mloop.c eng.h: stamp-mloop\n-stamp-mloop: $(srcdir)/../common/genmloop.sh mloop.in Makefile\n-\t$(ECHO_STAMP) mloop.c eng.h\n-\t$(SILENCE) $(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n-\t\t-mono -scache -parallel-generic-write -parallel-only \\\n-\t\t-cpu frvbf -infile $(srcdir)/mloop.in\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change eng.hin eng.h\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change mloop.cin mloop.c\n-\t$(SILENCE) touch $@\n-\n frv-clean:\n-\trm -f mloop.c eng.h stamp-mloop\n \trm -f tmp-*\n \trm -f stamp-arch stamp-cpu\n "
    },
    {
      "sha": "378120c613c5699d3f4630b1dfacad29b8b24229",
      "filename": "sim/frv/local.mk",
      "status": "added",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a129eb19a773d930d60b084209570f663db2053/sim/frv/local.mk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a129eb19a773d930d60b084209570f663db2053/sim/frv/local.mk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/local.mk?ref=0a129eb19a773d930d60b084209570f663db2053",
      "patch": "@@ -0,0 +1,38 @@\n+# See sim/Makefile.am\n+#\n+# Copyright (C) 1998-2021 Free Software Foundation, Inc.\n+# Contributed by Red Hat.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+%C%_BUILD_OUTPUTS = \\\n+\t%D%/eng.h \\\n+\t%D%/mloop.c \\\n+\t%D%/stamp-mloop\n+\n+# This makes sure build tools are available before building the arch-subdirs.\n+SIM_ALL_RECURSIVE_DEPS += $(%C%_BUILD_OUTPUTS)\n+\n+# FIXME: Use of `mono' is wip.\n+%D%/mloop.c %D%/eng.h: %D%/stamp-mloop ; @true\n+%D%/stamp-mloop: $(srccom)/genmloop.sh %D%/mloop.in\n+\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+\t\t-mono -scache -parallel-generic-write -parallel-only \\\n+\t\t-cpu frvbf \\\n+\t\t-infile $(srcdir)/%D%/mloop.in -outfile-prefix %D%/\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/eng.hin %D%/eng.h\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/mloop.cin %D%/mloop.c\n+\t$(AM_V_at)touch $@\n+\n+MOSTLYCLEANFILES += $(%C%_BUILD_OUTPUTS)"
    },
    {
      "sha": "c98fb78e7ff5287cc0afd351febab1f32fb60d76",
      "filename": "sim/iq2000/Makefile.in",
      "status": "modified",
      "additions": 0,
      "deletions": 12,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a129eb19a773d930d60b084209570f663db2053/sim/iq2000/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a129eb19a773d930d60b084209570f663db2053/sim/iq2000/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/Makefile.in?ref=0a129eb19a773d930d60b084209570f663db2053",
      "patch": "@@ -54,19 +54,7 @@ IQ2000BF_INCLUDE_DEPS = \\\n \t$(CGEN_MAIN_CPU_DEPS) \\\n \tcpu.h decode.h eng.h\n \n-# FIXME: Use of `mono' is wip.\n-mloop.c eng.h: stamp-mloop\n-stamp-mloop: $(srcdir)/../common/genmloop.sh mloop.in Makefile\n-\t$(ECHO_STAMP) mloop.c eng.h\n-\t$(SILENCE) $(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n-\t\t-mono -fast -pbb -switch sem-switch.c \\\n-\t\t-cpu iq2000bf -infile $(srcdir)/mloop.in\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change eng.hin eng.h\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change mloop.cin mloop.c\n-\t$(SILENCE) touch $@\n-\n iq2000-clean:\n-\trm -f mloop.c eng.h stamp-mloop\n \trm -f tmp-*\n \trm -f stamp-arch stamp-cpu\n "
    },
    {
      "sha": "00b2af15c23e576d321285753e70146c86a9b4cf",
      "filename": "sim/iq2000/local.mk",
      "status": "added",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a129eb19a773d930d60b084209570f663db2053/sim/iq2000/local.mk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a129eb19a773d930d60b084209570f663db2053/sim/iq2000/local.mk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/local.mk?ref=0a129eb19a773d930d60b084209570f663db2053",
      "patch": "@@ -0,0 +1,38 @@\n+# See sim/Makefile.am\n+#\n+# Copyright (C) 1998-2021 Free Software Foundation, Inc.\n+# Contributed by Red Hat.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+%C%_BUILD_OUTPUTS = \\\n+\t%D%/eng.h \\\n+\t%D%/mloop.c \\\n+\t%D%/stamp-mloop\n+\n+# This makes sure build tools are available before building the arch-subdirs.\n+SIM_ALL_RECURSIVE_DEPS += $(%C%_BUILD_OUTPUTS)\n+\n+# FIXME: Use of `mono' is wip.\n+%D%/mloop.c %D%/eng.h: %D%/stamp-mloop ; @true\n+%D%/stamp-mloop: $(srccom)/genmloop.sh %D%/mloop.in\n+\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+\t\t-mono -fast -pbb -switch sem-switch.c \\\n+\t\t-cpu iq2000bf \\\n+\t\t-infile $(srcdir)/%D%/mloop.in -outfile-prefix %D%/\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/eng.hin %D%/eng.h\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/mloop.cin %D%/mloop.c\n+\t$(AM_V_at)touch $@\n+\n+MOSTLYCLEANFILES += $(%C%_BUILD_OUTPUTS)"
    },
    {
      "sha": "d827b711d45ece50e1d005953f99ac3a2f2c0b59",
      "filename": "sim/lm32/Makefile.in",
      "status": "modified",
      "additions": 0,
      "deletions": 12,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a129eb19a773d930d60b084209570f663db2053/sim/lm32/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a129eb19a773d930d60b084209570f663db2053/sim/lm32/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/Makefile.in?ref=0a129eb19a773d930d60b084209570f663db2053",
      "patch": "@@ -35,19 +35,7 @@ LM32BF_INCLUDE_DEPS = \\\n \t$(CGEN_MAIN_CPU_DEPS) \\\n \tcpu.h decode.h eng.h\n \n-# FIXME: Use of `mono' is wip.\n-mloop.c eng.h: stamp-mloop\n-stamp-mloop: $(srcdir)/../common/genmloop.sh mloop.in Makefile\n-\t$(ECHO_STAMP) mloop.c eng.h\n-\t$(SILENCE) $(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n-\t\t-mono -fast -pbb -switch sem-switch.c \\\n-\t\t-cpu lm32bf -infile $(srcdir)/mloop.in\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change eng.hin eng.h\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change mloop.cin mloop.c\n-\t$(SILENCE) touch $@\n-\n lm32-clean:\n-\trm -f mloop.c eng.h stamp-mloop\n \trm -f stamp-arch stamp-cpu \n \trm -f tmp-*\n "
    },
    {
      "sha": "2d7ebc208970a56249dff9a0e12152078281357b",
      "filename": "sim/lm32/local.mk",
      "status": "added",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a129eb19a773d930d60b084209570f663db2053/sim/lm32/local.mk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a129eb19a773d930d60b084209570f663db2053/sim/lm32/local.mk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/local.mk?ref=0a129eb19a773d930d60b084209570f663db2053",
      "patch": "@@ -0,0 +1,38 @@\n+# See sim/Makefile.am\n+#\n+# Copyright (C) 2009-2021 Free Software Foundation, Inc.\n+# Contributed by Jon Beniston <jon@beniston.com>\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+%C%_BUILD_OUTPUTS = \\\n+\t%D%/eng.h \\\n+\t%D%/mloop.c \\\n+\t%D%/stamp-mloop\n+\n+# This makes sure build tools are available before building the arch-subdirs.\n+SIM_ALL_RECURSIVE_DEPS += $(%C%_BUILD_OUTPUTS)\n+\n+# FIXME: Use of `mono' is wip.\n+%D%/mloop.c %D%/eng.h: %D%/stamp-mloop ; @true\n+%D%/stamp-mloop: $(srccom)/genmloop.sh %D%/mloop.in\n+\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+\t\t-mono -fast -pbb -switch sem-switch.c \\\n+\t\t-cpu lm32bf \\\n+\t\t-infile $(srcdir)/%D%/mloop.in -outfile-prefix %D%/\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/eng.hin %D%/eng.h\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/mloop.cin %D%/mloop.c\n+\t$(AM_V_at)touch $@\n+\n+MOSTLYCLEANFILES += $(%C%_BUILD_OUTPUTS)"
    },
    {
      "sha": "df4f5bf0209fd49abc4001097287676b269899da",
      "filename": "sim/m32r/Makefile.in",
      "status": "modified",
      "additions": 0,
      "deletions": 56,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a129eb19a773d930d60b084209570f663db2053/sim/m32r/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a129eb19a773d930d60b084209570f663db2053/sim/m32r/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/Makefile.in?ref=0a129eb19a773d930d60b084209570f663db2053",
      "patch": "@@ -50,63 +50,7 @@ cpu.o cpu2.o cpux.o m32r.o m32r2.o m32rx.o mloop.o mloop2.o mloopx.o sem.o sim-i\n \n arch = m32r\n \n-# M32R objs\n-\n-M32RBF_INCLUDE_DEPS = \\\n-\t$(CGEN_MAIN_CPU_DEPS) \\\n-\tcpu.h decode.h eng.h\n-\n-# FIXME: Use of `mono' is wip.\n-mloop.c eng.h: stamp-mloop ; @true\n-stamp-mloop: $(srcdir)/../common/genmloop.sh mloop.in Makefile\n-\t$(ECHO_STAMP) mloop.c eng.h\n-\t$(SILENCE) $(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n-\t\t-mono -fast -pbb -switch sem-switch.c \\\n-\t\t-cpu m32rbf -infile $(srcdir)/mloop.in\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change eng.hin eng.h\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change mloop.cin mloop.c\n-\t$(SILENCE) touch $@\n-\n-# M32RX objs\n-\n-M32RXF_INCLUDE_DEPS = \\\n-\t$(CGEN_MAIN_CPU_DEPS) \\\n-\tcpux.h decodex.h engx.h\n-\n-# FIXME: Use of `mono' is wip.\n-mloopx.c engx.h: stamp-xmloop ; @true\n-stamp-xmloop: $(srcdir)/../common/genmloop.sh mloopx.in Makefile\n-\t$(ECHO_STAMP) mloopx.c engx.h\n-\t$(SILENCE) $(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n-\t\t-mono -no-fast -pbb -parallel-write -switch semx-switch.c \\\n-\t\t-cpu m32rxf -infile $(srcdir)/mloopx.in \\\n-\t\t-outfile-suffix x\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change engx.hin engx.h\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change mloopx.cin mloopx.c\n-\t$(SILENCE) touch $@\n-\n-# M32R2 objs\n-\n-M32R2F_INCLUDE_DEPS = \\\n-\t$(CGEN_MAIN_CPU_DEPS) \\\n-\tcpu2.h decode2.h eng2.h\n-\n-# FIXME: Use of `mono' is wip.\n-mloop2.c eng2.h: stamp-2mloop ; @true\n-stamp-2mloop: $(srcdir)/../common/genmloop.sh mloop2.in Makefile\n-\t$(ECHO_STAMP) mloop2.c eng2.h\n-\t$(SILENCE) $(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n-\t\t-mono -no-fast -pbb -parallel-write -switch sem2-switch.c \\\n-\t\t-cpu m32r2f -infile $(srcdir)/mloop2.in \\\n-\t\t-outfile-suffix 2\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change eng2.hin eng2.h\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change mloop2.cin mloop2.c\n-\t$(SILENCE) touch $@\n-\n m32r-clean:\n-\trm -f mloop.c eng.h stamp-mloop\n-\trm -f mloopx.c engx.h stamp-xmloop\n-\trm -f mloop2.c eng2.h stamp-2mloop\n \trm -f stamp-arch stamp-cpu stamp-xcpu stamp-2cpu\n \trm -f tmp-*\n "
    },
    {
      "sha": "ab4abb79bb6dacb71e1997439f09b053f5c01739",
      "filename": "sim/m32r/local.mk",
      "status": "added",
      "additions": 66,
      "deletions": 0,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a129eb19a773d930d60b084209570f663db2053/sim/m32r/local.mk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a129eb19a773d930d60b084209570f663db2053/sim/m32r/local.mk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/local.mk?ref=0a129eb19a773d930d60b084209570f663db2053",
      "patch": "@@ -0,0 +1,66 @@\n+# See sim/Makefile.am\n+#\n+# Copyright (C) 1996-2021 Free Software Foundation, Inc.\n+# Contributed by Cygnus Support.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+%C%_BUILD_OUTPUTS = \\\n+\t%D%/eng.h \\\n+\t%D%/mloop.c \\\n+\t%D%/stamp-mloop \\\n+\t%D%/engx.h \\\n+\t%D%/mloopx.c \\\n+\t%D%/stamp-mloop-x \\\n+\t%D%/eng2.h \\\n+\t%D%/mloop2.c \\\n+\t%D%/stamp-mloop-2\n+\n+# This makes sure build tools are available before building the arch-subdirs.\n+SIM_ALL_RECURSIVE_DEPS += $(%C%_BUILD_OUTPUTS)\n+\n+# FIXME: Use of `mono' is wip.\n+%D%/mloop.c %D%/eng.h: %D%/stamp-mloop ; @true\n+%D%/stamp-mloop: $(srccom)/genmloop.sh %D%/mloop.in\n+\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+\t\t-mono -fast -pbb -switch sem-switch.c \\\n+\t\t-cpu m32rbf \\\n+\t\t-infile $(srcdir)/%D%/mloop.in -outfile-prefix %D%/\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/eng.hin %D%/eng.h\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/mloop.cin %D%/mloop.c\n+\t$(AM_V_at)touch $@\n+\n+# FIXME: Use of `mono' is wip.\n+%D%/mloopx.c %D%/engx.h: %D%/stamp-mloop ; @true\n+%D%/stamp-mloop-x: $(srccom)/genmloop.sh %D%/mloop.in\n+\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+\t\t-mono -no-fast -pbb -parallel-write -switch semx-switch.c \\\n+\t\t-cpu m32rxf \\\n+\t\t-infile $(srcdir)/%D%/mloopx.in -outfile-prefix %D%/ -outfile-suffix x\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/engx.hin %D%/engx.h\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/mloopx.cin %D%/mloopx.c\n+\t$(AM_V_at)touch $@\n+\n+# FIXME: Use of `mono' is wip.\n+%D%/mloop2.c %D%/eng2.h: %D%/stamp-mloop ; @true\n+%D%/stamp-mloop-2: $(srccom)/genmloop.sh %D%/mloop.in\n+\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+\t\t-mono -no-fast -pbb -parallel-write -switch sem2-switch.c \\\n+\t\t-cpu m32r2f \\\n+\t\t-infile $(srcdir)/%D%/mloop2.in -outfile-prefix %D%/ -outfile-suffix 2\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/eng2.hin %D%/eng2.h\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/mloop2.cin %D%/mloop2.c\n+\t$(AM_V_at)touch $@\n+\n+MOSTLYCLEANFILES += $(%C%_BUILD_OUTPUTS)"
    },
    {
      "sha": "3f1c432c3720e472e3671fb28e7862e64e87d8f9",
      "filename": "sim/or1k/Makefile.in",
      "status": "modified",
      "additions": 1,
      "deletions": 15,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a129eb19a773d930d60b084209570f663db2053/sim/or1k/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a129eb19a773d930d60b084209570f663db2053/sim/or1k/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/Makefile.in?ref=0a129eb19a773d930d60b084209570f663db2053",
      "patch": "@@ -53,8 +53,6 @@ SIM_EXTRA_CFLAGS =\n \n SIM_EXTRA_LIBS = -lm\n \n-SIM_EXTRA_CLEAN = or1k-clean\n-\n ## COMMON_POST_CONFIG_FRAG\n \n arch = or1k\n@@ -67,15 +65,6 @@ OR1K32BF_INCLUDE_DEPS = \\\n \tdecode.h \\\n \teng.h\n \n-mloop.c eng.h: stamp-mloop ; @true\n-stamp-mloop: $(srcdir)/../common/genmloop.sh mloop.in Makefile\n-\t$(ECHO_STAMP) mloop.c eng.h\n-\t$(SILENCE) $(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n-\t\t-mono -fast -pbb -switch sem-switch.c \\\n-\t\t-cpu or1k32bf -infile $(srcdir)/mloop.in\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change eng.hin eng.h\n-\t$(SILENCE) $(SHELL) $(srcroot)/move-if-change mloop.cin mloop.c\n-\t$(SILENCE) touch $@\n or1k.o: or1k.c $(OR1K32BF_INCLUDE_DEPS)\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n@@ -88,10 +77,7 @@ traps.o: traps.c $(SIM_MAIN_DEPS) eng.h\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n-or1k-clean:\n-\trm -f mloop.c eng.h stamp-mloop\n-\n-stamps: stamp-arch stamp-cpu stamp-mloop\n+stamps: stamp-arch stamp-cpu\n \n # NOTE: Generated source files are specified as full paths,\n # e.g. $(srcdir)/arch.c, because make may decide the files live"
    },
    {
      "sha": "ab1f07df0ea1e85db21c8858153d50cab0365077",
      "filename": "sim/or1k/local.mk",
      "status": "added",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a129eb19a773d930d60b084209570f663db2053/sim/or1k/local.mk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a129eb19a773d930d60b084209570f663db2053/sim/or1k/local.mk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/local.mk?ref=0a129eb19a773d930d60b084209570f663db2053",
      "patch": "@@ -0,0 +1,37 @@\n+# See sim/Makefile.am\n+#\n+# Copyright (C) 2017-2021 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+%C%_BUILD_OUTPUTS = \\\n+\t%D%/eng.h \\\n+\t%D%/mloop.c \\\n+\t%D%/stamp-mloop\n+\n+# This makes sure build tools are available before building the arch-subdirs.\n+SIM_ALL_RECURSIVE_DEPS += $(%C%_BUILD_OUTPUTS)\n+\n+# FIXME: Use of `mono' is wip.\n+%D%/mloop.c %D%/eng.h: %D%/stamp-mloop ; @true\n+%D%/stamp-mloop: $(srccom)/genmloop.sh %D%/mloop.in\n+\t$(AM_V_GEN)$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \\\n+\t\t-mono -fast -pbb -switch sem-switch.c \\\n+\t\t-cpu or1k32bf \\\n+\t\t-infile $(srcdir)/%D%/mloop.in -outfile-prefix %D%/\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/eng.hin %D%/eng.h\n+\t$(AM_V_at)$(SHELL) $(srcroot)/move-if-change %D%/mloop.cin %D%/mloop.c\n+\t$(AM_V_at)touch $@\n+\n+MOSTLYCLEANFILES += $(%C%_BUILD_OUTPUTS)"
    }
  ]
}