{
  "sha": "1feede9b384ef80a268ffe0b18e75bd60574f7c7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWZlZWRlOWIzODRlZjgwYTI2OGZmZTBiMThlNzViZDYwNTc0ZjdjNw==",
  "commit": {
    "author": {
      "name": "Cooper Qu",
      "email": "cooper.qu@linux.alibaba.com",
      "date": "2020-09-07T09:24:11Z"
    },
    "committer": {
      "name": "Lifang Xia",
      "email": "lifang_xia@c-sky.com",
      "date": "2020-09-09T11:25:40Z"
    },
    "message": "CSKY: Add FPUV3 instructions, which supported by ck860f.\n\nCo-Authored-By: Lifang Xia <lifang_xia@c-sky.com>\n\ngas/\n\t* config/tc-csky.c (float_work_fpuv3_fmovi): New function,\n\thelper function to encode fpuv3 fmovi instructions.\n\t(float_work_fpuv3_fstore): New function.\n\t(struct literal): Add new member 'offset'.\n\t(csky_cpus): New cpu CK860f.\n\t(enter_literal): Return literal pool pointer instead of offset.\n\t(parse_rt): Adjust the change of enter_literal.\n\t(parse_rtf): Likewise.\n\t(v1_work_lrw): Likewise.\n\t(v1_work_jbsr): Likewise.\n\t(v2_work_lrw): Likewise.\n\t(v2_work_jbsr): Likewise.\n\t(v2_work_jsri): Likewise.\n\t(vdsp_work_vlrw): Likewise.\n\t(is_freglist_legal): Add handler for FPUV3.\n\t(parse_type_freg): Likewise.\n\t(is_imm_within_range): Set e.X_add_number if it is a signed and\n\tnegtive number.\n\t(get_operand_value): Add handler for OPRND_TYPE_IMM9b,\n\tOPRND_TYPE_HFLOAT_FMOVI, OPRND_TYPE_SFLOAT_FMOVI\n\tand OPRND_TYPE_DFLOAT_FMOVI.\n\t(float_to_half): Convert float number to harf float.\n\nopcodes/\n\t* csky-dis.c (csky_output_operand): Add handlers for\n\tOPRND_TYPE_HFLOAT_FMOVI, OPRND_TYPE_SFLOAT_FMOVI and\n\tOPRND_TYPE_DFLOAT_FMOVI. Refine OPRND_TYPE_FREGLIST_DASH\n\tto support FPUV3 instructions.\n\t* csky-opc.h (enum operand_type): New enum OPRND_TYPE_IMM9b,\n\tOPRND_TYPE_HFLOAT_FMOVI, OPRND_TYPE_SFLOAT_FMOVI and\n\tOPRND_TYPE_DFLOAT_FMOVI.\n\t(OPRND_MASK_4_5, OPRND_MASK_6, OPRND_MASK_6_7, OPRND_MASK_6_8,\n\t OPRND_MASK_7, OPRND_MASK_7_8, OPRND_MASK_17_24,\n\t OPRND_MASK_20, OPRND_MASK_20_21, OPRND_MASK_20_22,\n\t OPRND_MASK_20_23, OPRND_MASK_20_24, OPRND_MASK_20_25,\n\t OPRND_MASK_0_3or5_8, OPRND_MASK_0_3or6_7, OPRND_MASK_0_3or25,\n\t OPRND_MASK_0_4or21_24, OPRND_MASK_5or20_21,\n\t OPRND_MASK_5or20_22, OPRND_MASK_5or20_23, OPRND_MASK_5or20_24,\n\t OPRND_MASK_5or20_25, OPRND_MASK_8_9or21_25,\n\t OPRND_MASK_8_9or16_25, OPRND_MASK_4_6or20, OPRND_MASK_5_7or20,\n\t OPRND_MASK_4_5or20or25, OPRND_MASK_4_6or20or25,\n\t OPRND_MASK_4_7or20or25, OPRND_MASK_6_9or17_24,\n\t OPRND_MASK_6_7or20, OPRND_MASK_6or20, OPRND_MASK_7or20,\n\t OPRND_MASK_5or8_9or16_25, OPRND_MASK_5or8_9or20_25): Define.\n\t(csky_v2_opcodes): Add FPUV3 instructions.\n\ninclude/\n\t* opcode/csky.h (CSKY_ISA_FLOAT_7E60): Define.",
    "tree": {
      "sha": "2981852750a2405cc1cdf1cfade31ca5d7574ba0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2981852750a2405cc1cdf1cfade31ca5d7574ba0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1feede9b384ef80a268ffe0b18e75bd60574f7c7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1feede9b384ef80a268ffe0b18e75bd60574f7c7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1feede9b384ef80a268ffe0b18e75bd60574f7c7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1feede9b384ef80a268ffe0b18e75bd60574f7c7/comments",
  "author": {
    "login": "Cooper-Qu",
    "id": 68842787,
    "node_id": "MDQ6VXNlcjY4ODQyNzg3",
    "avatar_url": "https://avatars.githubusercontent.com/u/68842787?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Cooper-Qu",
    "html_url": "https://github.com/Cooper-Qu",
    "followers_url": "https://api.github.com/users/Cooper-Qu/followers",
    "following_url": "https://api.github.com/users/Cooper-Qu/following{/other_user}",
    "gists_url": "https://api.github.com/users/Cooper-Qu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Cooper-Qu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Cooper-Qu/subscriptions",
    "organizations_url": "https://api.github.com/users/Cooper-Qu/orgs",
    "repos_url": "https://api.github.com/users/Cooper-Qu/repos",
    "events_url": "https://api.github.com/users/Cooper-Qu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Cooper-Qu/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "Lifang-XIA",
    "id": 22215568,
    "node_id": "MDQ6VXNlcjIyMjE1NTY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/22215568?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Lifang-XIA",
    "html_url": "https://github.com/Lifang-XIA",
    "followers_url": "https://api.github.com/users/Lifang-XIA/followers",
    "following_url": "https://api.github.com/users/Lifang-XIA/following{/other_user}",
    "gists_url": "https://api.github.com/users/Lifang-XIA/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Lifang-XIA/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Lifang-XIA/subscriptions",
    "organizations_url": "https://api.github.com/users/Lifang-XIA/orgs",
    "repos_url": "https://api.github.com/users/Lifang-XIA/repos",
    "events_url": "https://api.github.com/users/Lifang-XIA/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Lifang-XIA/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dfbee68088e822453fdc82f6b8a3a5bc468944b1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dfbee68088e822453fdc82f6b8a3a5bc468944b1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dfbee68088e822453fdc82f6b8a3a5bc468944b1"
    }
  ],
  "stats": {
    "total": 2389,
    "additions": 2356,
    "deletions": 33
  },
  "files": [
    {
      "sha": "a4757cca273a74118ea3ad582e2d642f4bf0e74f",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1feede9b384ef80a268ffe0b18e75bd60574f7c7/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1feede9b384ef80a268ffe0b18e75bd60574f7c7/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=1feede9b384ef80a268ffe0b18e75bd60574f7c7",
      "patch": "@@ -1,3 +1,31 @@\n+2020-09-07  Cooper Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* config/tc-csky.c (float_work_fpuv3_fmovi): New function,\n+\thelper function to encode fpuv3 fmovi instructions.\n+\t(float_work_fpuv3_fstore): New function.\n+\t(struct literal): Add new member 'offset'.\n+\t(csky_cpus): New cpu CK860f.\n+\t(enter_literal): Return literal pool pointer instead of offset.\n+\t(parse_rt): Adjust the change of enter_literal.\n+\t(parse_rtf): Likewise.\n+\t(v1_work_lrw): Likewise.\n+\t(v1_work_jbsr): Likewise.\n+\t(v2_work_lrw): Likewise.\n+\t(v2_work_jbsr): Likewise.\n+\t(v2_work_jsri): Likewise.\n+\t(vdsp_work_vlrw): Likewise.\n+\t(is_freglist_legal): Add handler for FPUV3.\n+\t(parse_type_freg): Likewise.\n+\t(is_imm_within_range): Set e.X_add_number if it is a signed and\n+\tnegtive number.\n+\t(get_operand_value): Add handler for OPRND_TYPE_IMM9b,\n+\tOPRND_TYPE_HFLOAT_FMOVI, OPRND_TYPE_SFLOAT_FMOVI\n+\tand OPRND_TYPE_DFLOAT_FMOVI.\n+\t(float_to_half): Convert float number to harf float.\n+\t* testsuite/gas/csky/case-fpuv3-ck860f/ : New folder containing\n+\tthe test cases for FPUV3, they are divided by instruction\n+\toperands format and both have legal cases and illegal cases.\n+\n 2020-09-08  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \tKuan-Lin Chen  <kuanlinchentw@gmail.com>\n "
    },
    {
      "sha": "14155459cab67d264b7f6e6c3a473bd11efe98a5",
      "filename": "gas/config/tc-csky.c",
      "status": "modified",
      "additions": 189,
      "deletions": 31,
      "changes": 220,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1feede9b384ef80a268ffe0b18e75bd60574f7c7/gas/config/tc-csky.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1feede9b384ef80a268ffe0b18e75bd60574f7c7/gas/config/tc-csky.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-csky.c?ref=1feede9b384ef80a268ffe0b18e75bd60574f7c7",
      "patch": "@@ -172,6 +172,8 @@ bfd_boolean v2_work_movih (void);\n bfd_boolean v2_work_ori (void);\n bfd_boolean float_work_fmovi (void);\n bfd_boolean dsp_work_bloop (void);\n+bfd_boolean float_work_fpuv3_fmovi (void);\n+bfd_boolean float_work_fpuv3_fstore (void);\n \n /* csky-opc.h must be included after workers are declared.  */\n #include \"opcodes/csky-opc.h\"\n@@ -295,6 +297,7 @@ struct csky_insn_info\n struct literal\n {\n   unsigned short  refcnt;\n+  unsigned int    offset;\n   unsigned char   ispcrel;\n   unsigned char   unused;\n   bfd_reloc_code_real_type r_type;\n@@ -704,9 +707,10 @@ const struct csky_cpu_info csky_cpus[] =\n   {\"ck810ftv\", CSKY_ARCH_810_BASE | CSKY_ARCH_FLOAT, CSKY_ISA_810 | CSKYV2_ISA_DSP | CSKY_ISA_VDSP | CSKY_ISA_FLOAT_810 | CSKY_ISA_TRUST},\n \n   /* CK860 Series.  */\n-#define CSKY_ISA_860    (CSKY_ISA_810 | CSKYV2_ISA_10E60)\n-#define CSKY_ISA_FLOAT_860 (CSKY_ISA_FLOAT_810)\n+#define CSKY_ISA_860    (CSKY_ISA_810 | CSKYV2_ISA_10E60 | CSKYV2_ISA_3E3R3)\n+#define CSKY_ISA_860F (CSKY_ISA_860 | CSKY_ISA_FLOAT_7E60)\n   {\"ck860\", CSKY_ARCH_860, CSKY_ISA_860},\n+  {\"ck860f\", CSKY_ARCH_860, CSKY_ISA_860F},\n \n   {NULL, 0, 0}\n };\n@@ -1718,7 +1722,7 @@ dump_literals (int isforce)\n   poolsize = 0;\n }\n \n-static int\n+static struct literal *\n enter_literal (expressionS *e,\n \t       int ispcrel,\n \t       unsigned char isdouble,\n@@ -1772,7 +1776,7 @@ enter_literal (expressionS *e,\n \t\t\t  p->e.X_add_number * sizeof (LITTLENUM_TYPE)) == 0)))\n \t{\n \t  p->refcnt ++;\n-\t  return i;\n+\t  return p;\n \t}\n       if (p->e.X_op == O_big)\n \t{\n@@ -1787,6 +1791,7 @@ enter_literal (expressionS *e,\n   p->e = *e;\n   p->r_type = insn_reloc;\n   p->isdouble = isdouble;\n+  p->offset = i;\n   if (isdouble)\n     p->dbnum = dbnum;\n   if (e->X_op == O_big)\n@@ -1806,7 +1811,7 @@ enter_literal (expressionS *e,\n   } else\n   poolsize += (p->isdouble ? 2 : 1);\n \n-  return i;\n+  return p;\n }\n \n /* Check whether we must dump the literal pool here.\n@@ -2056,7 +2061,6 @@ parse_rt (char *s,\n \t  long reg ATTRIBUTE_UNUSED)\n {\n   expressionS e;\n-  int n;\n \n   if (ep)\n     /* Indicate nothing there.  */\n@@ -2089,24 +2093,45 @@ parse_rt (char *s,\n       /* If the instruction has work, literal handling is in the work.  */\n       if (!csky_insn.opcode->work)\n \t{\n-\t  n = enter_literal (&e, ispcrel, 0, 0);\n+\t  struct literal *p = enter_literal (&e, ispcrel, 0, 0);\n \t  if (ep)\n \t   *ep = e;\n \n \t  /* Create a reference to pool entry.  */\n \t  ep->X_op = O_symbol;\n \t  ep->X_add_symbol = poolsym;\n-\t  ep->X_add_number = n << 2;\n+\t  ep->X_add_number = p->offset << 2;\n \t}\n     }\n   return s;\n }\n \n+static int float_to_half (void *f, void *h)\n+{\n+  int imm_e;\n+  int imm_f;\n+  unsigned int value_f = *(unsigned int *)f;\n+  unsigned short value_h;\n+\n+  imm_e = ((value_f >> 23) & 0xff);\n+  imm_f = ((value_f  & 0x7fffff));\n+\n+  imm_e = ((imm_e - 127 + 15) << 10);\n+  imm_f = ((imm_f & 0x7fe000) >> 13);\n+\n+  value_h = (value_f & 0x80000000 ? 0x8000 : 0x0) | imm_e | imm_f;\n+\n+  if (h)\n+    *(unsigned short *)h = value_h;\n+\n+  return value_h;\n+}\n+\n static char *\n parse_rtf (char *s, int ispcrel, expressionS *ep)\n {\n   expressionS e;\n-  int n = 0;\n+  struct literal *p = NULL;\n \n   if (ep)\n     /* Indicate nothing there.  */\n@@ -2127,15 +2152,24 @@ parse_rtf (char *s, int ispcrel, expressionS *ep)\n   else\n     {\n       uint64_t dbnum;\n-      if (strstr (csky_insn.opcode->mnemonic, \"flrws\"))\n+      if (strstr(csky_insn.opcode->mnemonic, \"flrws\")\n+\t  || strstr(csky_insn.opcode->mnemonic, \"flrw.32\"))\n \t{\n \t  s = parse_fexp (s, &e, 0, &dbnum);\n-\t  n = enter_literal (&e, ispcrel, 0, dbnum);\n+\t  p = enter_literal (& e, ispcrel, 0, dbnum);\n \t}\n-      else if (strstr (csky_insn.opcode->mnemonic, \"flrwd\"))\n+      else if (strstr(csky_insn.opcode->mnemonic, \"flrwd\")\n+\t       || strstr(csky_insn.opcode->mnemonic, \"flrw.64\"))\n \t{\n \t  s = parse_fexp (s, &e, 1, &dbnum);\n-\t  n = enter_literal (&e, ispcrel, 1, dbnum);\n+\t  p = enter_literal (& e, ispcrel, 1, dbnum);\n+\t}\n+      else if (strstr(csky_insn.opcode->mnemonic, \"flrwh\")\n+\t       || strstr(csky_insn.opcode->mnemonic, \"flrw.16\"))\n+\t{\n+\t  s = parse_fexp (s, &e, 0, NULL);\n+\t  e.X_add_number = float_to_half (&e.X_add_number, &e.X_add_number);\n+\t  p = enter_literal (& e, ispcrel, 0, 0);\n \t}\n       else\n \tas_bad (_(\"unrecognized opcode\"));\n@@ -2146,7 +2180,7 @@ parse_rtf (char *s, int ispcrel, expressionS *ep)\n       /* Create a reference to pool entry.  */\n       ep->X_op         = O_symbol;\n       ep->X_add_symbol = poolsym;\n-      ep->X_add_number = n << 2;\n+      ep->X_add_number = p->offset << 2;\n     }\n   return s;\n }\n@@ -2592,6 +2626,7 @@ is_freglist_legal (char **oper)\n   int reg1 = -1;\n   int reg2 = -1;\n   int len = 0;\n+  int shift = 0;\n   reg1 = csky_get_freg_val  (*oper, &len);\n   *oper += len;\n \n@@ -2627,12 +2662,34 @@ is_freglist_legal (char **oper)\n     }\n \n   reg2 = reg2 - reg1;\n-  if (reg2 > (int)0x3)\n+  /* The fldm/fstm in CSKY_ISA_FLOAT_7E60 has 5 bits frz(reg1).  */\n+  shift = 4;\n+  if (strncmp (csky_insn.opcode->mnemonic, \"fstm\", 4) == 0\n+      || strncmp (csky_insn.opcode->mnemonic, \"fldm\", 4) == 0)\n+    {\n+      if ((!(isa_flag & CSKY_ISA_FLOAT_7E60)\n+\t   && (reg2 > (int)15 || reg1 > 15))\n+\t  || ((isa_flag & CSKY_ISA_FLOAT_7E60)\n+\t      && (reg2 > (int)31 || reg1 > (int)31)))\n+\t{\n+\t  /* ISA_FLOAT_E1 fstm/fldm fry-frx is within 15.\n+\t     ISA_FLOAT_7E60 fstm(u)/fldm(u) frx-fry is within 31.  */\n+\t  SET_ERROR_STRING(ERROR_REG_FORMAT, (void *)\"frx-fry is over range\");\n+\t  return FALSE;\n+\t}\n+      if ((mach_flag & CSKY_ARCH_MASK) == CSKY_ARCH_860)\n+\t{\n+\t  shift = 5;\n+\t}\n+    }\n+  else\n     {\n-      SET_ERROR_STRING(ERROR_REG_FORMAT, (void *)\"vry-vrx is over range\");\n-      return FALSE;\n+      if (reg2 > (int)0x3) {\n+        SET_ERROR_STRING(ERROR_REG_FORMAT, (void *)\"vry-vrx is over range\");\n+        return FALSE;\n+      }\n     }\n-  reg2 <<= 4;\n+  reg2 <<= shift;\n   reg1 |= reg2;\n   csky_insn.val[csky_insn.idx++] = reg1;\n   return TRUE;\n@@ -2788,6 +2845,8 @@ is_imm_within_range (char **oper, int min, int max)\n \t  ret = FALSE;\n \t  SET_ERROR_STRING (ERROR_IMM_OVERFLOW, NULL);\n \t}\n+      if (!e.X_unsigned)\n+\te.X_add_number |= 0x80000000;\n       csky_insn.val[csky_insn.idx++] = e.X_add_number;\n     }\n \n@@ -2990,7 +3049,8 @@ parse_type_freg (char** oper, int even)\n     }\n \n   if (IS_CSKY_V2 (mach_flag)\n-      && (csky_insn.opcode->isa_flag32 & CSKY_ISA_VDSP_2)\n+      && ((csky_insn.opcode->isa_flag32 & CSKY_ISA_VDSP_2)\n+\t  || !(csky_insn.opcode->isa_flag32 & CSKY_ISA_FLOAT_7E60))\n       && reg > 15)\n     {\n       if ((csky_insn.opcode->isa_flag32 & CSKY_ISA_VDSP_2))\n@@ -3537,6 +3597,8 @@ get_operand_value (struct csky_opcode_info *op,\n       return is_imm_within_range (oper, 0, 127);\n     case OPRND_TYPE_IMM8b:\n       return is_imm_within_range (oper, 0, 255);\n+    case OPRND_TYPE_IMM9b:\n+      return is_imm_within_range (oper, -256, 255);\n     case OPRND_TYPE_IMM12b:\n       return is_imm_within_range (oper, 0, 4095);\n     case OPRND_TYPE_IMM15b:\n@@ -3720,7 +3782,37 @@ get_operand_value (struct csky_opcode_info *op,\n \t     | ((dbnum & 0x8000000000000000ULL) >> 43));\n \treturn TRUE;\n       }\n+    case OPRND_TYPE_HFLOAT_FMOVI:\n+    case OPRND_TYPE_SFLOAT_FMOVI:\n+    case OPRND_TYPE_DFLOAT_FMOVI:\n+      /* For fpuv3 fmovis and fmovid, which accept a constant\n+\t float with a limited range.  */\n+      {\n+\tuint64_t dbnum;\n+\tint imm4, imm8, sign;\n+\n+\t*oper = parse_fexp (*oper, &csky_insn.e1, 1, &dbnum);\n+\tif (csky_insn.e1.X_op == O_absent)\n+\t  return FALSE;\n \n+\t/* Convert the representation from IEEE double to the 13-bit\n+\t   encoding used internally for fmovis and fmovid.  */\n+\timm4 = 11 - (((dbnum & 0x7ff0000000000000ULL) >> 52) - 1023);\n+\t/* Check float range.  */\n+\tif ((dbnum & 0x00000fffffffffffULL) || imm4 < 0 || imm4 > 15)\n+\t  {\n+\t    csky_show_error (ERROR_IMM_OVERFLOW, 2, NULL, NULL);\n+\t    return TRUE;\n+\t  }\n+\timm8 = (dbnum & 0x000ff00000000000ULL) >> 44;\n+\tsign = (dbnum & 0x8000000000000000ULL) >> 58;\n+\tcsky_insn.e1.X_add_number\n+\t  = (((imm8 & 0x3) << 8)\n+\t     | ((imm8 & 0xfc) << 18)\n+\t     | ((imm4 & 0xf) << 16)\n+\t     | sign);\n+\treturn TRUE;\n+      }\n       /* For grs v2.  */\n     case OPRND_TYPE_IMM_OFF18b:\n       *oper = parse_exp (*oper, &csky_insn.e1);\n@@ -5999,12 +6091,12 @@ v1_work_lrw (void)\n       csky_insn.inst |= reg << 8;\n       if (output_literal)\n \t{\n-\t  int n = enter_literal (&csky_insn.e1, 0, 0, 0);\n+\t  struct literal *p = enter_literal (&csky_insn.e1, 0, 0, 0);\n \n \t  /* Create a reference to pool entry.  */\n \t  csky_insn.e1.X_op = O_symbol;\n \t  csky_insn.e1.X_add_symbol = poolsym;\n-\t  csky_insn.e1.X_add_number = n << 2;\n+\t  csky_insn.e1.X_add_number = p->offset << 2;\n \t}\n \n       if (insn_reloc == BFD_RELOC_CKCORE_TLS_GD32\n@@ -6212,12 +6304,12 @@ v1_work_jbsr (void)\n       csky_insn.opcode_idx = 0;\n       csky_insn.isize = 2;\n \n-      int n = enter_literal (&csky_insn.e1, 1, 0, 0);\n+      struct literal *p = enter_literal (&csky_insn.e1, 1, 0, 0);\n \n       /* Create a reference to pool entry.  */\n       csky_insn.e1.X_op = O_symbol;\n       csky_insn.e1.X_add_symbol = poolsym;\n-      csky_insn.e1.X_add_number = n << 2;\n+      csky_insn.e1.X_add_number = p->offset << 2;\n \n       /* Generate fixup BFD_RELOC_CKCORE_PCREL_IMM8BY4.  */\n       fix_new_exp (frag_now, csky_insn.output - frag_now->fr_literal,\n@@ -6226,7 +6318,7 @@ v1_work_jbsr (void)\n       if (csky_insn.e1.X_op != O_absent && do_jsri2bsr)\n \t/* Generate fixup BFD_RELOC_CKCORE_PCREL_JSR_IMM11BY2.  */\n \tfix_new_exp (frag_now, csky_insn.output - frag_now->fr_literal,\n-\t\t     2, & (litpool + (csky_insn.e1.X_add_number >> 2))->e,\n+\t\t     2, &p->e,\n \t\t     1, BFD_RELOC_CKCORE_PCREL_JSR_IMM11BY2);\n     }\n   csky_generate_insn ();\n@@ -6815,11 +6907,11 @@ v2_work_lrw (void)\n \n   if (output_literal)\n     {\n-      int n = enter_literal (&csky_insn.e1, 0, 0, 0);\n+      struct literal *p = enter_literal (&csky_insn.e1, 0, 0, 0);\n       /* Create a reference to pool entry.  */\n       csky_insn.e1.X_op = O_symbol;\n       csky_insn.e1.X_add_symbol = poolsym;\n-      csky_insn.e1.X_add_number = n << 2;\n+      csky_insn.e1.X_add_number = p->offset << 2;\n     }\n   /* If 16bit force.  */\n   if (csky_insn.flag_force == INSN_OPCODE16F)\n@@ -6960,11 +7052,11 @@ v2_work_jbsr (void)\n     }\n   else\n     {\n-      int n = enter_literal (&csky_insn.e1, 0, 0, 0);\n+      struct literal *p = enter_literal (&csky_insn.e1, 0, 0, 0);\n       csky_insn.output = frag_more (4);\n       csky_insn.e1.X_op = O_symbol;\n       csky_insn.e1.X_add_symbol = poolsym;\n-      csky_insn.e1.X_add_number = n << 2;\n+      csky_insn.e1.X_add_number = p->offset << 2;\n       fix_new_exp (frag_now, csky_insn.output - frag_now->fr_literal,\n \t\t 4, &csky_insn.e1, 1, BFD_RELOC_CKCORE_PCREL_IMM16BY4);\n       if (do_jsri2bsr || IS_CSKY_ARCH_810 (mach_flag))\n@@ -6994,10 +7086,10 @@ bfd_boolean\n v2_work_jsri (void)\n {\n   /* dump literal.  */\n-  int n = enter_literal (&csky_insn.e1, 1, 0, 0);\n+  struct literal *p = enter_literal (&csky_insn.e1, 1, 0, 0);\n   csky_insn.e1.X_op = O_symbol;\n   csky_insn.e1.X_add_symbol = poolsym;\n-  csky_insn.e1.X_add_number = n << 2;\n+  csky_insn.e1.X_add_number = p->offset << 2;\n \n   /* Generate relax or reloc if necessary.  */\n   csky_generate_frags ();\n@@ -7012,7 +7104,7 @@ v2_work_jsri (void)\n \t For 'jbsr .L1', this reloc type's symbol\n \t is bound to '.L1', isn't bound to literal pool.  */\n       fix_new_exp (frag_now, csky_insn.output - frag_now->fr_literal,\n-\t\t   4, &(litpool + (csky_insn.e1.X_add_number >> 2))->e, 1,\n+\t\t   4, &p->e, 1,\n \t\t   BFD_RELOC_CKCORE_PCREL_JSR_IMM26BY2);\n       csky_insn.output = frag_more (4);\n       dwarf2_emit_insn (0);\n@@ -7155,6 +7247,57 @@ float_work_fmovi (void)\n   return TRUE;\n }\n \n+/* Like float_work_fmovi, but for FPUV3 fmovi.16, fmovi.32 and fmovi.64\n+   instructions.  */\n+\n+bfd_boolean\n+float_work_fpuv3_fmovi (void)\n+{\n+  int rx = csky_insn.val[0];\n+  int idx = csky_insn.opcode_idx;\n+  int imm4 = 0;\n+  int imm8 = 0;\n+  int sign = 0;\n+\n+  csky_insn.inst = csky_insn.opcode->op32[idx].opcode | rx;\n+\n+  if (csky_insn.opcode->op32[idx].operand_num == 3)\n+    {\n+      /* fmovi.xx frz, imm9, imm4.  */\n+      imm8 = csky_insn.val[1];\n+      imm4 = csky_insn.val[2];\n+      if (imm8 < 0 || (imm8 & 0x80000000))\n+\t{\n+\t  sign = (1 << 5);\n+\t  imm8 = 0 - imm8;\n+\t}\n+\n+      if (imm8 > 255)\n+\t{\n+\t  csky_show_error (ERROR_IMM_OVERFLOW, 2, NULL, NULL);\n+\t  return FALSE;\n+\t}\n+\n+      /* imm8 store at bit [25:20] and [9:8].  */\n+      /* imm4 store at bit [19:16].  */\n+      /* sign store at bit [5].  */\n+      csky_insn.inst = csky_insn.inst\n+\t| ((imm8 & 0x3) << 8)\n+\t| ((imm8 & 0xfc) << 18)\n+\t| ((imm4 & 0xf) << 16)\n+\t| sign;\n+    }\n+  else\n+    {\n+       csky_insn.inst |= (uint32_t) csky_insn.e1.X_add_number;\n+    }\n+\n+  csky_insn.output = frag_more(4);\n+  csky_insn.isize = 4;\n+  csky_write_insn (csky_insn.output, csky_insn.inst, csky_insn.isize);\n+  return TRUE;\n+}\n+\n bfd_boolean\n dsp_work_bloop (void)\n {\n@@ -7196,6 +7339,21 @@ dsp_work_bloop (void)\n   return TRUE;\n }\n \n+bfd_boolean\n+float_work_fpuv3_fstore(void)\n+{\n+  /* Generate relax or reloc if necessary.  */\n+  csky_generate_frags ();\n+  /* Generate the insn by mask.  */\n+  csky_generate_insn ();\n+  /* Write inst to frag.  */\n+  csky_write_insn (csky_insn.output,\n+                   csky_insn.inst,\n+                   csky_insn.isize);\n+\n+\n+  return TRUE;\n+}\n \n /* The following are for assembler directive handling.  */\n "
    },
    {
      "sha": "33998eb1dfa6cbe8324f24718aafd7389dfbf836",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1feede9b384ef80a268ffe0b18e75bd60574f7c7/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1feede9b384ef80a268ffe0b18e75bd60574f7c7/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=1feede9b384ef80a268ffe0b18e75bd60574f7c7",
      "patch": "@@ -1,3 +1,7 @@\n+2020-09-07  Cooper Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* opcode/csky.h (CSKY_ISA_FLOAT_7E60): Define.\n+\n 2020-09-08  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \tKuan-Lin Chen  <kuanlinchentw@gmail.com>\n "
    },
    {
      "sha": "1ad7f581ab67aee98766d93aed3619443b09947b",
      "filename": "include/opcode/csky.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1feede9b384ef80a268ffe0b18e75bd60574f7c7/include/opcode/csky.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1feede9b384ef80a268ffe0b18e75bd60574f7c7/include/opcode/csky.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/csky.h?ref=1feede9b384ef80a268ffe0b18e75bd60574f7c7",
      "patch": "@@ -56,6 +56,8 @@\n #define CSKY_ISA_FLOAT_1E3  (1L << 27)\n /* 807 support (803f & 807f).  */\n #define CSKY_ISA_FLOAT_3E4  (1L << 28)\n+/* 860 support.  */\n+#define CSKY_ISA_FLOAT_7E60 (1L << 36)\n /* Vector DSP support.  */\n #define CSKY_ISA_VDSP       (1L << 29)\n #define CSKY_ISA_VDSP_2     (1L << 30)"
    },
    {
      "sha": "4f416bf7f9429aa84868ffeb3abc25ed6f019791",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1feede9b384ef80a268ffe0b18e75bd60574f7c7/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1feede9b384ef80a268ffe0b18e75bd60574f7c7/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=1feede9b384ef80a268ffe0b18e75bd60574f7c7",
      "patch": "@@ -1,3 +1,27 @@\n+2020-09-07  Cooper Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* csky-dis.c (csky_output_operand): Add handlers for\n+\tOPRND_TYPE_HFLOAT_FMOVI, OPRND_TYPE_SFLOAT_FMOVI and\n+\tOPRND_TYPE_DFLOAT_FMOVI. Refine OPRND_TYPE_FREGLIST_DASH\n+\tto support FPUV3 instructions.\n+\t* csky-opc.h (enum operand_type): New enum OPRND_TYPE_IMM9b,\n+\tOPRND_TYPE_HFLOAT_FMOVI, OPRND_TYPE_SFLOAT_FMOVI and\n+\tOPRND_TYPE_DFLOAT_FMOVI.\n+\t(OPRND_MASK_4_5, OPRND_MASK_6, OPRND_MASK_6_7, OPRND_MASK_6_8,\n+\t OPRND_MASK_7, OPRND_MASK_7_8, OPRND_MASK_17_24,\n+\t OPRND_MASK_20, OPRND_MASK_20_21, OPRND_MASK_20_22,\n+\t OPRND_MASK_20_23, OPRND_MASK_20_24, OPRND_MASK_20_25,\n+\t OPRND_MASK_0_3or5_8, OPRND_MASK_0_3or6_7, OPRND_MASK_0_3or25,\n+\t OPRND_MASK_0_4or21_24, OPRND_MASK_5or20_21,\n+\t OPRND_MASK_5or20_22, OPRND_MASK_5or20_23, OPRND_MASK_5or20_24,\n+\t OPRND_MASK_5or20_25, OPRND_MASK_8_9or21_25,\n+\t OPRND_MASK_8_9or16_25, OPRND_MASK_4_6or20, OPRND_MASK_5_7or20,\n+\t OPRND_MASK_4_5or20or25, OPRND_MASK_4_6or20or25,\n+\t OPRND_MASK_4_7or20or25, OPRND_MASK_6_9or17_24,\n+\t OPRND_MASK_6_7or20, OPRND_MASK_6or20, OPRND_MASK_7or20,\n+\t OPRND_MASK_5or8_9or16_25, OPRND_MASK_5or8_9or20_25): Define.\n+\t(csky_v2_opcodes): Add FPUV3 instructions.\n+\n 2020-09-08  Alex Coplan  <alex.coplan@arm.com>\n \n \t* aarch64-dis.c (print_operands): Pass CPU features to"
    },
    {
      "sha": "89f1c6bcb3dc413c13a5775a1f9739f8317e425a",
      "filename": "opcodes/csky-dis.c",
      "status": "modified",
      "additions": 70,
      "deletions": 2,
      "changes": 72,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1feede9b384ef80a268ffe0b18e75bd60574f7c7/opcodes/csky-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1feede9b384ef80a268ffe0b18e75bd60574f7c7/opcodes/csky-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/csky-dis.c?ref=1feede9b384ef80a268ffe0b18e75bd60574f7c7",
      "patch": "@@ -621,6 +621,62 @@ csky_output_operand (char *str, struct operand const *oprnd,\n \n \tsprintf (buf, \"%f\", fvalue);\n \tstrcat (str, buf);\n+\tbreak;\n+      }\n+    case OPRND_TYPE_HFLOAT_FMOVI:\n+    case OPRND_TYPE_SFLOAT_FMOVI:\n+      {\n+\tint imm4;\n+\tint imm8;\n+\timm4 = ((inst >> 16) & 0xf);\n+\timm4 = (138 - imm4) << 23;\n+\n+\timm8 = ((inst >> 8) & 0x3);\n+\timm8 |= (((inst >> 20) & 0x3f) << 2);\n+\timm8 <<= 15;\n+\n+\tvalue = ((inst >> 5) & 1) << 31;\n+\tvalue |= imm4 | imm8;\n+\n+\timm4 = 138 - (imm4 >> 23);\n+\timm8 >>= 15;\n+\tif ((inst >> 5) & 1)\n+\t  {\n+\t    imm8 = 0 - imm8;\n+\t  }\n+\n+\tfloat f = 0;\n+\tmemcpy (&f, &value, sizeof (float));\n+\tsprintf (str, \"%s%f\\t// imm9:%4d, imm4:%2d\", str, f, imm8, imm4);\n+\n+\tbreak;\n+      }\n+\n+    case OPRND_TYPE_DFLOAT_FMOVI:\n+      {\n+\tuint64_t imm4;\n+\tuint64_t imm8;\n+\tuint64_t dvalue;\n+\timm4 = ((inst >> 16) & 0xf);\n+\timm4 = (1034 - imm4) << 52;\n+\n+\timm8 = ((inst >> 8) & 0x3);\n+\timm8 |= (((inst >> 20) & 0x3f) << 2);\n+\timm8 <<= 44;\n+\n+\tdvalue = (((uint64_t)inst >> 5) & 1) << 63;\n+\tdvalue |= imm4 | imm8;\n+\n+\timm4 = 1034 - (imm4 >> 52);\n+\timm8 >>= 44;\n+\tif (inst >> 5)\n+\t  {\n+\t    imm8 = 0 - imm8;\n+\t  }\n+\tdouble d = 0;\n+\tmemcpy (&d, &dvalue, sizeof (double));\n+\tsprintf (str, \"%s%lf\\t// imm9:%4ld, imm4:%2ld\", str, d, imm8, imm4);\n+\n \tbreak;\n       }\n     case OPRND_TYPE_LABEL_WITH_BRACKET:\n@@ -653,8 +709,20 @@ csky_output_operand (char *str, struct operand const *oprnd,\n     case OPRND_TYPE_FREGLIST_DASH:\n       if (IS_CSKY_V2 (mach_flag))\n \t{\n-\t  int vrx = value & 0xf;\n-\t  int vry = vrx + (value >> 4);\n+\t  int vrx = 0;\n+\t  int vry = 0;\n+\t  if (dis_info.isa & CSKY_ISA_FLOAT_7E60\n+\t      && (strstr (str, \"fstm\") != NULL\n+\t\t  || strstr (str, \"fldm\") != NULL))\n+\t    {\n+\t      vrx = value & 0x1f;\n+\t      vry = vrx + (value >> 5);\n+\t    }\n+\t  else\n+\t    {\n+\t      vrx = value & 0xf;\n+\t      vry = vrx + (value >> 4);\n+\t    }\n \t  sprintf (buf, \"fr%d-fr%d\", vrx, vry);\n \t  strcat (str, buf);\n \t}"
    },
    {
      "sha": "fac30ae61db3c047287f82d43fb00ed7ddd5a2ee",
      "filename": "opcodes/csky-opc.h",
      "status": "modified",
      "additions": 2039,
      "deletions": 0,
      "changes": 2039,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1feede9b384ef80a268ffe0b18e75bd60574f7c7/opcodes/csky-opc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1feede9b384ef80a268ffe0b18e75bd60574f7c7/opcodes/csky-opc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/csky-opc.h?ref=1feede9b384ef80a268ffe0b18e75bd60574f7c7",
      "patch": "@@ -116,6 +116,7 @@ enum operand_type\n   OPRND_TYPE_IMM5b,\n   OPRND_TYPE_IMM7b,\n   OPRND_TYPE_IMM8b,\n+  OPRND_TYPE_IMM9b,\n   OPRND_TYPE_IMM12b,\n   OPRND_TYPE_IMM15b,\n   OPRND_TYPE_IMM16b,\n@@ -195,6 +196,9 @@ enum operand_type\n   /* Single float and double float.  */\n   OPRND_TYPE_SFLOAT,\n   OPRND_TYPE_DFLOAT,\n+  OPRND_TYPE_HFLOAT_FMOVI,\n+  OPRND_TYPE_SFLOAT_FMOVI,\n+  OPRND_TYPE_DFLOAT_FMOVI,\n };\n \n /* Operand descriptors.  */\n@@ -331,6 +335,7 @@ struct csky_opcode\n #define OPRND_MASK_2_5              0x3c\n #define OPRND_MASK_3_7              0xf8\n #define OPRND_MASK_4                0x10\n+#define OPRND_MASK_4_5              0x30\n #define OPRND_MASK_4_6              0x70\n #define OPRND_MASK_4_7              0xf0\n #define OPRND_MASK_4_8              0x1f0\n@@ -340,8 +345,13 @@ struct csky_opcode\n #define OPRND_MASK_5_7              0xe0\n #define OPRND_MASK_5_8              0x1e0\n #define OPRND_MASK_5_9              0x3e0\n+#define OPRND_MASK_6                0x40\n+#define OPRND_MASK_6_7              0xc0\n+#define OPRND_MASK_6_8              0x1c0\n #define OPRND_MASK_6_9              0x3c0\n #define OPRND_MASK_6_10             0x7c0\n+#define OPRND_MASK_7                0x80\n+#define OPRND_MASK_7_8              0x180\n #define OPRND_MASK_8_9              0x300\n #define OPRND_MASK_8_10             0x700\n #define OPRND_MASK_8_11             0xf00\n@@ -354,28 +364,57 @@ struct csky_opcode\n #define OPRND_MASK_16_19            0xf0000\n #define OPRND_MASK_16_20            0x1f0000\n #define OPRND_MASK_16_25            0x3ff0000\n+#define OPRND_MASK_17_24            0x1fe0000\n+#define OPRND_MASK_20               0x0100000\n+#define OPRND_MASK_20_21            0x0300000\n+#define OPRND_MASK_20_22            0x0700000\n+#define OPRND_MASK_20_23            0x0f00000\n+#define OPRND_MASK_20_24            0x1f00000\n+#define OPRND_MASK_20_25            0x3f00000\n #define OPRND_MASK_21_24            0x1e00000\n #define OPRND_MASK_21_25            0x3e00000\n #define OPRND_MASK_25               0x2000000\n #define OPRND_MASK_RSV              0xffffffff\n+#define OPRND_MASK_0_3or5_8         OPRND_MASK_0_3 | OPRND_MASK_5_8\n+#define OPRND_MASK_0_3or6_7         OPRND_MASK_0_3 | OPRND_MASK_6_7\n #define OPRND_MASK_0_3or21_24       OPRND_MASK_0_3 | OPRND_MASK_21_24\n+#define OPRND_MASK_0_3or25          OPRND_MASK_0_3 | OPRND_MASK_25\n+#define OPRND_MASK_0_4or21_24       OPRND_MASK_0_4 | OPRND_MASK_21_24\n #define OPRND_MASK_0_4or21_25       OPRND_MASK_0_4 | OPRND_MASK_21_25\n #define OPRND_MASK_0_4or16_20       OPRND_MASK_0_4 | OPRND_MASK_16_20\n #define OPRND_MASK_0_4or8_10        OPRND_MASK_0_4 | OPRND_MASK_8_10\n #define OPRND_MASK_0_4or8_9         OPRND_MASK_0_4 | OPRND_MASK_8_9\n #define OPRND_MASK_0_14or16_20      OPRND_MASK_0_14 | OPRND_MASK_16_20\n #define OPRND_MASK_4or5_8           OPRND_MASK_4   | OPRND_MASK_5_8\n+#define OPRND_MASK_5or20_21         OPRND_MASK_5   | OPRND_MASK_20_21\n+#define OPRND_MASK_5or20_22         OPRND_MASK_5   | OPRND_MASK_20_22\n+#define OPRND_MASK_5or20_23         OPRND_MASK_5   | OPRND_MASK_20_23\n+#define OPRND_MASK_5or20_24         OPRND_MASK_5   | OPRND_MASK_20_24\n+#define OPRND_MASK_5or20_25         OPRND_MASK_5   | OPRND_MASK_20_25\n #define OPRND_MASK_5or21_24         OPRND_MASK_5   | OPRND_MASK_21_24\n #define OPRND_MASK_2_5or6_9         OPRND_MASK_2_5 | OPRND_MASK_6_9\n #define OPRND_MASK_4_6or21_25       OPRND_MASK_4_6 | OPRND_MASK_21_25\n #define OPRND_MASK_4_7or21_24       OPRND_MASK_4_7 | OPRND_MASK_21_24\n #define OPRND_MASK_5_6or21_25       OPRND_MASK_5_6 | OPRND_MASK_21_25\n #define OPRND_MASK_5_7or8_10        OPRND_MASK_5_7 | OPRND_MASK_8_10\n #define OPRND_MASK_5_9or21_25       OPRND_MASK_5_9 | OPRND_MASK_21_25\n+#define OPRND_MASK_8_9or21_25       OPRND_MASK_8_9 | OPRND_MASK_21_25\n+#define OPRND_MASK_8_9or16_25       OPRND_MASK_8_9 | OPRND_MASK_16_20 | OPRND_MASK_21_25\n #define OPRND_MASK_16_19or21_24     OPRND_MASK_16_19 | OPRND_MASK_21_24\n #define OPRND_MASK_16_20or21_25     OPRND_MASK_16_20 | OPRND_MASK_21_25\n #define OPRND_MASK_4or9_10or25      OPRND_MASK_4 | OPRND_MASK_9_10 | OPRND_MASK_25\n #define OPRND_MASK_4_7or16_24       OPRND_MASK_4_7 | OPRND_MASK_16_20 | OPRND_MASK_21_24\n+#define OPRND_MASK_4_6or20          OPRND_MASK_4_6 | OPRND_MASK_20\n+#define OPRND_MASK_5_7or20          OPRND_MASK_5_7 | OPRND_MASK_20\n+#define OPRND_MASK_4_5or20or25      OPRND_MASK_4 | OPRND_MASK_5 | OPRND_MASK_20 | OPRND_MASK_25\n+#define OPRND_MASK_4_6or20or25      OPRND_MASK_4_6 | OPRND_MASK_20 | OPRND_MASK_25\n+#define OPRND_MASK_4_7or20or25      OPRND_MASK_4_7 | OPRND_MASK_20 | OPRND_MASK_25\n+#define OPRND_MASK_6_9or17_24       OPRND_MASK_6_9 | OPRND_MASK_17_24\n+#define OPRND_MASK_6_7or20          OPRND_MASK_6_7 | OPRND_MASK_20\n+#define OPRND_MASK_6or20            OPRND_MASK_6 | OPRND_MASK_20\n+#define OPRND_MASK_7or20            OPRND_MASK_7 | OPRND_MASK_20\n+#define OPRND_MASK_5or8_9or16_25    OPRND_MASK_5 | OPRND_MASK_8_9or16_25\n+#define OPRND_MASK_5or8_9or20_25    OPRND_MASK_5 | OPRND_MASK_8_9 | OPRND_MASK_20_25\n \n #define OPERAND_INFO(mask, type, shift) \\\n   {OPRND_MASK_##mask, OPRND_TYPE_##type, shift}\n@@ -8092,6 +8131,2005 @@ const struct csky_opcode csky_v2_opcodes[] =\n \t\t\t(21_24, VREG, OPRND_SHIFT_0_BIT)),\n \t  CSKY_ISA_VDSP),\n \n+#define OPRND_SHIFT0(mask, type) (mask, type, OPRND_SHIFT_0_BIT)\n+#define OPRND_SHIFT1(mask, type) (mask, type, OPRND_SHIFT_1_BIT)\n+#define OPRND_SHIFT2(mask, type) (mask, type, OPRND_SHIFT_2_BIT)\n+#define OPRND_SHIFT3(mask, type) (mask, type, OPRND_SHIFT_3_BIT)\n+#define OPRND_SHIFT4(mask, type) (mask, type, OPRND_SHIFT_4_BIT)\n+\n+/* The followings are 860 floating instructions.  */\n+    OP32 (\"fadd.16\",\n+\t  OPCODE_INFO3 (0xf400c800,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"faddh\",\n+\t  OPCODE_INFO3 (0xf400c800,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsub.16\",\n+\t  OPCODE_INFO3 (0xf400c820,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsubh\",\n+\t  OPCODE_INFO3 (0xf400c820,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmov.16\",\n+\t  OPCODE_INFO2 (0xf400c880,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmovh\",\n+\t  OPCODE_INFO2 (0xf400c880,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fabs.16\",\n+\t  OPCODE_INFO2 (0xf400c8c0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fabsh\",\n+\t  OPCODE_INFO2 (0xf400c8c0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fneg.16\",\n+\t  OPCODE_INFO2 (0xf400c8e0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnegh\",\n+\t  OPCODE_INFO2 (0xf400c8e0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmphsz.16\",\n+\t  OPCODE_INFO1 (0xf400c900,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpzhsh\",\n+\t  OPCODE_INFO1 (0xf400c900,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpltz.16\",\n+\t  OPCODE_INFO1 (0xf400c920,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpzlth\",\n+\t  OPCODE_INFO1 (0xf400c920,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpnez.16\",\n+\t  OPCODE_INFO1 (0xf400c940,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpzneh\",\n+\t  OPCODE_INFO1 (0xf400c940,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpuoz.16\",\n+\t  OPCODE_INFO1 (0xf400c960,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpzuoh\",\n+\t  OPCODE_INFO1 (0xf400c960,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmphs.16\",\n+\t  OPCODE_INFO2 (0xf400c980,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmphsh\",\n+\t  OPCODE_INFO2 (0xf400c980,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmplt.16\",\n+\t  OPCODE_INFO2 (0xf400c9a0,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpne.16\",\n+\t  OPCODE_INFO2 (0xf400c9c0,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpneh\",\n+\t  OPCODE_INFO2 (0xf400c9c0,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpuo.16\",\n+\t  OPCODE_INFO2 (0xf400c9e0,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpuoh\",\n+\t  OPCODE_INFO2 (0xf400c9e0,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmaxnm.16\",\n+\t  OPCODE_INFO3 (0xf400cd00,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fminnm.16\",\n+\t  OPCODE_INFO3 (0xf400cd20,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmphz.16\",\n+\t  OPCODE_INFO1 (0xf400cd40,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmplsz.16\",\n+\t  OPCODE_INFO1 (0xf400cd60,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmul.16\",\n+\t  OPCODE_INFO3 (0xf400ca00,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmulh\",\n+\t  OPCODE_INFO3 (0xf400ca00,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmul.16\",\n+\t  OPCODE_INFO3 (0xf400ca20,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmulh\",\n+\t  OPCODE_INFO3 (0xf400ca20,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmula.16\",\n+\t  OPCODE_INFO3 (0xf400ca80,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmach\",\n+\t  OPCODE_INFO3 (0xf400ca80,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmuls.16\",\n+\t  OPCODE_INFO3 (0xf400caa0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmsch\",\n+\t  OPCODE_INFO3 (0xf400caa0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmuls.16\",\n+\t  OPCODE_INFO3 (0xf400cac0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmach\",\n+\t  OPCODE_INFO3 (0xf400cac0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmula.16\",\n+\t  OPCODE_INFO3 (0xf400cae0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmsch\",\n+\t  OPCODE_INFO3 (0xf400cae0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"ffmula.16\",\n+\t  OPCODE_INFO3 (0xf400ce00,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"ffmuls.16\",\n+\t  OPCODE_INFO3 (0xf400ce20,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"ffnmula.16\",\n+\t  OPCODE_INFO3 (0xf400ce40,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"ffnmuls.16\",\n+\t  OPCODE_INFO3 (0xf400ce60,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fdivh\",\n+\t  OPCODE_INFO3 (0xf400cb00,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fdiv.16\",\n+\t  OPCODE_INFO3 (0xf400cb00,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"freciph\",\n+\t  OPCODE_INFO2 (0xf400cb20,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"frecip.16\",\n+\t  OPCODE_INFO2 (0xf400cb20,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsqrt.16\",\n+\t  OPCODE_INFO2 (0xf400cb40,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsqrth\",\n+\t  OPCODE_INFO2 (0xf400cb40,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsel.16\",\n+\t  OPCODE_INFO3 (0xf400cf20,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+  /* Single floating.  */\n+    OP32 (\"fadd.32\",\n+\t  OPCODE_INFO3 (0xf4000000,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fadds\",\n+\t  OPCODE_INFO3 (0xf4000000,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsub.32\",\n+\t  OPCODE_INFO3 (0xf4000020,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsubs\",\n+\t  OPCODE_INFO3 (0xf4000020,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmov.32\",\n+\t  OPCODE_INFO2 (0xf4000080,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmovs\",\n+\t  OPCODE_INFO2 (0xf4000080,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fabs.32\",\n+\t  OPCODE_INFO2 (0xf40000c0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fabss\",\n+\t  OPCODE_INFO2 (0xf40000c0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fneg.32\",\n+\t  OPCODE_INFO2 (0xf40000e0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnegs\",\n+\t  OPCODE_INFO2 (0xf40000e0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmphsz.32\",\n+\t  OPCODE_INFO1 (0xf4000100,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpzhss\",\n+\t  OPCODE_INFO1 (0xf4000100,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpltz.32\",\n+\t  OPCODE_INFO1 (0xf4000120,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpzlts\",\n+\t  OPCODE_INFO1 (0xf4000120,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpnez.32\",\n+\t  OPCODE_INFO1 (0xf4000140,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpznes\",\n+\t  OPCODE_INFO1 (0xf4000140,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpuoz.32\",\n+\t  OPCODE_INFO1 (0xf4000160,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpzuos\",\n+\t  OPCODE_INFO1 (0xf4000160,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmphs.32\",\n+\t  OPCODE_INFO2 (0xf4000180,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmphss\",\n+\t  OPCODE_INFO2 (0xf4000180,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmplt.32\",\n+\t  OPCODE_INFO2 (0xf40001a0,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmplts\",\n+\t  OPCODE_INFO2 (0xf40001a0,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpne.32\",\n+\t  OPCODE_INFO2 (0xf40001c0,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpnes\",\n+\t  OPCODE_INFO2 (0xf40001c0,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpuo.32\",\n+\t  OPCODE_INFO2 (0xf40001e0,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpuos\",\n+\t  OPCODE_INFO2 (0xf40001e0,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmaxnm.32\",\n+\t  OPCODE_INFO3 (0xf4000500,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fminnm.32\",\n+\t  OPCODE_INFO3 (0xf4000520,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmphz.32\",\n+\t  OPCODE_INFO1 (0xf4000540,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmplsz.32\",\n+\t  OPCODE_INFO1 (0xf4000560,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmul.32\",\n+\t  OPCODE_INFO3 (0xf4000200,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmuls\",\n+\t  OPCODE_INFO3 (0xf4000200,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmul.32\",\n+\t  OPCODE_INFO3 (0xf4000220,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmuls\",\n+\t  OPCODE_INFO3 (0xf4000220,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmula.32\",\n+\t  OPCODE_INFO3 (0xf4000280,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmacs\",\n+\t  OPCODE_INFO3 (0xf4000280,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmuls.32\",\n+\t  OPCODE_INFO3 (0xf40002a0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmscs\",\n+\t  OPCODE_INFO3 (0xf40002a0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmuls.32\",\n+\t  OPCODE_INFO3 (0xf40002c0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmacs\",\n+\t  OPCODE_INFO3 (0xf40002c0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmula.32\",\n+\t  OPCODE_INFO3 (0xf40002e0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmscs\",\n+\t  OPCODE_INFO3 (0xf40002e0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"ffmula.32\",\n+\t  OPCODE_INFO3 (0xf4000600,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"ffmuls.32\",\n+\t  OPCODE_INFO3 (0xf4000620,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"ffnmula.32\",\n+\t  OPCODE_INFO3 (0xf4000640,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"ffnmuls.32\",\n+\t  OPCODE_INFO3 (0xf4000660,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fdiv.32\",\n+\t  OPCODE_INFO3 (0xf4000300,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fdivs\",\n+\t  OPCODE_INFO3 (0xf4000300,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"frecip.32\",\n+\t  OPCODE_INFO2 (0xf4000320,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"frecips\",\n+\t  OPCODE_INFO2 (0xf4000320,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsqrt.32\",\n+\t  OPCODE_INFO2 (0xf4000340,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsqrts\",\n+\t  OPCODE_INFO2 (0xf4000340,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsel.32\",\n+\t  OPCODE_INFO3 (0xf4000720,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+  /* Double floating.  */\n+    OP32 (\"fadd.64\",\n+\t  OPCODE_INFO3 (0xf4000800,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"faddd\",\n+\t  OPCODE_INFO3 (0xf4000800,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsub.64\",\n+\t  OPCODE_INFO3 (0xf4000820,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsubd\",\n+\t  OPCODE_INFO3 (0xf4000820,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmov.64\",\n+\t  OPCODE_INFO2 (0xf4000880,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmovd\",\n+\t  OPCODE_INFO2 (0xf4000880,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmovx.32\",\n+\t  OPCODE_INFO2 (0xf40008a0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fabs.64\",\n+\t  OPCODE_INFO2 (0xf40008c0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fabsd\",\n+\t  OPCODE_INFO2 (0xf40008c0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fneg.64\",\n+\t  OPCODE_INFO2 (0xf40008e0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnegd\",\n+\t  OPCODE_INFO2 (0xf40008e0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmphsz.64\",\n+\t  OPCODE_INFO1 (0xf4000900,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpzhsd\",\n+\t  OPCODE_INFO1 (0xf4000900,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpltz.64\",\n+\t  OPCODE_INFO1 (0xf4000920,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpzltd\",\n+\t  OPCODE_INFO1 (0xf4000920,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpnez.64\",\n+\t  OPCODE_INFO1 (0xf4000940,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpzned\",\n+\t  OPCODE_INFO1 (0xf4000940,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpuoz.64\",\n+\t  OPCODE_INFO1 (0xf4000960,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpzuod\",\n+\t  OPCODE_INFO1 (0xf4000960,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmphs.64\",\n+\t  OPCODE_INFO2 (0xf4000980,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmphsd\",\n+\t  OPCODE_INFO2 (0xf4000980,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmplt.64\",\n+\t  OPCODE_INFO2 (0xf40009a0,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpltd\",\n+\t  OPCODE_INFO2 (0xf40009a0,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpne.64\",\n+\t  OPCODE_INFO2 (0xf40009c0,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpned\",\n+\t  OPCODE_INFO2 (0xf40009c0,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpuo.64\",\n+\t  OPCODE_INFO2 (0xf40009e0,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmpuod\",\n+\t  OPCODE_INFO2 (0xf40009e0,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmaxnm.64\",\n+\t  OPCODE_INFO3 (0xf4000d00,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fminnm.64\",\n+\t  OPCODE_INFO3 (0xf4000d20,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmphz.64\",\n+\t  OPCODE_INFO1 (0xf4000d40,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fcmplsz.64\",\n+\t  OPCODE_INFO1 (0xf4000d60,\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmul.64\",\n+\t  OPCODE_INFO3 (0xf4000a00,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmuld\",\n+\t  OPCODE_INFO3 (0xf4000a00,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmul.64\",\n+\t  OPCODE_INFO3 (0xf4000a20,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmuld\",\n+\t  OPCODE_INFO3 (0xf4000a20,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmula.64\",\n+\t  OPCODE_INFO3 (0xf4000a80,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmacd\",\n+\t  OPCODE_INFO3 (0xf4000a80,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmuls.64\",\n+\t  OPCODE_INFO3 (0xf4000aa0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmscd\",\n+\t  OPCODE_INFO3 (0xf4000aa0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmuls.64\",\n+\t  OPCODE_INFO3 (0xf4000ac0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmacd\",\n+\t  OPCODE_INFO3 (0xf4000ac0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmula.64\",\n+\t  OPCODE_INFO3 (0xf4000ae0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmscd\",\n+\t  OPCODE_INFO3 (0xf4000ae0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"ffmula.64\",\n+\t  OPCODE_INFO3 (0xf4000e00,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"ffmuls.64\",\n+\t  OPCODE_INFO3 (0xf4000e20,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"ffnmula.64\",\n+\t  OPCODE_INFO3 (0xf4000e40,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"ffnmuls.64\",\n+\t  OPCODE_INFO3 (0xf4000e60,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fdiv.64\",\n+\t  OPCODE_INFO3 (0xf4000b00,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fdivd\",\n+\t  OPCODE_INFO3 (0xf4000b00,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"frecip.64\",\n+\t  OPCODE_INFO2 (0xf4000b20,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"frecipd\",\n+\t  OPCODE_INFO2 (0xf4000b20,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsqrt.64\",\n+\t  OPCODE_INFO2 (0xf4000b40,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsqrtd\",\n+\t  OPCODE_INFO2 (0xf4000b40,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fins.32\",\n+\t  OPCODE_INFO2 (0xf4000360,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsel.64\",\n+\t  OPCODE_INFO3 (0xf4000f20,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+  /* SIMD floating.  */\n+    OP32 (\"fadd.f32\",\n+\t  OPCODE_INFO3 (0xf4001000,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"faddm\",\n+\t  OPCODE_INFO3 (0xf4001000,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsub.f32\",\n+\t  OPCODE_INFO3 (0xf4001020,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsubm\",\n+\t  OPCODE_INFO3 (0xf4001020,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmov.f32\",\n+\t  OPCODE_INFO2 (0xf4001080,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmovm\",\n+\t  OPCODE_INFO2 (0xf4001080,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fabs.f32\",\n+\t  OPCODE_INFO2 (0xf40010c0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fabsm\",\n+\t  OPCODE_INFO2 (0xf40010c0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fneg.f32\",\n+\t  OPCODE_INFO2 (0xf40010e0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnegm\",\n+\t  OPCODE_INFO2 (0xf40010e0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmul.f32\",\n+\t  OPCODE_INFO3 (0xf4001200,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmulm\",\n+\t  OPCODE_INFO3 (0xf4001200,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmula.f32\",\n+\t  OPCODE_INFO3 (0xf4001280,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmuls.f32\",\n+\t  OPCODE_INFO3 (0xf40012c0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fnmacm\",\n+\t  OPCODE_INFO3 (0xf40012c0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG),\n+\t\t\tOPRND_SHIFT0 (21_25, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+  /* floating formate.  */\n+    OP32 (\"fftoi.f32.s32.rn\",\n+\t  OPCODE_INFO2 (0xf4001800,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fstosi.rn\",\n+\t  OPCODE_INFO2 (0xf4001800,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f32.s32.rz\",\n+\t  OPCODE_INFO2 (0xf4001820,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fstosi.rz\",\n+\t  OPCODE_INFO2 (0xf4001820,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f32.s32.rpi\",\n+\t  OPCODE_INFO2 (0xf4001840,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fstosi.rpi\",\n+\t  OPCODE_INFO2 (0xf4001840,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f32.s32.rni\",\n+\t  OPCODE_INFO2 (0xf4001860,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fstosi.rni\",\n+\t  OPCODE_INFO2 (0xf4001860,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f32.u32.rn\",\n+\t  OPCODE_INFO2 (0xf4001880,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fstoui.rn\",\n+\t  OPCODE_INFO2 (0xf4001880,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f32.u32.rz\",\n+\t  OPCODE_INFO2 (0xf40018a0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fstoui.rz\",\n+\t  OPCODE_INFO2 (0xf40018a0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f32.u32.rpi\",\n+\t  OPCODE_INFO2 (0xf40018c0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fstoui.rpi\",\n+\t  OPCODE_INFO2 (0xf40018c0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f32.u32.rni\",\n+\t  OPCODE_INFO2 (0xf40018e0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fstoui.rni\",\n+\t  OPCODE_INFO2 (0xf40018e0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f64.s32.rn\",\n+\t  OPCODE_INFO2 (0xf4001900,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fdtosi.rn\",\n+\t  OPCODE_INFO2 (0xf4001900,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f64.s32.rz\",\n+\t  OPCODE_INFO2 (0xf4001920,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fdtosi.rz\",\n+\t  OPCODE_INFO2 (0xf4001920,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f64.s32.rpi\",\n+\t  OPCODE_INFO2 (0xf4001940,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fdtosi.rpi\",\n+\t  OPCODE_INFO2 (0xf4001940,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f64.s32.rni\",\n+\t  OPCODE_INFO2 (0xf4001960,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fdtosi.rni\",\n+\t  OPCODE_INFO2 (0xf4001960,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f64.u32.rn\",\n+\t  OPCODE_INFO2 (0xf4001980,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fdtoui.rn\",\n+\t  OPCODE_INFO2 (0xf4001980,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f64.u32.rz\",\n+\t  OPCODE_INFO2 (0xf40019a0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fdtoui.rz\",\n+\t  OPCODE_INFO2 (0xf40019a0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f64.u32.rpi\",\n+\t  OPCODE_INFO2 (0xf40019c0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fdtoui.rpi\",\n+\t  OPCODE_INFO2 (0xf40019c0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f64.u32.rni\",\n+\t  OPCODE_INFO2 (0xf40019e0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fdtoui.rni\",\n+\t  OPCODE_INFO2 (0xf40019e0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f16.s32.rn\",\n+\t  OPCODE_INFO2 (0xf4001c00,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fhtosi.rn\",\n+\t  OPCODE_INFO2 (0xf4001c00,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f16.s32.rz\",\n+\t  OPCODE_INFO2 (0xf4001c20,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fhtosi.rz\",\n+\t  OPCODE_INFO2 (0xf4001c20,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f16.s32.rpi\",\n+\t  OPCODE_INFO2 (0xf4001c40,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fhtosi.rpi\",\n+\t  OPCODE_INFO2 (0xf4001c40,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f16.s32.rni\",\n+\t  OPCODE_INFO2 (0xf4001c60,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fhtosi.rni\",\n+\t  OPCODE_INFO2 (0xf4001c60,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f16.u32.rn\",\n+\t  OPCODE_INFO2 (0xf4001c80,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fhtoui.rn\",\n+\t  OPCODE_INFO2 (0xf4001c80,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f16.u32.rz\",\n+\t  OPCODE_INFO2 (0xf4001ca0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fhtoui.rz\",\n+\t  OPCODE_INFO2 (0xf4001ca0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f16.u32.rpi\",\n+\t  OPCODE_INFO2 (0xf4001cc0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fhtoui.rpi\",\n+\t  OPCODE_INFO2 (0xf4001cc0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f16.u32.rni\",\n+\t  OPCODE_INFO2 (0xf4001ce0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fhtoui.rni\",\n+\t  OPCODE_INFO2 (0xf4001ce0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fhtos\",\n+\t  OPCODE_INFO2 (0xf4001a40,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fhtos.f16\",\n+\t  OPCODE_INFO2 (0xf4001a40,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fstoh\",\n+\t  OPCODE_INFO2 (0xf4001a60,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fstoh.f32\",\n+\t  OPCODE_INFO2 (0xf4001a60,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fdtos\",\n+\t  OPCODE_INFO2 (0xf4001ac0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fdtos.f64\",\n+\t  OPCODE_INFO2 (0xf4001ac0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fstod\",\n+\t  OPCODE_INFO2 (0xf4001ae0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmfvrh\",\n+\t  OPCODE_INFO2 (0xf4001b00,\n+\t\t\tOPRND_SHIFT0 (0_4, AREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmfvr.32.1\",\n+\t  OPCODE_INFO2 (0xf4001b20,\n+\t\t\tOPRND_SHIFT0 (0_4, AREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmfvrl\",\n+\t  OPCODE_INFO2 (0xf4001b20,\n+\t\t\tOPRND_SHIFT0 (0_4, AREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmtvr.16\",\n+\t  OPCODE_INFO2 (0xf4001fa0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, AREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmfvr.16\",\n+\t  OPCODE_INFO2 (0xf4001f20,\n+\t\t\tOPRND_SHIFT0 (0_4, AREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmtvrh\",\n+\t  OPCODE_INFO2 (0xf4001b40,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, AREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmtvr.32.1\",\n+\t  OPCODE_INFO2 (0xf4001b60,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, AREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmtvrl\",\n+\t  OPCODE_INFO2 (0xf4001b60,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, AREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmtvr.64\",\n+\t  OPCODE_INFO3 (0xf4001f80,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, AREG),\n+\t\t\tOPRND_SHIFT0 (21_25, AREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmfvr.64\",\n+\t  OPCODE_INFO3 (0xf4001f00,\n+\t\t\tOPRND_SHIFT0 (0_4, AREG),\n+\t\t\tOPRND_SHIFT0 (21_25, AREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmtvr.32.2\",\n+\t  OPCODE_INFO3 (0xf4001fc0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, AREG),\n+\t\t\tOPRND_SHIFT0 (21_25, AREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fmfvr.32.2\",\n+\t  OPCODE_INFO3 (0xf4001f40,\n+\t\t\tOPRND_SHIFT0 (0_4, AREG),\n+\t\t\tOPRND_SHIFT0 (21_25, AREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    /* flsu.  */\n+    OP32 (\"fld.16\",\n+\t  SOPCODE_INFO2 (0xf4002300,\n+\t\t\t (0_3or25, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t BRACKET_OPRND ((16_20,\n+\t\t\t\t\t AREG,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t(4_7or21_24,\n+\t\t\t\t\t IMM_FLDST,\n+\t\t\t\t\t OPRND_SHIFT_1_BIT))),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fldh\",\n+\t  SOPCODE_INFO2 (0xf4002300,\n+\t\t\t (0_3or25, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t BRACKET_OPRND ((16_20,\n+\t\t\t\t\t AREG,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t(4_7or21_24,\n+\t\t\t\t\t IMM_FLDST,\n+\t\t\t\t\t OPRND_SHIFT_1_BIT))),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32_WITH_WORK (\"fst.16\",\n+\t\t    SOPCODE_INFO2 (0xf4002700,\n+\t\t\t\t   (0_3or25, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t\t   BRACKET_OPRND ((16_20,\n+\t\t\t\t\t\t   AREG,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t\t  (4_7or21_24,\n+\t\t\t\t\t\t   IMM_FLDST,\n+\t\t\t\t\t\t   OPRND_SHIFT_1_BIT))),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32_WITH_WORK (\"fsth\",\n+\t\t    SOPCODE_INFO2 (0xf4002700,\n+\t\t\t\t   (0_3or25, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t\t   BRACKET_OPRND ((16_20,\n+\t\t\t\t\t\t   AREG,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t\t  (4_7or21_24,\n+\t\t\t\t\t\t   IMM_FLDST,\n+\t\t\t\t\t\t   OPRND_SHIFT_1_BIT))),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32 (\"fldr16\",\n+\t  SOPCODE_INFO2 (0xf4002b00,\n+\t\t\t (0_4, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t BRACKET_OPRND ((16_20,\n+\t\t\t\t\t AREG,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t(5_6or21_25,\n+\t\t\t\t\t AREG_WITH_LSHIFT_FPU,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT))),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fldrh\",\n+\t  SOPCODE_INFO2 (0xf4002b00,\n+\t\t\t (0_4, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t BRACKET_OPRND ((16_20,\n+\t\t\t\t\t AREG,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t(5_6or21_25,\n+\t\t\t\t\t AREG_WITH_LSHIFT_FPU,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT))),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32_WITH_WORK (\"fstr.16\",\n+\t\t    SOPCODE_INFO2 (0xf4002f00,\n+\t\t\t\t   (0_4, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t\t   BRACKET_OPRND ((16_20,\n+\t\t\t\t\t\t   AREG,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t\t  (5_6or21_25,\n+\t\t\t\t\t\t   AREG_WITH_LSHIFT_FPU,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT))),\n+\t  CSKY_ISA_FLOAT_7E60,\n+\t  float_work_fpuv3_fstore),\n+    OP32_WITH_WORK (\"fstrh\",\n+\t\t    SOPCODE_INFO2 (0xf4002f00,\n+\t\t\t\t   (0_4, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t\t   BRACKET_OPRND ((16_20,\n+\t\t\t\t\t\t   AREG,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t\t  (5_6or21_25,\n+\t\t\t\t\t\t   AREG_WITH_LSHIFT_FPU,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT))),\n+\t  CSKY_ISA_FLOAT_7E60,\n+\t  float_work_fpuv3_fstore),\n+    OP32 (\"fldm.16\",\n+\t  OPCODE_INFO2 (0xf4003300,\n+\t\t\t(0_4or21_24, FREGLIST_DASH, OPRND_SHIFT_0_BIT),\n+\t\t\t(16_20, AREG_WITH_BRACKET,OPRND_SHIFT_0_BIT)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fldmh\",\n+\t  OPCODE_INFO2 (0xf4003300,\n+\t\t\t(0_4or21_24, FREGLIST_DASH, OPRND_SHIFT_0_BIT),\n+\t\t\t(16_20, AREG_WITH_BRACKET,OPRND_SHIFT_0_BIT)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32_WITH_WORK (\"fstm.16\",\n+\t\t    OPCODE_INFO2 (0xf4003700,\n+\t\t\t\t  (0_4or21_24,\n+\t\t\t\t   FREGLIST_DASH,\n+\t\t\t\t   OPRND_SHIFT_0_BIT),\n+\t\t\t\t  (16_20,\n+\t\t\t\t   AREG_WITH_BRACKET,\n+\t\t\t\t   OPRND_SHIFT_0_BIT)),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32_WITH_WORK (\"fstmh\",\n+\t\t    OPCODE_INFO2 (0xf4003700,\n+\t\t\t\t  (0_4or21_24,\n+\t\t\t\t   FREGLIST_DASH,\n+\t\t\t\t   OPRND_SHIFT_0_BIT),\n+\t\t\t\t  (16_20,\n+\t\t\t\t   AREG_WITH_BRACKET,\n+\t\t\t\t   OPRND_SHIFT_0_BIT)),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32 (\"fldmu.16\",\n+\t  OPCODE_INFO2 (0xf4003380,\n+\t\t\tOPRND_SHIFT0 (0_4or21_24, FREGLIST_DASH),\n+\t\t\tOPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fldmu.h\",\n+\t  OPCODE_INFO2 (0xf4003380,\n+\t\t\tOPRND_SHIFT0 (0_4or21_24, FREGLIST_DASH),\n+\t\t\tOPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32_WITH_WORK (\"fstmu.16\",\n+\t\t    OPCODE_INFO2 (0xf4003780,\n+\t\t\t\t  OPRND_SHIFT0 (0_4or21_24, FREGLIST_DASH),\n+\t\t\t\t  OPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32_WITH_WORK (\"fstmu.h\",\n+\t\t    OPCODE_INFO2 (0xf4003780,\n+\t\t\t\t  OPRND_SHIFT0 (0_4or21_24, FREGLIST_DASH),\n+\t\t\t\t  OPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t\t   CSKY_ISA_FLOAT_7E60,\n+\t\t   float_work_fpuv3_fstore),\n+    OP32 (\"fld.32\",\n+\t  SOPCODE_INFO2 (0xf4002000,\n+\t\t\t (0_3or25, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t BRACKET_OPRND ((16_20,\n+\t\t\t\t\t AREG,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t(4_7or21_24,\n+\t\t\t\t\t IMM_FLDST,\n+\t\t\t\t\t OPRND_SHIFT_2_BIT))),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"flds\",\n+\t  SOPCODE_INFO2 (0xf4002000,\n+\t\t\t (0_3or25, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t BRACKET_OPRND ((16_20,\n+\t\t\t\t\t AREG,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t(4_7or21_24,\n+\t\t\t\t\t IMM_FLDST,\n+\t\t\t\t\t OPRND_SHIFT_2_BIT))),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32_WITH_WORK (\"fst.32\",\n+\t\t    SOPCODE_INFO2 (0xf4002400,\n+\t\t\t\t   (0_3or25, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t\t   BRACKET_OPRND ((16_20,\n+\t\t\t\t\t\t   AREG,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t\t  (4_7or21_24,\n+\t\t\t\t\t\t   IMM_FLDST,\n+\t\t\t\t\t\t   OPRND_SHIFT_2_BIT))),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32_WITH_WORK (\"fsts\",\n+\t\t    SOPCODE_INFO2 (0xf4002400,\n+\t\t\t\t   (0_3or25, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t\t   BRACKET_OPRND ((16_20,\n+\t\t\t\t\t\t   AREG,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t\t  (4_7or21_24,\n+\t\t\t\t\t\t   IMM_FLDST,\n+\t\t\t\t\t\t   OPRND_SHIFT_2_BIT))),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32 (\"fldr.32\",\n+\t  SOPCODE_INFO2 (0xf4002800,\n+\t\t\t (0_4, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t BRACKET_OPRND ((16_20,\n+\t\t\t\t\t AREG,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t(5_6or21_25,\n+\t\t\t\t\t AREG_WITH_LSHIFT_FPU,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT))),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fldrs\",\n+\t  SOPCODE_INFO2 (0xf4002800,\n+\t\t\t (0_4, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t BRACKET_OPRND ((16_20,\n+\t\t\t\t\t AREG,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t(5_6or21_25,\n+\t\t\t\t\t AREG_WITH_LSHIFT_FPU,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT))),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32_WITH_WORK (\"fstr.32\",\n+\t\t    SOPCODE_INFO2 (0xf4002c00,\n+\t\t\t\t   (0_4, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t\t   BRACKET_OPRND ((16_20,\n+\t\t\t\t\t\t   AREG,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t\t  (5_6or21_25,\n+\t\t\t\t\t\t   AREG_WITH_LSHIFT_FPU,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT))),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32_WITH_WORK (\"fstrs\",\n+\t\t    SOPCODE_INFO2 (0xf4002c00,\n+\t\t\t\t   (0_4, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t\t   BRACKET_OPRND ((16_20,\n+\t\t\t\t\t\t   AREG,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t\t  (5_6or21_25,\n+\t\t\t\t\t\t   AREG_WITH_LSHIFT_FPU,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT))),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32 (\"fldm.32\",\n+\t  OPCODE_INFO2 (0xf4003000,\n+\t\t\tOPRND_SHIFT0 (0_4or21_25, FREGLIST_DASH),\n+\t\t\tOPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fldms\",\n+\t  OPCODE_INFO2 (0xf4003000,\n+\t\t\tOPRND_SHIFT0 (0_4or21_25, FREGLIST_DASH),\n+\t\t\tOPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32_WITH_WORK (\"fstm.32\",\n+\t\t    OPCODE_INFO2 (0xf4003400,\n+\t\t\t\t  OPRND_SHIFT0 (0_4or21_25, FREGLIST_DASH),\n+\t\t\t\t  OPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32_WITH_WORK (\"fstms\",\n+\t\t    OPCODE_INFO2 (0xf4003400,\n+\t\t\t\t  OPRND_SHIFT0 (0_4or21_25, FREGLIST_DASH),\n+\t\t\t\t  OPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32 (\"fldmu.32\",\n+\t  OPCODE_INFO2 (0xf4003080,\n+\t\t\tOPRND_SHIFT0 (0_4or21_25, FREGLIST_DASH),\n+\t\t\tOPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fldmu.s\",\n+\t  OPCODE_INFO2 (0xf4003080,\n+\t\t\tOPRND_SHIFT0 (0_4or21_25, FREGLIST_DASH),\n+\t\t\tOPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32_WITH_WORK (\"fstmu.32\",\n+\t\t    OPCODE_INFO2 (0xf4003480,\n+\t\t\t\t  OPRND_SHIFT0 (0_4or21_25, FREGLIST_DASH),\n+\t\t\t\t  OPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32_WITH_WORK (\"fstmu.s\",\n+\t\t    OPCODE_INFO2 (0xf4003480,\n+\t\t\t\t  OPRND_SHIFT0 (0_4or21_25, FREGLIST_DASH),\n+\t\t\t\t  OPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32 (\"fld.64\",\n+\t  SOPCODE_INFO2 (0xf4002100,\n+\t\t\t (0_3or25, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t BRACKET_OPRND ((16_20,\n+\t\t\t\t\t AREG,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t(4_7or21_24,\n+\t\t\t\t\t IMM_FLDST,\n+\t\t\t\t\t OPRND_SHIFT_2_BIT))),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fldd\",\n+\t  SOPCODE_INFO2 (0xf4002100,\n+\t\t\t (0_3or25, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t BRACKET_OPRND ((16_20,\n+\t\t\t\t\t AREG,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t(4_7or21_24,\n+\t\t\t\t\t IMM_FLDST,\n+\t\t\t\t\t OPRND_SHIFT_2_BIT))),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32_WITH_WORK (\"fst.64\",\n+\t\t    SOPCODE_INFO2 (0xf4002500,\n+\t\t\t\t   (0_3or25, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t\t   BRACKET_OPRND ((16_20,\n+\t\t\t\t\t\t   AREG,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t\t  (4_7or21_24,\n+\t\t\t\t\t\t   IMM_FLDST,\n+\t\t\t\t\t\t   OPRND_SHIFT_2_BIT))),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32_WITH_WORK (\"fstd\",\n+\t\t    SOPCODE_INFO2 (0xf4002500,\n+\t\t\t\t   (0_3or25, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t\t   BRACKET_OPRND ((16_20,\n+\t\t\t\t\t\t   AREG,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t\t  (4_7or21_24,\n+\t\t\t\t\t\t   IMM_FLDST,\n+\t\t\t\t\t\t   OPRND_SHIFT_2_BIT))),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32 (\"fldr.64\",\n+\t  SOPCODE_INFO2 (0xf4002900,\n+\t\t\t (0_4, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t BRACKET_OPRND ((16_20,\n+\t\t\t\t\t AREG,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t(5_6or21_25,\n+\t\t\t\t\t AREG_WITH_LSHIFT_FPU,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT))),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fldrd\",\n+\t  SOPCODE_INFO2 (0xf4002900,\n+\t\t\t (0_4, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t BRACKET_OPRND ((16_20,\n+\t\t\t\t\t AREG,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t(5_6or21_25,\n+\t\t\t\t\t AREG_WITH_LSHIFT_FPU,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT))),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32_WITH_WORK (\"fstr.64\",\n+\t\t    SOPCODE_INFO2 (0xf4002d00,\n+\t\t\t\t   (0_4, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t\t   BRACKET_OPRND ((16_20,\n+\t\t\t\t\t\t   AREG,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t\t  (5_6or21_25,\n+\t\t\t\t\t\t   AREG_WITH_LSHIFT_FPU,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT))),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32_WITH_WORK (\"fstrd\",\n+\t\t    SOPCODE_INFO2 (0xf4002d00,\n+\t\t\t\t   (0_4, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t\t   BRACKET_OPRND ((16_20,\n+\t\t\t\t\t\t   AREG,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t\t  (5_6or21_25,\n+\t\t\t\t\t\t   AREG_WITH_LSHIFT_FPU,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT))),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32 (\"fldm.64\",\n+\t  OPCODE_INFO2 (0xf4003100,\n+\t\t\tOPRND_SHIFT0 (0_4or21_25, FREGLIST_DASH),\n+\t\t\tOPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fldmd\",\n+\t  OPCODE_INFO2 (0xf4003100,\n+\t\t\tOPRND_SHIFT0 (0_4or21_25, FREGLIST_DASH),\n+\t\t\tOPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32_WITH_WORK (\"fstm.64\",\n+\t\t    OPCODE_INFO2 (0xf4003500,\n+\t\t\t\t  OPRND_SHIFT0 (0_4or21_25, FREGLIST_DASH),\n+\t\t\t\t  OPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32_WITH_WORK (\"fstmd\",\n+\t\t    OPCODE_INFO2 (0xf4003500,\n+\t\t\t\t  OPRND_SHIFT0 (0_4or21_25, FREGLIST_DASH),\n+\t\t\t\t  OPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32 (\"fldmu.64\",\n+\t  OPCODE_INFO2 (0xf4003180,\n+\t\t\tOPRND_SHIFT0 (0_4or21_25, FREGLIST_DASH),\n+\t\t\tOPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fldmu.d\",\n+\t  OPCODE_INFO2 (0xf4003180,\n+\t\t\tOPRND_SHIFT0 (0_4or21_25, FREGLIST_DASH),\n+\t\t\tOPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32_WITH_WORK (\"fstmu.64\",\n+\t\t    OPCODE_INFO2 (0xf4003580,\n+\t\t\t\t  OPRND_SHIFT0 (0_4or21_25, FREGLIST_DASH),\n+\t\t\t\t  OPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32_WITH_WORK (\"fstmu.d\",\n+\t\t    OPCODE_INFO2 (0xf4003580,\n+\t\t\t\t  OPRND_SHIFT0 (0_4or21_25, FREGLIST_DASH),\n+\t\t\t\t  OPRND_SHIFT0 (16_20, AREG_WITH_BRACKET)),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32 (\"fldrm\",\n+\t  SOPCODE_INFO2 (0xf4002a00,\n+\t\t\t (0_4, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t BRACKET_OPRND ((16_20,\n+\t\t\t\t\t AREG,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t(5_6or21_25,\n+\t\t\t\t\t AREG_WITH_LSHIFT_FPU,\n+\t\t\t\t\t OPRND_SHIFT_0_BIT))),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32_WITH_WORK (\"fstrm\",\n+\t\t    SOPCODE_INFO2 (0xf4002e00,\n+\t\t\t\t   (0_4, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t\t   BRACKET_OPRND ((16_20,\n+\t\t\t\t\t\t   AREG,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT),\n+\t\t\t\t\t\t  (5_6or21_25,\n+\t\t\t\t\t\t   AREG_WITH_LSHIFT_FPU,\n+\t\t\t\t\t\t   OPRND_SHIFT_0_BIT))),\n+\t  CSKY_ISA_FLOAT_7E60,\n+\t  float_work_fpuv3_fstore),\n+    OP32 (\"fldmm\",\n+\t  OPCODE_INFO2 (0xf4003200,\n+\t\t\t(0_4or21_24, FREGLIST_DASH, OPRND_SHIFT_0_BIT),\n+\t\t\t(16_20, AREG_WITH_BRACKET,OPRND_SHIFT_0_BIT)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32_WITH_WORK (\"fstmm\",\n+\t\t    OPCODE_INFO2 (0xf4003600,\n+\t\t\t\t  (0_4or21_24, FREGLIST_DASH, OPRND_SHIFT_0_BIT),\n+\t\t\t\t  (16_20, AREG_WITH_BRACKET,OPRND_SHIFT_0_BIT)),\n+\t\t    CSKY_ISA_FLOAT_7E60,\n+\t\t    float_work_fpuv3_fstore),\n+    OP32 (\"fftox.f16.u16\",\n+\t  OPCODE_INFO2 (0xf4004000,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftox.f16.s16\",\n+\t  OPCODE_INFO2 (0xf4004020,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftox.f16.u32\",\n+\t  OPCODE_INFO2 (0xf4004100,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftox.f16.s32\",\n+\t  OPCODE_INFO2 (0xf4004120,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftox.f32.u32\",\n+\t  OPCODE_INFO2 (0xf4004140,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftox.f32.s32\",\n+\t  OPCODE_INFO2 (0xf4004160,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftox.f64.u32\",\n+\t  OPCODE_INFO2 (0xf4004180,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftox.f64.s32\",\n+\t  OPCODE_INFO2 (0xf40041a0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fxtof.u16.f16\",\n+\t  OPCODE_INFO2 (0xf4004800,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fxtof.s16.f16\",\n+\t  OPCODE_INFO2 (0xf4004820,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fxtof.u32.f16\",\n+\t  OPCODE_INFO2 (0xf4004900,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fxtof.s32.f16\",\n+\t  OPCODE_INFO2 (0xf4004920,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fxtof.u32.f32\",\n+\t  OPCODE_INFO2 (0xf4004940,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fxtof.s32.f32\",\n+\t  OPCODE_INFO2 (0xf4004960,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fxtof.u32.f64\",\n+\t  OPCODE_INFO2 (0xf4004980,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fxtof.s32.f64\",\n+\t  OPCODE_INFO2 (0xf40049a0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f16.s16\",\n+\t  OPCODE_INFO2 (0xf4004220,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f16.u16\",\n+\t  OPCODE_INFO2 (0xf4004200,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f16.s32\",\n+\t  OPCODE_INFO2 (0xf4004320,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f16.u32\",\n+\t  OPCODE_INFO2 (0xf4004300,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f32.s32\",\n+\t  OPCODE_INFO2 (0xf4004360,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f32.u32\",\n+\t  OPCODE_INFO2 (0xf4004340,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f64.s32\",\n+\t  OPCODE_INFO2 (0xf40043a0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftoi.f64.u32\",\n+\t  OPCODE_INFO2 (0xf4004380,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fitof.s16.f16\",\n+\t  OPCODE_INFO2 (0xf4004a20,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fitof.u16.f16\",\n+\t  OPCODE_INFO2 (0xf4004a00,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fitof.s32.f16\",\n+\t  OPCODE_INFO2 (0xf4004b20,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fitof.u32.f16\",\n+\t  OPCODE_INFO2 (0xf4004b00,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fitof.s32.f32\",\n+\t  OPCODE_INFO2 (0xf4004b60,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsitos\",\n+\t  OPCODE_INFO2 (0xf4004b60,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fitof.u32.f32\",\n+\t  OPCODE_INFO2 (0xf4004b40,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fuitos\",\n+\t  OPCODE_INFO2 (0xf4004b40,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fitof.s32.f64\",\n+\t  OPCODE_INFO2 (0xf4004ba0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fsitod\",\n+\t  OPCODE_INFO2 (0xf4004ba0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fitof.u32.f64\",\n+\t  OPCODE_INFO2 (0xf4004b80,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fuitod\",\n+\t  OPCODE_INFO2 (0xf4004b80,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftofi.f16.rn\",\n+\t  OPCODE_INFO2 (0xf4004400,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftofi.f16.rz\",\n+\t  OPCODE_INFO2 (0xf4004420,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftofi.f16.rpi\",\n+\t  OPCODE_INFO2 (0xf4004440,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftofi.f16.rni\",\n+\t  OPCODE_INFO2 (0xf4004460,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftofi.f32.rn\",\n+\t  OPCODE_INFO2 (0xf4004480,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftofi.f32.rz\",\n+\t  OPCODE_INFO2 (0xf40044a0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftofi.f32.rpi\",\n+\t  OPCODE_INFO2 (0xf40044c0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftofi.f32.rni\",\n+\t  OPCODE_INFO2 (0xf40044e0,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftofi.f64.rn\",\n+\t  OPCODE_INFO2 (0xf4004500,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftofi.f64.rz\",\n+\t  OPCODE_INFO2 (0xf4004520,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftofi.f64.rpi\",\n+\t  OPCODE_INFO2 (0xf4004540,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"fftofi.f64.rni\",\n+\t  OPCODE_INFO2 (0xf4004560,\n+\t\t\tOPRND_SHIFT0 (0_4, FREG),\n+\t\t\tOPRND_SHIFT0 (16_20, FREG)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    DOP32_WITH_WORK (\"fmovi.16\",\n+\t\t     OPCODE_INFO2 (0xf400e400,\n+\t\t\t\t   OPRND_SHIFT0 (0_4, FREG),\n+\t\t\t\t   OPRND_SHIFT0 (5or8_9or16_25, HFLOAT_FMOVI)),\n+\t\t     OPCODE_INFO3 (0xf400e400,\n+\t\t\t\t   OPRND_SHIFT0 (0_4, FREG),\n+\t\t\t\t   OPRND_SHIFT0 (5or8_9or20_25, IMM9b),\n+\t\t\t\t   OPRND_SHIFT0 (16_19, IMM4b)),\n+\t\t     CSKY_ISA_FLOAT_7E60,\n+\t\t     float_work_fpuv3_fmovi),\n+    DOP32_WITH_WORK (\"fmovi.32\",\n+\t\t     OPCODE_INFO2 (0xf400e440,\n+\t\t\t\t   OPRND_SHIFT0 (0_4, FREG),\n+\t\t\t\t   OPRND_SHIFT0 (5or8_9or16_25, SFLOAT_FMOVI)),\n+\t\t     OPCODE_INFO3 (0xf400e440,\n+\t\t\t\t   OPRND_SHIFT0 (0_4, FREG),\n+\t\t\t\t   OPRND_SHIFT0 (5or8_9or20_25, IMM9b),\n+\t\t\t\t   OPRND_SHIFT0 (16_19, IMM4b)),\n+\t\t     CSKY_ISA_FLOAT_7E60,\n+\t\t     float_work_fpuv3_fmovi),\n+    DOP32_WITH_WORK (\"fmovi.64\",\n+\t\t     OPCODE_INFO2 (0xf400e480,\n+\t\t\t\t   OPRND_SHIFT0 (0_4, FREG),\n+\t\t\t\t   OPRND_SHIFT0 (5or8_9or16_25, DFLOAT_FMOVI)),\n+\t\t     OPCODE_INFO3 (0xf400e480,\n+\t\t\t\t   OPRND_SHIFT0 (0_4, FREG),\n+\t\t\t\t   OPRND_SHIFT0 (5or8_9or20_25, IMM9b),\n+\t\t\t\t   OPRND_SHIFT0 (16_19, IMM4b)),\n+\t\t     CSKY_ISA_FLOAT_7E60,\n+\t\t     float_work_fpuv3_fmovi),\n+#undef _RELOC32\n+#define _RELOC32 BFD_RELOC_CKCORE_PCREL_FLRW_IMM8BY4\n+    OP32 (\"flrw.32\",\n+\t  OPCODE_INFO2 (0xf4003800,\n+\t\t\t(0_3or25, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t(4_7or21_24, FCONSTANT, OPRND_SHIFT_2_BIT)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"flrws\",\n+\t  OPCODE_INFO2 (0xf4003800,\n+\t\t\t(0_3or25, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t(4_7or21_24, FCONSTANT, OPRND_SHIFT_2_BIT)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"flrw.64\",\n+\t  OPCODE_INFO2 (0xf4003900,\n+\t\t\t(0_3or25, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t(4_7or21_24, FCONSTANT, OPRND_SHIFT_2_BIT)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+    OP32 (\"flrwd\",\n+\t  OPCODE_INFO2 (0xf4003900,\n+\t\t\t(0_3or25, FREG, OPRND_SHIFT_0_BIT),\n+\t\t\t(4_7or21_24, FCONSTANT, OPRND_SHIFT_2_BIT)),\n+\t  CSKY_ISA_FLOAT_7E60),\n+#undef _RELOC32\n+#define _RELOC32 0\n+\n     /* The following are aliases for other instructions.  */\n     /* setc -> cmphs r0, r0  */\n     OP16 (\"setc\",\n@@ -8239,5 +10277,6 @@ const struct csky_opcode csky_v2_opcodes[] =\n \t   OPCODE_INFO1 (0xc4007c40,\n \t\t\t (0_4or16_20, DUP_AREG, OPRND_SHIFT_0_BIT)),\n \t   CSKYV2_ISA_1E2),\n+\n     {NULL, 0, {}, {}, 0, 0, 0, 0, 0, NULL}\n   };"
    }
  ]
}