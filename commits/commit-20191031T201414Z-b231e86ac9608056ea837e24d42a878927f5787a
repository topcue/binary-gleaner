{
  "sha": "b231e86ac9608056ea837e24d42a878927f5787a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjIzMWU4NmFjOTYwODA1NmVhODM3ZTI0ZDQyYTg3ODkyN2Y1Nzg3YQ==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-10-31T19:41:19Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-10-31T20:14:14Z"
    },
    "message": "Use strerror_r in safe_strerror if available\n\nAlso stores the result in a thread-local static variable and\nchanges the return value to a const char*.\n\nThis is already important because Guile creates threads and\nPython can create threads, but with the patch series here:\nhttps://gnutoolchain-gerrit.osci.io/r/c/binutils-gdb/+/176\nGDB itself will create threads, too.\n\ngdb/ChangeLog:\n\n2019-10-31  Christian Biesinger  <cbiesinger@google.com>\n\n\t* configure: Regenerate.\n\t* configure.ac: Check for strerror_r.\n\t* gdbsupport/common-utils.h (safe_strerror): Change return value\n\tto const char * and document that this function is now threadsafe.\n\t* gdbsupport/posix-strerror.c (safe_strerror): Make buf\n\tthread_local and call strerror_r, if available.\n\t* utils.c (perror_string): Update.\n\t(print_sys_errmsg): Update.\n\nChange-Id: I81048fbaf148035c221c528727f7efe58ba528eb",
    "tree": {
      "sha": "29b98002638e43c04d5a02a23501ea717932c750",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/29b98002638e43c04d5a02a23501ea717932c750"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b231e86ac9608056ea837e24d42a878927f5787a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b231e86ac9608056ea837e24d42a878927f5787a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b231e86ac9608056ea837e24d42a878927f5787a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b231e86ac9608056ea837e24d42a878927f5787a/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a2726d4ff80168a8134c68cb798e3f5f537b0eba",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a2726d4ff80168a8134c68cb798e3f5f537b0eba",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a2726d4ff80168a8134c68cb798e3f5f537b0eba"
    }
  ],
  "stats": {
    "total": 50,
    "additions": 33,
    "deletions": 17
  },
  "files": [
    {
      "sha": "b7a7d98c8a2e956090207d24981a22ed085293c2",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b231e86ac9608056ea837e24d42a878927f5787a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b231e86ac9608056ea837e24d42a878927f5787a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b231e86ac9608056ea837e24d42a878927f5787a",
      "patch": "@@ -1,3 +1,14 @@\n+2019-10-31  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* configure: Regenerate.\n+\t* configure.ac: Check for strerror_r.\n+\t* gdbsupport/common-utils.h (safe_strerror): Change return value\n+\tto const char * and document that this function is now threadsafe.\n+\t* gdbsupport/posix-strerror.c (safe_strerror): Make buf\n+\tthread_local and call strerror_r, if available.\n+\t* utils.c (perror_string): Update.\n+\t(print_sys_errmsg): Update.\n+\n 2019-10-31  Luis Machado  <luis.machado@linaro.org>\n \n \t* arm-tdep.c (arm_exidx_data_key): Use bfd_key instead of"
    },
    {
      "sha": "018cc4ba4357723c773d9b6f0a8a9222e46c354c",
      "filename": "gdb/configure",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b231e86ac9608056ea837e24d42a878927f5787a/gdb/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b231e86ac9608056ea837e24d42a878927f5787a/gdb/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure?ref=b231e86ac9608056ea837e24d42a878927f5787a",
      "patch": "@@ -13073,7 +13073,7 @@ for ac_func in getauxval getrusage getuid getgid \\\n \t\tsigaction sigsetmask socketpair \\\n \t\tttrace wborder wresize setlocale iconvlist libiconvlist btowc \\\n \t\tsetrlimit getrlimit posix_madvise waitpid \\\n-\t\tptrace64 sigaltstack setns use_default_colors\n+\t\tptrace64 sigaltstack setns use_default_colors strerror_r\n do :\n   as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\""
    },
    {
      "sha": "987507a17d7fca1093db0715f4672aa7ea6705f5",
      "filename": "gdb/configure.ac",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b231e86ac9608056ea837e24d42a878927f5787a/gdb/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b231e86ac9608056ea837e24d42a878927f5787a/gdb/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure.ac?ref=b231e86ac9608056ea837e24d42a878927f5787a",
      "patch": "@@ -1318,7 +1318,7 @@ AC_CHECK_FUNCS([getauxval getrusage getuid getgid \\\n \t\tsigaction sigsetmask socketpair \\\n \t\tttrace wborder wresize setlocale iconvlist libiconvlist btowc \\\n \t\tsetrlimit getrlimit posix_madvise waitpid \\\n-\t\tptrace64 sigaltstack setns use_default_colors])\n+\t\tptrace64 sigaltstack setns use_default_colors strerror_r])\n AM_LANGINFO_CODESET\n GDB_AC_COMMON\n "
    },
    {
      "sha": "89868fcf9e8eefb558dc062ac04eb6ee2478d3a4",
      "filename": "gdb/gdbsupport/common-utils.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b231e86ac9608056ea837e24d42a878927f5787a/gdb/gdbsupport/common-utils.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b231e86ac9608056ea837e24d42a878927f5787a/gdb/gdbsupport/common-utils.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbsupport/common-utils.h?ref=b231e86ac9608056ea837e24d42a878927f5787a",
      "patch": "@@ -108,9 +108,9 @@ std::string extract_string_maybe_quoted (const char **arg);\n \n /* The strerror() function can return NULL for errno values that are\n    out of range.  Provide a \"safe\" version that always returns a\n-   printable string.  */\n+   printable string.  This version is also thread-safe.  */\n \n-extern char *safe_strerror (int);\n+extern const char *safe_strerror (int);\n \n /* Return true if the start of STRING matches PATTERN, false otherwise.  */\n "
    },
    {
      "sha": "34420cf537766214bcf9db13282e20e1baeb4640",
      "filename": "gdb/gdbsupport/posix-strerror.c",
      "status": "modified",
      "additions": 15,
      "deletions": 5,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b231e86ac9608056ea837e24d42a878927f5787a/gdb/gdbsupport/posix-strerror.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b231e86ac9608056ea837e24d42a878927f5787a/gdb/gdbsupport/posix-strerror.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbsupport/posix-strerror.c?ref=b231e86ac9608056ea837e24d42a878927f5787a",
      "patch": "@@ -21,15 +21,25 @@\n \n /* Implementation of safe_strerror as defined in common-utils.h.  */\n \n-char *\n+const char *\n safe_strerror (int errnum)\n {\n-  char *msg;\n-\n+  static thread_local char buf[1024];\n+\n+  char *msg = nullptr;\n+#ifdef HAVE_STRERROR_R\n+#  if !__GLIBC__ || ((_POSIX_C_SOURCE >= 200112L) && !  _GNU_SOURCE)\n+  /* Glibc has two different, incompatible versions of strerror_r.  */\n+  if (strerror_r (errnum, buf, sizeof (buf)) == 0)\n+    msg = buf;\n+#  else\n+  msg = strerror_r (errnum, buf, sizeof (buf));\n+#  endif\n+#else\n   msg = strerror (errnum);\n-  if (msg == NULL)\n+#endif\n+  if (msg == nullptr)\n     {\n-      static char buf[32];\n \n       xsnprintf (buf, sizeof buf, \"(undocumented errno %d)\", errnum);\n       msg = buf;"
    },
    {
      "sha": "e06eeddeeff9b47c034b11a10e7ffa4bbc074ea9",
      "filename": "gdb/utils.c",
      "status": "modified",
      "additions": 3,
      "deletions": 8,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b231e86ac9608056ea837e24d42a878927f5787a/gdb/utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b231e86ac9608056ea837e24d42a878927f5787a/gdb/utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.c?ref=b231e86ac9608056ea837e24d42a878927f5787a",
      "patch": "@@ -582,9 +582,7 @@ add_internal_problem_command (struct internal_problem *problem)\n static std::string\n perror_string (const char *prefix)\n {\n-  char *err;\n-\n-  err = safe_strerror (errno);\n+  const char *err = safe_strerror (errno);\n   return std::string (prefix) + \": \" + err;\n }\n \n@@ -630,11 +628,8 @@ perror_warning_with_name (const char *string)\n void\n print_sys_errmsg (const char *string, int errcode)\n {\n-  char *err;\n-  char *combined;\n-\n-  err = safe_strerror (errcode);\n-  combined = (char *) alloca (strlen (err) + strlen (string) + 3);\n+  const char *err = safe_strerror (errcode);\n+  char *combined = (char *) alloca (strlen (err) + strlen (string) + 3);\n   strcpy (combined, string);\n   strcat (combined, \": \");\n   strcat (combined, err);"
    }
  ]
}