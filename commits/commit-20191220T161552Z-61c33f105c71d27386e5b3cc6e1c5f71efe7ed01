{
  "sha": "61c33f105c71d27386e5b3cc6e1c5f71efe7ed01",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjFjMzNmMTA1YzcxZDI3Mzg2ZTViM2NjNmUxYzVmNzFlZmU3ZWQwMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-11-13T00:26:50Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-20T16:15:52Z"
    },
    "message": "Change tui_source_window_base::set_contents to return bool\n\nThis changes tui_source_window_base::set_contents to return bool,\nrather than tui_status.  It also changes one implementation of\nset_contents to use early returns rather than a variable, which IMO\nmakes it easier to follow.\n\ngdb/ChangeLog\n2019-12-20  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-winsource.h (struct tui_source_window_base)\n\t<set_contents>: Return bool.\n\t* tui/tui-winsource.c\n\t(tui_source_window_base::update_source_window_as_is): Update.\n\t* tui/tui-source.h (struct tui_source_window) <set_contents>:\n\tReturn bool.\n\t* tui/tui-source.c (tui_source_window::set_contents): Return\n\tbool.  Simplify.\n\t* tui/tui-disasm.h (struct tui_disasm_window) <set_contents>:\n\tReturn bool.\n\t* tui/tui-disasm.c (tui_disasm_window::set_contents): Return\n\tbool.\n\nChange-Id: I8c5212400cd7aadf35760c22d5344cd3b9435674",
    "tree": {
      "sha": "3d61884a4c61df3cb404f931731d617fc4fe6060",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3d61884a4c61df3cb404f931731d617fc4fe6060"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/61c33f105c71d27386e5b3cc6e1c5f71efe7ed01",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/61c33f105c71d27386e5b3cc6e1c5f71efe7ed01",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/61c33f105c71d27386e5b3cc6e1c5f71efe7ed01",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/61c33f105c71d27386e5b3cc6e1c5f71efe7ed01/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "469b073133fa35b54ab4f1bc3dee42ccede84689",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/469b073133fa35b54ab4f1bc3dee42ccede84689",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/469b073133fa35b54ab4f1bc3dee42ccede84689"
    }
  ],
  "stats": {
    "total": 184,
    "additions": 95,
    "deletions": 89
  },
  "files": [
    {
      "sha": "2994728395ba63efcb876e76fb6da2e1ca779896",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61c33f105c71d27386e5b3cc6e1c5f71efe7ed01/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61c33f105c71d27386e5b3cc6e1c5f71efe7ed01/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=61c33f105c71d27386e5b3cc6e1c5f71efe7ed01",
      "patch": "@@ -1,3 +1,18 @@\n+2019-12-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-winsource.h (struct tui_source_window_base)\n+\t<set_contents>: Return bool.\n+\t* tui/tui-winsource.c\n+\t(tui_source_window_base::update_source_window_as_is): Update.\n+\t* tui/tui-source.h (struct tui_source_window) <set_contents>:\n+\tReturn bool.\n+\t* tui/tui-source.c (tui_source_window::set_contents): Return\n+\tbool.  Simplify.\n+\t* tui/tui-disasm.h (struct tui_disasm_window) <set_contents>:\n+\tReturn bool.\n+\t* tui/tui-disasm.c (tui_disasm_window::set_contents): Return\n+\tbool.\n+\n 2019-12-20  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-winsource.c (tui_update_source_windows_with_addr)"
    },
    {
      "sha": "080253c8279df02e76397a3108a00d798ec52da9",
      "filename": "gdb/tui/tui-disasm.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61c33f105c71d27386e5b3cc6e1c5f71efe7ed01/gdb/tui/tui-disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61c33f105c71d27386e5b3cc6e1c5f71efe7ed01/gdb/tui/tui-disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-disasm.c?ref=61c33f105c71d27386e5b3cc6e1c5f71efe7ed01",
      "patch": "@@ -198,7 +198,7 @@ tui_find_disassembly_address (struct gdbarch *gdbarch, CORE_ADDR pc, int from)\n }\n \n /* Function to set the disassembly window's content.  */\n-enum tui_status\n+bool\n tui_disasm_window::set_contents (struct gdbarch *arch,\n \t\t\t\t struct symtab *s,\n \t\t\t\t struct tui_line_or_address line_or_addr)\n@@ -214,7 +214,7 @@ tui_disasm_window::set_contents (struct gdbarch *arch,\n   gdb_assert (line_or_addr.loa == LOA_ADDRESS);\n   CORE_ADDR pc = line_or_addr.u.addr;\n   if (pc == 0)\n-    return TUI_FAILURE;\n+    return false;\n \n   gdbarch = arch;\n   start_line_or_addr.loa = LOA_ADDRESS;\n@@ -251,7 +251,7 @@ tui_disasm_window::set_contents (struct gdbarch *arch,\n       src->line_or_addr.u.addr = asm_lines[i].addr;\n       src->is_exec_point = asm_lines[i].addr == cur_pc;\n     }\n-  return TUI_SUCCESS;\n+  return true;\n }\n \n "
    },
    {
      "sha": "ec8d7f11bf211f10f32b1824f4ab2a798323ab2c",
      "filename": "gdb/tui/tui-disasm.h",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61c33f105c71d27386e5b3cc6e1c5f71efe7ed01/gdb/tui/tui-disasm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61c33f105c71d27386e5b3cc6e1c5f71efe7ed01/gdb/tui/tui-disasm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-disasm.h?ref=61c33f105c71d27386e5b3cc6e1c5f71efe7ed01",
      "patch": "@@ -55,10 +55,9 @@ struct tui_disasm_window : public tui_source_window_base\n \n   void do_scroll_vertical (int num_to_scroll) override;\n \n-  enum tui_status set_contents\n-    (struct gdbarch *gdbarch,\n-     struct symtab *s,\n-     struct tui_line_or_address line_or_addr) override;\n+  bool set_contents (struct gdbarch *gdbarch,\n+\t\t     struct symtab *s,\n+\t\t     struct tui_line_or_address line_or_addr) override;\n \n private:\n   /* Answer whether a particular line number or address is displayed"
    },
    {
      "sha": "78afc62ec6ebdba7da20923c708bb4dc7d836bb3",
      "filename": "gdb/tui/tui-source.c",
      "status": "modified",
      "additions": 66,
      "deletions": 71,
      "changes": 137,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61c33f105c71d27386e5b3cc6e1c5f71efe7ed01/gdb/tui/tui-source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61c33f105c71d27386e5b3cc6e1c5f71efe7ed01/gdb/tui/tui-source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.c?ref=61c33f105c71d27386e5b3cc6e1c5f71efe7ed01",
      "patch": "@@ -40,88 +40,83 @@\n #include \"gdb_curses.h\"\n \n /* Function to display source in the source window.  */\n-enum tui_status\n+bool\n tui_source_window::set_contents (struct gdbarch *arch,\n \t\t\t\t struct symtab *s, \n \t\t\t\t struct tui_line_or_address line_or_addr)\n {\n   gdb_assert (line_or_addr.loa == LOA_LINE);\n   int line_no = line_or_addr.u.line_no;\n \n-  enum tui_status ret = TUI_FAILURE;\n+  if (s == NULL)\n+    return false;\n \n-  if (s != NULL)\n-    {\n-      int line_width, nlines;\n+  int line_width, nlines;\n \n-      ret = TUI_SUCCESS;\n-      line_width = width - TUI_EXECINFO_SIZE - 1;\n-      /* Take hilite (window border) into account, when\n-\t calculating the number of lines.  */\n-      nlines = (line_no + (height - 2)) - line_no;\n+  line_width = width - TUI_EXECINFO_SIZE - 1;\n+  /* Take hilite (window border) into account, when\n+     calculating the number of lines.  */\n+  nlines = (line_no + (height - 2)) - line_no;\n \n-      std::string srclines;\n-      const std::vector<off_t> *offsets;\n-      if (!g_source_cache.get_source_lines (s, line_no, line_no + nlines,\n-\t\t\t\t\t    &srclines)\n-\t  || !g_source_cache.get_line_charpos (s, &offsets))\n-\tret = TUI_FAILURE;\n-      else\n-\t{\n-\t  int cur_line_no, cur_line;\n-\t  struct tui_locator_window *locator\n-\t    = tui_locator_win_info_ptr ();\n-\t  const char *s_filename = symtab_to_filename_for_display (s);\n-\n-\t  title = s_filename;\n-\n-\t  m_fullname = make_unique_xstrdup (symtab_to_fullname (s));\n-\n-\t  cur_line = 0;\n-\t  gdbarch = get_objfile_arch (SYMTAB_OBJFILE (s));\n-\t  start_line_or_addr.loa = LOA_LINE;\n-\t  cur_line_no = start_line_or_addr.u.line_no = line_no;\n-\n-\t  int digits = 0;\n-\t  if (compact_source)\n-\t    {\n-\t      /* Solaris 11+gcc 5.5 has ambiguous overloads of log10, so we\n-\t         cast to double to get the right one.  */\n-\t      double l = log10 ((double) offsets->size ());\n-\t      digits = 1 + (int) l;\n-\t    }\n-\n-\t  const char *iter = srclines.c_str ();\n-\t  content.resize (nlines);\n-\t  while (cur_line < nlines)\n-\t    {\n-\t      struct tui_source_element *element\n-\t\t= &content[cur_line];\n-\n-\t      std::string text;\n-\t      if (*iter != '\\0')\n-\t\ttext = tui_copy_source_line (&iter, cur_line_no,\n-\t\t\t\t\t     horizontal_offset,\n-\t\t\t\t\t     line_width, digits);\n-\n-\t      /* Set whether element is the execution point\n-\t\t and whether there is a break point on it.  */\n-\t      element->line_or_addr.loa = LOA_LINE;\n-\t      element->line_or_addr.u.line_no = cur_line_no;\n-\t      element->is_exec_point\n-\t\t= (filename_cmp (locator->full_name.c_str (),\n-\t\t\t\t symtab_to_fullname (s)) == 0\n-\t\t   && cur_line_no == locator->line_no);\n-\n-\t      content[cur_line].line = std::move (text);\n-\n-\t      cur_line++;\n-\t      cur_line_no++;\n-\t    }\n-\t  ret = TUI_SUCCESS;\n-\t}\n+  std::string srclines;\n+  const std::vector<off_t> *offsets;\n+  if (!g_source_cache.get_source_lines (s, line_no, line_no + nlines,\n+\t\t\t\t\t&srclines)\n+      || !g_source_cache.get_line_charpos (s, &offsets))\n+    return false;\n+\n+  int cur_line_no, cur_line;\n+  struct tui_locator_window *locator\n+    = tui_locator_win_info_ptr ();\n+  const char *s_filename = symtab_to_filename_for_display (s);\n+\n+  title = s_filename;\n+\n+  m_fullname = make_unique_xstrdup (symtab_to_fullname (s));\n+\n+  cur_line = 0;\n+  gdbarch = get_objfile_arch (SYMTAB_OBJFILE (s));\n+  start_line_or_addr.loa = LOA_LINE;\n+  cur_line_no = start_line_or_addr.u.line_no = line_no;\n+\n+  int digits = 0;\n+  if (compact_source)\n+    {\n+      /* Solaris 11+gcc 5.5 has ambiguous overloads of log10, so we\n+\t cast to double to get the right one.  */\n+      double l = log10 ((double) offsets->size ());\n+      digits = 1 + (int) l;\n     }\n-  return ret;\n+\n+  const char *iter = srclines.c_str ();\n+  content.resize (nlines);\n+  while (cur_line < nlines)\n+    {\n+      struct tui_source_element *element\n+\t= &content[cur_line];\n+\n+      std::string text;\n+      if (*iter != '\\0')\n+\ttext = tui_copy_source_line (&iter, cur_line_no,\n+\t\t\t\t     horizontal_offset,\n+\t\t\t\t     line_width, digits);\n+\n+      /* Set whether element is the execution point\n+\t and whether there is a break point on it.  */\n+      element->line_or_addr.loa = LOA_LINE;\n+      element->line_or_addr.u.line_no = cur_line_no;\n+      element->is_exec_point\n+\t= (filename_cmp (locator->full_name.c_str (),\n+\t\t\t symtab_to_fullname (s)) == 0\n+\t   && cur_line_no == locator->line_no);\n+\n+      content[cur_line].line = std::move (text);\n+\n+      cur_line++;\n+      cur_line_no++;\n+    }\n+\n+  return true;\n }\n \n "
    },
    {
      "sha": "36515e7115d51ac361e43b74a32b6afa07100d99",
      "filename": "gdb/tui/tui-source.h",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61c33f105c71d27386e5b3cc6e1c5f71efe7ed01/gdb/tui/tui-source.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61c33f105c71d27386e5b3cc6e1c5f71efe7ed01/gdb/tui/tui-source.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.h?ref=61c33f105c71d27386e5b3cc6e1c5f71efe7ed01",
      "patch": "@@ -60,10 +60,9 @@ struct tui_source_window : public tui_source_window_base\n \n   void do_scroll_vertical (int num_to_scroll) override;\n \n-  enum tui_status set_contents\n-    (struct gdbarch *gdbarch,\n-     struct symtab *s,\n-     struct tui_line_or_address line_or_addr) override;\n+  bool set_contents (struct gdbarch *gdbarch,\n+\t\t     struct symtab *s,\n+\t\t     struct tui_line_or_address line_or_addr) override;\n \n private:\n "
    },
    {
      "sha": "fad8d7ba11ec86c7ca2c60b28095870449054bef",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61c33f105c71d27386e5b3cc6e1c5f71efe7ed01/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61c33f105c71d27386e5b3cc6e1c5f71efe7ed01/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=61c33f105c71d27386e5b3cc6e1c5f71efe7ed01",
      "patch": "@@ -183,10 +183,9 @@ tui_source_window_base::update_source_window_as_is\n    struct symtab *s,\n    struct tui_line_or_address line_or_addr)\n {\n-  enum tui_status ret\n-    = set_contents (gdbarch, s, line_or_addr);\n+  bool ret = set_contents (gdbarch, s, line_or_addr);\n \n-  if (ret == TUI_FAILURE)\n+  if (!ret)\n     erase_source_content ();\n   else\n     {"
    },
    {
      "sha": "1991d040e388aa6c4b3e6b6705380ce795457e45",
      "filename": "gdb/tui/tui-winsource.h",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61c33f105c71d27386e5b3cc6e1c5f71efe7ed01/gdb/tui/tui-winsource.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61c33f105c71d27386e5b3cc6e1c5f71efe7ed01/gdb/tui/tui-winsource.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.h?ref=61c33f105c71d27386e5b3cc6e1c5f71efe7ed01",
      "patch": "@@ -87,10 +87,9 @@ struct tui_source_window_base : public tui_win_info\n \n   void rerender () override;\n \n-  virtual enum tui_status set_contents\n-    (struct gdbarch *gdbarch,\n-     struct symtab *s,\n-     struct tui_line_or_address line_or_addr) = 0;\n+  virtual bool set_contents (struct gdbarch *gdbarch,\n+\t\t\t     struct symtab *s,\n+\t\t\t     struct tui_line_or_address line_or_addr) = 0;\n \n public:\n "
    }
  ]
}