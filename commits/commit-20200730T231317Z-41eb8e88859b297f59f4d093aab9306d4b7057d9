{
  "sha": "41eb8e88859b297f59f4d093aab9306d4b7057d9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDFlYjhlODg4NTliMjk3ZjU5ZjRkMDkzYWFiOTMwNmQ0YjcwNTdkOQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-07-30T23:13:02Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-07-30T23:13:17Z"
    },
    "message": "x86: Add {disp16} pseudo prefix\n\nUse Prefix_XXX for pseudo prefixes.  Add {disp16} pseudo prefix and\nreplace {disp32} pseudo prefix with {disp16} in 16-bit mode test.\nCheck invalid {disp16}/{disp32} pseudo prefixes.\n\ngas/\n\n\tPR gas/26305\n\t* config/tc-i386.c (_i386_insn::disp_encoding): Add\n\tdisp_encoding_16bit.\n\t(parse_insn): Check Prefix_XXX for pseudo prefixes.  Handle\n\t{disp16}.\n\t(build_modrm_byte): Handle {disp16}.\n\t(i386_index_check): Check invalid {disp16} and {disp32} pseudo\n\tprefixes.\n\t* doc/c-i386.texi: Update {disp32} documentation and document\n\t{disp16}.\n\t* testsuite/gas/i386/i386.exp: Run x86-64-inval-pseudo.\n\t* testsuite/gas/i386/inval-pseudo.s: Add {disp32}/{disp16}\n\ttests.\n\t* testsuite/gas/i386/pseudos.s: Add {disp8}/{disp32} vmovaps\n\ttests with 128-byte displacement.  Add {disp16} tests.\n\t* testsuite/gas/i386/x86-64-pseudos.s: Add {disp8}/{disp32}\n\tvmovaps test.  Add (%r13)/(%r13d) tests.\n\t* testsuite/gas/i386/x86-64-inval-pseudo.l: New file.\n\t* testsuite/gas/i386/x86-64-inval-pseudo.s: Likewise.\n\t* testsuite/gas/i386/inval-pseudo.l: Updated.\n\t* testsuite/gas/i386/pseudos.d: Likewise.\n\t* testsuite/gas/i386/x86-64-pseudos.d: Likewise.\n\nopcodes/\n\n\tPR gas/26305\n\t* i386-opc.h (Prefix_Disp8): New.\n\t(Prefix_Disp16): Likewise.\n\t(Prefix_Disp32): Likewise.\n\t(Prefix_Load): Likewise.\n\t(Prefix_Store): Likewise.\n\t(Prefix_VEX): Likewise.\n\t(Prefix_VEX3): Likewise.\n\t(Prefix_EVEX): Likewise.\n\t(Prefix_REX): Likewise.\n\t(Prefix_NoOptimize): Likewise.\n\t* i386-opc.tbl: Use Prefix_XXX on pseudo prefixes.  Add {disp16}.\n\t* i386-tbl.h: Regenerated.",
    "tree": {
      "sha": "0e7f36e6e8fd93e43e1f3d2df22a35eaa7e74a50",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0e7f36e6e8fd93e43e1f3d2df22a35eaa7e74a50"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/41eb8e88859b297f59f4d093aab9306d4b7057d9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/41eb8e88859b297f59f4d093aab9306d4b7057d9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/41eb8e88859b297f59f4d093aab9306d4b7057d9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/41eb8e88859b297f59f4d093aab9306d4b7057d9/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5e500d33230ce2683001038177ad335365764793",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5e500d33230ce2683001038177ad335365764793",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5e500d33230ce2683001038177ad335365764793"
    }
  ],
  "stats": {
    "total": 296,
    "additions": 252,
    "deletions": 44
  },
  "files": [
    {
      "sha": "8dee8190b05f66337de303e4bdf306293e8f23f8",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=41eb8e88859b297f59f4d093aab9306d4b7057d9",
      "patch": "@@ -1,3 +1,28 @@\n+2020-07-30  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/26305\n+\t* config/tc-i386.c (_i386_insn::disp_encoding): Add\n+\tdisp_encoding_16bit.\n+\t(parse_insn): Check Prefix_XXX for pseudo prefixes.  Handle\n+\t{disp16}.\n+\t(build_modrm_byte): Handle {disp16}.\n+\t(i386_index_check): Check invalid {disp16} and {disp32} pseudo\n+\tprefixes.\n+\t* doc/c-i386.texi: Update {disp32} documentation and document\n+\t{disp16}.\n+\t* testsuite/gas/i386/i386.exp: Run x86-64-inval-pseudo.\n+\t* testsuite/gas/i386/inval-pseudo.s: Add {disp32}/{disp16}\n+\ttests.\n+\t* testsuite/gas/i386/pseudos.s: Add {disp8}/{disp32} vmovaps\n+\ttests with 128-byte displacement.  Add {disp16} tests.\n+\t* testsuite/gas/i386/x86-64-pseudos.s: Add {disp8}/{disp32}\n+\tvmovaps test.  Add (%r13)/(%r13d) tests.\n+\t* testsuite/gas/i386/x86-64-inval-pseudo.l: New file.\n+\t* testsuite/gas/i386/x86-64-inval-pseudo.s: Likewise.\n+\t* testsuite/gas/i386/inval-pseudo.l: Updated.\n+\t* testsuite/gas/i386/pseudos.d: Likewise.\n+\t* testsuite/gas/i386/x86-64-pseudos.d: Likewise.\n+\n 2020-07-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* Makefile.am (AM_CPPFLAGS): Add LARGEFILE_CPPFLAGS."
    },
    {
      "sha": "7c21df8d9ace9110f46373cf2fce990c21b37f2a",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 37,
      "deletions": 13,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=41eb8e88859b297f59f4d093aab9306d4b7057d9",
      "patch": "@@ -409,11 +409,12 @@ struct _i386_insn\n \tdir_encoding_swap\n       } dir_encoding;\n \n-    /* Prefer 8bit or 32bit displacement in encoding.  */\n+    /* Prefer 8bit, 16bit, 32bit displacement in encoding.  */\n     enum\n       {\n \tdisp_encoding_default = 0,\n \tdisp_encoding_8bit,\n+\tdisp_encoding_16bit,\n \tdisp_encoding_32bit\n       } disp_encoding;\n \n@@ -5119,39 +5120,43 @@ parse_insn (char *line, char *mnemonic)\n \t      /* Handle pseudo prefixes.  */\n \t      switch (current_templates->start->base_opcode)\n \t\t{\n-\t\tcase 0x0:\n+\t\tcase Prefix_Disp8:\n \t\t  /* {disp8} */\n \t\t  i.disp_encoding = disp_encoding_8bit;\n \t\t  break;\n-\t\tcase 0x1:\n+\t\tcase Prefix_Disp16:\n+\t\t  /* {disp16} */\n+\t\t  i.disp_encoding = disp_encoding_16bit;\n+\t\t  break;\n+\t\tcase Prefix_Disp32:\n \t\t  /* {disp32} */\n \t\t  i.disp_encoding = disp_encoding_32bit;\n \t\t  break;\n-\t\tcase 0x2:\n+\t\tcase Prefix_Load:\n \t\t  /* {load} */\n \t\t  i.dir_encoding = dir_encoding_load;\n \t\t  break;\n-\t\tcase 0x3:\n+\t\tcase Prefix_Store:\n \t\t  /* {store} */\n \t\t  i.dir_encoding = dir_encoding_store;\n \t\t  break;\n-\t\tcase 0x4:\n+\t\tcase Prefix_VEX:\n \t\t  /* {vex} */\n \t\t  i.vec_encoding = vex_encoding_vex;\n \t\t  break;\n-\t\tcase 0x5:\n+\t\tcase Prefix_VEX3:\n \t\t  /* {vex3} */\n \t\t  i.vec_encoding = vex_encoding_vex3;\n \t\t  break;\n-\t\tcase 0x6:\n+\t\tcase Prefix_EVEX:\n \t\t  /* {evex} */\n \t\t  i.vec_encoding = vex_encoding_evex;\n \t\t  break;\n-\t\tcase 0x7:\n+\t\tcase Prefix_REX:\n \t\t  /* {rex} */\n \t\t  i.rex_encoding = TRUE;\n \t\t  break;\n-\t\tcase 0x8:\n+\t\tcase Prefix_NoOptimize:\n \t\t  /* {nooptimize} */\n \t\t  i.no_optimize = TRUE;\n \t\t  break;\n@@ -8151,9 +8156,7 @@ build_modrm_byte (void)\n \t\t      if (operand_type_check (i.types[op], disp) == 0)\n \t\t\t{\n \t\t\t  /* fake (%bp) into 0(%bp)  */\n-\t\t\t  if (i.disp_encoding == disp_encoding_32bit)\n-\t\t\t    /* NB: Use disp16 since there is no disp32\n-\t\t\t       in 16-bit mode.  */\n+\t\t\t  if (i.disp_encoding == disp_encoding_16bit)\n \t\t\t    i.types[op].bitfield.disp16 = 1;\n \t\t\t  else\n \t\t\t    i.types[op].bitfield.disp8 = 1;\n@@ -8166,6 +8169,16 @@ build_modrm_byte (void)\n \t\tdefault: /* (%si) -> 4 or (%di) -> 5  */\n \t\t  i.rm.regmem = i.base_reg->reg_num - 6 + 4;\n \t\t}\n+\t      if (!fake_zero_displacement\n+\t\t  && !i.disp_operands\n+\t\t  && i.disp_encoding)\n+\t\t{\n+\t\t  fake_zero_displacement = 1;\n+\t\t  if (i.disp_encoding == disp_encoding_8bit)\n+\t\t    i.types[op].bitfield.disp8 = 1;\n+\t\t  else\n+\t\t    i.types[op].bitfield.disp16 = 1;\n+\t\t}\n \t      i.rm.mode = mode_from_disp_size (i.types[op]);\n \t    }\n \t  else /* i.base_reg and 32/64 bit mode  */\n@@ -11012,6 +11025,14 @@ i386_index_check (const char *operand_string)\n       if (addr_mode != CODE_16BIT)\n \t{\n \t  /* 32-bit/64-bit checks.  */\n+\t  if (i.disp_encoding == disp_encoding_16bit)\n+\t    {\n+\t    bad_disp:\n+\t      as_bad (_(\"invalid `%s' prefix\"),\n+\t\t      addr_mode == CODE_16BIT ? \"{disp32}\" : \"{disp16}\");\n+\t      return 0;\n+\t    }\n+\n \t  if ((i.base_reg\n \t       && ((addr_mode == CODE_64BIT\n \t\t    ? !i.base_reg->reg_type.bitfield.qword\n@@ -11049,6 +11070,9 @@ i386_index_check (const char *operand_string)\n       else\n \t{\n \t  /* 16-bit checks.  */\n+\t  if (i.disp_encoding == disp_encoding_32bit)\n+\t    goto bad_disp;\n+\n \t  if ((i.base_reg\n \t       && (!i.base_reg->reg_type.bitfield.word\n \t\t   || !i.base_reg->reg_type.bitfield.baseindex))"
    },
    {
      "sha": "64a563aacb43d39ec872c746bdb715d905695d4f",
      "filename": "gas/doc/c-i386.texi",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/doc/c-i386.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/doc/c-i386.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-i386.texi?ref=41eb8e88859b297f59f4d093aab9306d4b7057d9",
      "patch": "@@ -822,7 +822,10 @@ Different encoding options can be specified via pseudo prefixes:\n @samp{@{disp8@}} -- prefer 8-bit displacement.\n \n @item\n-@samp{@{disp32@}} -- prefer 32-bit (16-bit in 16-bit mode) displacement.\n+@samp{@{disp32@}} -- prefer 32-bit displacement.\n+\n+@item\n+@samp{@{disp16@}} -- prefer 16-bit displacement.\n \n @item\n @samp{@{load@}} -- prefer load-form instruction."
    },
    {
      "sha": "0a863ff3bd4927025cfda41df7ac624d282af6f1",
      "filename": "gas/testsuite/gas/i386/i386.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/testsuite/gas/i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/testsuite/gas/i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/i386.exp?ref=41eb8e88859b297f59f4d093aab9306d4b7057d9",
      "patch": "@@ -1105,6 +1105,7 @@ if [expr ([istarget \"i*86-*-*\"] || [istarget \"x86_64-*-*\"]) && [gas_64_check]] t\n     run_list_test \"x86-64-cet-shstk-inval\"\n     run_dump_test \"x86-64-pseudos\"\n     run_list_test \"x86-64-pseudos-bad\"\n+    run_list_test \"x86-64-inval-pseudo\" \"-al\"\n     run_dump_test \"x86-64-notrack\"\n     run_dump_test \"x86-64-notrack-intel\"\n     run_list_test \"x86-64-notrackbad\" \"-al\""
    },
    {
      "sha": "9df0a9851fd5e5e90df63872b99095654843c581",
      "filename": "gas/testsuite/gas/i386/inval-pseudo.l",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/testsuite/gas/i386/inval-pseudo.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/testsuite/gas/i386/inval-pseudo.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/inval-pseudo.l?ref=41eb8e88859b297f59f4d093aab9306d4b7057d9",
      "patch": "@@ -1,11 +1,15 @@\n .*: Assembler messages:\n .*:3: Error: .*\n+.*:5: Error: .*\n+.*:6: Error: .*\n GAS LISTING .*\n \n \n [ \t]*1[ \t]+\\.text\n [ \t]*2[ \t]+\\?\\?\\?\\? 90       \t\tnop\n [ \t]*3[ \t]+\\{disp32\\}\n [ \t]*4[ \t]+\\?\\?\\?\\? 90       \t\tnop\n-[ \t]*5[ \t]+\\?\\?\\?\\? 00000000 \t\t\\.p2align 4,0\n+[ \t]*5[ \t]+\\{disp32\\} movb \\(%bp\\),%al\n+[ \t]*6[ \t]+\\{disp16\\} movb \\(%ebp\\),%al\n+[ \t]*7[ \t]+\\?\\?\\?\\? 00000000 \t\t\\.p2align 4,0\n #..."
    },
    {
      "sha": "b5a6233eb1d4dd68acfb86450a114795ff28bbaa",
      "filename": "gas/testsuite/gas/i386/inval-pseudo.s",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/testsuite/gas/i386/inval-pseudo.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/testsuite/gas/i386/inval-pseudo.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/inval-pseudo.s?ref=41eb8e88859b297f59f4d093aab9306d4b7057d9",
      "patch": "@@ -2,4 +2,6 @@\n \tnop\n \t{disp32}\n \tnop\n+\t{disp32} movb (%bp),%al\n+\t{disp16} movb (%ebp),%al\n \t.p2align 4,0"
    },
    {
      "sha": "4f029f154b45b8bcfd7c2794a719cc5ac5e6d3bd",
      "filename": "gas/testsuite/gas/i386/pseudos.d",
      "status": "modified",
      "additions": 24,
      "deletions": 4,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/testsuite/gas/i386/pseudos.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/testsuite/gas/i386/pseudos.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/pseudos.d?ref=41eb8e88859b297f59f4d093aab9306d4b7057d9",
      "patch": "@@ -22,6 +22,10 @@ Disassembly of section .text:\n  +[a-f0-9]+:\tc5 f8 28 90 00 00 00 00 \tvmovaps 0x0\\(%eax\\),%xmm2\n  +[a-f0-9]+:\t62 f1 7c 08 28 50 00 \tvmovaps 0x0\\(%eax\\),%xmm2\n  +[a-f0-9]+:\t62 f1 7c 08 28 90 00 00 00 00 \tvmovaps 0x0\\(%eax\\),%xmm2\n+ +[a-f0-9]+:\tc5 f8 28 90 80 00 00 00 \tvmovaps 0x80\\(%eax\\),%xmm2\n+ +[a-f0-9]+:\tc5 f8 28 90 80 00 00 00 \tvmovaps 0x80\\(%eax\\),%xmm2\n+ +[a-f0-9]+:\t62 f1 7c 08 28 50 08 \tvmovaps 0x80\\(%eax\\),%xmm2\n+ +[a-f0-9]+:\t62 f1 7c 08 28 90 80 00 00 00 \tvmovaps 0x80\\(%eax\\),%xmm2\n  +[a-f0-9]+:\t89 c8                \tmov    %ecx,%eax\n  +[a-f0-9]+:\t8b c1                \tmov    %ecx,%eax\n  +[a-f0-9]+:\t89 c8                \tmov    %ecx,%eax\n@@ -291,9 +295,15 @@ Disassembly of section .text:\n  +[a-f0-9]+:\t8a 45 00             \tmov    0x0\\(%ebp\\),%al\n  +[a-f0-9]+:\t8a 45 00             \tmov    0x0\\(%ebp\\),%al\n  +[a-f0-9]+:\t8a 85 00 00 00 00    \tmov    0x0\\(%ebp\\),%al\n+ +[a-f0-9]+:\t67 8a 04             \tmov    \\(%si\\),%al\n+ +[a-f0-9]+:\t67 8a 44 00          \tmov    0x0\\(%si\\),%al\n+ +[a-f0-9]+:\t67 8a 84 00 00       \tmov    0x0\\(%si\\),%al\n+ +[a-f0-9]+:\t67 8a 05             \tmov    \\(%di\\),%al\n+ +[a-f0-9]+:\t67 8a 45 00          \tmov    0x0\\(%di\\),%al\n+ +[a-f0-9]+:\t67 8a 85 00 00       \tmov    0x0\\(%di\\),%al\n  +[a-f0-9]+:\t67 8a 07             \tmov    \\(%bx\\),%al\n- +[a-f0-9]+:\t67 8a 07             \tmov    \\(%bx\\),%al\n- +[a-f0-9]+:\t67 8a 07             \tmov    \\(%bx\\),%al\n+ +[a-f0-9]+:\t67 8a 47 00          \tmov    0x0\\(%bx\\),%al\n+ +[a-f0-9]+:\t67 8a 87 00 00       \tmov    0x0\\(%bx\\),%al\n  +[a-f0-9]+:\t67 8a 46 00          \tmov    0x0\\(%bp\\),%al\n  +[a-f0-9]+:\t67 8a 46 00          \tmov    0x0\\(%bp\\),%al\n  +[a-f0-9]+:\t67 8a 86 00 00       \tmov    0x0\\(%bp\\),%al\n@@ -311,6 +321,10 @@ Disassembly of section .text:\n  +[a-f0-9]+:\tc5 f8 28 90 00 00 00 00 \tvmovaps 0x0\\(%eax\\),%xmm2\n  +[a-f0-9]+:\t62 f1 7c 08 28 50 00 \tvmovaps 0x0\\(%eax\\),%xmm2\n  +[a-f0-9]+:\t62 f1 7c 08 28 90 00 00 00 00 \tvmovaps 0x0\\(%eax\\),%xmm2\n+ +[a-f0-9]+:\tc5 f8 28 90 80 00 00 00 \tvmovaps 0x80\\(%eax\\),%xmm2\n+ +[a-f0-9]+:\tc5 f8 28 90 80 00 00 00 \tvmovaps 0x80\\(%eax\\),%xmm2\n+ +[a-f0-9]+:\t62 f1 7c 08 28 50 08 \tvmovaps 0x80\\(%eax\\),%xmm2\n+ +[a-f0-9]+:\t62 f1 7c 08 28 90 80 00 00 00 \tvmovaps 0x80\\(%eax\\),%xmm2\n  +[a-f0-9]+:\t89 c8                \tmov    %ecx,%eax\n  +[a-f0-9]+:\t8b c1                \tmov    %ecx,%eax\n  +[a-f0-9]+:\t89 c8                \tmov    %ecx,%eax\n@@ -328,9 +342,15 @@ Disassembly of section .text:\n  +[a-f0-9]+:\t8a 45 00             \tmov    0x0\\(%ebp\\),%al\n  +[a-f0-9]+:\t8a 45 00             \tmov    0x0\\(%ebp\\),%al\n  +[a-f0-9]+:\t8a 85 00 00 00 00    \tmov    0x0\\(%ebp\\),%al\n+ +[a-f0-9]+:\t67 8a 04             \tmov    \\(%si\\),%al\n+ +[a-f0-9]+:\t67 8a 44 00          \tmov    0x0\\(%si\\),%al\n+ +[a-f0-9]+:\t67 8a 84 00 00       \tmov    0x0\\(%si\\),%al\n+ +[a-f0-9]+:\t67 8a 05             \tmov    \\(%di\\),%al\n+ +[a-f0-9]+:\t67 8a 45 00          \tmov    0x0\\(%di\\),%al\n+ +[a-f0-9]+:\t67 8a 85 00 00       \tmov    0x0\\(%di\\),%al\n  +[a-f0-9]+:\t67 8a 07             \tmov    \\(%bx\\),%al\n- +[a-f0-9]+:\t67 8a 07             \tmov    \\(%bx\\),%al\n- +[a-f0-9]+:\t67 8a 07             \tmov    \\(%bx\\),%al\n+ +[a-f0-9]+:\t67 8a 47 00          \tmov    0x0\\(%bx\\),%al\n+ +[a-f0-9]+:\t67 8a 87 00 00       \tmov    0x0\\(%bx\\),%al\n  +[a-f0-9]+:\t67 8a 46 00          \tmov    0x0\\(%bp\\),%al\n  +[a-f0-9]+:\t67 8a 46 00          \tmov    0x0\\(%bp\\),%al\n  +[a-f0-9]+:\t67 8a 86 00 00       \tmov    0x0\\(%bp\\),%al"
    },
    {
      "sha": "603e112ac8ed6660d1d181a37ed0f63b35beaca0",
      "filename": "gas/testsuite/gas/i386/pseudos.s",
      "status": "modified",
      "additions": 31,
      "deletions": 4,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/testsuite/gas/i386/pseudos.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/testsuite/gas/i386/pseudos.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/pseudos.s?ref=41eb8e88859b297f59f4d093aab9306d4b7057d9",
      "patch": "@@ -17,6 +17,11 @@ _start:\n \t{evex} {disp8} vmovaps (%eax),%xmm2\n \t{evex} {disp32} vmovaps (%eax),%xmm2\n \n+\t{vex} {disp8} vmovaps 128(%eax),%xmm2\n+\t{vex} {disp32} vmovaps 128(%eax),%xmm2\n+\t{evex} {disp8} vmovaps 128(%eax),%xmm2\n+\t{evex} {disp32} vmovaps 128(%eax),%xmm2\n+\n \tmov %ecx, %eax\n \t{load} mov %ecx, %eax\n \t{store} mov %ecx, %eax\n@@ -297,13 +302,21 @@ _start:\n \t{disp8} movb (%ebp),%al\n \t{disp32} movb (%ebp),%al\n \n+\tmovb (%si),%al\n+\t{disp8} movb (%si),%al\n+\t{disp16} movb (%si),%al\n+\n+\tmovb (%di),%al\n+\t{disp8} movb (%di),%al\n+\t{disp16} movb (%di),%al\n+\n \tmovb (%bx),%al\n \t{disp8} movb (%bx),%al\n-\t{disp32} movb (%bx),%al\n+\t{disp16} movb (%bx),%al\n \n \tmovb (%bp),%al\n \t{disp8} movb (%bp),%al\n-\t{disp32} movb (%bp),%al\n+\t{disp16} movb (%bp),%al\n \n \t.intel_syntax noprefix\n \t{vex3} vmovaps xmm2,xmm7\n@@ -320,6 +333,12 @@ _start:\n \t{disp32} vmovaps xmm2,XMMWORD PTR [eax]\n \t{evex} {disp8} vmovaps xmm2,XMMWORD PTR [eax]\n \t{evex} {disp32} vmovaps xmm2,XMMWORD PTR [eax]\n+\n+\t{vex} {disp8} vmovaps xmm2,XMMWORD PTR [eax+128]\n+\t{vex} {disp32} vmovaps xmm2,XMMWORD PTR [eax+128]\n+\t{evex} {disp8} vmovaps xmm2,XMMWORD PTR [eax+128]\n+\t{evex} {disp32} vmovaps xmm2,XMMWORD PTR [eax+128]\n+\n \tmov eax,ecx\n \t{load} mov eax,ecx\n \t{store} mov eax,ecx\n@@ -339,10 +358,18 @@ _start:\n \t{disp8} mov al, BYTE PTR [ebp]\n \t{disp32} mov al, BYTE PTR [ebp]\n \n+\tmov al, BYTE PTR [si]\n+\t{disp8} mov al, BYTE PTR [si]\n+\t{disp16} mov al, BYTE PTR [si]\n+\n+\tmov al, BYTE PTR [di]\n+\t{disp8} mov al, BYTE PTR [di]\n+\t{disp16} mov al, BYTE PTR [di]\n+\n \tmov al, BYTE PTR [bx]\n \t{disp8} mov al, BYTE PTR [bx]\n-\t{disp32} mov al, BYTE PTR [bx]\n+\t{disp16} mov al, BYTE PTR [bx]\n \n \tmov al, BYTE PTR [bp]\n \t{disp8} mov al, BYTE PTR [bp]\n-\t{disp32} mov al, BYTE PTR [bp]\n+\t{disp16} mov al, BYTE PTR [bp]"
    },
    {
      "sha": "13ad0fb768f42b33a92275cb6c0e75ea613f1c59",
      "filename": "gas/testsuite/gas/i386/x86-64-inval-pseudo.l",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/testsuite/gas/i386/x86-64-inval-pseudo.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/testsuite/gas/i386/x86-64-inval-pseudo.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-inval-pseudo.l?ref=41eb8e88859b297f59f4d093aab9306d4b7057d9",
      "patch": "@@ -0,0 +1,10 @@\n+.*: Assembler messages:\n+.*:2: Error: .*\n+.*:3: Error: .*\n+GAS LISTING .*\n+\n+\n+[ \t]*1[ \t]+\\.text\n+[ \t]*2[ \t]+\\{disp16\\} movb \\(%ebp\\),%al\n+[ \t]*3[ \t]+\\{disp16\\} movb \\(%rbp\\),%al\n+#..."
    },
    {
      "sha": "c10b14c2099afdb28641350f7d10c0465fe5f955",
      "filename": "gas/testsuite/gas/i386/x86-64-inval-pseudo.s",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/testsuite/gas/i386/x86-64-inval-pseudo.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/testsuite/gas/i386/x86-64-inval-pseudo.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-inval-pseudo.s?ref=41eb8e88859b297f59f4d093aab9306d4b7057d9",
      "patch": "@@ -0,0 +1,4 @@\n+\t.text\n+\t{disp16} movb (%ebp),%al\n+\t{disp16} movb (%rbp),%al\n+\t.p2align 4,0"
    },
    {
      "sha": "5d039dc6f9f64c64822b1531360358170ce7e060",
      "filename": "gas/testsuite/gas/i386/x86-64-pseudos.d",
      "status": "modified",
      "additions": 21,
      "deletions": 1,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/testsuite/gas/i386/x86-64-pseudos.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/testsuite/gas/i386/x86-64-pseudos.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-pseudos.d?ref=41eb8e88859b297f59f4d093aab9306d4b7057d9",
      "patch": "@@ -22,6 +22,10 @@ Disassembly of section .text:\n  +[a-f0-9]+:\tc5 f8 28 90 00 00 00 00 \tvmovaps 0x0\\(%rax\\),%xmm2\n  +[a-f0-9]+:\t62 f1 7c 08 28 50 00 \tvmovaps 0x0\\(%rax\\),%xmm2\n  +[a-f0-9]+:\t62 f1 7c 08 28 90 00 00 00 00 \tvmovaps 0x0\\(%rax\\),%xmm2\n+ +[a-f0-9]+:\tc5 f8 28 90 80 00 00 00 \tvmovaps 0x80\\(%rax\\),%xmm2\n+ +[a-f0-9]+:\tc5 f8 28 90 80 00 00 00 \tvmovaps 0x80\\(%rax\\),%xmm2\n+ +[a-f0-9]+:\t62 f1 7c 08 28 50 08 \tvmovaps 0x80\\(%rax\\),%xmm2\n+ +[a-f0-9]+:\t62 f1 7c 08 28 90 80 00 00 00 \tvmovaps 0x80\\(%rax\\),%xmm2\n  +[a-f0-9]+:\t48 89 c8             \tmov    %rcx,%rax\n  +[a-f0-9]+:\t48 8b c1             \tmov    %rcx,%rax\n  +[a-f0-9]+:\t48 89 c8             \tmov    %rcx,%rax\n@@ -304,7 +308,7 @@ Disassembly of section .text:\n  +[a-f0-9]+:\t40 d3 e0             \trex shl %cl,%eax\n  +[a-f0-9]+:\t40 a0 01 00 00 00 00 00 00 00 \trex movabs 0x1,%al\n  +[a-f0-9]+:\t40 38 ca             \trex cmp %cl,%dl\n- +[a-f0-9]+:\t40 b3 01             \trex mov \\$(0x)?1,%bl\n+ +[a-f0-9]+:\t40 b3 01             \trex mov \\$(0x)1,%bl\n  +[a-f0-9]+:\tf2 40 0f 38 f0 c1    \trex crc32 %cl,%eax\n  +[a-f0-9]+:\t40 89 c3             \trex mov %eax,%ebx\n  +[a-f0-9]+:\t41 89 c6             \tmov    %eax,%r14d\n@@ -321,6 +325,12 @@ Disassembly of section .text:\n  +[a-f0-9]+:\t67 8a 45 00          \tmov    0x0\\(%ebp\\),%al\n  +[a-f0-9]+:\t67 8a 45 00          \tmov    0x0\\(%ebp\\),%al\n  +[a-f0-9]+:\t67 8a 85 00 00 00 00 \tmov    0x0\\(%ebp\\),%al\n+ +[a-f0-9]+:\t41 8a 45 00          \tmov    0x0\\(%r13\\),%al\n+ +[a-f0-9]+:\t41 8a 45 00          \tmov    0x0\\(%r13\\),%al\n+ +[a-f0-9]+:\t41 8a 85 00 00 00 00 \tmov    0x0\\(%r13\\),%al\n+ +[a-f0-9]+:\t67 41 8a 45 00       \tmov    0x0\\(%r13d\\),%al\n+ +[a-f0-9]+:\t67 41 8a 45 00       \tmov    0x0\\(%r13d\\),%al\n+ +[a-f0-9]+:\t67 41 8a 85 00 00 00 00 \tmov    0x0\\(%r13d\\),%al\n  +[a-f0-9]+:\tc4 e1 78 28 d7       \tvmovaps %xmm7,%xmm2\n  +[a-f0-9]+:\tc4 e1 78 28 d7       \tvmovaps %xmm7,%xmm2\n  +[a-f0-9]+:\tc4 e1 78 29 fa       \tvmovaps %xmm7,%xmm2\n@@ -335,6 +345,10 @@ Disassembly of section .text:\n  +[a-f0-9]+:\tc5 f8 28 90 00 00 00 00 \tvmovaps 0x0\\(%rax\\),%xmm2\n  +[a-f0-9]+:\t62 f1 7c 08 28 50 00 \tvmovaps 0x0\\(%rax\\),%xmm2\n  +[a-f0-9]+:\t62 f1 7c 08 28 90 00 00 00 00 \tvmovaps 0x0\\(%rax\\),%xmm2\n+ +[a-f0-9]+:\tc5 f8 28 90 80 00 00 00 \tvmovaps 0x80\\(%rax\\),%xmm2\n+ +[a-f0-9]+:\tc5 f8 28 90 80 00 00 00 \tvmovaps 0x80\\(%rax\\),%xmm2\n+ +[a-f0-9]+:\t62 f1 7c 08 28 50 08 \tvmovaps 0x80\\(%rax\\),%xmm2\n+ +[a-f0-9]+:\t62 f1 7c 08 28 90 80 00 00 00 \tvmovaps 0x80\\(%rax\\),%xmm2\n  +[a-f0-9]+:\t48 89 c8             \tmov    %rcx,%rax\n  +[a-f0-9]+:\t48 8b c1             \tmov    %rcx,%rax\n  +[a-f0-9]+:\t48 89 c8             \tmov    %rcx,%rax\n@@ -365,4 +379,10 @@ Disassembly of section .text:\n  +[a-f0-9]+:\t67 8a 45 00          \tmov    0x0\\(%ebp\\),%al\n  +[a-f0-9]+:\t67 8a 45 00          \tmov    0x0\\(%ebp\\),%al\n  +[a-f0-9]+:\t67 8a 85 00 00 00 00 \tmov    0x0\\(%ebp\\),%al\n+ +[a-f0-9]+:\t41 8a 45 00          \tmov    0x0\\(%r13\\),%al\n+ +[a-f0-9]+:\t41 8a 45 00          \tmov    0x0\\(%r13\\),%al\n+ +[a-f0-9]+:\t41 8a 85 00 00 00 00 \tmov    0x0\\(%r13\\),%al\n+ +[a-f0-9]+:\t41 8a 45 00          \tmov    0x0\\(%r13\\),%al\n+ +[a-f0-9]+:\t67 41 8a 45 00       \tmov    0x0\\(%r13d\\),%al\n+ +[a-f0-9]+:\t67 41 8a 85 00 00 00 00 \tmov    0x0\\(%r13d\\),%al\n #pass"
    },
    {
      "sha": "3818df9708e612849a28e73b990e7864c4fefadf",
      "filename": "gas/testsuite/gas/i386/x86-64-pseudos.s",
      "status": "modified",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/testsuite/gas/i386/x86-64-pseudos.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41eb8e88859b297f59f4d093aab9306d4b7057d9/gas/testsuite/gas/i386/x86-64-pseudos.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-pseudos.s?ref=41eb8e88859b297f59f4d093aab9306d4b7057d9",
      "patch": "@@ -17,6 +17,11 @@ _start:\n \t{evex} {disp8} vmovaps (%rax),%xmm2\n \t{evex} {disp32} vmovaps (%rax),%xmm2\n \n+\t{vex} {disp8} vmovaps 128(%rax),%xmm2\n+\t{vex} {disp32} vmovaps 128(%rax),%xmm2\n+\t{evex} {disp8} vmovaps 128(%rax),%xmm2\n+\t{evex} {disp32} vmovaps 128(%rax),%xmm2\n+\n \tmov %rcx, %rax\n \t{load} mov %rcx, %rax\n \t{store} mov %rcx, %rax\n@@ -328,6 +333,14 @@ _start:\n \t{disp8} movb (%ebp),%al\n \t{disp32} movb (%ebp),%al\n \n+\tmovb (%r13),%al\n+\t{disp8} movb (%r13),%al\n+\t{disp32} movb (%r13),%al\n+\n+\tmovb (%r13d),%al\n+\t{disp8} movb (%r13d),%al\n+\t{disp32} movb (%r13d),%al\n+\n \t.intel_syntax noprefix\n \t{vex3} vmovaps xmm2,xmm7\n \t{vex3} {load} vmovaps xmm2,xmm7\n@@ -343,6 +356,12 @@ _start:\n \t{disp32} vmovaps xmm2,XMMWORD PTR [rax]\n \t{evex} {disp8} vmovaps xmm2,XMMWORD PTR [rax]\n \t{evex} {disp32} vmovaps xmm2,XMMWORD PTR [rax]\n+\n+\t{vex} {disp8} vmovaps xmm2,XMMWORD PTR [rax+128]\n+\t{vex} {disp32} vmovaps xmm2,XMMWORD PTR [rax+128]\n+\t{evex} {disp8} vmovaps xmm2,XMMWORD PTR [rax+128]\n+\t{evex} {disp32} vmovaps xmm2,XMMWORD PTR [rax+128]\n+\n \tmov rax,rcx\n \t{load} mov rax,rcx\n \t{store} mov rax,rcx\n@@ -375,3 +394,11 @@ _start:\n \tmov al, BYTE PTR [ebp]\n \t{disp8} mov al, BYTE PTR [ebp]\n \t{disp32} mov al, BYTE PTR [ebp]\n+\n+\tmov al, BYTE PTR [r13]\n+\t{disp8} mov al, BYTE PTR [r13]\n+\t{disp32} mov al, BYTE PTR [r13]\n+\n+\tmov al, BYTE PTR [r13]\n+\t{disp8} mov al, BYTE PTR [r13d]\n+\t{disp32} mov al, BYTE PTR [r13d]"
    },
    {
      "sha": "3fae7c76cffbbb9a483276cd06857c1ddbbc7357",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41eb8e88859b297f59f4d093aab9306d4b7057d9/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41eb8e88859b297f59f4d093aab9306d4b7057d9/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=41eb8e88859b297f59f4d093aab9306d4b7057d9",
      "patch": "@@ -1,3 +1,19 @@\n+2020-07-30  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/26305\n+\t* i386-opc.h (Prefix_Disp8): New.\n+\t(Prefix_Disp16): Likewise.\n+\t(Prefix_Disp32): Likewise.\n+\t(Prefix_Load): Likewise.\n+\t(Prefix_Store): Likewise.\n+\t(Prefix_VEX): Likewise.\n+\t(Prefix_VEX3): Likewise.\n+\t(Prefix_EVEX): Likewise.\n+\t(Prefix_REX): Likewise.\n+\t(Prefix_NoOptimize): Likewise.\n+\t* i386-opc.tbl: Use Prefix_XXX on pseudo prefixes.  Add {disp16}.\n+\t* i386-tbl.h: Regenerated.\n+\n 2020-07-29  Andreas Arnez  <arnez@linux.ibm.com>\n \n \t* s390-mkopc.c (insertExpandedMnemonic): Handle unreachable"
    },
    {
      "sha": "09ee615db1e67a292f2c287a8e07ef3d276a6734",
      "filename": "opcodes/i386-opc.h",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41eb8e88859b297f59f4d093aab9306d4b7057d9/opcodes/i386-opc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41eb8e88859b297f59f4d093aab9306d4b7057d9/opcodes/i386-opc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-opc.h?ref=41eb8e88859b297f59f4d093aab9306d4b7057d9",
      "patch": "@@ -889,6 +889,18 @@ typedef struct insn_template\n #define Opcode_SIMD_FloatD 0x1 /* Direction bit for SIMD fp insns. */\n #define Opcode_SIMD_IntD 0x10 /* Direction bit for SIMD int insns. */\n \n+/* Pseudo prefixes.  */\n+#define Prefix_Disp8\t\t0\t/* {disp8} */\n+#define Prefix_Disp16\t\t1\t/* {disp16} */\n+#define Prefix_Disp32\t\t2\t/* {disp32} */\n+#define Prefix_Load\t\t3\t/* {load} */\n+#define Prefix_Store\t\t4\t/* {store} */\n+#define Prefix_VEX\t\t5\t/* {vex} */\n+#define Prefix_VEX3\t\t6\t/* {vex3} */\n+#define Prefix_EVEX\t\t7\t/* {evex} */\n+#define Prefix_REX\t\t8\t/* {rex} */\n+#define Prefix_NoOptimize\t9\t/* {nooptimize} */\n+\n   /* extension_opcode is the 3 bit extension for group <n> insns.\n      This field is also used to store the 8-bit opcode suffix for the\n      AMD 3DNow! instructions."
    },
    {
      "sha": "181d0df1ce4abdfcd82b5ef2ba501af09bf7afe2",
      "filename": "opcodes/i386-opc.tbl",
      "status": "modified",
      "additions": 11,
      "deletions": 10,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41eb8e88859b297f59f4d093aab9306d4b7057d9/opcodes/i386-opc.tbl",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41eb8e88859b297f59f4d093aab9306d4b7057d9/opcodes/i386-opc.tbl",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-opc.tbl?ref=41eb8e88859b297f59f4d093aab9306d4b7057d9",
      "patch": "@@ -835,16 +835,17 @@ rex.wrxb, 0, 0x4f, None, 1, Cpu64, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ld\n \n // Pseudo prefixes (opcode_length == 0)\n \n-{disp8}, 0, 0x0, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n-{disp32}, 0, 0x1, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n-{load}, 0, 0x2, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n-{store}, 0, 0x3, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n-{vex}, 0, 0x4, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n-{vex2}, 0, 0x4, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n-{vex3}, 0, 0x5, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n-{evex}, 0, 0x6, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n-{rex}, 0, 0x7, None, 0, Cpu64, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n-{nooptimize}, 0, 0x8, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n+{disp8}, 0, Prefix_Disp8, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n+{disp16}, 0, Prefix_Disp16, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n+{disp32}, 0, Prefix_Disp32, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n+{load}, 0, Prefix_Load, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n+{store}, 0, Prefix_Store, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n+{vex}, 0, Prefix_VEX, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n+{vex2}, 0, Prefix_VEX, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n+{vex3}, 0, Prefix_VEX3, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n+{evex}, 0, Prefix_EVEX, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n+{rex}, 0, Prefix_REX, None, 0, Cpu64, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n+{nooptimize}, 0, Prefix_NoOptimize, None, 0, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsPrefix, { 0 }\n \n // 486 extensions.\n "
    },
    {
      "sha": "413c730f863cf89bad4bd8e76bd730659fcbf4d1",
      "filename": "opcodes/i386-tbl.h",
      "status": "modified",
      "additions": 22,
      "deletions": 10,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41eb8e88859b297f59f4d093aab9306d4b7057d9/opcodes/i386-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41eb8e88859b297f59f4d093aab9306d4b7057d9/opcodes/i386-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-tbl.h?ref=41eb8e88859b297f59f4d093aab9306d4b7057d9",
      "patch": "@@ -7584,7 +7584,7 @@ const insn_template i386_optab[] =\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0, 0 } } } },\n-  { \"{disp8}\", 0x0, None, 0, 0,\n+  { \"{disp8}\", 0, None, 0, 0,\n     { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n@@ -7596,7 +7596,7 @@ const insn_template i386_optab[] =\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0, 0 } } } },\n-  { \"{disp32}\", 0x1, None, 0, 0,\n+  { \"{disp16}\", 1, None, 0, 0,\n     { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n@@ -7608,7 +7608,7 @@ const insn_template i386_optab[] =\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0, 0 } } } },\n-  { \"{load}\", 0x2, None, 0, 0,\n+  { \"{disp32}\", 2, None, 0, 0,\n     { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n@@ -7620,7 +7620,7 @@ const insn_template i386_optab[] =\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0, 0 } } } },\n-  { \"{store}\", 0x3, None, 0, 0,\n+  { \"{load}\", 3, None, 0, 0,\n     { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n@@ -7632,7 +7632,7 @@ const insn_template i386_optab[] =\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0, 0 } } } },\n-  { \"{vex}\", 0x4, None, 0, 0,\n+  { \"{store}\", 4, None, 0, 0,\n     { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n@@ -7644,7 +7644,7 @@ const insn_template i386_optab[] =\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0, 0 } } } },\n-  { \"{vex2}\", 0x4, None, 0, 0,\n+  { \"{vex}\", 5, None, 0, 0,\n     { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n@@ -7656,7 +7656,7 @@ const insn_template i386_optab[] =\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0, 0 } } } },\n-  { \"{vex3}\", 0x5, None, 0, 0,\n+  { \"{vex2}\", 5, None, 0, 0,\n     { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n@@ -7668,7 +7668,7 @@ const insn_template i386_optab[] =\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0, 0 } } } },\n-  { \"{evex}\", 0x6, None, 0, 0,\n+  { \"{vex3}\", 6, None, 0, 0,\n     { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n@@ -7680,7 +7680,19 @@ const insn_template i386_optab[] =\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0, 0 } } } },\n-  { \"{rex}\", 0x7, None, 0, 0,\n+  { \"{evex}\", 7, None, 0, 0,\n+    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n+    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n+    { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+\t  0, 0, 0, 0, 0, 0, 0 } } } },\n+  { \"{rex}\", 8, None, 0, 0,\n     { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n@@ -7692,7 +7704,7 @@ const insn_template i386_optab[] =\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0, 0 } } } },\n-  { \"{nooptimize}\", 0x8, None, 0, 0,\n+  { \"{nooptimize}\", 9, None, 0, 0,\n     { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"
    }
  ]
}