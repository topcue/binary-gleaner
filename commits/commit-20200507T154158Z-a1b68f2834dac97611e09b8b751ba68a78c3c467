{
  "sha": "a1b68f2834dac97611e09b8b751ba68a78c3c467",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTFiNjhmMjgzNGRhYzk3NjExZTA5YjhiNzUxYmE2OGE3OGMzYzQ2Nw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-07T15:41:45Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-07T15:41:58Z"
    },
    "message": "gdb: small cleanup of async-event.c structs\n\nThis is a small cleanup to normalize the structures in async-event.c\nwith the rest of the code base:\n\n- Remove the unnecessary typedefs\n- Fix indentation of struct bodies\n- Put comments above fields\n\nNo functional changes expected.\n\ngdb/ChangeLog:\n\n\t* async-event.c (struct async_signal_handler, struct\n\tasync_event_handler): Reformat, remove typedef.",
    "tree": {
      "sha": "55a1e33f75f2e26d25fdf50be475c967298817a8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/55a1e33f75f2e26d25fdf50be475c967298817a8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a1b68f2834dac97611e09b8b751ba68a78c3c467",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a1b68f2834dac97611e09b8b751ba68a78c3c467",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a1b68f2834dac97611e09b8b751ba68a78c3c467",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a1b68f2834dac97611e09b8b751ba68a78c3c467/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "98d48915d987c577c34e5516040ab04c0dab6baa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/98d48915d987c577c34e5516040ab04c0dab6baa",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/98d48915d987c577c34e5516040ab04c0dab6baa"
    }
  ],
  "stats": {
    "total": 79,
    "additions": 44,
    "deletions": 35
  },
  "files": [
    {
      "sha": "d287d3aa5e9e705e34913847ea3b4ac3ed29adff",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1b68f2834dac97611e09b8b751ba68a78c3c467/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1b68f2834dac97611e09b8b751ba68a78c3c467/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a1b68f2834dac97611e09b8b751ba68a78c3c467",
      "patch": "@@ -1,3 +1,8 @@\n+2020-05-07  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* async-event.c (struct async_signal_handler, struct\n+\tasync_event_handler): Reformat, remove typedef.\n+\n 2020-05-07  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdbtypes.h (TYPE_DYN_PROP_LIST): Remove.  Update all users"
    },
    {
      "sha": "4354175edfacf5ae41a79e1f6a28eb6b69d3c9cb",
      "filename": "gdb/async-event.c",
      "status": "modified",
      "additions": 39,
      "deletions": 35,
      "changes": 74,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1b68f2834dac97611e09b8b751ba68a78c3c467/gdb/async-event.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1b68f2834dac97611e09b8b751ba68a78c3c467/gdb/async-event.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/async-event.c?ref=a1b68f2834dac97611e09b8b751ba68a78c3c467",
      "patch": "@@ -32,62 +32,66 @@\n    Async_init_signals takes care of setting up such an\n    async_signal_handler for each interesting signal.  */\n \n-typedef struct async_signal_handler\n-  {\n-    int ready;\t\t\t    /* If ready, call this handler\n-\t\t\t\t       from the main event loop, using\n-\t\t\t\t       invoke_async_handler.  */\n-    struct async_signal_handler *next_handler;\t/* Ptr to next handler.  */\n-    sig_handler_func *proc;\t    /* Function to call to do the work.  */\n-    gdb_client_data client_data;    /* Argument to async_handler_func.  */\n-  }\n-async_signal_handler;\n+struct async_signal_handler\n+{\n+  /* If ready, call this handler  from the main event loop, using\n+     invoke_async_handler.  */\n+  int ready;\n+\n+  /* Pointer to next handler.  */\n+  struct async_signal_handler *next_handler;\n+\n+  /* Function to call to do the work.  */\n+  sig_handler_func *proc;\n+\n+  /* Argument to PROC.  */\n+  gdb_client_data client_data;\n+};\n \n /* PROC is a function to be invoked when the READY flag is set.  This\n    happens when the event has been marked with\n    MARK_ASYNC_EVENT_HANDLER.  The actual work to be done in response\n    to an event will be carried out by PROC at a later time, within\n    process_event.  This provides a deferred execution of event\n    handlers.  */\n-typedef struct async_event_handler\n-  {\n-    /* If ready, call this handler from the main event loop, using\n-       invoke_event_handler.  */\n-    int ready;\n+struct async_event_handler\n+{\n+  /* If ready, call this handler from the main event loop, using\n+     invoke_event_handler.  */\n+  int ready;\n \n-    /* Point to next handler.  */\n-    struct async_event_handler *next_handler;\n+  /* Pointer to next handler.  */\n+  struct async_event_handler *next_handler;\n \n-    /* Function to call to do the work.  */\n-    async_event_handler_func *proc;\n+  /* Function to call to do the work.  */\n+  async_event_handler_func *proc;\n \n-    /* Argument to PROC.  */\n-    gdb_client_data client_data;\n-  }\n-async_event_handler;\n+  /* Argument to PROC.  */\n+  gdb_client_data client_data;\n+};\n \n /* All the async_signal_handlers gdb is interested in are kept onto\n    this list.  */\n static struct\n-  {\n-    /* Pointer to first in handler list.  */\n-    async_signal_handler *first_handler;\n+{\n+  /* Pointer to first in handler list.  */\n+  async_signal_handler *first_handler;\n \n-    /* Pointer to last in handler list.  */\n-    async_signal_handler *last_handler;\n-  }\n+  /* Pointer to last in handler list.  */\n+  async_signal_handler *last_handler;\n+}\n sighandler_list;\n \n /* All the async_event_handlers gdb is interested in are kept onto\n    this list.  */\n static struct\n-  {\n-    /* Pointer to first in handler list.  */\n-    async_event_handler *first_handler;\n+{\n+  /* Pointer to first in handler list.  */\n+  async_event_handler *first_handler;\n \n-    /* Pointer to last in handler list.  */\n-    async_event_handler *last_handler;\n-  }\n+  /* Pointer to last in handler list.  */\n+  async_event_handler *last_handler;\n+}\n async_event_handler_list;\n \n "
    }
  ]
}