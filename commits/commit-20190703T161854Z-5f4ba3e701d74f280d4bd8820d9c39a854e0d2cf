{
  "sha": "5f4ba3e701d74f280d4bd8820d9c39a854e0d2cf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWY0YmEzZTcwMWQ3NGYyODBkNGJkODgyMGQ5YzM5YTg1NGUwZDJjZg==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-07-03T15:57:51Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-07-03T16:18:54Z"
    },
    "message": "pipe command completer\n\nThis commit adds a completer for the \"pipe\" command.  It can complete\n\"pipe\"'s options, and the specified GDB command.\n\nTo make the completer aware of the \"-d\" option, this converts the\noption processing to use gdb::option.\n\nTests included.\n\ngdb/ChangeLog:\n2019-07-03  Pedro Alves  <palves@redhat.com>\n\n\tPR cli/24732\n\t* cli/cli-cmds.c (struct pipe_cmd_opts): New.\n\t(pipe_cmd_option_defs): New.\n\t(make_pipe_cmd_options_def_group): New.\n\t(pipe_command): Use gdb::option::process_options.\n\t(pipe_command_completer): New function.\n\t(_initialize_cli_cmds): Install completer for \"pipe\" command.\n\ngdb/testsuite/ChangeLog:\n2019-07-03  Pedro Alves  <palves@redhat.com>\n\n\tPR cli/24732\n\t* gdb.base/shell.exp: Load completion-support.exp.\n\tAdjust expected error output.  Add completion tests.",
    "tree": {
      "sha": "e3b67db8010eb2372226f3fbd5a33c2e5edbb8b3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e3b67db8010eb2372226f3fbd5a33c2e5edbb8b3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5f4ba3e701d74f280d4bd8820d9c39a854e0d2cf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5f4ba3e701d74f280d4bd8820d9c39a854e0d2cf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5f4ba3e701d74f280d4bd8820d9c39a854e0d2cf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5f4ba3e701d74f280d4bd8820d9c39a854e0d2cf/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a994424fa1e80d982644038f1ce6538e247aeed1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a994424fa1e80d982644038f1ce6538e247aeed1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a994424fa1e80d982644038f1ce6538e247aeed1"
    }
  ],
  "stats": {
    "total": 155,
    "additions": 144,
    "deletions": 11
  },
  "files": [
    {
      "sha": "a462b27ba5bdf9b89001aea697f903989f04dab0",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5f4ba3e701d74f280d4bd8820d9c39a854e0d2cf/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5f4ba3e701d74f280d4bd8820d9c39a854e0d2cf/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5f4ba3e701d74f280d4bd8820d9c39a854e0d2cf",
      "patch": "@@ -1,3 +1,13 @@\n+2019-07-03  Pedro Alves  <palves@redhat.com>\n+\n+\tPR cli/24732\n+\t* cli/cli-cmds.c (struct pipe_cmd_opts): New.\n+\t(pipe_cmd_option_defs): New.\n+\t(make_pipe_cmd_options_def_group): New.\n+\t(pipe_command): Use gdb::option::process_options.\n+\t(pipe_command_completer): New function.\n+\t(_initialize_cli_cmds): Install completer for \"pipe\" command.\n+\n 2019-07-03  Pedro Alves  <palves@redhat.com>\n \n \t* cli/cli-option.c (union option_value) <string>: New field."
    },
    {
      "sha": "368ddf526d1f184485f686d7c7328faf43e5373e",
      "filename": "gdb/cli/cli-cmds.c",
      "status": "modified",
      "additions": 83,
      "deletions": 9,
      "changes": 92,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5f4ba3e701d74f280d4bd8820d9c39a854e0d2cf/gdb/cli/cli-cmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5f4ba3e701d74f280d4bd8820d9c39a854e0d2cf/gdb/cli/cli-cmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-cmds.c?ref=5f4ba3e701d74f280d4bd8820d9c39a854e0d2cf",
      "patch": "@@ -960,32 +960,68 @@ edit_command (const char *arg, int from_tty)\n   xfree (p);\n }\n \n+/* The options for the \"pipe\" command.  */\n+\n+struct pipe_cmd_opts\n+{\n+  /* For \"-d\".  */\n+  char *delimiter = nullptr;\n+\n+  ~pipe_cmd_opts ()\n+  {\n+    xfree (delimiter);\n+  }\n+};\n+\n+static const gdb::option::option_def pipe_cmd_option_defs[] = {\n+\n+  gdb::option::string_option_def<pipe_cmd_opts> {\n+    \"d\",\n+    [] (pipe_cmd_opts *opts) { return &opts->delimiter; },\n+    nullptr,\n+    N_(\"Indicates to use the specified delimiter string to separate\\n\\\n+COMMAND from SHELL_COMMAND, in alternative to |.  This is useful in\\n\\\n+case COMMAND contains a | character.\"),\n+  },\n+\n+};\n+\n+/* Create an option_def_group for the \"pipe\" command's options, with\n+   OPTS as context.  */\n+\n+static inline gdb::option::option_def_group\n+make_pipe_cmd_options_def_group (pipe_cmd_opts *opts)\n+{\n+  return {{pipe_cmd_option_defs}, opts};\n+}\n+\n /* Implementation of the \"pipe\" command.  */\n \n static void\n pipe_command (const char *arg, int from_tty)\n {\n-  std::string delim (\"|\");\n+  pipe_cmd_opts opts;\n \n-  if (arg != nullptr && check_for_argument (&arg, \"-d\", 2))\n-    {\n-      delim = extract_arg (&arg);\n-      if (delim.empty ())\n-\terror (_(\"Missing delimiter DELIM after -d\"));\n-    }\n+  auto grp = make_pipe_cmd_options_def_group (&opts);\n+  gdb::option::process_options\n+    (&arg, gdb::option::PROCESS_OPTIONS_UNKNOWN_IS_OPERAND, grp);\n+\n+  const char *delim = \"|\";\n+  if (opts.delimiter != nullptr)\n+    delim = opts.delimiter;\n \n   const char *command = arg;\n   if (command == nullptr)\n     error (_(\"Missing COMMAND\"));\n \n-  arg = strstr (arg, delim.c_str ());\n+  arg = strstr (arg, delim);\n \n   if (arg == nullptr)\n     error (_(\"Missing delimiter before SHELL_COMMAND\"));\n \n   std::string gdb_cmd (command, arg - command);\n \n-  arg += delim.length (); /* Skip the delimiter.  */\n+  arg += strlen (delim); /* Skip the delimiter.  */\n \n   if (gdb_cmd.empty ())\n     gdb_cmd = repeat_previous ();\n@@ -1019,6 +1055,43 @@ pipe_command (const char *arg, int from_tty)\n   exit_status_set_internal_vars (exit_status);\n }\n \n+/* Completer for the pipe command.  */\n+\n+static void\n+pipe_command_completer (struct cmd_list_element *ignore,\n+\t\t\tcompletion_tracker &tracker,\n+\t\t\tconst char *text, const char *word_ignored)\n+{\n+  pipe_cmd_opts opts;\n+\n+  const char *org_text = text;\n+  auto grp = make_pipe_cmd_options_def_group (&opts);\n+  if (gdb::option::complete_options\n+      (tracker, &text, gdb::option::PROCESS_OPTIONS_UNKNOWN_IS_OPERAND, grp))\n+    return;\n+\n+  const char *delimiter = \"|\";\n+  if (opts.delimiter != nullptr)\n+    delimiter = opts.delimiter;\n+\n+  /* Check if we're past option values already.  */\n+  if (text > org_text && !isspace (text[-1]))\n+    return;\n+\n+  const char *delim = strstr (text, delimiter);\n+\n+  /* If we're still not past the delimiter, complete the gdb\n+     command.  */\n+  if (delim == nullptr || delim == text)\n+    {\n+      complete_nested_command_line (tracker, text);\n+      return;\n+    }\n+\n+  /* We're past the delimiter.  What follows is a shell command, which\n+     we don't know how to complete.  */\n+}\n+\n static void\n list_command (const char *arg, int from_tty)\n {\n@@ -2045,6 +2118,7 @@ case COMMAND contains a | character.\\n\\\n \\n\\\n With no COMMAND, repeat the last executed command\\n\\\n and send its output to SHELL_COMMAND.\"));\n+  set_cmd_completer_handle_brkchars (c, pipe_command_completer);\n   add_com_alias (\"|\", \"pipe\", class_support, 0);\n \n   add_com (\"list\", class_files, list_command, _(\"\\"
    },
    {
      "sha": "38dcfd38df0010c66392be765f80b9e7dc1355fb",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5f4ba3e701d74f280d4bd8820d9c39a854e0d2cf/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5f4ba3e701d74f280d4bd8820d9c39a854e0d2cf/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=5f4ba3e701d74f280d4bd8820d9c39a854e0d2cf",
      "patch": "@@ -1,3 +1,9 @@\n+2019-07-03  Pedro Alves  <palves@redhat.com>\n+\n+\tPR cli/24732\n+\t* gdb.base/shell.exp: Load completion-support.exp.\n+\tAdjust expected error output.  Add completion tests.\n+\n 2019-07-03  Pedro Alves  <palves@redhat.com>\n \n \t* lib/completion-support.exp (test_gdb_complete_cmd_multiple): Use"
    },
    {
      "sha": "719435d4eb55bc3af88470a49559ee991b6e77a7",
      "filename": "gdb/testsuite/gdb.base/shell.exp",
      "status": "modified",
      "additions": 45,
      "deletions": 2,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5f4ba3e701d74f280d4bd8820d9c39a854e0d2cf/gdb/testsuite/gdb.base/shell.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5f4ba3e701d74f280d4bd8820d9c39a854e0d2cf/gdb/testsuite/gdb.base/shell.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/shell.exp?ref=5f4ba3e701d74f280d4bd8820d9c39a854e0d2cf",
      "patch": "@@ -15,6 +15,8 @@\n \n # Test that the \"shell\", \"!\", \"|\" and \"pipe\" commands work.\n \n+load_lib completion-support.exp\n+\n gdb_exit\n gdb_start\n \n@@ -92,8 +94,8 @@ gdb_test \"p \\$_shell_exitsignal\" \" = 2\" \"pipe interrupt exitsignal\"\n \n # Error handling verifications.\n gdb_test \"|\" \"Missing COMMAND\" \"all missing\"\n-gdb_test \"|-d\" \"Missing delimiter DELIM after -d\" \"-d value missing\"\n-gdb_test \"|-d    \" \"Missing delimiter DELIM after -d\" \"-d spaces value missing\"\n+gdb_test \"|-d\" \"-d requires an argument\" \"-d value missing\"\n+gdb_test \"|-d    \" \"-d requires an argument\" \"-d spaces value missing\"\n gdb_test \"| echo coucou\" \\\n     \"Missing delimiter before SHELL_COMMAND\" \\\n     \"| delimiter missing\"\n@@ -110,3 +112,44 @@ gdb_test \"|-d! echo coucou ! wc\" \\\n     \"Missing delimiter before SHELL_COMMAND\" \\\n     \"delimiter missing due to missing space\"\n \n+# Completion tests.\n+\n+test_gdb_complete_unique \\\n+    \"pipe\" \\\n+    \"pipe\"\n+\n+# Note that unlike \"pipe\", \"|\" doesn't require a space.  This checks\n+# that completion behaves that way too.\n+foreach cmd {\"pipe \" \"| \" \"|\"} {\n+    test_gdb_completion_offers_commands \"$cmd\"\n+\n+    # There's only one option.\n+    test_gdb_complete_unique \\\n+\t\"${cmd}-\" \\\n+\t\"${cmd}-d\"\n+\n+    # Cannot complete \"-d\"'s argument.\n+    test_gdb_complete_none \"${cmd}-d \"\n+    test_gdb_complete_none \"${cmd}-d main\"\n+\n+    # Check completing a GDB command, with and without -d.\n+    test_gdb_complete_unique \\\n+\t\"${cmd}maint set test-se\" \\\n+\t\"${cmd}maint set test-settings\"\n+    test_gdb_complete_unique \\\n+\t\"${cmd}-d XXX maint set test-se\" \\\n+\t\"${cmd}-d XXX maint set test-settings\"\n+\n+    # Check that GDB doesn't try to complete the shell command.\n+    test_gdb_complete_none \\\n+\t\"${cmd}print 1 | \"\n+\n+    # Same, while making sure that the completer understands \"-d\".\n+    test_gdb_complete_unique \\\n+\t\"${cmd}-d XXX maint set\" \\\n+\t\"${cmd}-d XXX maint set\"\n+    test_gdb_complete_none \\\n+\t\"${cmd}-d set maint set\"\n+    test_gdb_complete_none \\\n+\t\"${cmd}-d set maint set \"\n+}"
    }
  ]
}