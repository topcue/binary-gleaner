{
  "sha": "224d6424bab021a0a8e16f07d52f8af5e153e91f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjI0ZDY0MjRiYWIwMjFhMGE4ZTE2ZjA3ZDUyZjhhZjVlMTUzZTkxZg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:19Z"
    },
    "message": "Introduce subscript_operation\n\nThis adds class subscript_operation, which implements BINOP_SUBSCRIPT.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* expop.h (class subscript_operation): New.\n\t* eval.c (eval_op_subscript): No longer static.",
    "tree": {
      "sha": "8f2d47a925f9b24ea251bde9fb2801f678065ee0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8f2d47a925f9b24ea251bde9fb2801f678065ee0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/224d6424bab021a0a8e16f07d52f8af5e153e91f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/224d6424bab021a0a8e16f07d52f8af5e153e91f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/224d6424bab021a0a8e16f07d52f8af5e153e91f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/224d6424bab021a0a8e16f07d52f8af5e153e91f/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "373907ffb2db9232af14d2a7e4433f41cc1fc56c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/373907ffb2db9232af14d2a7e4433f41cc1fc56c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/373907ffb2db9232af14d2a7e4433f41cc1fc56c"
    }
  ],
  "stats": {
    "total": 56,
    "additions": 55,
    "deletions": 1
  },
  "files": [
    {
      "sha": "b84ebfb1ec71420019c6576a631c1520ecb1d2e1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/224d6424bab021a0a8e16f07d52f8af5e153e91f/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/224d6424bab021a0a8e16f07d52f8af5e153e91f/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=224d6424bab021a0a8e16f07d52f8af5e153e91f",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* expop.h (class subscript_operation): New.\n+\t* eval.c (eval_op_subscript): No longer static.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* expop.h (class binop_operation, class usual_ax_binop_operation):"
    },
    {
      "sha": "056daa051602e581c9fe886989852855f6a558ab",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 34,
      "deletions": 1,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/224d6424bab021a0a8e16f07d52f8af5e153e91f/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/224d6424bab021a0a8e16f07d52f8af5e153e91f/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=224d6424bab021a0a8e16f07d52f8af5e153e91f",
      "patch": "@@ -1558,7 +1558,7 @@ eval_op_binary (struct type *expect_type, struct expression *exp,\n \n /* A helper function for BINOP_SUBSCRIPT.  */\n \n-static struct value *\n+struct value *\n eval_op_subscript (struct type *expect_type, struct expression *exp,\n \t\t   enum noside noside, enum exp_opcode op,\n \t\t   struct value *arg1, struct value *arg2)\n@@ -3536,6 +3536,39 @@ var_msym_value_operation::evaluate_for_sizeof (struct expression *exp,\n   return value_from_longest (size_type, TYPE_LENGTH (type));\n }\n \n+value *\n+subscript_operation::evaluate_for_sizeof (struct expression *exp,\n+\t\t\t\t\t  enum noside noside)\n+{\n+  if (noside == EVAL_NORMAL)\n+    {\n+      value *val = std::get<0> (m_storage)->evaluate (nullptr, exp,\n+\t\t\t\t\t\t      EVAL_AVOID_SIDE_EFFECTS);\n+      struct type *type = check_typedef (value_type (val));\n+      if (type->code () == TYPE_CODE_ARRAY)\n+\t{\n+\t  type = check_typedef (TYPE_TARGET_TYPE (type));\n+\t  if (type->code () == TYPE_CODE_ARRAY)\n+\t    {\n+\t      type = type->index_type ();\n+\t      /* Only re-evaluate the right hand side if the resulting type\n+\t\t is a variable length type.  */\n+\t      if (type->bounds ()->flag_bound_evaluated)\n+\t\t{\n+\t\t  val = evaluate (nullptr, exp, EVAL_NORMAL);\n+\t\t  /* FIXME: This should be size_t.  */\n+\t\t  struct type *size_type\n+\t\t    = builtin_type (exp->gdbarch)->builtin_int;\n+\t\t  return value_from_longest\n+\t\t    (size_type, (LONGEST) TYPE_LENGTH (value_type (val)));\n+\t\t}\n+\t    }\n+\t}\n+    }\n+\n+  return operation::evaluate_for_sizeof (exp, noside);\n+}\n+\n }\n \n /* Evaluate a subexpression of EXP, at index *POS, and return a value"
    },
    {
      "sha": "5c3b0afee551b611c5021821058662dd341ed33e",
      "filename": "gdb/expop.h",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/224d6424bab021a0a8e16f07d52f8af5e153e91f/gdb/expop.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/224d6424bab021a0a8e16f07d52f8af5e153e91f/gdb/expop.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/expop.h?ref=224d6424bab021a0a8e16f07d52f8af5e153e91f",
      "patch": "@@ -100,6 +100,11 @@ extern struct value *eval_op_binary (struct type *expect_type,\n \t\t\t\t     struct expression *exp,\n \t\t\t\t     enum noside noside, enum exp_opcode op,\n \t\t\t\t     struct value *arg1, struct value *arg2);\n+extern struct value *eval_op_subscript (struct type *expect_type,\n+\t\t\t\t\tstruct expression *exp,\n+\t\t\t\t\tenum noside noside, enum exp_opcode op,\n+\t\t\t\t\tstruct value *arg1,\n+\t\t\t\t\tstruct value *arg2);\n \n namespace expr\n {\n@@ -1112,6 +1117,17 @@ using bitwise_ior_operation\n using bitwise_xor_operation\n      = usual_ax_binop_operation<BINOP_BITWISE_XOR, eval_op_binary>;\n \n+class subscript_operation\n+  : public usual_ax_binop_operation<BINOP_SUBSCRIPT, eval_op_subscript>\n+{\n+public:\n+  using usual_ax_binop_operation<BINOP_SUBSCRIPT,\n+\t\t\t\t eval_op_subscript>::usual_ax_binop_operation;\n+\n+  value *evaluate_for_sizeof (struct expression *exp,\n+\t\t\t      enum noside noside) override;\n+};\n+\n } /* namespace expr */\n \n #endif /* EXPOP_H */"
    }
  ]
}