{
  "sha": "e8b4efc3cf3d5d2c475b3e5c31439aa5bcd277ae",
  "node_id": "C_kwDOANOeidoAKGU4YjRlZmMzY2YzZDVkMmM0NzViM2U1YzMxNDM5YWE1YmNkMjc3YWU",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2022-01-06T15:42:49Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2022-02-25T14:30:30Z"
    },
    "message": "Print MI prompt on interrupted command\n\nJoel noticed that if the remote dies unexpectedly during a command --\nyou can simulate this by using \"continue\" and then killing gdbserver\n-- then the CLI will print a new prompt, but MI will not.  Later, we\nfound out that this was also filed in bugzilla as PR mi/23820.\n\nThe output looks something like this:\n\n    | (gdb)\n    | cont\n    | &\"cont\\n\"\n    | ~\"Continuing.\\n\"\n    | ^running\n    | *running,thread-id=\"all\"\n    | (gdb)\n    | [... some output from GDB during program startup...]\n    | =thread-exited,id=\"1\",group-id=\"i1\"\n    | =thread-group-exited,id=\"i1\"\n    | &\"Remote connection closed\\n\"\n\nNow, what about that \"(gdb)\" in the middle?\n\nThat prompt comes from this questionable code in\nmi-interp.c:mi_on_resume_1:\n\n      /* This is what gdb used to do historically -- printing prompt\n\t even if it cannot actually accept any input.  This will be\n\t surely removed for MI3, and may be removed even earlier.  */\n      if (current_ui->prompt_state == PROMPT_BLOCKED)\n\tfputs_unfiltered (\"(gdb) \\n\", mi->raw_stdout);\n\n... which seems like something to remove.  But maybe the intent here\nis that this prompt is sufficient, and MI clients must be ready to\nhandle output coming after a prompt.  On the other hand, if this code\n*is* removed, then nothing would print a prompt in this scenario.\n\nAnyway, the CLI and the TUI handle emitting the prompt here by hooking\ninto gdb::observers::command_error, but MI doesn't install an observer\nhere.\n\nThis patch adds the missing observer and arranges to show the MI\nprompt.  Regression tested on x86-64 Fedora 34.\n\nIt seems like this area could be improved a bit, by having\nstart_event_loop call the prompt-displaying code directly, rather than\nindirecting through an observer.  However, I haven't done this.\n\nBug: https://sourceware.org/bugzilla/show_bug.cgi?id=23820",
    "tree": {
      "sha": "cde343eebe528f816ddecd6469bdd9d3d4634047",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cde343eebe528f816ddecd6469bdd9d3d4634047"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e8b4efc3cf3d5d2c475b3e5c31439aa5bcd277ae",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e8b4efc3cf3d5d2c475b3e5c31439aa5bcd277ae",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e8b4efc3cf3d5d2c475b3e5c31439aa5bcd277ae",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e8b4efc3cf3d5d2c475b3e5c31439aa5bcd277ae/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "13cd9508afbe7435b562f75e2440e74ae1747fd3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13cd9508afbe7435b562f75e2440e74ae1747fd3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/13cd9508afbe7435b562f75e2440e74ae1747fd3"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 11,
    "deletions": 0
  },
  "files": [
    {
      "sha": "2c47024d5e6ad31d24ab7939b285954342074658",
      "filename": "gdb/mi/mi-interp.c",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8b4efc3cf3d5d2c475b3e5c31439aa5bcd277ae/gdb/mi/mi-interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8b4efc3cf3d5d2c475b3e5c31439aa5bcd277ae/gdb/mi/mi-interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-interp.c?ref=e8b4efc3cf3d5d2c475b3e5c31439aa5bcd277ae",
      "patch": "@@ -112,6 +112,16 @@ as_mi_interp (struct interp *interp)\n   return dynamic_cast<mi_interp *> (interp);\n }\n \n+/* Observer for the command_error notification.  */\n+\n+static void\n+mi_on_command_error ()\n+{\n+  mi_interp *mi = as_mi_interp (top_level_interpreter ());\n+  if (mi != nullptr)\n+    display_mi_prompt (mi);\n+}\n+\n void\n mi_interp::init (bool top_level)\n {\n@@ -1369,6 +1379,7 @@ _initialize_mi_interp ()\n \t\t\t\t\t      \"mi-interp\");\n   gdb::observers::command_param_changed.attach (mi_command_param_changed,\n \t\t\t\t\t\t\"mi-interp\");\n+  gdb::observers::command_error.attach (mi_on_command_error, \"mi-interp\");\n   gdb::observers::memory_changed.attach (mi_memory_changed, \"mi-interp\");\n   gdb::observers::sync_execution_done.attach (mi_on_sync_execution_done,\n \t\t\t\t\t      \"mi-interp\");"
    }
  ]
}