{
  "sha": "2235ecb8afebeb56baf29eb98de34cfa1b95f697",
  "node_id": "C_kwDOANOeidoAKDIyMzVlY2I4YWZlYmViNTZiYWYyOWViOThkZTM0Y2ZhMWI5NWY2OTc",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2022-01-14T09:54:21Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2022-01-14T09:54:21Z"
    },
    "message": "x86: reduce AVX512-FP16 set of insns decoded through vex_w_table[]\n\nLike already indicated during review of the original submission, there's\nreally only very few insns where going through this table is easier /\ncheaper than using suitable macros. Utilize %XH more and introduce\nsimilar %XS and %XD (which subsequently can be used for further table\nsize reduction).\n\nWhile there also switch to using oappend() in 'XH' macro processing.",
    "tree": {
      "sha": "f75c3ae08807157db4430a4f69b1643fa499339d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f75c3ae08807157db4430a4f69b1643fa499339d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2235ecb8afebeb56baf29eb98de34cfa1b95f697",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2235ecb8afebeb56baf29eb98de34cfa1b95f697",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2235ecb8afebeb56baf29eb98de34cfa1b95f697",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2235ecb8afebeb56baf29eb98de34cfa1b95f697/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "62dd9d917793f475024ce35eeb323608dc9d3bde",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/62dd9d917793f475024ce35eeb323608dc9d3bde",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/62dd9d917793f475024ce35eeb323608dc9d3bde"
    }
  ],
  "stats": {
    "total": 214,
    "additions": 77,
    "deletions": 137
  },
  "files": [
    {
      "sha": "64a43ce02a1958a60dd06271b52cb14c112f81c4",
      "filename": "opcodes/i386-dis-evex-prefix.h",
      "status": "modified",
      "additions": 30,
      "deletions": 39,
      "changes": 69,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2235ecb8afebeb56baf29eb98de34cfa1b95f697/opcodes/i386-dis-evex-prefix.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2235ecb8afebeb56baf29eb98de34cfa1b95f697/opcodes/i386-dis-evex-prefix.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex-prefix.h?ref=2235ecb8afebeb56baf29eb98de34cfa1b95f697",
      "patch": "@@ -375,17 +375,17 @@\n     { \"vfmsub213s%XW\",\t{ XMScalar, VexScalar, EXdq, EXxEVexR }, 0 },\n     { \"v4fnmaddss\",\t{ XMScalar, VexScalar, Mxmm }, 0 },\n   },\n-  /* PREFIX_EVEX_0F3A08_W_0 */\n+  /* PREFIX_EVEX_0F3A08 */\n   {\n-    { \"vrndscaleph\",    { XM, EXxh, EXxEVexS, Ib }, 0 },\n+    { \"vrndscalep%XH\",  { XM, EXxh, EXxEVexS, Ib }, 0 },\n     { Bad_Opcode },\n-    { \"vrndscaleps\",    { XM, EXx, EXxEVexS, Ib }, 0 },\n+    { \"vrndscalep%XS\",  { XM, EXx, EXxEVexS, Ib }, 0 },\n   },\n-  /* PREFIX_EVEX_0F3A0A_W_0 */\n+  /* PREFIX_EVEX_0F3A0A */\n   {\n-    { \"vrndscalesh\",    { XMScalar, VexScalar, EXw, EXxEVexS, Ib }, 0 },\n+    { \"vrndscales%XH\",  { XMScalar, VexScalar, EXw, EXxEVexS, Ib }, 0 },\n     { Bad_Opcode },\n-    { \"vrndscaless\",    { XMScalar, VexScalar, EXd, EXxEVexS, Ib }, 0 },\n+    { \"vrndscales%XS\",  { XMScalar, VexScalar, EXd, EXxEVexS, Ib }, 0 },\n   },\n   /* PREFIX_EVEX_0F3A26 */\n   {\n@@ -482,27 +482,18 @@\n     { \"vmulp%XH\", { XM, Vex, EXxh, EXxEVexR }, 0 },\n     { \"vmuls%XH\", { XMM, VexScalar, EXw, EXxEVexR }, 0 },\n   },\n-  /* PREFIX_EVEX_MAP5_5A_W_0 */\n+  /* PREFIX_EVEX_MAP5_5A */\n   {\n-    { \"vcvtph2pd\",      { XM, EXxmmqdh, EXxEVexS }, 0 },\n-    { \"vcvtsh2sd\",      { XMM, VexScalar, EXw, EXxEVexS }, 0 },\n+    { \"vcvtp%XH2pd\",    { XM, EXxmmqdh, EXxEVexS }, 0 },\n+    { \"vcvts%XH2sd\",    { XMM, VexScalar, EXw, EXxEVexS }, 0 },\n+    { \"vcvtp%XD2ph%XZ\", { XMM, EXx, EXxEVexR }, 0 },\n+    { \"vcvts%XD2sh\",    { XMM, VexScalar, EXq, EXxEVexR }, 0 },\n   },\n-  /* PREFIX_EVEX_MAP5_5A_W_1 */\n+  /* PREFIX_EVEX_MAP5_5B */\n   {\n-    { Bad_Opcode },\n-    { Bad_Opcode },\n-    { \"vcvtpd2ph%XZ\",   { XMM, EXx, EXxEVexR }, 0 },\n-    { \"vcvtsd2sh\",      { XMM, VexScalar, EXq, EXxEVexR }, 0 },\n-  },\n-  /* PREFIX_EVEX_MAP5_5B_W_0 */\n-  {\n-    { \"vcvtdq2ph%XY\",   { XMxmmq, EXx, EXxEVexR }, 0 },\n-    { \"vcvttph2dq\",     { XM, EXxmmqh, EXxEVexS }, 0 },\n-    { \"vcvtph2dq\",      { XM, EXxmmqh, EXxEVexR }, 0 },\n-  },\n-  /* PREFIX_EVEX_MAP5_5B_W_1 */\n-  {\n-    { \"vcvtqq2ph%XZ\",   { XMM, EXx, EXxEVexR }, 0 },\n+    { VEX_W_TABLE (EVEX_W_MAP5_5B_P_0) },\n+    { \"vcvttp%XH2dq\",   { XM, EXxmmqh, EXxEVexS }, 0 },\n+    { \"vcvtp%XH2dq\",    { XM, EXxmmqh, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_MAP5_5C */\n   {\n@@ -526,47 +517,47 @@\n   },\n   /* PREFIX_EVEX_MAP5_78 */\n   {\n-    { VEX_W_TABLE (EVEX_W_MAP5_78_P_0) },\n+    { \"vcvttp%XH2udq\",  { XM, EXxmmqh, EXxEVexS }, 0 },\n     { \"vcvttsh2usi\",    { Gdq, EXw, EXxEVexS }, 0 },\n-    { VEX_W_TABLE (EVEX_W_MAP5_78_P_2) },\n+    { \"vcvttp%XH2uqq\",  { XM, EXxmmqdh, EXxEVexS }, 0 },\n   },\n   /* PREFIX_EVEX_MAP5_79 */\n   {\n-    { VEX_W_TABLE (EVEX_W_MAP5_79_P_0) },\n+    { \"vcvtp%XH2udq\",   { XM, EXxmmqh, EXxEVexR }, 0 },\n     { \"vcvtsh2usi\",     { Gdq, EXw, EXxEVexR }, 0 },\n-    { VEX_W_TABLE (EVEX_W_MAP5_79_P_2) },\n+    { \"vcvtp%XH2uqq\",   { XM, EXxmmqdh, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_MAP5_7A */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { VEX_W_TABLE (EVEX_W_MAP5_7A_P_2) },\n+    { \"vcvttp%XH2qq\",   { XM, EXxmmqdh, EXxEVexS }, 0 },\n     { VEX_W_TABLE (EVEX_W_MAP5_7A_P_3) },\n   },\n   /* PREFIX_EVEX_MAP5_7B */\n   {\n     { Bad_Opcode },\n     { \"vcvtusi2sh{%LQ|}\",       { XMScalar, VexScalar, EXxEVexR, Edq }, 0 },\n-    { VEX_W_TABLE (EVEX_W_MAP5_7B_P_2) },\n+    { \"vcvtp%XH2qq\",    { XM, EXxmmqdh, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_MAP5_7C */\n   {\n-    { VEX_W_TABLE (EVEX_W_MAP5_7C_P_0) },\n+    { \"vcvttp%XH2uw\",   { XM, EXxh, EXxEVexS }, 0 },\n     { Bad_Opcode },\n-    { VEX_W_TABLE (EVEX_W_MAP5_7C_P_2) },\n+    { \"vcvttp%XH2w\",    { XM, EXxh, EXxEVexS }, 0 },\n   },\n-  /* PREFIX_EVEX_MAP5_7D_W_0 */\n+  /* PREFIX_EVEX_MAP5_7D */\n   {\n-    { \"vcvtph2uw\",      { XM, EXxh, EXxEVexR }, 0 },\n-    { \"vcvtw2ph\",       { XM, EXxh, EXxEVexR }, 0 },\n-    { \"vcvtph2w\",       { XM, EXxh, EXxEVexR }, 0 },\n-    { \"vcvtuw2ph\",      { XM, EXxh, EXxEVexR }, 0 },\n+    { \"vcvtp%XH2uw\",    { XM, EXxh, EXxEVexR }, 0 },\n+    { \"vcvtw2p%XH\",     { XM, EXxh, EXxEVexR }, 0 },\n+    { \"vcvtp%XH2w\",     { XM, EXxh, EXxEVexR }, 0 },\n+    { \"vcvtuw2p%XH\",    { XM, EXxh, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_MAP6_13 */\n   {\n-    { VEX_W_TABLE (EVEX_W_MAP6_13_P_0) },\n+    { \"vcvts%XH2ss\",\t{ XMM, VexScalar, EXw, EXxEVexS }, 0 },\n     { Bad_Opcode },\n-    { VEX_W_TABLE (EVEX_W_MAP6_13_P_2) },\n+    { \"vcvtp%XH2psx\",\t{ XM, EXxmmqh, EXxEVexS }, 0 },\n   },\n   /* PREFIX_EVEX_MAP6_56 */\n   {"
    },
    {
      "sha": "fc0a0791d1d5ca1b322162af5724559f12e898ac",
      "filename": "opcodes/i386-dis-evex-w.h",
      "status": "modified",
      "additions": 3,
      "deletions": 60,
      "changes": 63,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2235ecb8afebeb56baf29eb98de34cfa1b95f697/opcodes/i386-dis-evex-w.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2235ecb8afebeb56baf29eb98de34cfa1b95f697/opcodes/i386-dis-evex-w.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex-w.h?ref=2235ecb8afebeb56baf29eb98de34cfa1b95f697",
      "patch": "@@ -550,19 +550,11 @@\n     { Bad_Opcode },\n     { \"vpermilpd\",\t{ XM, EXx, Ib }, PREFIX_DATA },\n   },\n-  /* EVEX_W_0F3A08 */\n-  {\n-    { PREFIX_TABLE (PREFIX_EVEX_0F3A08_W_0) },\n-  },\n   /* EVEX_W_0F3A09 */\n   {\n     { Bad_Opcode },\n     { \"vrndscalepd\",\t{ XM, EXx, EXxEVexS, Ib }, PREFIX_DATA },\n   },\n-  /* EVEX_W_0F3A0A */\n-  {\n-    { PREFIX_TABLE (PREFIX_EVEX_0F3A0A_W_0) },\n-  },\n   /* EVEX_W_0F3A0B */\n   {\n     { Bad_Opcode },\n@@ -636,62 +628,13 @@\n     { Bad_Opcode },\n     { \"vpshrdw\",   { XM, Vex, EXx, Ib }, 0 },\n   },\n-  /* EVEX_W_MAP5_5A */\n-  {\n-    { PREFIX_TABLE (PREFIX_EVEX_MAP5_5A_W_0) },\n-    { PREFIX_TABLE (PREFIX_EVEX_MAP5_5A_W_1) },\n-  },\n-  /* EVEX_W_MAP5_5B */\n-  {\n-    { PREFIX_TABLE (PREFIX_EVEX_MAP5_5B_W_0) },\n-    { PREFIX_TABLE (PREFIX_EVEX_MAP5_5B_W_1) },\n-  },\n-  /* EVEX_W_MAP5_78_P_0 */\n-  {\n-    { \"vcvttph2udq\",\t{ XM, EXxmmqh, EXxEVexS }, 0 },\n-  },\n-  /* EVEX_W_MAP5_78_P_2 */\n-  {\n-    { \"vcvttph2uqq\",\t{ XM, EXxmmqdh, EXxEVexS }, 0 },\n-  },\n-  /* EVEX_W_MAP5_79_P_0 */\n-  {\n-    { \"vcvtph2udq\",\t{ XM, EXxmmqh, EXxEVexR }, 0 },\n-  },\n-  /* EVEX_W_MAP5_79_P_2 */\n+  /* EVEX_W_MAP5_5B_P_0 */\n   {\n-    { \"vcvtph2uqq\",\t{ XM, EXxmmqdh, EXxEVexR }, 0 },\n-  },\n-  /* EVEX_W_MAP5_7A_P_2 */\n-  {\n-    { \"vcvttph2qq\",\t{ XM, EXxmmqdh, EXxEVexS }, 0 },\n+    { \"vcvtdq2ph%XY\",\t{ XMxmmq, EXx, EXxEVexR }, 0 },\n+    { \"vcvtqq2ph%XZ\",\t{ XMM, EXx, EXxEVexR }, 0 },\n   },\n   /* EVEX_W_MAP5_7A_P_3 */\n   {\n     { \"vcvtudq2ph%XY\",\t{ XMxmmq, EXx, EXxEVexR }, 0 },\n     { \"vcvtuqq2ph%XZ\",\t{ XMM, EXx, EXxEVexR }, 0 },\n   },\n-  /* EVEX_W_MAP5_7B_P_2 */\n-  {\n-    { \"vcvtph2qq\",\t{ XM, EXxmmqdh, EXxEVexR }, 0 },\n-  },\n-  /* EVEX_W_MAP5_7C_P_0 */\n-  {\n-    { \"vcvttph2uw\",\t{ XM, EXxh, EXxEVexS }, 0 },\n-  },\n-  /* EVEX_W_MAP5_7C_P_2 */\n-  {\n-    { \"vcvttph2w\",\t{ XM, EXxh, EXxEVexS }, 0 },\n-  },\n-  /* EVEX_W_MAP5_7D */\n-  {\n-    { PREFIX_TABLE (PREFIX_EVEX_MAP5_7D_W_0) },\n-  },\n-  /* EVEX_W_MAP6_13_P_0 */\n-  {\n-    { \"vcvtsh2ss\",\t{ XMM, VexScalar, EXw, EXxEVexS }, 0 },\n-  },\n-  /* EVEX_W_MAP6_13_P_2 */\n-  {\n-    { \"vcvtph2psx\",\t{ XM, EXxmmqh, EXxEVexS }, 0 },\n-  },"
    },
    {
      "sha": "11cc257bb2e3900e0146000940aadebb69d266f5",
      "filename": "opcodes/i386-dis-evex.h",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2235ecb8afebeb56baf29eb98de34cfa1b95f697/opcodes/i386-dis-evex.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2235ecb8afebeb56baf29eb98de34cfa1b95f697/opcodes/i386-dis-evex.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex.h?ref=2235ecb8afebeb56baf29eb98de34cfa1b95f697",
      "patch": "@@ -593,9 +593,9 @@ static const struct dis386 evex_table[][256] = {\n     { Bad_Opcode },\n     { Bad_Opcode },\n     /* 08 */\n-    { VEX_W_TABLE (EVEX_W_0F3A08) },\n+    { PREFIX_TABLE (PREFIX_EVEX_0F3A08) },\n     { VEX_W_TABLE (EVEX_W_0F3A09) },\n-    { VEX_W_TABLE (EVEX_W_0F3A0A) },\n+    { PREFIX_TABLE (PREFIX_EVEX_0F3A0A) },\n     { VEX_W_TABLE (EVEX_W_0F3A0B) },\n     { Bad_Opcode },\n     { Bad_Opcode },\n@@ -976,8 +976,8 @@ static const struct dis386 evex_table[][256] = {\n     /* 58 */\n     { PREFIX_TABLE (PREFIX_EVEX_MAP5_58) },\n     { PREFIX_TABLE (PREFIX_EVEX_MAP5_59) },\n-    { VEX_W_TABLE (EVEX_W_MAP5_5A) },\n-    { VEX_W_TABLE (EVEX_W_MAP5_5B) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_5A) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_5B) },\n     { PREFIX_TABLE (PREFIX_EVEX_MAP5_5C) },\n     { PREFIX_TABLE (PREFIX_EVEX_MAP5_5D) },\n     { PREFIX_TABLE (PREFIX_EVEX_MAP5_5E) },\n@@ -1015,7 +1015,7 @@ static const struct dis386 evex_table[][256] = {\n     { PREFIX_TABLE (PREFIX_EVEX_MAP5_7A) },\n     { PREFIX_TABLE (PREFIX_EVEX_MAP5_7B) },\n     { PREFIX_TABLE (PREFIX_EVEX_MAP5_7C) },\n-    { VEX_W_TABLE (EVEX_W_MAP5_7D) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_7D) },\n     { \"vmovw\",\t  { Edw, XMScalar }, PREFIX_DATA },\n     { Bad_Opcode },\n     /* 80 */"
    },
    {
      "sha": "afc3743e4e8fa5c17d8751385c22d2379f106218",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 39,
      "deletions": 33,
      "changes": 72,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2235ecb8afebeb56baf29eb98de34cfa1b95f697/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2235ecb8afebeb56baf29eb98de34cfa1b95f697/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=2235ecb8afebeb56baf29eb98de34cfa1b95f697",
      "patch": "@@ -1212,8 +1212,8 @@ enum\n   PREFIX_EVEX_0F38AA,\n   PREFIX_EVEX_0F38AB,\n \n-  PREFIX_EVEX_0F3A08_W_0,\n-  PREFIX_EVEX_0F3A0A_W_0,\n+  PREFIX_EVEX_0F3A08,\n+  PREFIX_EVEX_0F3A0A,\n   PREFIX_EVEX_0F3A26,\n   PREFIX_EVEX_0F3A27,\n   PREFIX_EVEX_0F3A56,\n@@ -1233,10 +1233,8 @@ enum\n   PREFIX_EVEX_MAP5_51,\n   PREFIX_EVEX_MAP5_58,\n   PREFIX_EVEX_MAP5_59,\n-  PREFIX_EVEX_MAP5_5A_W_0,\n-  PREFIX_EVEX_MAP5_5A_W_1,\n-  PREFIX_EVEX_MAP5_5B_W_0,\n-  PREFIX_EVEX_MAP5_5B_W_1,\n+  PREFIX_EVEX_MAP5_5A,\n+  PREFIX_EVEX_MAP5_5B,\n   PREFIX_EVEX_MAP5_5C,\n   PREFIX_EVEX_MAP5_5D,\n   PREFIX_EVEX_MAP5_5E,\n@@ -1246,7 +1244,7 @@ enum\n   PREFIX_EVEX_MAP5_7A,\n   PREFIX_EVEX_MAP5_7B,\n   PREFIX_EVEX_MAP5_7C,\n-  PREFIX_EVEX_MAP5_7D_W_0,\n+  PREFIX_EVEX_MAP5_7D,\n \n   PREFIX_EVEX_MAP6_13,\n   PREFIX_EVEX_MAP6_56,\n@@ -1746,9 +1744,7 @@ enum\n   EVEX_W_0F3883,\n \n   EVEX_W_0F3A05,\n-  EVEX_W_0F3A08,\n   EVEX_W_0F3A09,\n-  EVEX_W_0F3A0A,\n   EVEX_W_0F3A0B,\n   EVEX_W_0F3A18_L_n,\n   EVEX_W_0F3A19_L_n,\n@@ -1765,21 +1761,8 @@ enum\n   EVEX_W_0F3A70,\n   EVEX_W_0F3A72,\n \n-  EVEX_W_MAP5_5A,\n-  EVEX_W_MAP5_5B,\n-  EVEX_W_MAP5_78_P_0,\n-  EVEX_W_MAP5_78_P_2,\n-  EVEX_W_MAP5_79_P_0,\n-  EVEX_W_MAP5_79_P_2,\n-  EVEX_W_MAP5_7A_P_2,\n+  EVEX_W_MAP5_5B_P_0,\n   EVEX_W_MAP5_7A_P_3,\n-  EVEX_W_MAP5_7B_P_2,\n-  EVEX_W_MAP5_7C_P_0,\n-  EVEX_W_MAP5_7C_P_2,\n-  EVEX_W_MAP5_7D,\n-\n-  EVEX_W_MAP6_13_P_0,\n-  EVEX_W_MAP6_13_P_2,\n };\n \n typedef void (*op_rtn) (instr_info *ins, int bytemode, int sizeflag);\n@@ -1840,7 +1823,9 @@ struct dis386 {\n    \"XZ\" => print 'x', 'y', or 'z' if suffix_always is true or no\n \t   register operands and no broadcast.\n    \"XW\" => print 's', 'd' depending on the VEX.W bit (for FMA)\n+   \"XD\" => print 'd' if EVEX.W=1, EVEX.W=0 is not a valid encoding\n    \"XH\" => print 'h' if EVEX.W=0, EVEX.W=1 is not a valid encoding (for FP16)\n+   \"XS\" => print 's' if EVEX.W=0, EVEX.W=1 is not a valid encoding\n    \"XV\" => print \"{vex3}\" pseudo prefix\n    \"LQ\" => print 'l' ('d' in Intel mode) or 'q' for memory operand, cond\n \t   being false, or no operand at all in 64bit mode, or if suffix_always\n@@ -10496,6 +10481,23 @@ putop (instr_info *ins, const char *in_template, int sizeflag)\n \t    }\n \t  break;\n \tcase 'D':\n+\t  if (l == 1)\n+\t    {\n+\t      switch (last[0])\n+\t      {\n+\t      case 'X':\n+\t\tif (ins->vex.w)\n+\t\t  *ins->obufp++ = 'd';\n+\t\telse\n+\t\t  oappend (ins, \"{bad}\");\n+\t\tbreak;\n+\t      default:\n+\t\tabort ();\n+\t      }\n+\t      break;\n+\t    }\n+\t  if (l)\n+\t    abort ();\n \t  if (ins->intel_syntax || !(sizeflag & SUFFIX_ALWAYS))\n \t    break;\n \t  USED_REX (REX_W);\n@@ -10582,13 +10584,7 @@ putop (instr_info *ins, const char *in_template, int sizeflag)\n \t      if (ins->vex.w == 0)\n \t\t*ins->obufp++ = 'h';\n \t      else\n-\t\t{\n-\t\t  *ins->obufp++ = '{';\n-\t\t  *ins->obufp++ = 'b';\n-\t\t  *ins->obufp++ = 'a';\n-\t\t  *ins->obufp++ = 'd';\n-\t\t  *ins->obufp++ = '}';\n-\t\t}\n+\t\toappend (ins, \"{bad}\");\n \t    }\n \t  else\n \t    abort ();\n@@ -10752,9 +10748,13 @@ putop (instr_info *ins, const char *in_template, int sizeflag)\n \t\t      ins->used_prefixes |= (ins->prefixes & PREFIX_DATA);\n \t\t    }\n \t\t}\n+\t      break;\n \t    }\n-\t  else if (l == 1 && last[0] == 'L')\n+\t  if (l != 1)\n+\t    abort ();\n+\t  switch (last[0])\n \t    {\n+\t    case 'L':\n \t      if (ins->address_mode == mode_64bit\n \t\t  && !(ins->prefixes & PREFIX_ADDR))\n \t\t{\n@@ -10764,9 +10764,15 @@ putop (instr_info *ins, const char *in_template, int sizeflag)\n \t\t}\n \n \t      goto case_S;\n+\t    case 'X':\n+\t      if (!ins->vex.w)\n+\t\t*ins->obufp++ = 's';\n+\t      else\n+\t\toappend (ins, \"{bad}\");\n+\t      break;\n+\t    default:\n+\t      abort ();\n \t    }\n-\t  else\n-\t    abort ();\n \t  break;\n \tcase 'V':\n \t  if (l == 0)"
    }
  ]
}