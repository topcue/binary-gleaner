{
  "sha": "ca02d7c8003ad020bb39f0b26dc93b661be67132",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2EwMmQ3YzgwMDNhZDAyMGJiMzlmMGIyNmRjOTNiNjYxYmU2NzEzMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-13T22:19:11Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-20T22:45:50Z"
    },
    "message": "Add two methods to tui_data_window\n\nThis changes tui_show_registers and tui_show_register_group to be\nmethods on tui_data_window.\n\n2019-08-20  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-regs.h (struct tui_data_window) <show_registers,\n\tshow_register_group>: Declare.\n\t(tui_show_register_group): Don't declare.\n\t* tui/tui-regs.c (tui_data_window::show_registers): Rename from\n\ttui_show_registers.\n\t(tui_data_window::show_register_group): Rename from\n\ttui_show_register_group.\n\t(tui_data_window::check_register_values, tui_reg_command):\n\tUpdate.\n\t* tui/tui-layout.c (tui_set_layout): Update.",
    "tree": {
      "sha": "37d9d05085c631d4dcbdd4799a1e89b113169181",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/37d9d05085c631d4dcbdd4799a1e89b113169181"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ca02d7c8003ad020bb39f0b26dc93b661be67132",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ca02d7c8003ad020bb39f0b26dc93b661be67132",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ca02d7c8003ad020bb39f0b26dc93b661be67132",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ca02d7c8003ad020bb39f0b26dc93b661be67132/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "63356bfda1603f67db865dceff5a3a4d028c9d5a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/63356bfda1603f67db865dceff5a3a4d028c9d5a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/63356bfda1603f67db865dceff5a3a4d028c9d5a"
    }
  ],
  "stats": {
    "total": 78,
    "additions": 43,
    "deletions": 35
  },
  "files": [
    {
      "sha": "e50995d858d1429c66737c781ddd7df0bbfea229",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ca02d7c8003ad020bb39f0b26dc93b661be67132/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ca02d7c8003ad020bb39f0b26dc93b661be67132/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ca02d7c8003ad020bb39f0b26dc93b661be67132",
      "patch": "@@ -1,3 +1,16 @@\n+2019-08-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-regs.h (struct tui_data_window) <show_registers,\n+\tshow_register_group>: Declare.\n+\t(tui_show_register_group): Don't declare.\n+\t* tui/tui-regs.c (tui_data_window::show_registers): Rename from\n+\ttui_show_registers.\n+\t(tui_data_window::show_register_group): Rename from\n+\ttui_show_register_group.\n+\t(tui_data_window::check_register_values, tui_reg_command):\n+\tUpdate.\n+\t* tui/tui-layout.c (tui_set_layout): Update.\n+\n 2019-08-20  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-regs.h (struct tui_data_window) <check_register_values>:"
    },
    {
      "sha": "08b18e5efa14d1efcc76eb4c6042721b8e48489f",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ca02d7c8003ad020bb39f0b26dc93b661be67132/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ca02d7c8003ad020bb39f0b26dc93b661be67132/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=ca02d7c8003ad020bb39f0b26dc93b661be67132",
      "patch": "@@ -189,7 +189,7 @@ tui_set_layout (enum tui_layout_type layout_type)\n       tui_update_source_windows_with_addr (gdbarch, addr);\n       if (new_layout == SRC_DATA_COMMAND\n \t  || new_layout == DISASSEM_DATA_COMMAND)\n-\ttui_show_registers (TUI_DATA_WIN->current_group);\n+\tTUI_DATA_WIN->show_registers (TUI_DATA_WIN->current_group);\n     }\n }\n "
    },
    {
      "sha": "8adfb1520a23022199a9ea2b29cdef2c26af7f1a",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 23,
      "deletions": 32,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ca02d7c8003ad020bb39f0b26dc93b661be67132/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ca02d7c8003ad020bb39f0b26dc93b661be67132/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=ca02d7c8003ad020bb39f0b26dc93b661be67132",
      "patch": "@@ -44,11 +44,6 @@\n \n static void tui_display_register (struct tui_data_item_window *data);\n \n-static void tui_show_register_group (tui_data_window *win_info,\n-\t\t\t\t     struct reggroup *group,\n-\t\t\t\t     struct frame_info *frame,\n-\t\t\t\t     int refresh_values_only);\n-\n /* Get the register from the frame and return a printable\n    representation of it.  */\n \n@@ -152,33 +147,33 @@ tui_data_window::first_reg_element_no_inline (int line_no) const\n /* Show the registers of the given group in the data window\n    and refresh the window.  */\n void\n-tui_show_registers (struct reggroup *group)\n+tui_data_window::show_registers (struct reggroup *group)\n {\n   if (group == 0)\n     group = general_reggroup;\n \n   /* Say that registers should be displayed, even if there is a\n      problem.  */\n-  TUI_DATA_WIN->display_regs = true;\n+  display_regs = true;\n \n   if (target_has_registers && target_has_stack && target_has_memory)\n     {\n-      tui_show_register_group (TUI_DATA_WIN, group, get_selected_frame (NULL),\n-\t\t\t       group == TUI_DATA_WIN->current_group);\n+      show_register_group (group, get_selected_frame (NULL),\n+\t\t\t   group == current_group);\n \n       /* Clear all notation of changed values.  */\n-      for (auto &&data_item_win : TUI_DATA_WIN->regs_content)\n+      for (auto &&data_item_win : regs_content)\n \t{\n \t  if (data_item_win != nullptr)\n \t    data_item_win->highlight = false;\n \t}\n-      TUI_DATA_WIN->current_group = group;\n-      TUI_DATA_WIN->display_all_data ();\n+      current_group = group;\n+      display_all_data ();\n     }\n   else\n     {\n-      TUI_DATA_WIN->current_group = 0;\n-      TUI_DATA_WIN->erase_data_content (_(\"[ Register Values Unavailable ]\"));\n+      current_group = 0;\n+      erase_data_content (_(\"[ Register Values Unavailable ]\"));\n     }\n }\n \n@@ -187,22 +182,18 @@ tui_show_registers (struct reggroup *group)\n    using the given frame.  Values are refreshed only when\n    refresh_values_only is TRUE.  */\n \n-static void\n-tui_show_register_group (tui_data_window *win_info,\n-\t\t\t struct reggroup *group,\n-                         struct frame_info *frame, \n-\t\t\t int refresh_values_only)\n+void\n+tui_data_window::show_register_group (struct reggroup *group,\n+\t\t\t\t      struct frame_info *frame, \n+\t\t\t\t      int refresh_values_only)\n {\n   struct gdbarch *gdbarch = get_frame_arch (frame);\n   int nr_regs;\n   int regnum, pos;\n-  char title[80];\n \n   /* Make a new title showing which group we display.  */\n-  snprintf (title, sizeof (title) - 1, \"Register group: %s\",\n-            reggroup_name (group));\n-  xfree (win_info->title);\n-  win_info->title = xstrdup (title);\n+  xfree (title);\n+  title = xstrprintf (\"Register group: %s\", reggroup_name (group));\n \n   /* See how many registers must be displayed.  */\n   nr_regs = 0;\n@@ -224,14 +215,14 @@ tui_show_register_group (tui_data_window *win_info,\n     }\n \n   if (!refresh_values_only)\n-    win_info->regs_content.clear ();\n+    regs_content.clear ();\n \n-  if (nr_regs < win_info->regs_content.size ())\n-    win_info->regs_content.resize (nr_regs);\n+  if (nr_regs < regs_content.size ())\n+    regs_content.resize (nr_regs);\n   else\n     {\n-      for (int i = win_info->regs_content.size (); i < nr_regs; ++i)\n-\twin_info->regs_content.emplace_back (new tui_data_item_window ());\n+      for (int i = regs_content.size (); i < nr_regs; ++i)\n+\tregs_content.emplace_back (new tui_data_item_window ());\n     }\n \n   /* Now set the register names and values.  */\n@@ -251,7 +242,7 @@ tui_show_register_group (tui_data_window *win_info,\n       if (name == 0 || *name == '\\0')\n \tcontinue;\n \n-      data_item_win = win_info->regs_content[pos].get ();\n+      data_item_win = regs_content[pos].get ();\n       if (data_item_win)\n \t{\n \t  if (!refresh_values_only)\n@@ -558,7 +549,7 @@ void\n tui_data_window::check_register_values (struct frame_info *frame)\n {\n   if (regs_content.empty () && display_regs)\n-    tui_show_registers (current_group);\n+    show_registers (current_group);\n   else\n     {\n       for (auto &&data_item_win_ptr : regs_content)\n@@ -710,7 +701,7 @@ tui_reg_command (const char *args, int from_tty)\n       if (match == NULL)\n \terror (_(\"unknown register group '%s'\"), args);\n \n-      tui_show_registers (match);\n+      TUI_DATA_WIN->show_registers (match);\n     }\n   else\n     {"
    },
    {
      "sha": "e07abeda64d6e1e95a7fba2b0769e06bc56aa192",
      "filename": "gdb/tui/tui-regs.h",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ca02d7c8003ad020bb39f0b26dc93b661be67132/gdb/tui/tui-regs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ca02d7c8003ad020bb39f0b26dc93b661be67132/gdb/tui/tui-regs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.h?ref=ca02d7c8003ad020bb39f0b26dc93b661be67132",
      "patch": "@@ -102,6 +102,8 @@ struct tui_data_window : public tui_win_info\n \n   void check_register_values (struct frame_info *frame);\n \n+  void show_registers (struct reggroup *group);\n+\n protected:\n \n   void do_scroll_vertical (int num_to_scroll) override;\n@@ -120,8 +122,10 @@ struct tui_data_window : public tui_win_info\n   void display_reg_element_at_line (int start_element_no, int start_line_no);\n \n   void rerender () override;\n-};\n \n-extern void tui_show_registers (struct reggroup *group);\n+  void show_register_group (struct reggroup *group,\n+\t\t\t    struct frame_info *frame,\n+\t\t\t    int refresh_values_only);\n+};\n \n #endif /* TUI_TUI_REGS_H */"
    }
  ]
}