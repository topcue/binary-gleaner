{
  "sha": "a389375f5b5fb67acdda6be028526ac44df2fbff",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTM4OTM3NWY1YjVmYjY3YWNkZGE2YmUwMjg1MjZhYzQ0ZGYyZmJmZg==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-03-14T01:54:49Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-04-03T19:34:13Z"
    },
    "message": "sim: testsuite: integrate common tests into build\n\nNow that we have the common automake build with support for build-time\nprograms working, we can integrate the common tests into the default\n`make check` flow.",
    "tree": {
      "sha": "09265b6996cafdf2a9e6d6164e45d60f8dc8caba",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/09265b6996cafdf2a9e6d6164e45d60f8dc8caba"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a389375f5b5fb67acdda6be028526ac44df2fbff",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a389375f5b5fb67acdda6be028526ac44df2fbff",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a389375f5b5fb67acdda6be028526ac44df2fbff",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a389375f5b5fb67acdda6be028526ac44df2fbff/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a0e674c1ce2c877426f8a861c5294c535c5d49e6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a0e674c1ce2c877426f8a861c5294c535c5d49e6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a0e674c1ce2c877426f8a861c5294c535c5d49e6"
    }
  ],
  "stats": {
    "total": 733,
    "additions": 662,
    "deletions": 71
  },
  "files": [
    {
      "sha": "e85097394f7b9fc6240b3b92c67d80dc13e5fe10",
      "filename": "sim/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a389375f5b5fb67acdda6be028526ac44df2fbff/sim/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a389375f5b5fb67acdda6be028526ac44df2fbff/sim/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ChangeLog?ref=a389375f5b5fb67acdda6be028526ac44df2fbff",
      "patch": "@@ -1,3 +1,8 @@\n+2021-04-03  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.am (check_PROGRAMS, CLEANFILES, DISTCLEANFILES): Define.\n+\t* Makefile.in: Regenerated.\n+\n 2021-04-03  Mike Frysinger  <vapier@gentoo.org>\n \n \t* Makefile.am (SIM_PRIMARY_TARGET, AM_MAKEFLAGS): Define."
    },
    {
      "sha": "a68a964d87a339895e8b68d28ac6de5607fad38f",
      "filename": "sim/Makefile.am",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a389375f5b5fb67acdda6be028526ac44df2fbff/sim/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a389375f5b5fb67acdda6be028526ac44df2fbff/sim/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/Makefile.am?ref=a389375f5b5fb67acdda6be028526ac44df2fbff",
      "patch": "@@ -27,9 +27,12 @@ AM_MAKEFLAGS = SIM_PRIMARY_TARGET=$(SIM_PRIMARY_TARGET)\n \n # We don't set some of these vars here, but we need to define them so they may\n # be used consistently in local.mk files we include below.\n+check_PROGRAMS =\n noinst_LIBRARIES =\n EXTRA_PROGRAMS =\n \n+CLEANFILES =\n+DISTCLEANFILES =\n MOSTLYCLEANFILES = core\n \n COMPILE_FOR_BUILD = $(CC_FOR_BUILD) $(AM_CPPFLAGS) $(CFLAGS_FOR_BUILD)"
    },
    {
      "sha": "f2f5bfa9acccaf92d12fc852da19e5f96b3b8d04",
      "filename": "sim/Makefile.in",
      "status": "modified",
      "additions": 562,
      "deletions": 18,
      "changes": 580,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a389375f5b5fb67acdda6be028526ac44df2fbff/sim/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a389375f5b5fb67acdda6be028526ac44df2fbff/sim/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/Makefile.in?ref=a389375f5b5fb67acdda6be028526ac44df2fbff",
      "patch": "@@ -67,6 +67,21 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n+# Copyright (C) 1997-2021 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n VPATH = @srcdir@\n am__is_gnu_make = { \\\n   if test -z '$(MAKELEVEL)'; then \\\n@@ -142,10 +157,17 @@ POST_UNINSTALL = :\n build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n-EXTRA_PROGRAMS = $(am__EXEEXT_2)\n+check_PROGRAMS = $(am__EXEEXT_3)\n+EXTRA_PROGRAMS = $(am__EXEEXT_2) testsuite/common/bits-gen$(EXEEXT) \\\n+\ttestsuite/common/fpu-tst$(EXEEXT)\n @SIM_ENABLE_IGEN_TRUE@am__append_1 = igen/libigen.a\n @SIM_ENABLE_IGEN_TRUE@am__append_2 = $(igen_IGEN_TOOLS)\n @SIM_ENABLE_IGEN_TRUE@am__append_3 = $(igen_IGEN_TOOLS)\n+TESTS = testsuite/common/bits32m0$(EXEEXT) \\\n+\ttestsuite/common/bits32m31$(EXEEXT) \\\n+\ttestsuite/common/bits64m0$(EXEEXT) \\\n+\ttestsuite/common/bits64m63$(EXEEXT) \\\n+\ttestsuite/common/alu-tst$(EXEEXT)\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n@@ -195,6 +217,11 @@ igen_libigen_a_OBJECTS = $(am_igen_libigen_a_OBJECTS)\n @SIM_ENABLE_IGEN_TRUE@\tigen/ld-insn$(EXEEXT) \\\n @SIM_ENABLE_IGEN_TRUE@\tigen/table$(EXEEXT)\n @SIM_ENABLE_IGEN_TRUE@am__EXEEXT_2 = $(am__EXEEXT_1)\n+am__EXEEXT_3 = testsuite/common/bits32m0$(EXEEXT) \\\n+\ttestsuite/common/bits32m31$(EXEEXT) \\\n+\ttestsuite/common/bits64m0$(EXEEXT) \\\n+\ttestsuite/common/bits64m63$(EXEEXT) \\\n+\ttestsuite/common/alu-tst$(EXEEXT)\n am_igen_filter_OBJECTS =\n igen_filter_OBJECTS = $(am_igen_filter_OBJECTS)\n @SIM_ENABLE_IGEN_TRUE@igen_filter_DEPENDENCIES = igen/filter-main.o \\\n@@ -222,6 +249,32 @@ am_igen_table_OBJECTS =\n igen_table_OBJECTS = $(am_igen_table_OBJECTS)\n @SIM_ENABLE_IGEN_TRUE@igen_table_DEPENDENCIES = igen/table-main.o \\\n @SIM_ENABLE_IGEN_TRUE@\tigen/libigen.a\n+testsuite_common_alu_tst_SOURCES = testsuite/common/alu-tst.c\n+testsuite_common_alu_tst_OBJECTS = testsuite/common/alu-tst.$(OBJEXT)\n+testsuite_common_alu_tst_LDADD = $(LDADD)\n+testsuite_common_bits_gen_SOURCES = testsuite/common/bits-gen.c\n+testsuite_common_bits_gen_OBJECTS =  \\\n+\ttestsuite/common/bits-gen.$(OBJEXT)\n+testsuite_common_bits_gen_LDADD = $(LDADD)\n+testsuite_common_bits32m0_SOURCES = testsuite/common/bits32m0.c\n+testsuite_common_bits32m0_OBJECTS =  \\\n+\ttestsuite/common/bits32m0.$(OBJEXT)\n+testsuite_common_bits32m0_LDADD = $(LDADD)\n+testsuite_common_bits32m31_SOURCES = testsuite/common/bits32m31.c\n+testsuite_common_bits32m31_OBJECTS =  \\\n+\ttestsuite/common/bits32m31.$(OBJEXT)\n+testsuite_common_bits32m31_LDADD = $(LDADD)\n+testsuite_common_bits64m0_SOURCES = testsuite/common/bits64m0.c\n+testsuite_common_bits64m0_OBJECTS =  \\\n+\ttestsuite/common/bits64m0.$(OBJEXT)\n+testsuite_common_bits64m0_LDADD = $(LDADD)\n+testsuite_common_bits64m63_SOURCES = testsuite/common/bits64m63.c\n+testsuite_common_bits64m63_OBJECTS =  \\\n+\ttestsuite/common/bits64m63.$(OBJEXT)\n+testsuite_common_bits64m63_LDADD = $(LDADD)\n+testsuite_common_fpu_tst_SOURCES = testsuite/common/fpu-tst.c\n+testsuite_common_fpu_tst_OBJECTS = testsuite/common/fpu-tst.$(OBJEXT)\n+testsuite_common_fpu_tst_LDADD = $(LDADD)\n AM_V_P = $(am__v_P_@AM_V@)\n am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)\n am__v_P_0 = false\n@@ -253,7 +306,11 @@ am__v_CCLD_1 =\n SOURCES = $(igen_libigen_a_SOURCES) $(igen_filter_SOURCES) \\\n \t$(igen_gen_SOURCES) $(igen_igen_SOURCES) \\\n \t$(igen_ld_cache_SOURCES) $(igen_ld_decode_SOURCES) \\\n-\t$(igen_ld_insn_SOURCES) $(igen_table_SOURCES)\n+\t$(igen_ld_insn_SOURCES) $(igen_table_SOURCES) \\\n+\ttestsuite/common/alu-tst.c testsuite/common/bits-gen.c \\\n+\ttestsuite/common/bits32m0.c testsuite/common/bits32m31.c \\\n+\ttestsuite/common/bits64m0.c testsuite/common/bits64m63.c \\\n+\ttestsuite/common/fpu-tst.c\n RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\\n \tctags-recursive dvi-recursive html-recursive info-recursive \\\n \tinstall-data-recursive install-dvi-recursive \\\n@@ -274,7 +331,7 @@ am__recursive_targets = \\\n   $(RECURSIVE_CLEAN_TARGETS) \\\n   $(am__extra_recursive_targets)\n AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\\n-\tcscope\n+\tcscope check recheck\n am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)\n # Read a list of newline-separated strings from the standard input,\n # and print each of them once, without duplicates.  Input order is\n@@ -299,6 +356,209 @@ DEJATOOL = $(PACKAGE)\n RUNTESTDEFAULTFLAGS = --tool $$tool --srcdir $$srcdir\n EXPECT = expect\n RUNTEST = runtest\n+am__tty_colors_dummy = \\\n+  mgn= red= grn= lgn= blu= brg= std=; \\\n+  am__color_tests=no\n+am__tty_colors = { \\\n+  $(am__tty_colors_dummy); \\\n+  if test \"X$(AM_COLOR_TESTS)\" = Xno; then \\\n+    am__color_tests=no; \\\n+  elif test \"X$(AM_COLOR_TESTS)\" = Xalways; then \\\n+    am__color_tests=yes; \\\n+  elif test \"X$$TERM\" != Xdumb && { test -t 1; } 2>/dev/null; then \\\n+    am__color_tests=yes; \\\n+  fi; \\\n+  if test $$am__color_tests = yes; then \\\n+    red='\u001b[0;31m'; \\\n+    grn='\u001b[0;32m'; \\\n+    lgn='\u001b[1;32m'; \\\n+    blu='\u001b[1;34m'; \\\n+    mgn='\u001b[0;35m'; \\\n+    brg='\u001b[1m'; \\\n+    std='\u001b[m'; \\\n+  fi; \\\n+}\n+am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n+am__vpath_adj = case $$p in \\\n+    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+    *) f=$$p;; \\\n+  esac;\n+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n+am__install_max = 40\n+am__nobase_strip_setup = \\\n+  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\n+am__nobase_strip = \\\n+  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\n+am__nobase_list = $(am__nobase_strip_setup); \\\n+  for p in $$list; do echo \"$$p $$p\"; done | \\\n+  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n+  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n+    if (++n[$$2] == $(am__install_max)) \\\n+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n+    END { for (dir in files) print dir, files[dir] }'\n+am__base_list = \\\n+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n+  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__uninstall_files_from_dir = { \\\n+  test -z \"$$files\" \\\n+    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n+    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n+         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n+  }\n+am__recheck_rx = ^[ \t]*:recheck:[ \t]*\n+am__global_test_result_rx = ^[ \t]*:global-test-result:[ \t]*\n+am__copy_in_global_log_rx = ^[ \t]*:copy-in-global-log:[ \t]*\n+# A command that, given a newline-separated list of test names on the\n+# standard input, print the name of the tests that are to be re-run\n+# upon \"make recheck\".\n+am__list_recheck_tests = $(AWK) '{ \\\n+  recheck = 1; \\\n+  while ((rc = (getline line < ($$0 \".trs\"))) != 0) \\\n+    { \\\n+      if (rc < 0) \\\n+        { \\\n+          if ((getline line2 < ($$0 \".log\")) < 0) \\\n+\t    recheck = 0; \\\n+          break; \\\n+        } \\\n+      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \\\n+        { \\\n+          recheck = 0; \\\n+          break; \\\n+        } \\\n+      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \\\n+        { \\\n+          break; \\\n+        } \\\n+    }; \\\n+  if (recheck) \\\n+    print $$0; \\\n+  close ($$0 \".trs\"); \\\n+  close ($$0 \".log\"); \\\n+}'\n+# A command that, given a newline-separated list of test names on the\n+# standard input, create the global log from their .trs and .log files.\n+am__create_global_log = $(AWK) ' \\\n+function fatal(msg) \\\n+{ \\\n+  print \"fatal: making $@: \" msg | \"cat >&2\"; \\\n+  exit 1; \\\n+} \\\n+function rst_section(header) \\\n+{ \\\n+  print header; \\\n+  len = length(header); \\\n+  for (i = 1; i <= len; i = i + 1) \\\n+    printf \"=\"; \\\n+  printf \"\\n\\n\"; \\\n+} \\\n+{ \\\n+  copy_in_global_log = 1; \\\n+  global_test_result = \"RUN\"; \\\n+  while ((rc = (getline line < ($$0 \".trs\"))) != 0) \\\n+    { \\\n+      if (rc < 0) \\\n+         fatal(\"failed to read from \" $$0 \".trs\"); \\\n+      if (line ~ /$(am__global_test_result_rx)/) \\\n+        { \\\n+          sub(\"$(am__global_test_result_rx)\", \"\", line); \\\n+          sub(\"[ \t]*$$\", \"\", line); \\\n+          global_test_result = line; \\\n+        } \\\n+      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \\\n+        copy_in_global_log = 0; \\\n+    }; \\\n+  if (copy_in_global_log) \\\n+    { \\\n+      rst_section(global_test_result \": \" $$0); \\\n+      while ((rc = (getline line < ($$0 \".log\"))) != 0) \\\n+      { \\\n+        if (rc < 0) \\\n+          fatal(\"failed to read from \" $$0 \".log\"); \\\n+        print line; \\\n+      }; \\\n+      printf \"\\n\"; \\\n+    }; \\\n+  close ($$0 \".trs\"); \\\n+  close ($$0 \".log\"); \\\n+}'\n+# Restructured Text title.\n+am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }\n+# Solaris 10 'make', and several other traditional 'make' implementations,\n+# pass \"-e\" to $(SHELL), and POSIX 2008 even requires this.  Work around it\n+# by disabling -e (using the XSI extension \"set +e\") if it's set.\n+am__sh_e_setup = case $$- in *e*) set +e;; esac\n+# Default flags passed to test drivers.\n+am__common_driver_flags = \\\n+  --color-tests \"$$am__color_tests\" \\\n+  --enable-hard-errors \"$$am__enable_hard_errors\" \\\n+  --expect-failure \"$$am__expect_failure\"\n+# To be inserted before the command running the test.  Creates the\n+# directory for the log if needed.  Stores in $dir the directory\n+# containing $f, in $tst the test, in $log the log.  Executes the\n+# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and\n+# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that\n+# will run the test scripts (or their associated LOG_COMPILER, if\n+# thy have one).\n+am__check_pre = \\\n+$(am__sh_e_setup);\t\t\t\t\t\\\n+$(am__vpath_adj_setup) $(am__vpath_adj)\t\t\t\\\n+$(am__tty_colors);\t\t\t\t\t\\\n+srcdir=$(srcdir); export srcdir;\t\t\t\\\n+case \"$@\" in\t\t\t\t\t\t\\\n+  */*) am__odir=`echo \"./$@\" | sed 's|/[^/]*$$||'`;;\t\\\n+    *) am__odir=.;; \t\t\t\t\t\\\n+esac;\t\t\t\t\t\t\t\\\n+test \"x$$am__odir\" = x\".\" || test -d \"$$am__odir\" \t\\\n+  || $(MKDIR_P) \"$$am__odir\" || exit $$?;\t\t\\\n+if test -f \"./$$f\"; then dir=./;\t\t\t\\\n+elif test -f \"$$f\"; then dir=;\t\t\t\t\\\n+else dir=\"$(srcdir)/\"; fi;\t\t\t\t\\\n+tst=$$dir$$f; log='$@'; \t\t\t\t\\\n+if test -n '$(DISABLE_HARD_ERRORS)'; then\t\t\\\n+  am__enable_hard_errors=no; \t\t\t\t\\\n+else\t\t\t\t\t\t\t\\\n+  am__enable_hard_errors=yes; \t\t\t\t\\\n+fi; \t\t\t\t\t\t\t\\\n+case \" $(XFAIL_TESTS) \" in\t\t\t\t\\\n+  *[\\ \\\t]$$f[\\ \\\t]* | *[\\ \\\t]$$dir$$f[\\ \\\t]*) \\\n+    am__expect_failure=yes;;\t\t\t\t\\\n+  *)\t\t\t\t\t\t\t\\\n+    am__expect_failure=no;;\t\t\t\t\\\n+esac; \t\t\t\t\t\t\t\\\n+$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)\n+# A shell command to get the names of the tests scripts with any registered\n+# extension removed (i.e., equivalently, the names of the test logs, with\n+# the '.log' extension removed).  The result is saved in the shell variable\n+# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,\n+# we cannot use something simpler, involving e.g., \"$(TEST_LOGS:.log=)\",\n+# since that might cause problem with VPATH rewrites for suffix-less tests.\n+# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.\n+am__set_TESTS_bases = \\\n+  bases='$(TEST_LOGS)'; \\\n+  bases=`for i in $$bases; do echo $$i; done | sed 's/\\.log$$//'`; \\\n+  bases=`echo $$bases`\n+RECHECK_LOGS = $(TEST_LOGS)\n+TEST_SUITE_LOG = test-suite.log\n+TEST_EXTENSIONS = @EXEEXT@ .test\n+LOG_DRIVER = $(SHELL) $(top_srcdir)/../test-driver\n+LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)\n+am__set_b = \\\n+  case '$@' in \\\n+    */*) \\\n+      case '$*' in \\\n+        */*) b='$*';; \\\n+          *) b=`echo '$@' | sed 's/\\.log$$//'`; \\\n+       esac;; \\\n+    *) \\\n+      b='$*';; \\\n+  esac\n+am__test_logs1 = $(TESTS:=.log)\n+am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)\n+TEST_LOGS = $(am__test_logs2:.test.log=.log)\n+TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/../test-driver\n+TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\\n+\t$(TEST_LOG_FLAGS)\n DIST_SUBDIRS = $(SUBDIRS)\n ACLOCAL = @ACLOCAL@\n AMTAR = @AMTAR@\n@@ -413,10 +673,11 @@ ACLOCAL_AMFLAGS = -Im4 -I.. -I../config\n srcroot = $(srcdir)/..\n SUBDIRS = @subdirs@\n AM_MAKEFLAGS = SIM_PRIMARY_TARGET=$(SIM_PRIMARY_TARGET)\n-\n-# We don't set some of these vars here, but we need to define them so they may\n-# be used consistently in local.mk files we include below.\n noinst_LIBRARIES = $(am__append_1)\n+CLEANFILES = testsuite/common/bits-gen testsuite/common/bits32m0.c \\\n+\ttestsuite/common/bits32m31.c testsuite/common/bits64m0.c \\\n+\ttestsuite/common/bits64m63.c\n+DISTCLEANFILES = \n MOSTLYCLEANFILES = core $(am__append_3) site-srcdir.exp testrun.log \\\n \ttestrun.sum\n COMPILE_FOR_BUILD = $(CC_FOR_BUILD) $(AM_CPPFLAGS) $(CFLAGS_FOR_BUILD)\n@@ -465,13 +726,17 @@ LINK_FOR_BUILD = $(CC_FOR_BUILD) $(CFLAGS_FOR_BUILD) $(LDFLAGS_FOR_BUILD) -o $@\n \n # Tweak the site.exp so it works with plain `runtest` from user.\n EXTRA_DEJAGNU_SITE_CONFIG = site-srcdir.exp\n+testsuite_common_CPPFLAGS = \\\n+\t-I$(srcdir)/common \\\n+\t-I$(srcroot)/include\n+\n all: all-recursive\n \n .SUFFIXES:\n-.SUFFIXES: .c .o .obj\n+.SUFFIXES: .c .log .o .obj .test .test$(EXEEXT) .trs\n am--refresh: Makefile\n \t@:\n-$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/igen/local.mk $(srcdir)/testsuite/local.mk $(am__configure_deps)\n+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/igen/local.mk $(srcdir)/testsuite/local.mk $(srcdir)/testsuite/common/local.mk $(am__configure_deps)\n \t@for dep in $?; do \\\n \t  case '$(am__configure_deps)' in \\\n \t    *$$dep*) \\\n@@ -493,7 +758,7 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \\\n \t    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \\\n \tesac;\n-$(srcdir)/igen/local.mk $(srcdir)/testsuite/local.mk $(am__empty):\n+$(srcdir)/igen/local.mk $(srcdir)/testsuite/local.mk $(srcdir)/testsuite/common/local.mk $(am__empty):\n \n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \t$(SHELL) ./config.status --recheck\n@@ -549,6 +814,9 @@ igen/libigen.a: $(igen_libigen_a_OBJECTS) $(igen_libigen_a_DEPENDENCIES) $(EXTRA\n \t$(AM_V_AR)$(igen_libigen_a_AR) igen/libigen.a $(igen_libigen_a_OBJECTS) $(igen_libigen_a_LIBADD)\n \t$(AM_V_at)$(RANLIB) igen/libigen.a\n \n+clean-checkPROGRAMS:\n+\t-test -z \"$(check_PROGRAMS)\" || rm -f $(check_PROGRAMS)\n+\n igen/filter$(EXEEXT): $(igen_filter_OBJECTS) $(igen_filter_DEPENDENCIES) $(EXTRA_igen_filter_DEPENDENCIES) igen/$(am__dirstamp)\n \t@rm -f igen/filter$(EXEEXT)\n \t$(AM_V_CCLD)$(LINK) $(igen_filter_OBJECTS) $(igen_filter_LDADD) $(LIBS)\n@@ -578,10 +846,33 @@ igen/ld-insn$(EXEEXT): $(igen_ld_insn_OBJECTS) $(igen_ld_insn_DEPENDENCIES) $(EX\n igen/table$(EXEEXT): $(igen_table_OBJECTS) $(igen_table_DEPENDENCIES) $(EXTRA_igen_table_DEPENDENCIES) igen/$(am__dirstamp)\n \t@rm -f igen/table$(EXEEXT)\n \t$(AM_V_CCLD)$(LINK) $(igen_table_OBJECTS) $(igen_table_LDADD) $(LIBS)\n+testsuite/common/$(am__dirstamp):\n+\t@$(MKDIR_P) testsuite/common\n+\t@: > testsuite/common/$(am__dirstamp)\n+testsuite/common/$(DEPDIR)/$(am__dirstamp):\n+\t@$(MKDIR_P) testsuite/common/$(DEPDIR)\n+\t@: > testsuite/common/$(DEPDIR)/$(am__dirstamp)\n+testsuite/common/alu-tst.$(OBJEXT): testsuite/common/$(am__dirstamp) \\\n+\ttestsuite/common/$(DEPDIR)/$(am__dirstamp)\n+testsuite/common/bits-gen.$(OBJEXT): testsuite/common/$(am__dirstamp) \\\n+\ttestsuite/common/$(DEPDIR)/$(am__dirstamp)\n+testsuite/common/bits32m0.$(OBJEXT): testsuite/common/$(am__dirstamp) \\\n+\ttestsuite/common/$(DEPDIR)/$(am__dirstamp)\n+testsuite/common/bits32m31.$(OBJEXT):  \\\n+\ttestsuite/common/$(am__dirstamp) \\\n+\ttestsuite/common/$(DEPDIR)/$(am__dirstamp)\n+testsuite/common/bits64m0.$(OBJEXT): testsuite/common/$(am__dirstamp) \\\n+\ttestsuite/common/$(DEPDIR)/$(am__dirstamp)\n+testsuite/common/bits64m63.$(OBJEXT):  \\\n+\ttestsuite/common/$(am__dirstamp) \\\n+\ttestsuite/common/$(DEPDIR)/$(am__dirstamp)\n+testsuite/common/fpu-tst.$(OBJEXT): testsuite/common/$(am__dirstamp) \\\n+\ttestsuite/common/$(DEPDIR)/$(am__dirstamp)\n \n mostlyclean-compile:\n \t-rm -f *.$(OBJEXT)\n \t-rm -f igen/*.$(OBJEXT)\n+\t-rm -f testsuite/common/*.$(OBJEXT)\n \n distclean-compile:\n \t-rm -f *.tab.c\n@@ -603,6 +894,13 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@igen/$(DEPDIR)/lf.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@igen/$(DEPDIR)/misc.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@igen/$(DEPDIR)/table.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@testsuite/common/$(DEPDIR)/alu-tst.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@testsuite/common/$(DEPDIR)/bits-gen.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@testsuite/common/$(DEPDIR)/bits32m0.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@testsuite/common/$(DEPDIR)/bits32m31.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@testsuite/common/$(DEPDIR)/bits64m0.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@testsuite/common/$(DEPDIR)/bits64m63.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@testsuite/common/$(DEPDIR)/fpu-tst.Po@am__quote@\n \n .c.o:\n @am__fastdepCC_TRUE@\t$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.o$$||'`;\\\n@@ -757,8 +1055,200 @@ distclean-DEJAGNU:\n \t-l='$(DEJATOOL)'; for tool in $$l; do \\\n \t  rm -f $$tool.sum $$tool.log; \\\n \tdone\n+\n+# Recover from deleted '.trs' file; this should ensure that\n+# \"rm -f foo.log; make foo.trs\" re-run 'foo.test', and re-create\n+# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells\n+# to avoid problems with \"make -n\".\n+.log.trs:\n+\trm -f $< $@\n+\t$(MAKE) $(AM_MAKEFLAGS) $<\n+\n+# Leading 'am--fnord' is there to ensure the list of targets does not\n+# expand to empty, as could happen e.g. with make check TESTS=''.\n+am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)\n+am--force-recheck:\n+\t@:\n+\n+$(TEST_SUITE_LOG): $(TEST_LOGS)\n+\t@$(am__set_TESTS_bases); \\\n+\tam__f_ok () { test -f \"$$1\" && test -r \"$$1\"; }; \\\n+\tredo_bases=`for i in $$bases; do \\\n+\t              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \\\n+\t            done`; \\\n+\tif test -n \"$$redo_bases\"; then \\\n+\t  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \\\n+\t  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \\\n+\t  if $(am__make_dryrun); then :; else \\\n+\t    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \\\n+\t  fi; \\\n+\tfi; \\\n+\tif test -n \"$$am__remaking_logs\"; then \\\n+\t  echo \"fatal: making $(TEST_SUITE_LOG): possible infinite\" \\\n+\t       \"recursion detected\" >&2; \\\n+\telif test -n \"$$redo_logs\"; then \\\n+\t  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \\\n+\tfi; \\\n+\tif $(am__make_dryrun); then :; else \\\n+\t  st=0;  \\\n+\t  errmsg=\"fatal: making $(TEST_SUITE_LOG): failed to create\"; \\\n+\t  for i in $$redo_bases; do \\\n+\t    test -f $$i.trs && test -r $$i.trs \\\n+\t      || { echo \"$$errmsg $$i.trs\" >&2; st=1; }; \\\n+\t    test -f $$i.log && test -r $$i.log \\\n+\t      || { echo \"$$errmsg $$i.log\" >&2; st=1; }; \\\n+\t  done; \\\n+\t  test $$st -eq 0 || exit 1; \\\n+\tfi\n+\t@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \\\n+\tws='[ \t]'; \\\n+\tresults=`for b in $$bases; do echo $$b.trs; done`; \\\n+\ttest -n \"$$results\" || results=/dev/null; \\\n+\tall=`  grep \"^$$ws*:test-result:\"           $$results | wc -l`; \\\n+\tpass=` grep \"^$$ws*:test-result:$$ws*PASS\"  $$results | wc -l`; \\\n+\tfail=` grep \"^$$ws*:test-result:$$ws*FAIL\"  $$results | wc -l`; \\\n+\tskip=` grep \"^$$ws*:test-result:$$ws*SKIP\"  $$results | wc -l`; \\\n+\txfail=`grep \"^$$ws*:test-result:$$ws*XFAIL\" $$results | wc -l`; \\\n+\txpass=`grep \"^$$ws*:test-result:$$ws*XPASS\" $$results | wc -l`; \\\n+\terror=`grep \"^$$ws*:test-result:$$ws*ERROR\" $$results | wc -l`; \\\n+\tif test `expr $$fail + $$xpass + $$error` -eq 0; then \\\n+\t  success=true; \\\n+\telse \\\n+\t  success=false; \\\n+\tfi; \\\n+\tbr='==================='; br=$$br$$br$$br$$br; \\\n+\tresult_count () \\\n+\t{ \\\n+\t    if test x\"$$1\" = x\"--maybe-color\"; then \\\n+\t      maybe_colorize=yes; \\\n+\t    elif test x\"$$1\" = x\"--no-color\"; then \\\n+\t      maybe_colorize=no; \\\n+\t    else \\\n+\t      echo \"$@: invalid 'result_count' usage\" >&2; exit 4; \\\n+\t    fi; \\\n+\t    shift; \\\n+\t    desc=$$1 count=$$2; \\\n+\t    if test $$maybe_colorize = yes && test $$count -gt 0; then \\\n+\t      color_start=$$3 color_end=$$std; \\\n+\t    else \\\n+\t      color_start= color_end=; \\\n+\t    fi; \\\n+\t    echo \"$${color_start}# $$desc $$count$${color_end}\"; \\\n+\t}; \\\n+\tcreate_testsuite_report () \\\n+\t{ \\\n+\t  result_count $$1 \"TOTAL:\" $$all   \"$$brg\"; \\\n+\t  result_count $$1 \"PASS: \" $$pass  \"$$grn\"; \\\n+\t  result_count $$1 \"SKIP: \" $$skip  \"$$blu\"; \\\n+\t  result_count $$1 \"XFAIL:\" $$xfail \"$$lgn\"; \\\n+\t  result_count $$1 \"FAIL: \" $$fail  \"$$red\"; \\\n+\t  result_count $$1 \"XPASS:\" $$xpass \"$$red\"; \\\n+\t  result_count $$1 \"ERROR:\" $$error \"$$mgn\"; \\\n+\t}; \\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  echo \"$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)\" |\t\\\n+\t    $(am__rst_title);\t\t\t\t\t\t\\\n+\t  create_testsuite_report --no-color;\t\t\t\t\\\n+\t  echo;\t\t\t\t\t\t\t\t\\\n+\t  echo \".. contents:: :depth: 2\";\t\t\t\t\\\n+\t  echo;\t\t\t\t\t\t\t\t\\\n+\t  for b in $$bases; do echo $$b; done\t\t\t\t\\\n+\t    | $(am__create_global_log);\t\t\t\t\t\\\n+\t} >$(TEST_SUITE_LOG).tmp || exit 1;\t\t\t\t\\\n+\tmv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);\t\t\t\\\n+\tif $$success; then\t\t\t\t\t\t\\\n+\t  col=\"$$grn\";\t\t\t\t\t\t\t\\\n+\t else\t\t\t\t\t\t\t\t\\\n+\t  col=\"$$red\";\t\t\t\t\t\t\t\\\n+\t  test x\"$$VERBOSE\" = x || cat $(TEST_SUITE_LOG);\t\t\\\n+\tfi;\t\t\t\t\t\t\t\t\\\n+\techo \"$${col}$$br$${std}\"; \t\t\t\t\t\\\n+\techo \"$${col}Testsuite summary for $(PACKAGE_STRING)$${std}\";\t\\\n+\techo \"$${col}$$br$${std}\"; \t\t\t\t\t\\\n+\tcreate_testsuite_report --maybe-color;\t\t\t\t\\\n+\techo \"$$col$$br$$std\";\t\t\t\t\t\t\\\n+\tif $$success; then :; else\t\t\t\t\t\\\n+\t  echo \"$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}\";\t\t\\\n+\t  if test -n \"$(PACKAGE_BUGREPORT)\"; then\t\t\t\\\n+\t    echo \"$${col}Please report to $(PACKAGE_BUGREPORT)$${std}\";\t\\\n+\t  fi;\t\t\t\t\t\t\t\t\\\n+\t  echo \"$$col$$br$$std\";\t\t\t\t\t\\\n+\tfi;\t\t\t\t\t\t\t\t\\\n+\t$$success || exit 1\n+\n+check-TESTS:\n+\t@list='$(RECHECK_LOGS)';           test -z \"$$list\" || rm -f $$list\n+\t@list='$(RECHECK_LOGS:.log=.trs)'; test -z \"$$list\" || rm -f $$list\n+\t@test -z \"$(TEST_SUITE_LOG)\" || rm -f $(TEST_SUITE_LOG)\n+\t@set +e; $(am__set_TESTS_bases); \\\n+\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n+\ttrs_list=`for i in $$bases; do echo $$i.trs; done`; \\\n+\tlog_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \\\n+\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS=\"$$log_list\"; \\\n+\texit $$?;\n+recheck: all $(check_PROGRAMS)\n+\t@test -z \"$(TEST_SUITE_LOG)\" || rm -f $(TEST_SUITE_LOG)\n+\t@set +e; $(am__set_TESTS_bases); \\\n+\tbases=`for i in $$bases; do echo $$i; done \\\n+\t         | $(am__list_recheck_tests)` || exit 1; \\\n+\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n+\tlog_list=`echo $$log_list`; \\\n+\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \\\n+\t        am__force_recheck=am--force-recheck \\\n+\t        TEST_LOGS=\"$$log_list\"; \\\n+\texit $$?\n+testsuite/common/bits32m0.log: testsuite/common/bits32m0$(EXEEXT)\n+\t@p='testsuite/common/bits32m0$(EXEEXT)'; \\\n+\tb='testsuite/common/bits32m0'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+testsuite/common/bits32m31.log: testsuite/common/bits32m31$(EXEEXT)\n+\t@p='testsuite/common/bits32m31$(EXEEXT)'; \\\n+\tb='testsuite/common/bits32m31'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+testsuite/common/bits64m0.log: testsuite/common/bits64m0$(EXEEXT)\n+\t@p='testsuite/common/bits64m0$(EXEEXT)'; \\\n+\tb='testsuite/common/bits64m0'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+testsuite/common/bits64m63.log: testsuite/common/bits64m63$(EXEEXT)\n+\t@p='testsuite/common/bits64m63$(EXEEXT)'; \\\n+\tb='testsuite/common/bits64m63'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+testsuite/common/alu-tst.log: testsuite/common/alu-tst$(EXEEXT)\n+\t@p='testsuite/common/alu-tst$(EXEEXT)'; \\\n+\tb='testsuite/common/alu-tst'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+.test.log:\n+\t@p='$<'; \\\n+\t$(am__set_b); \\\n+\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+@am__EXEEXT_TRUE@.test$(EXEEXT).log:\n+@am__EXEEXT_TRUE@\t@p='$<'; \\\n+@am__EXEEXT_TRUE@\t$(am__set_b); \\\n+@am__EXEEXT_TRUE@\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name \"$$f\" \\\n+@am__EXEEXT_TRUE@\t--log-file $$b.log --trs-file $$b.trs \\\n+@am__EXEEXT_TRUE@\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n+@am__EXEEXT_TRUE@\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n check-am: all-am\n-\t$(MAKE) $(AM_MAKEFLAGS) check-DEJAGNU\n+\t$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)\n+\t$(MAKE) $(AM_MAKEFLAGS) check-DEJAGNU check-TESTS\n check: check-recursive\n all-am: Makefile $(LIBRARIES)\n installdirs: installdirs-recursive\n@@ -784,25 +1274,33 @@ install-strip:\n \tfi\n mostlyclean-generic:\n \t-test -z \"$(MOSTLYCLEANFILES)\" || rm -f $(MOSTLYCLEANFILES)\n+\t-test -z \"$(TEST_LOGS)\" || rm -f $(TEST_LOGS)\n+\t-test -z \"$(TEST_LOGS:.log=.trs)\" || rm -f $(TEST_LOGS:.log=.trs)\n+\t-test -z \"$(TEST_SUITE_LOG)\" || rm -f $(TEST_SUITE_LOG)\n \n clean-generic:\n+\t-test -z \"$(CLEANFILES)\" || rm -f $(CLEANFILES)\n \n distclean-generic:\n \t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n \t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n \t-rm -f igen/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f igen/$(am__dirstamp)\n+\t-rm -f testsuite/common/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f testsuite/common/$(am__dirstamp)\n+\t-test -z \"$(DISTCLEANFILES)\" || rm -f $(DISTCLEANFILES)\n \n maintainer-clean-generic:\n \t@echo \"This command is intended for maintainers to use\"\n \t@echo \"it deletes files that may require special tools to rebuild.\"\n clean: clean-recursive\n \n-clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am\n+clean-am: clean-checkPROGRAMS clean-generic clean-noinstLIBRARIES \\\n+\tmostlyclean-am\n \n distclean: distclean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n-\t-rm -rf igen/$(DEPDIR)\n+\t-rm -rf igen/$(DEPDIR) testsuite/common/$(DEPDIR)\n \t-rm -f Makefile\n distclean-am: clean-am distclean-DEJAGNU distclean-compile \\\n \tdistclean-generic distclean-tags\n@@ -850,7 +1348,7 @@ installcheck-am:\n maintainer-clean: maintainer-clean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n \t-rm -rf $(top_srcdir)/autom4te.cache\n-\t-rm -rf igen/$(DEPDIR)\n+\t-rm -rf igen/$(DEPDIR) testsuite/common/$(DEPDIR)\n \t-rm -f Makefile\n maintainer-clean-am: distclean-am maintainer-clean-generic\n \n@@ -871,9 +1369,10 @@ uninstall-am:\n .MAKE: $(am__recursive_targets) check-am install-am install-strip\n \n .PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \\\n-\tam--refresh check check-DEJAGNU check-am clean clean-cscope \\\n-\tclean-generic clean-noinstLIBRARIES cscope cscopelist-am ctags \\\n-\tctags-am distclean distclean-DEJAGNU distclean-compile \\\n+\tam--refresh check check-DEJAGNU check-TESTS check-am clean \\\n+\tclean-checkPROGRAMS clean-cscope clean-generic \\\n+\tclean-noinstLIBRARIES cscope cscopelist-am ctags ctags-am \\\n+\tdistclean distclean-DEJAGNU distclean-compile \\\n \tdistclean-generic distclean-tags dvi dvi-am html html-am info \\\n \tinfo-am install install-am install-data install-data-am \\\n \tinstall-dvi install-dvi-am install-exec install-exec-am \\\n@@ -882,8 +1381,8 @@ uninstall-am:\n \tinstall-ps-am install-strip installcheck installcheck-am \\\n \tinstalldirs installdirs-am maintainer-clean \\\n \tmaintainer-clean-generic mostlyclean mostlyclean-compile \\\n-\tmostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \\\n-\tuninstall-am\n+\tmostlyclean-generic pdf pdf-am ps ps-am recheck tags tags-am \\\n+\tuninstall uninstall-am\n \n .PRECIOUS: Makefile\n \n@@ -929,6 +1428,51 @@ check-DEJAGNU: site.exp\n \telse echo \"WARNING: could not find \\`runtest'\" 1>&2; :;\\\n \tfi\n \n+# These tests are build-time only tools.  Override the default rules for them.\n+testsuite/common/%.o: testsuite/common/%.c\n+\t$(AM_V_CC)$(COMPILE_FOR_BUILD) $(testsuite_common_CPPFLAGS) -c $< -o $@\n+\n+testsuite/common/alu-tst$(EXEEXT): $(testsuite_common_alu_tst_OBJECTS) $(testsuite_common_alu_tst_DEPENDENCIES) testsuite/common/$(am__dirstamp)\n+\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(testsuite_common_alu_tst_OBJECTS) $(testsuite_common_alu_tst_LDADD)\n+\n+testsuite/common/fpu-tst$(EXEEXT): $(testsuite_common_fpu_tst_OBJECTS) $(testsuite_common_fpu_tst_DEPENDENCIES) testsuite/common/$(am__dirstamp)\n+\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(testsuite_common_fpu_tst_OBJECTS) $(testsuite_common_fpu_tst_LDADD)\n+\n+testsuite/common/bits-gen$(EXEEXT): $(testsuite_common_bits_gen_OBJECTS) $(testsuite_common_bits_gen_DEPENDENCIES) testsuite/common/$(am__dirstamp)\n+\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(testsuite_common_bits_gen_OBJECTS) $(testsuite_common_bits_gen_LDADD)\n+\n+testsuite/common/bits32m0$(EXEEXT): $(testsuite_common_bits32m0_OBJECTS) $(testsuite_common_bits32m0_DEPENDENCIES) testsuite/common/$(am__dirstamp)\n+\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(testsuite_common_bits32m0_OBJECTS) $(testsuite_common_bits32m0_LDADD)\n+\n+testsuite/common/bits32m0.c: testsuite/common/bits-gen testsuite/common/bits-tst.c\n+\t$< 32 0 big > $@.tmp\n+\tcat $(srcdir)/testsuite/common/bits-tst.c >> $@.tmp\n+\tmv $@.tmp $@\n+\n+testsuite/common/bits32m31$(EXEEXT): $(testsuite_common_bits32m31_OBJECTS) $(testsuite_common_bits32m31_DEPENDENCIES) testsuite/common/$(am__dirstamp)\n+\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(testsuite_common_bits32m31_OBJECTS) $(testsuite_common_bits32m31_LDADD)\n+\n+testsuite/common/bits32m31.c: testsuite/common/bits-gen testsuite/common/bits-tst.c\n+\t$< 32 31 little > $@.tmp\n+\tcat $(srcdir)/testsuite/common/bits-tst.c >> $@.tmp\n+\tmv $@.tmp $@\n+\n+testsuite/common/bits64m0$(EXEEXT): $(testsuite_common_bits64m0_OBJECTS) $(testsuite_common_bits64m0_DEPENDENCIES) testsuite/common/$(am__dirstamp)\n+\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(testsuite_common_bits64m0_OBJECTS) $(testsuite_common_bits64m0_LDADD)\n+\n+testsuite/common/bits64m0.c: testsuite/common/bits-gen testsuite/common/bits-tst.c\n+\t$< 64 0 big > $@.tmp\n+\tcat $(srcdir)/testsuite/common/bits-tst.c >> $@.tmp\n+\tmv $@.tmp $@\n+\n+testsuite/common/bits64m63$(EXEEXT): $(testsuite_common_bits64m63_OBJECTS) $(testsuite_common_bits64m63_DEPENDENCIES) testsuite/common/$(am__dirstamp)\n+\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(testsuite_common_bits64m63_OBJECTS) $(testsuite_common_bits64m63_LDADD)\n+\n+testsuite/common/bits64m63.c: testsuite/common/bits-gen testsuite/common/bits-tst.c\n+\t$< 64 63 little > $@.tmp\n+\tcat $(srcdir)/testsuite/common/bits-tst.c >> $@.tmp\n+\tmv $@.tmp $@\n+\n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded.\n .NOEXPORT:"
    },
    {
      "sha": "41609116e7e1b2cb58341e36a9341d6c539770bd",
      "filename": "sim/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a389375f5b5fb67acdda6be028526ac44df2fbff/sim/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a389375f5b5fb67acdda6be028526ac44df2fbff/sim/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/ChangeLog?ref=a389375f5b5fb67acdda6be028526ac44df2fbff",
      "patch": "@@ -1,3 +1,9 @@\n+2021-04-03  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* local.mk: Include %D%/common/local.mk.\n+\t* common/Makefile.in: Removed.\n+\t* common/local.mk: New file.\n+\n 2021-03-07  Mike Frysinger  <vapier@gentoo.org>\n \n \t* Makefile.in: Removed."
    },
    {
      "sha": "d088501676e7cfa21dc90a88a05b6f258c957bac",
      "filename": "sim/testsuite/common/Makefile.in",
      "status": "removed",
      "additions": 0,
      "deletions": 53,
      "changes": 53,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a0e674c1ce2c877426f8a861c5294c535c5d49e6/sim/testsuite/common/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a0e674c1ce2c877426f8a861c5294c535c5d49e6/sim/testsuite/common/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/common/Makefile.in?ref=a0e674c1ce2c877426f8a861c5294c535c5d49e6",
      "patch": "@@ -1,53 +0,0 @@\n-CC=gcc\n-CFLAGS = -Wall -Werror -I../../common -I../../../include -g\n-default: check\n-\n-\n-# Verify SIM-BITS\n-\n-check: bits32m0.ok bits32m31.ok bits64m0.ok bits64m63.ok\n-all: bits32m0 bits32m31 bits64m0 bits64m63\n-\n-bits32m0.c: bits-gen bits-tst.c\n-\t./bits-gen 32 0 big > tmp-bits32m0.c\n-\tcat bits-tst.c >> tmp-bits32m0.c\n-\tmv tmp-bits32m0.c bits32m0.c\n-bits32m31.c: bits-gen bits-tst.c\n-\t./bits-gen 32 31 little > tmp-bits32m31.c\n-\tcat bits-tst.c >> tmp-bits32m31.c\n-\tmv tmp-bits32m31.c bits32m31.c\n-bits64m0.c: bits-gen bits-tst.c\n-\t./bits-gen 64 0 big > tmp-bits64m0.c\n-\tcat bits-tst.c >> tmp-bits64m0.c\n-\tmv tmp-bits64m0.c bits64m0.c\n-bits64m63.c: bits-gen bits-tst.c\n-\t./bits-gen 64 63 little > tmp-bits64m63.c\n-\tcat bits-tst.c >> tmp-bits64m63.c\n-\tmv tmp-bits64m63.c bits64m63.c\n-\n-\n-\n-# Verify SIM-FPU\n-#\n-#check: fpu-tst.ok\n-#all: fpu-tst\n-\n-\n-\n-# Verify SIM-ALU\n-\n-check: alu-tst.ok\n-all: alu-tst\n-alu-tst.o: alu-tst.c alu-n-tst.h\n-\n-clean:\n-\trm -f *.o\n-\trm -f *.ok\n-\trm -f bits32m0 bits32m31 bits64m0 bits64m63 bits-gen\n-\trm -f tmp-*\n-\trm -f alu-tst\n-\n-.SUFIXES: .ok\n-%.ok: %\n-\t./$<\n-\ttouch $<.ok"
    },
    {
      "sha": "38ffb0b0b7d24f41f0c5b0c87212ec7712ebfd6b",
      "filename": "sim/testsuite/common/local.mk",
      "status": "added",
      "additions": 84,
      "deletions": 0,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a389375f5b5fb67acdda6be028526ac44df2fbff/sim/testsuite/common/local.mk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a389375f5b5fb67acdda6be028526ac44df2fbff/sim/testsuite/common/local.mk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/common/local.mk?ref=a389375f5b5fb67acdda6be028526ac44df2fbff",
      "patch": "@@ -0,0 +1,84 @@\n+# Copyright (C) 1997-2021 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+EXTRA_PROGRAMS += %D%/bits-gen\n+\n+# We don't build this normally as it relies on the Berkeley SoftFloat/TestFloat\n+# projects being installed/available first.\n+EXTRA_PROGRAMS += %D%/fpu-tst\n+\n+TESTS = \\\n+\t%D%/bits32m0 \\\n+\t%D%/bits32m31 \\\n+\t%D%/bits64m0 \\\n+\t%D%/bits64m63 \\\n+\t%D%/alu-tst\n+check_PROGRAMS += $(TESTS)\n+\n+%C%_CPPFLAGS = \\\n+\t-I$(srcdir)/common \\\n+\t-I$(srcroot)/include\n+\n+# These tests are build-time only tools.  Override the default rules for them.\n+%D%/%.o: %D%/%.c\n+\t$(AM_V_CC)$(COMPILE_FOR_BUILD) $(%C%_CPPFLAGS) -c $< -o $@\n+\n+%D%/alu-tst$(EXEEXT): $(%C%_alu_tst_OBJECTS) $(%C%_alu_tst_DEPENDENCIES) %D%/$(am__dirstamp)\n+\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(%C%_alu_tst_OBJECTS) $(%C%_alu_tst_LDADD)\n+\n+%D%/fpu-tst$(EXEEXT): $(%C%_fpu_tst_OBJECTS) $(%C%_fpu_tst_DEPENDENCIES) %D%/$(am__dirstamp)\n+\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(%C%_fpu_tst_OBJECTS) $(%C%_fpu_tst_LDADD)\n+\n+%D%/bits-gen$(EXEEXT): $(%C%_bits_gen_OBJECTS) $(%C%_bits_gen_DEPENDENCIES) %D%/$(am__dirstamp)\n+\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(%C%_bits_gen_OBJECTS) $(%C%_bits_gen_LDADD)\n+\n+%D%/bits32m0$(EXEEXT): $(%C%_bits32m0_OBJECTS) $(%C%_bits32m0_DEPENDENCIES) %D%/$(am__dirstamp)\n+\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(%C%_bits32m0_OBJECTS) $(%C%_bits32m0_LDADD)\n+\n+%D%/bits32m0.c: %D%/bits-gen %D%/bits-tst.c\n+\t$< 32 0 big > $@.tmp\n+\tcat $(srcdir)/%D%/bits-tst.c >> $@.tmp\n+\tmv $@.tmp $@\n+\n+%D%/bits32m31$(EXEEXT): $(%C%_bits32m31_OBJECTS) $(%C%_bits32m31_DEPENDENCIES) %D%/$(am__dirstamp)\n+\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(%C%_bits32m31_OBJECTS) $(%C%_bits32m31_LDADD)\n+\n+%D%/bits32m31.c: %D%/bits-gen %D%/bits-tst.c\n+\t$< 32 31 little > $@.tmp\n+\tcat $(srcdir)/%D%/bits-tst.c >> $@.tmp\n+\tmv $@.tmp $@\n+\n+%D%/bits64m0$(EXEEXT): $(%C%_bits64m0_OBJECTS) $(%C%_bits64m0_DEPENDENCIES) %D%/$(am__dirstamp)\n+\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(%C%_bits64m0_OBJECTS) $(%C%_bits64m0_LDADD)\n+\n+%D%/bits64m0.c: %D%/bits-gen %D%/bits-tst.c\n+\t$< 64 0 big > $@.tmp\n+\tcat $(srcdir)/%D%/bits-tst.c >> $@.tmp\n+\tmv $@.tmp $@\n+\n+%D%/bits64m63$(EXEEXT): $(%C%_bits64m63_OBJECTS) $(%C%_bits64m63_DEPENDENCIES) %D%/$(am__dirstamp)\n+\t$(AM_V_CCLD)$(LINK_FOR_BUILD) $(%C%_bits64m63_OBJECTS) $(%C%_bits64m63_LDADD)\n+\n+%D%/bits64m63.c: %D%/bits-gen %D%/bits-tst.c\n+\t$< 64 63 little > $@.tmp\n+\tcat $(srcdir)/%D%/bits-tst.c >> $@.tmp\n+\tmv $@.tmp $@\n+\n+CLEANFILES += \\\n+\t%D%/bits-gen \\\n+\t%D%/bits32m0.c \\\n+\t%D%/bits32m31.c \\\n+\t%D%/bits64m0.c \\\n+\t%D%/bits64m63.c"
    },
    {
      "sha": "82eb70de72aa5247da5006851da7ece6ab76f908",
      "filename": "sim/testsuite/local.mk",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a389375f5b5fb67acdda6be028526ac44df2fbff/sim/testsuite/local.mk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a389375f5b5fb67acdda6be028526ac44df2fbff/sim/testsuite/local.mk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/local.mk?ref=a389375f5b5fb67acdda6be028526ac44df2fbff",
      "patch": "@@ -32,3 +32,5 @@ check-DEJAGNU: site.exp\n \n MOSTLYCLEANFILES += \\\n \tsite-srcdir.exp testrun.log testrun.sum\n+\n+include %D%/common/local.mk"
    }
  ]
}