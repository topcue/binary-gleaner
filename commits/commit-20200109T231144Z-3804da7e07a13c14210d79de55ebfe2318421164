{
  "sha": "3804da7e07a13c14210d79de55ebfe2318421164",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzgwNGRhN2UwN2ExM2MxNDIxMGQ3OWRlNTVlYmZlMjMxODQyMTE2NA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-01-07T00:35:02Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-01-09T23:11:44Z"
    },
    "message": "gdb/testsuite/tui: Introduce check_box_contents\n\nA new test procedure for matching the contents of one screen box\nagainst a regexp.  This can be used to match the contents of one TUI\nwindow against a regexp without any of the borders, or other windows\nbeing included in the matched output (as is currently the case with\ncheck_contents).\n\nThis will be used in a later commit.\n\ngdb/testsuite/ChangeLog:\n\n\t* lib/tuiterm.exp (Term::check_box_contents): New proc.\n\nChange-Id: Icf795bf38dd9295e282a34eecc318a9cdbc73926",
    "tree": {
      "sha": "554be6e90a1ea98219e32654beebf5bdfb4e5dcf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/554be6e90a1ea98219e32654beebf5bdfb4e5dcf"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3804da7e07a13c14210d79de55ebfe2318421164",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3804da7e07a13c14210d79de55ebfe2318421164",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3804da7e07a13c14210d79de55ebfe2318421164",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3804da7e07a13c14210d79de55ebfe2318421164/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b40aa28fb5de5e84bd3409f54138def0ba904a9a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b40aa28fb5de5e84bd3409f54138def0ba904a9a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b40aa28fb5de5e84bd3409f54138def0ba904a9a"
    }
  ],
  "stats": {
    "total": 35,
    "additions": 35,
    "deletions": 0
  },
  "files": [
    {
      "sha": "78880be4843ae4976cb21933cd49e1a6249741a3",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3804da7e07a13c14210d79de55ebfe2318421164/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3804da7e07a13c14210d79de55ebfe2318421164/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=3804da7e07a13c14210d79de55ebfe2318421164",
      "patch": "@@ -1,3 +1,7 @@\n+2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* lib/tuiterm.exp (Term::check_box_contents): New proc.\n+\n 2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* lib/tuiterm.exp (Term::prepare_for_tui): New proc."
    },
    {
      "sha": "0307745d879df67bae83e1f875fe9ff44d7463c1",
      "filename": "gdb/testsuite/lib/tuiterm.exp",
      "status": "modified",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3804da7e07a13c14210d79de55ebfe2318421164/gdb/testsuite/lib/tuiterm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3804da7e07a13c14210d79de55ebfe2318421164/gdb/testsuite/lib/tuiterm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/tuiterm.exp?ref=3804da7e07a13c14210d79de55ebfe2318421164",
      "patch": "@@ -600,6 +600,37 @@ namespace eval Term {\n \t}\n     }\n \n+    # Check the contents of a box on the screen.  This is a little\n+    # like check_contents, but doens't check the whole screen\n+    # contents, only the contents of a single box.  This procedure\n+    # includes (effectively) a call to check_box to ensure there is a\n+    # box where expected, if there is then the contents of the box are\n+    # matched against REGEXP.\n+    proc check_box_contents {test_name x y width height regexp} {\n+\tvariable _chars\n+\n+\tset why [_check_box $x $y $width $height]\n+\tif {$why != \"\"} {\n+\t    dump_screen\n+\t    fail \"$test_name (box check: $why)\"\n+\t    return\n+\t}\n+\n+\t# Now grab the contents of the box, join each line together\n+\t# with a newline character and match against REGEXP.\n+\tset result \"\"\n+\tfor {set yy [expr {$y + 1}]} {$yy < [expr {$y + $height - 1}]} {incr yy} {\n+\t    for {set xx [expr {$x + 1}]} {$xx < [expr {$x + $width - 1}]} {incr xx} {\n+\t\tappend result [lindex $_chars($xx,$yy) 0]\n+\t    }\n+\t    append result \"\\n\"\n+\t}\n+\n+\tif {![gdb_assert {[regexp -- $regexp $result]} $test_name]} {\n+\t    dump_screen\n+\t}\n+    }\n+\n     # A debugging function to dump the current screen, with line\n     # numbers.\n     proc dump_screen {} {"
    }
  ]
}