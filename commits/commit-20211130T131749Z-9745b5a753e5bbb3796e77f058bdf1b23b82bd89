{
  "sha": "9745b5a753e5bbb3796e77f058bdf1b23b82bd89",
  "node_id": "C_kwDOANOeidoAKDk3NDViNWE3NTNlNWJiYjM3OTZlNzdmMDU4YmRmMWIyM2I4MmJkODk",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-11-30T13:17:49Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-11-30T13:17:49Z"
    },
    "message": "Use dwarf_vma type for offsets, ranges and section sizes in DWARF decoder.\n\n\t* dwarf.c (find_debug_info_for_offset): Use dwarf_vma type for\n\toffsets, sizes and ranges.\n\t(display_loc_list): Likewise.  Also use print_dwarf_vma to print\n\tthe offset.\n\t(display_loclists_list): Likewise.\n\t(display_loc_list_dwo): Likewise.\n\t(display_debug_str): Likewise.\n\t(display_debug_aranges): Likewise.\n\t(display_debug_ranges_list): Likewise.\n\t(display_debug_rnglists_list): Likewise.\n\t(display_debug_ranges): Likewise.",
    "tree": {
      "sha": "f1cf138797916f9dc28e952bea78063d83aa3d37",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f1cf138797916f9dc28e952bea78063d83aa3d37"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9745b5a753e5bbb3796e77f058bdf1b23b82bd89",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9745b5a753e5bbb3796e77f058bdf1b23b82bd89",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9745b5a753e5bbb3796e77f058bdf1b23b82bd89",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9745b5a753e5bbb3796e77f058bdf1b23b82bd89/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "44b357eb9aefc77a8385e631d8e3035a664f2333",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44b357eb9aefc77a8385e631d8e3035a664f2333",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/44b357eb9aefc77a8385e631d8e3035a664f2333"
    }
  ],
  "stats": {
    "total": 95,
    "additions": 59,
    "deletions": 36
  },
  "files": [
    {
      "sha": "26fc768c32994b321cbd6f322ccc22599dd242f5",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9745b5a753e5bbb3796e77f058bdf1b23b82bd89/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9745b5a753e5bbb3796e77f058bdf1b23b82bd89/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=9745b5a753e5bbb3796e77f058bdf1b23b82bd89",
      "patch": "@@ -1,3 +1,17 @@\n+2021-11-30  Nick Clifton  <nickc@redhat.com>\n+\n+\t* dwarf.c (find_debug_info_for_offset): Use dwarf_vma type for\n+\toffsets, sizes and ranges.\n+\t(display_loc_list): Likewise.  Also use print_dwarf_vma to print\n+\tthe offset.\n+\t(display_loclists_list): Likewise.\n+\t(display_loc_list_dwo): Likewise.\n+\t(display_debug_str): Likewise.\n+\t(display_debug_aranges): Likewise.\n+\t(display_debug_ranges_list): Likewise.\n+\t(display_debug_rnglists_list): Likewise.\n+\t(display_debug_ranges): Likewise.\n+\n 2021-11-29  Nick Clifton  <nickc@redhat.com>\n \n \tPR 28632"
    },
    {
      "sha": "6f2a49b48c2108b48b16f50b518dd74ef9d33698",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 45,
      "deletions": 36,
      "changes": 81,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9745b5a753e5bbb3796e77f058bdf1b23b82bd89/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9745b5a753e5bbb3796e77f058bdf1b23b82bd89/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=9745b5a753e5bbb3796e77f058bdf1b23b82bd89",
      "patch": "@@ -5574,7 +5574,7 @@ display_debug_lines (struct dwarf_section *section, void *file)\n }\n \n static debug_info *\n-find_debug_info_for_offset (unsigned long offset)\n+find_debug_info_for_offset (dwarf_vma offset)\n {\n   unsigned int i;\n \n@@ -6330,11 +6330,10 @@ display_loc_list (struct dwarf_section *section,\n {\n   unsigned char *start = *start_ptr, *vstart = *vstart_ptr;\n   unsigned char *section_end = section->start + section->size;\n-  unsigned long cu_offset;\n+  dwarf_vma    cu_offset;\n   unsigned int pointer_size;\n   unsigned int offset_size;\n   int dwarf_version;\n-\n   dwarf_vma begin;\n   dwarf_vma end;\n   unsigned short length;\n@@ -6371,7 +6370,8 @@ display_loc_list (struct dwarf_section *section,\n \t  break;\n \t}\n \n-      printf (\"    %8.8lx \", (unsigned long) off);\n+      printf (\"    \");\n+      print_dwarf_vma (off, 4);\n \n       SAFE_BYTE_GET_AND_INC (begin, start, pointer_size, section_end);\n       SAFE_BYTE_GET_AND_INC (end, start, pointer_size, section_end);\n@@ -6475,7 +6475,7 @@ display_loclists_list (struct dwarf_section *section,\n {\n   unsigned char *start = *start_ptr, *vstart = *vstart_ptr;\n   unsigned char *section_end = section->start + section->size;\n-  unsigned long cu_offset;\n+  dwarf_vma    cu_offset;\n   unsigned int pointer_size;\n   unsigned int offset_size;\n   int dwarf_version;\n@@ -6518,7 +6518,8 @@ display_loclists_list (struct dwarf_section *section,\n \t  break;\n \t}\n \n-      printf (\"    %8.8lx \", (unsigned long) off);\n+      printf (\"    \");\n+      print_dwarf_vma (off, 4);\n \n       SAFE_BYTE_GET_AND_INC (llet, start, 1, section_end);\n \n@@ -6661,7 +6662,7 @@ display_loc_list_dwo (struct dwarf_section *section,\n {\n   unsigned char *start = *start_ptr, *vstart = *vstart_ptr;\n   unsigned char *section_end = section->start + section->size;\n-  unsigned long cu_offset;\n+  dwarf_vma    cu_offset;\n   unsigned int pointer_size;\n   unsigned int offset_size;\n   int dwarf_version;\n@@ -6691,7 +6692,8 @@ display_loc_list_dwo (struct dwarf_section *section,\n \n   while (1)\n     {\n-      printf (\"    %8.8lx \", (unsigned long) (offset + (start - *start_ptr)));\n+      printf (\"    \");\n+      print_dwarf_vma (offset + (start - *start_ptr), 4);\n \n       if (start >= section_end)\n \t{\n@@ -6829,11 +6831,11 @@ static int\n display_debug_loc (struct dwarf_section *section, void *file)\n {\n   unsigned char *start = section->start, *vstart = NULL;\n-  unsigned long bytes;\n+  dwarf_vma bytes;\n   unsigned char *section_begin = start;\n   unsigned int num_loc_list = 0;\n-  unsigned long last_offset = 0;\n-  unsigned long last_view = 0;\n+  dwarf_vma last_offset = 0;\n+  dwarf_vma last_view = 0;\n   unsigned int first = 0;\n   unsigned int i;\n   unsigned int j;\n@@ -7105,7 +7107,7 @@ display_debug_str (struct dwarf_section *section,\n \t\t   void *file ATTRIBUTE_UNUSED)\n {\n   unsigned char *start = section->start;\n-  unsigned long bytes = section->size;\n+  dwarf_vma bytes = section->size;\n   dwarf_vma addr = section->address;\n \n   if (bytes == 0)\n@@ -7196,9 +7198,9 @@ display_debug_aranges (struct dwarf_section *section,\n       unsigned char *addr_ranges;\n       dwarf_vma length;\n       dwarf_vma address;\n-      unsigned long sec_off;\n+      dwarf_vma     sec_off;\n       unsigned char address_size;\n-      unsigned int offset_size;\n+      unsigned int  offset_size;\n       unsigned char *end_ranges;\n \n       hdrptr = start;\n@@ -7217,7 +7219,7 @@ display_debug_aranges (struct dwarf_section *section,\n \t{\n \t  warn (_(\"Debug info is corrupted, %s header at %#lx has length %s\\n\"),\n \t\tsection->name,\n-\t\tsec_off,\n+\t\t(unsigned long) sec_off,\n \t\tdwarf_vmatoa (\"x\", arange.ar_length));\n \t  break;\n \t}\n@@ -7556,9 +7558,11 @@ range_entry_compar (const void *ap, const void *bp)\n }\n \n static void\n-display_debug_ranges_list (unsigned char *start, unsigned char *finish,\n-\t\t\t   unsigned int pointer_size, unsigned long offset,\n-\t\t\t   unsigned long base_address)\n+display_debug_ranges_list (unsigned char *  start,\n+\t\t\t   unsigned char *  finish,\n+\t\t\t   unsigned int     pointer_size,\n+\t\t\t   dwarf_vma        offset,\n+\t\t\t   dwarf_vma        base_address)\n {\n   while (start < finish)\n     {\n@@ -7570,7 +7574,8 @@ display_debug_ranges_list (unsigned char *start, unsigned char *finish,\n \tbreak;\n       SAFE_SIGNED_BYTE_GET_AND_INC (end, start, pointer_size, finish);\n \n-      printf (\"    %8.8lx \", offset);\n+      printf (\"    \");\n+      print_dwarf_vma (offset, 4);\n \n       if (begin == 0 && end == 0)\n \t{\n@@ -7602,27 +7607,30 @@ display_debug_ranges_list (unsigned char *start, unsigned char *finish,\n }\n \n static void\n-display_debug_rnglists_list (unsigned char *start, unsigned char *finish,\n-\t\t\t     unsigned int pointer_size, unsigned long offset,\n-\t\t\t     unsigned long base_address)\n+display_debug_rnglists_list (unsigned char * start,\n+\t\t\t     unsigned char * finish,\n+\t\t\t     unsigned int    pointer_size,\n+\t\t\t     dwarf_vma       offset,\n+\t\t\t     dwarf_vma       base_address)\n {\n   unsigned char *next = start;\n \n   while (1)\n     {\n-      unsigned long off = offset + (start - next);\n+      dwarf_vma off = offset + (start - next);\n       enum dwarf_range_list_entry rlet;\n       /* Initialize it due to a false compiler warning.  */\n       dwarf_vma begin = -1, length, end = -1;\n \n       if (start >= finish)\n \t{\n-\t  warn (_(\"Range list starting at offset 0x%lx is not terminated.\\n\"),\n-\t\toffset);\n+\t  warn (_(\"Range list starting at offset 0x%s is not terminated.\\n\"),\n+\t\tdwarf_vmatoa (\"x\", offset));\n \t  break;\n \t}\n \n-      printf (\"    %8.8lx \", off);\n+      printf (\"    \");\n+      print_dwarf_vma (off, 4);\n \n       SAFE_BYTE_GET_AND_INC (rlet, start, 1, finish);\n \n@@ -7682,17 +7690,18 @@ static int\n display_debug_ranges (struct dwarf_section *section,\n \t\t      void *file ATTRIBUTE_UNUSED)\n {\n-  unsigned char *start = section->start;\n-  unsigned char *last_start = start;\n-  unsigned long bytes = section->size;\n-  unsigned char *section_begin = start;\n-  unsigned char *finish = start + bytes;\n-  unsigned int num_range_list, i;\n-  struct range_entry *range_entries, *range_entry_fill;\n-  int is_rnglists = strstr (section->name, \"debug_rnglists\") != NULL;\n+  unsigned char *       start = section->start;\n+  unsigned char *       last_start = start;\n+  dwarf_vma             bytes = section->size;\n+  unsigned char *       section_begin = start;\n+  unsigned char *       finish = start + bytes;\n+  unsigned int          num_range_list, i;\n+  struct range_entry *  range_entries;\n+  struct range_entry *  range_entry_fill;\n+  int                   is_rnglists = strstr (section->name, \"debug_rnglists\") != NULL;\n   /* Initialize it due to a false compiler warning.  */\n-  unsigned char address_size = 0;\n-  dwarf_vma last_offset = 0;\n+  unsigned char         address_size = 0;\n+  dwarf_vma             last_offset = 0;\n \n   if (bytes == 0)\n     {"
    }
  ]
}