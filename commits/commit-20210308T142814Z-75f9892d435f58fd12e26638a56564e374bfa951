{
  "sha": "75f9892d435f58fd12e26638a56564e374bfa951",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzVmOTg5MmQ0MzVmNThmZDEyZTI2NjM4YTU2NTY0ZTM3NGJmYTk1MQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:14Z"
    },
    "message": "Add two agent expression helper functions\n\nThis adds a couple of agent expression helper functions that will be\nuseful when implementing various operations.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* expop.h (gen_expr_binop, gen_expr_structop): Declare.\n\t* ax-gdb.c (gen_expr_binop): New function.\n\t(gen_expr_structop): Likewise.",
    "tree": {
      "sha": "6ec69dd5e1d91fd0a367c4c69d1828a6311a123c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6ec69dd5e1d91fd0a367c4c69d1828a6311a123c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/75f9892d435f58fd12e26638a56564e374bfa951",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/75f9892d435f58fd12e26638a56564e374bfa951",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/75f9892d435f58fd12e26638a56564e374bfa951",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/75f9892d435f58fd12e26638a56564e374bfa951/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "de401988aeac56a8478f61cde1b35e961742317b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/de401988aeac56a8478f61cde1b35e961742317b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/de401988aeac56a8478f61cde1b35e961742317b"
    }
  ],
  "stats": {
    "total": 62,
    "additions": 62,
    "deletions": 0
  },
  "files": [
    {
      "sha": "2b90a32e74938b5599bd18ee152682c35cb9c12b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75f9892d435f58fd12e26638a56564e374bfa951/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75f9892d435f58fd12e26638a56564e374bfa951/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=75f9892d435f58fd12e26638a56564e374bfa951",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* expop.h (gen_expr_binop, gen_expr_structop): Declare.\n+\t* ax-gdb.c (gen_expr_binop): New function.\n+\t(gen_expr_structop): Likewise.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* expprint.c (expr::dump_for_expression): New functions."
    },
    {
      "sha": "1c6a7431143121c90403cb2b091db08f3e25a91e",
      "filename": "gdb/ax-gdb.c",
      "status": "modified",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75f9892d435f58fd12e26638a56564e374bfa951/gdb/ax-gdb.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75f9892d435f58fd12e26638a56564e374bfa951/gdb/ax-gdb.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ax-gdb.c?ref=75f9892d435f58fd12e26638a56564e374bfa951",
      "patch": "@@ -45,6 +45,7 @@\n #include \"typeprint.h\"\n #include \"valprint.h\"\n #include \"c-lang.h\"\n+#include \"expop.h\"\n \n #include \"gdbsupport/format.h\"\n \n@@ -158,6 +159,12 @@ static void gen_expr_binop_rest (struct expression *exp,\n \t\t\t\t struct axs_value *value,\n \t\t\t\t struct axs_value *value1,\n \t\t\t\t struct axs_value *value2);\n+static void gen_expr_binop_rest (struct expression *exp,\n+\t\t\t\t enum exp_opcode op,\n+\t\t\t\t struct agent_expr *ax,\n+\t\t\t\t struct axs_value *value,\n+\t\t\t\t struct axs_value *value1,\n+\t\t\t\t struct axs_value *value2);\n \f\n \n /* Detecting constant expressions.  */\n@@ -2458,6 +2465,45 @@ gen_expr_binop_rest (struct expression *exp,\n   gen_expr (exp, pc, ax, value2);\n   gen_expr_binop_rest (exp, op, ax, value, value1, value2);\n }\n+\n+/* A helper function that emits a binop based on two operations.  */\n+\n+void\n+gen_expr_binop (struct expression *exp,\n+\t\tenum exp_opcode op,\n+\t\texpr::operation *lhs, expr::operation *rhs,\n+\t\tstruct agent_expr *ax, struct axs_value *value)\n+{\n+  struct axs_value value1, value2;\n+\n+  lhs->generate_ax (exp, ax, &value1);\n+  gen_usual_unary (ax, &value1);\n+  rhs->generate_ax (exp, ax, &value2);\n+  gen_expr_binop_rest (exp, op, ax, value, &value1, &value2);\n+}\n+\n+/* A helper function that emits a structop based on an operation and a\n+   member name.  */\n+\n+void\n+gen_expr_structop (struct expression *exp,\n+\t\t   enum exp_opcode op,\n+\t\t   expr::operation *lhs,\n+\t\t   const char *name,\n+\t\t   struct agent_expr *ax, struct axs_value *value)\n+{\n+  lhs->generate_ax (exp, ax, value);\n+  if (op == STRUCTOP_STRUCT)\n+    gen_struct_ref (ax, value, name, \".\", \"structure or union\");\n+  else if (op == STRUCTOP_PTR)\n+    gen_struct_ref (ax, value, name, \"->\",\n+\t\t    \"pointer to a structure or union\");\n+  else\n+    /* If this `if' chain doesn't handle it, then the case list\n+       shouldn't mention it, and we shouldn't be here.  */\n+    internal_error (__FILE__, __LINE__,\n+\t\t    _(\"gen_expr: unhandled struct case\"));\n+}\n \f\n \n /* Given a single variable and a scope, generate bytecodes to trace"
    },
    {
      "sha": "1bf06139dfb6a35517b296d92f6eb90fdbb6c8f1",
      "filename": "gdb/expop.h",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75f9892d435f58fd12e26638a56564e374bfa951/gdb/expop.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75f9892d435f58fd12e26638a56564e374bfa951/gdb/expop.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/expop.h?ref=75f9892d435f58fd12e26638a56564e374bfa951",
      "patch": "@@ -31,6 +31,16 @@\n struct agent_expr;\n struct axs_value;\n \n+extern void gen_expr_binop (struct expression *exp,\n+\t\t\t    enum exp_opcode op,\n+\t\t\t    expr::operation *lhs, expr::operation *rhs,\n+\t\t\t    struct agent_expr *ax, struct axs_value *value);\n+extern void gen_expr_structop (struct expression *exp,\n+\t\t\t       enum exp_opcode op,\n+\t\t\t       expr::operation *lhs,\n+\t\t\t       const char *name,\n+\t\t\t       struct agent_expr *ax, struct axs_value *value);\n+\n namespace expr\n {\n "
    }
  ]
}