{
  "sha": "b5ff370e964a5a794a6b5791ca55ac103ebffe70",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjVmZjM3MGU5NjRhNWE3OTRhNmI1NzkxY2E1NWFjMTAzZWJmZmU3MA==",
  "commit": {
    "author": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-12-21T12:16:24Z"
    },
    "committer": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2021-01-05T13:08:26Z"
    },
    "message": "Fix TUI source window drawing\n\nThe smaxrow and smaxcol parameters of prefresh are the bottom right corner\nof the text area inclusive, not exclusive.\n\nAnd if the source window grows bigger in height, the pad has to grow as\nwell.\n\ngdb/ChangeLog:\n\n2021-01-05  Hannes Domani  <ssbssa@yahoo.de>\n\n\tPR tui/26927\n\t* tui/tui-winsource.c (tui_source_window_base::refresh_window):\n\tFix source pad size in prefresh.\n\t(tui_source_window_base::show_source_content): Grow source pad\n\tif necessary.",
    "tree": {
      "sha": "60efadcd9c0663eec43901bbf5174b08cd8b61b3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/60efadcd9c0663eec43901bbf5174b08cd8b61b3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b5ff370e964a5a794a6b5791ca55ac103ebffe70",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b5ff370e964a5a794a6b5791ca55ac103ebffe70",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b5ff370e964a5a794a6b5791ca55ac103ebffe70",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b5ff370e964a5a794a6b5791ca55ac103ebffe70/comments",
  "author": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b281a04ff0a40440c7a2a0ab75ac0410cc1f53e8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b281a04ff0a40440c7a2a0ab75ac0410cc1f53e8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b281a04ff0a40440c7a2a0ab75ac0410cc1f53e8"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 11,
    "deletions": 2
  },
  "files": [
    {
      "sha": "7716ff9b1aad49a508ab8d154aba4b5a3b18f0e6",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b5ff370e964a5a794a6b5791ca55ac103ebffe70/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b5ff370e964a5a794a6b5791ca55ac103ebffe70/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b5ff370e964a5a794a6b5791ca55ac103ebffe70",
      "patch": "@@ -1,3 +1,11 @@\n+2021-01-05  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\tPR tui/26927\n+\t* tui/tui-winsource.c (tui_source_window_base::refresh_window):\n+\tFix source pad size in prefresh.\n+\t(tui_source_window_base::show_source_content): Grow source pad\n+\tif necessary.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* bfin-tdep.c (bfin_push_dummy_call): Use align_up."
    },
    {
      "sha": "55b66e1bc1670f20b7b692be21ab2873972243d0",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b5ff370e964a5a794a6b5791ca55ac103ebffe70/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b5ff370e964a5a794a6b5791ca55ac103ebffe70/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=b5ff370e964a5a794a6b5791ca55ac103ebffe70",
      "patch": "@@ -262,7 +262,7 @@ tui_source_window_base::refresh_window ()\n      scrolled beyond where we clip.  */\n   m_horizontal_offset = pad_x;\n   prefresh (m_pad.get (), 0, pad_x, y + 1, x + left_margin,\n-\t    y + 1 + m_content.size (), x + left_margin + view_width - 1);\n+\t    y + m_content.size (), x + left_margin + view_width - 1);\n }\n \n void\n@@ -273,7 +273,8 @@ tui_source_window_base::show_source_content ()\n   check_and_display_highlight_if_needed ();\n \n   int pad_width = std::max (m_max_length, width);\n-  if (m_pad == nullptr || pad_width > getmaxx (m_pad.get ()))\n+  if (m_pad == nullptr || pad_width > getmaxx (m_pad.get ())\n+      || m_content.size () > getmaxy (m_pad.get ()))\n     m_pad.reset (newpad (m_content.size (), pad_width));\n \n   werase (m_pad.get ());"
    }
  ]
}