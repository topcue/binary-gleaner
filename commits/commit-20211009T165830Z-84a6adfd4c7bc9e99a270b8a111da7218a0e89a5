{
  "sha": "84a6adfd4c7bc9e99a270b8a111da7218a0e89a5",
  "node_id": "C_kwDOANOeidoAKDg0YTZhZGZkNGM3YmM5ZTk5YTI3MGI4YTExMWRhNzIxOGEwZTg5YTU",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-10-09T16:58:30Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-10-09T16:58:30Z"
    },
    "message": "[gdb] Make execute_command_to_string return string on throw\n\nThe pattern for using execute_command_to_string is:\n...\n  std::string output;\n  output = execute_fn_to_string (fn, term_out);\n...\n\nThis results in a problem when using it in a try/catch:\n...\n  try\n    {\n      output = execute_fn_to_string (fn, term_out)\n    }\n  catch (const gdb_exception &e)\n    {\n      /* Use output.  */\n    }\n...\n\nIf an expection was thrown during execute_fn_to_string, then the output\nremains unassigned, while it could be worthwhile to known what output was\ngenerated by gdb before the expection was thrown.\n\nFix this by returning the string using a parameter instead:\n...\n  execute_fn_to_string (output, fn, term_out)\n...\n\nAlso add a variant without string parameter, to support places where the\nfunction is used while ignoring the result:\n...\n  execute_fn_to_string (fn, term_out)\n...\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "2c9335466ee4a93d7d2b907a4e6f3f1a8fecd2af",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2c9335466ee4a93d7d2b907a4e6f3f1a8fecd2af"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/84a6adfd4c7bc9e99a270b8a111da7218a0e89a5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/84a6adfd4c7bc9e99a270b8a111da7218a0e89a5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/84a6adfd4c7bc9e99a270b8a111da7218a0e89a5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/84a6adfd4c7bc9e99a270b8a111da7218a0e89a5/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fa9ce2c143ce7ee6bc4f22a0577fe5c0858beddd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fa9ce2c143ce7ee6bc4f22a0577fe5c0858beddd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fa9ce2c143ce7ee6bc4f22a0577fe5c0858beddd"
    }
  ],
  "stats": {
    "total": 70,
    "additions": 50,
    "deletions": 20
  },
  "files": [
    {
      "sha": "a823fcb0020676718de6cfbe46aecef138878e74",
      "filename": "gdb/complaints.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/84a6adfd4c7bc9e99a270b8a111da7218a0e89a5/gdb/complaints.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/84a6adfd4c7bc9e99a270b8a111da7218a0e89a5/gdb/complaints.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/complaints.c?ref=84a6adfd4c7bc9e99a270b8a111da7218a0e89a5",
      "patch": "@@ -91,7 +91,7 @@ test_complaints ()\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       std::string output;\t\t\t\t\t\t\\\n-      output = execute_fn_to_string ([]() { complaint (STR); }, false);\t\\\n+      execute_fn_to_string (output, []() { complaint (STR); }, false);\t\\\n       std::string expected\t\t\t\t\t\t\\\n \t= _(\"During symbol reading: \") + std::string (STR \"\\n\");\t\\\n       SELF_CHECK (output == expected);\t\t\t\t\t\\\n@@ -102,7 +102,7 @@ test_complaints ()\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       std::string output;\t\t\t\t\t\t\\\n-      output = execute_fn_to_string ([]() { complaint (STR); }, false);\t\\\n+      execute_fn_to_string (output, []() { complaint (STR); }, false);\t\\\n       SELF_CHECK (output.empty ());\t\t\t\t\t\\\n       SELF_CHECK (counters[STR] == CNT);\t\t\t\t\\\n     } while (0)"
    },
    {
      "sha": "39f5ede3eaf5b17cf861c4a3993ddd60c7708968",
      "filename": "gdb/gdbcmd.h",
      "status": "modified",
      "additions": 9,
      "deletions": 3,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/84a6adfd4c7bc9e99a270b8a111da7218a0e89a5/gdb/gdbcmd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/84a6adfd4c7bc9e99a270b8a111da7218a0e89a5/gdb/gdbcmd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbcmd.h?ref=84a6adfd4c7bc9e99a270b8a111da7218a0e89a5",
      "patch": "@@ -42,7 +42,8 @@ extern void execute_fn_to_ui_file (struct ui_file *file, std::function<void(void\n    (e.g. with styling).  When TERM_OUT is false raw output will be collected\n    (e.g. no styling).  */\n \n-extern std::string execute_fn_to_string (std::function<void(void)> fn, bool term_out);\n+extern void execute_fn_to_string (std::string &res,\n+\t\t\t\t  std::function<void(void)> fn, bool term_out);\n \n /* As execute_fn_to_ui_file, but run execute_command for P and FROM_TTY.  */\n \n@@ -51,8 +52,13 @@ extern void execute_command_to_ui_file (struct ui_file *file,\n \n /* As execute_fn_to_string, but run execute_command for P and FROM_TTY.  */\n \n-extern std::string execute_command_to_string (const char *p, int from_tty,\n-\t\t\t\t\t      bool term_out);\n+extern void execute_command_to_string (std::string &res, const char *p,\n+\t\t\t\t       int from_tty, bool term_out);\n+\n+/* As execute_command_to_string, but ignore resulting string.  */\n+\n+extern void execute_command_to_string (const char *p,\n+\t\t\t\t       int from_tty, bool term_out);\n \n extern void print_command_line (struct command_line *, unsigned int,\n \t\t\t\tstruct ui_file *);"
    },
    {
      "sha": "8ba840cba6a86e29524bb41b7ef1558aff794c15",
      "filename": "gdb/guile/guile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/84a6adfd4c7bc9e99a270b8a111da7218a0e89a5/gdb/guile/guile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/84a6adfd4c7bc9e99a270b8a111da7218a0e89a5/gdb/guile/guile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/guile.c?ref=84a6adfd4c7bc9e99a270b8a111da7218a0e89a5",
      "patch": "@@ -302,7 +302,7 @@ gdbscm_execute_gdb_command (SCM command_scm, SCM rest)\n \n       scoped_restore preventer = prevent_dont_repeat ();\n       if (to_string)\n-\tto_string_res = execute_command_to_string (command, from_tty, false);\n+\texecute_command_to_string (to_string_res, command, from_tty, false);\n       else\n \texecute_command (command, from_tty);\n "
    },
    {
      "sha": "264f7c88ed66c4f4f4bdb19d425e238fcbd07d67",
      "filename": "gdb/python/python.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/84a6adfd4c7bc9e99a270b8a111da7218a0e89a5/gdb/python/python.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/84a6adfd4c7bc9e99a270b8a111da7218a0e89a5/gdb/python/python.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python.c?ref=84a6adfd4c7bc9e99a270b8a111da7218a0e89a5",
      "patch": "@@ -1924,11 +1924,11 @@ namespace selftests {\n static void\n test_python ()\n {\n-#define CMD execute_command_to_string (\"python print(5)\", 0, true);\n+#define CMD(S) execute_command_to_string (S, \"python print(5)\", 0, true)\n \n   std::string output;\n \n-  output = CMD;\n+  CMD (output);\n   SELF_CHECK (output == \"5\\n\");\n   output.clear ();\n \n@@ -1937,7 +1937,7 @@ test_python ()\n     = make_scoped_restore (&gdb_python_initialized, 0);\n   try\n     {\n-      output = CMD;\n+      CMD (output);\n     }\n   catch (const gdb_exception &e)\n     {"
    },
    {
      "sha": "bedadb0f491399e70cf4d3246be3687d132d760e",
      "filename": "gdb/stack.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/84a6adfd4c7bc9e99a270b8a111da7218a0e89a5/gdb/stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/84a6adfd4c7bc9e99a270b8a111da7218a0e89a5/gdb/stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stack.c?ref=84a6adfd4c7bc9e99a270b8a111da7218a0e89a5",
      "patch": "@@ -3028,8 +3028,8 @@ frame_apply_command_count (const char *which_command,\n \t       set to the selected frame.  */\n \t    scoped_restore_current_thread restore_fi_current_frame;\n \n-\t    cmd_result = execute_command_to_string\n-\t      (cmd, from_tty, gdb_stdout->term_out ());\n+\t    execute_command_to_string\n+\t      (cmd_result, cmd, from_tty, gdb_stdout->term_out ());\n \t  }\n \t  fi = get_selected_frame (_(\"frame apply \"\n \t\t\t\t     \"unable to get selected frame.\"));"
    },
    {
      "sha": "9abb51179d6b9f48a5c5fb5c78edd4f4a8e03b26",
      "filename": "gdb/thread.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/84a6adfd4c7bc9e99a270b8a111da7218a0e89a5/gdb/thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/84a6adfd4c7bc9e99a270b8a111da7218a0e89a5/gdb/thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/thread.c?ref=84a6adfd4c7bc9e99a270b8a111da7218a0e89a5",
      "patch": "@@ -1450,8 +1450,9 @@ thr_try_catch_cmd (thread_info *thr, const char *cmd, int from_tty,\n \n   try\n     {\n-      std::string cmd_result = execute_command_to_string\n-\t(cmd, from_tty, gdb_stdout->term_out ());\n+      std::string cmd_result;\n+      execute_command_to_string\n+\t(cmd_result, cmd, from_tty, gdb_stdout->term_out ());\n       if (!flags.silent || cmd_result.length () > 0)\n \t{\n \t  if (!flags.quiet)"
    },
    {
      "sha": "1f9e649a85d6043cd5ade885e48e9e09dc7fd6e5",
      "filename": "gdb/top.c",
      "status": "modified",
      "additions": 30,
      "deletions": 7,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/84a6adfd4c7bc9e99a270b8a111da7218a0e89a5/gdb/top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/84a6adfd4c7bc9e99a270b8a111da7218a0e89a5/gdb/top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/top.c?ref=84a6adfd4c7bc9e99a270b8a111da7218a0e89a5",
      "patch": "@@ -724,13 +724,25 @@ execute_fn_to_ui_file (struct ui_file *file, std::function<void(void)> fn)\n \n /* See gdbcmd.h.  */\n \n-std::string\n-execute_fn_to_string (std::function<void(void)> fn, bool term_out)\n+void\n+execute_fn_to_string (std::string &res, std::function<void(void)> fn,\n+\t\t      bool term_out)\n {\n   string_file str_file (term_out);\n \n-  execute_fn_to_ui_file (&str_file, fn);\n-  return std::move (str_file.string ());\n+  try\n+    {\n+      execute_fn_to_ui_file (&str_file, fn);\n+    }\n+  catch (...)\n+    {\n+      /* Finally.  */\n+      res = std::move (str_file.string ());\n+      throw;\n+    }\n+\n+  /* And finally.  */\n+  res = std::move (str_file.string ());\n }\n \n /* See gdbcmd.h.  */\n@@ -744,12 +756,23 @@ execute_command_to_ui_file (struct ui_file *file,\n \n /* See gdbcmd.h.  */\n \n-std::string\n+void\n+execute_command_to_string (std::string &res, const char *p, int from_tty,\n+\t\t\t   bool term_out)\n+{\n+  execute_fn_to_string (res, [=]() { execute_command (p, from_tty); },\n+\t\t\tterm_out);\n+}\n+\n+/* See gdbcmd.h.  */\n+\n+void\n execute_command_to_string (const char *p, int from_tty,\n \t\t\t   bool term_out)\n {\n-  return\n-    execute_fn_to_string ([=]() { execute_command (p, from_tty); }, term_out);\n+  std::string dummy;\n+  execute_fn_to_string (dummy, [=]() { execute_command (p, from_tty); },\n+\t\t\tterm_out);\n }\n \f\n /* When nonzero, cause dont_repeat to do nothing.  This should only be"
    }
  ]
}