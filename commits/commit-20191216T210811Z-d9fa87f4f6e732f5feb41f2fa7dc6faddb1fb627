{
  "sha": "d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDlmYTg3ZjRmNmU3MzJmNWZlYjQxZjJmYTdkYzZmYWRkYjFmYjYyNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-12-13T22:09:37Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-12-16T21:08:11Z"
    },
    "message": "Constify get_exec_file\n\nI noticed that get_exec_file could return a \"const char *\".  This\npatch implements this change.\n\nI couldn't build all the code -- but I did build Linux native and a\nmingw cross.\n\nConsequently, the NTO code has a hack, where it casts away const.  I\nthink this can be removed, but that required more work there, and\nsince I couldn't compile it, I felt it best not to try.\n\nLet me know what you think.\n\ngdb/ChangeLog\n2019-12-16  Tom Tromey  <tromey@adacore.com>\n\n\t* windows-nat.c (windows_nat_target::attach): Update.\n\t* remote.c (extended_remote_target::attach): Update.\n\t* procfs.c (procfs_target::attach): Update.\n\t* nto-procfs.c (nto_procfs_target::attach): Update.\n\t(nto_procfs_target::create_inferior): Update.\n\t* inf-ptrace.c (inf_ptrace_target::attach): Update.\n\t* gnu-nat.c (gnu_nat_target::attach): Update.\n\t(gnu_nat_target::detach): Update.\n\t* darwin-nat.c (darwin_nat_target::attach): Update.\n\t* corefile.c (get_exec_file): Constify result.  Remove extraneous\n\treturn.\n\t* bsd-kvm.c (bsd_kvm_target_open): Update.\n\t* gdbsupport/common-inferior.h (get_exec_file): Constify result.\n\ngdb/gdbserver/ChangeLog\n2019-12-16  Tom Tromey  <tromey@adacore.com>\n\n\t* server.c (get_exec_file): Constify result.\n\nChange-Id: I29c60f7313a7def0dcb290ff0c2a4c1dea4f981f",
    "tree": {
      "sha": "04a2a5d7cb398a0c76b0086e83fd9b53a83f69c8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/04a2a5d7cb398a0c76b0086e83fd9b53a83f69c8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c0c3707ff46ccfb78ea175dd42d628d8c90dca8b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0c3707ff46ccfb78ea175dd42d628d8c90dca8b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c0c3707ff46ccfb78ea175dd42d628d8c90dca8b"
    }
  ],
  "stats": {
    "total": 51,
    "additions": 33,
    "deletions": 18
  },
  "files": [
    {
      "sha": "d2660cc711260cdc537252c4244498a886c9a713",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627",
      "patch": "@@ -1,3 +1,19 @@\n+2019-12-16  Tom Tromey  <tromey@adacore.com>\n+\n+\t* windows-nat.c (windows_nat_target::attach): Update.\n+\t* remote.c (extended_remote_target::attach): Update.\n+\t* procfs.c (procfs_target::attach): Update.\n+\t* nto-procfs.c (nto_procfs_target::attach): Update.\n+\t(nto_procfs_target::create_inferior): Update.\n+\t* inf-ptrace.c (inf_ptrace_target::attach): Update.\n+\t* gnu-nat.c (gnu_nat_target::attach): Update.\n+\t(gnu_nat_target::detach): Update.\n+\t* darwin-nat.c (darwin_nat_target::attach): Update.\n+\t* corefile.c (get_exec_file): Constify result.  Remove extraneous\n+\treturn.\n+\t* bsd-kvm.c (bsd_kvm_target_open): Update.\n+\t* gdbsupport/common-inferior.h (get_exec_file): Constify result.\n+\n 2019-12-16  Christian Biesinger  <cbiesinger@google.com>\n \n \t* gdbsupport/common-defs.h: Remove workaround for a gnulib bug"
    },
    {
      "sha": "74c044f6c734f2f2256ff650a633155c3942257c",
      "filename": "gdb/bsd-kvm.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/bsd-kvm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/bsd-kvm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/bsd-kvm.c?ref=d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627",
      "patch": "@@ -106,7 +106,7 @@ static void\n bsd_kvm_target_open (const char *arg, int from_tty)\n {\n   char errbuf[_POSIX2_LINE_MAX];\n-  char *execfile = NULL;\n+  const char *execfile = NULL;\n   kvm_t *temp_kd;\n   char *filename = NULL;\n "
    },
    {
      "sha": "c4735ada00ae0c2fcbcedd979a2ae1723e7ddfd6",
      "filename": "gdb/corefile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/corefile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/corefile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/corefile.c?ref=d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627",
      "patch": "@@ -141,7 +141,7 @@ validate_files (void)\n \n /* See gdbsupport/common-inferior.h.  */\n \n-char *\n+const char *\n get_exec_file (int err)\n {\n   if (exec_filename)\n@@ -151,7 +151,6 @@ get_exec_file (int err)\n \n   error (_(\"No executable file specified.\\n\\\n Use the \\\"file\\\" or \\\"exec-file\\\" command.\"));\n-  return NULL;\n }\n \f\n "
    },
    {
      "sha": "c3905d1a30eb4a87edbb02f2c1dd2986387134ff",
      "filename": "gdb/darwin-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/darwin-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/darwin-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/darwin-nat.c?ref=d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627",
      "patch": "@@ -2045,7 +2045,7 @@ darwin_nat_target::attach (const char *args, int from_tty)\n \n   if (from_tty)\n     {\n-      char *exec_file = get_exec_file (0);\n+      const char *exec_file = get_exec_file (0);\n \n       if (exec_file)\n \tprintf_unfiltered (_(\"Attaching to program: %s, %s\\n\"), exec_file,"
    },
    {
      "sha": "ecc3db53ebba20cb78c6722f71ee6389314eb56c",
      "filename": "gdb/gdbserver/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/ChangeLog?ref=d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627",
      "patch": "@@ -1,3 +1,7 @@\n+2019-12-16  Tom Tromey  <tromey@adacore.com>\n+\n+\t* server.c (get_exec_file): Constify result.\n+\n 2019-12-10  Christian Biesinger  <cbiesinger@google.com>\n \n \t* Makefile.in: Add safe-strerror.c to gdbreplay and IPA, and change"
    },
    {
      "sha": "a425fbaa013702b727e2d7c94d630a1e957adaf2",
      "filename": "gdb/gdbserver/server.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/gdbserver/server.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/gdbserver/server.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/server.c?ref=d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627",
      "patch": "@@ -265,7 +265,7 @@ get_exec_wrapper ()\n \n /* See gdbsupport/common-inferior.h.  */\n \n-char *\n+const char *\n get_exec_file (int err)\n {\n   if (err && program_path.get () == NULL)"
    },
    {
      "sha": "0ee554e7ad08a954f0a4e7db3e4ff433837cb15e",
      "filename": "gdb/gdbsupport/common-inferior.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/gdbsupport/common-inferior.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/gdbsupport/common-inferior.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbsupport/common-inferior.h?ref=d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627",
      "patch": "@@ -28,7 +28,7 @@ extern const char *get_exec_wrapper ();\n /* Return the name of the executable file as a string.\n    ERR nonzero means get error if there is none specified;\n    otherwise return 0 in that case.  */\n-extern char *get_exec_file (int err);\n+extern const char *get_exec_file (int err);\n \n /* Return the inferior's current working directory.  If nothing has\n    been set, then return NULL.  */"
    },
    {
      "sha": "cf42af43673a5b39825e558f9a687caf9dce114b",
      "filename": "gdb/gnu-nat.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/gnu-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/gnu-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gnu-nat.c?ref=d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627",
      "patch": "@@ -2195,7 +2195,6 @@ void\n gnu_nat_target::attach (const char *args, int from_tty)\n {\n   int pid;\n-  char *exec_file;\n   struct inf *inf = cur_inf ();\n   struct inferior *inferior;\n \n@@ -2206,7 +2205,7 @@ gnu_nat_target::attach (const char *args, int from_tty)\n \n   if (from_tty)\n     {\n-      exec_file = (char *) get_exec_file (0);\n+      const char *exec_file = get_exec_file (0);\n \n       if (exec_file)\n \tprintf_unfiltered (\"Attaching to program `%s', pid %d\\n\",\n@@ -2260,7 +2259,7 @@ gnu_nat_target::detach (inferior *inf, int from_tty)\n \n   if (from_tty)\n     {\n-      char *exec_file = get_exec_file (0);\n+      const char *exec_file = get_exec_file (0);\n \n       if (exec_file)\n \tprintf_unfiltered (\"Detaching from program `%s' pid %d\\n\","
    },
    {
      "sha": "fd18146efe156e0b117b59de626b64db86d30c70",
      "filename": "gdb/inf-ptrace.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/inf-ptrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/inf-ptrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inf-ptrace.c?ref=d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627",
      "patch": "@@ -186,7 +186,6 @@ inf_ptrace_target::mourn_inferior ()\n void\n inf_ptrace_target::attach (const char *args, int from_tty)\n {\n-  char *exec_file;\n   pid_t pid;\n   struct inferior *inf;\n \n@@ -210,7 +209,7 @@ inf_ptrace_target::attach (const char *args, int from_tty)\n \n   if (from_tty)\n     {\n-      exec_file = get_exec_file (0);\n+      const char *exec_file = get_exec_file (0);\n \n       if (exec_file)\n \tprintf_unfiltered (_(\"Attaching to program: %s, %s\\n\"), exec_file,"
    },
    {
      "sha": "42b23484511d4a185fd75804ac373b5414a10918",
      "filename": "gdb/nto-procfs.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/nto-procfs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/nto-procfs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nto-procfs.c?ref=d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627",
      "patch": "@@ -693,7 +693,6 @@ nto_procfs_target::pid_to_exec_file (const int pid)\n void\n nto_procfs_target::attach (const char *args, int from_tty)\n {\n-  char *exec_file;\n   int pid;\n   struct inferior *inf;\n \n@@ -704,7 +703,7 @@ nto_procfs_target::attach (const char *args, int from_tty)\n \n   if (from_tty)\n     {\n-      exec_file = (char *) get_exec_file (0);\n+      const char *exec_file = get_exec_file (0);\n \n       if (exec_file)\n \tprintf_unfiltered (\"Attaching to program `%s', %s\\n\", exec_file,\n@@ -1215,7 +1214,7 @@ nto_procfs_target::create_inferior (const char *exec_file,\n \n   argv = xmalloc ((allargs.size () / (unsigned) 2 + 2) *\n \t\t  sizeof (*argv));\n-  argv[0] = get_exec_file (1);\n+  argv[0] = const_cast<char *> (get_exec_file (1));\n   if (!argv[0])\n     {\n       if (exec_file)"
    },
    {
      "sha": "ccc5e26064bf3620947219d32e166381e2c15667",
      "filename": "gdb/procfs.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/procfs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/procfs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/procfs.c?ref=d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627",
      "patch": "@@ -1870,7 +1870,6 @@ procfs_debug_inferior (procinfo *pi)\n void\n procfs_target::attach (const char *args, int from_tty)\n {\n-  char *exec_file;\n   int   pid;\n \n   pid = parse_pid_to_attach (args);\n@@ -1880,7 +1879,7 @@ procfs_target::attach (const char *args, int from_tty)\n \n   if (from_tty)\n     {\n-      exec_file = get_exec_file (0);\n+      const char *exec_file = get_exec_file (0);\n \n       if (exec_file)\n \tprintf_filtered (_(\"Attaching to program `%s', %s\\n\"),"
    },
    {
      "sha": "3c544502a85a5db4c6ea52fc2aa56f6c8fa8477e",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627",
      "patch": "@@ -5792,7 +5792,7 @@ extended_remote_target::attach (const char *args, int from_tty)\n \n   if (from_tty)\n     {\n-      char *exec_file = get_exec_file (0);\n+      const char *exec_file = get_exec_file (0);\n \n       if (exec_file)\n \tprintf_unfiltered (_(\"Attaching to program: %s, %s\\n\"), exec_file,"
    },
    {
      "sha": "10d5c95d091d02a1e50406b186c5e48864911528",
      "filename": "gdb/windows-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/windows-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627/gdb/windows-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/windows-nat.c?ref=d9fa87f4f6e732f5feb41f2fa7dc6faddb1fb627",
      "patch": "@@ -1990,7 +1990,7 @@ windows_nat_target::attach (const char *args, int from_tty)\n \n   if (from_tty)\n     {\n-      char *exec_file = (char *) get_exec_file (0);\n+      const char *exec_file = get_exec_file (0);\n \n       if (exec_file)\n \tprintf_unfiltered (\"Attaching to program `%s', %s\\n\", exec_file,"
    }
  ]
}