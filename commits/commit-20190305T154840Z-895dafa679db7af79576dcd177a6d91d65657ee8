{
  "sha": "895dafa679db7af79576dcd177a6d91d65657ee8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODk1ZGFmYTY3OWRiN2FmNzk1NzZkY2QxNzdhNmQ5MWQ2NTY1N2VlOA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-02-26T21:59:47Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-03-05T15:48:40Z"
    },
    "message": "Add ATTRIBUTE_UNUSED_RESULT to ref_ptr::release\n\nThis applies ATTRIBUTE_UNUSED_RESULT to ref_ptr::release and updates a\nfew spots to comply.  I believe one use in install_default_visualizer\nwas in error, fixed by this patch.\n\ngdb/ChangeLog\n2019-03-05  Tom Tromey  <tromey@adacore.com>\n\n\t* varobj.c (update_dynamic_varobj_children): Update.\n\t(install_default_visualizer): Use reset, not release.\n\t* value.c (set_internalvar): Update.\n\t* dwarf2loc.c (value_of_dwarf_reg_entry): Update.\n\t* common/gdb_ref_ptr.h (class ref_ptr) <release>: Add\n\tATTRIBUTE_UNUSED_RESULT.",
    "tree": {
      "sha": "ff0395477787a0b1b5f432866f3428e9edbf40e5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ff0395477787a0b1b5f432866f3428e9edbf40e5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/895dafa679db7af79576dcd177a6d91d65657ee8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/895dafa679db7af79576dcd177a6d91d65657ee8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/895dafa679db7af79576dcd177a6d91d65657ee8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/895dafa679db7af79576dcd177a6d91d65657ee8/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "88a774b9984e42c492ddcf4e4b4b0170ac803576",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/88a774b9984e42c492ddcf4e4b4b0170ac803576",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/88a774b9984e42c492ddcf4e4b4b0170ac803576"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 18,
    "deletions": 10
  },
  "files": [
    {
      "sha": "bb94ae250630fa40077f11ac9fd562e3e947c75f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/895dafa679db7af79576dcd177a6d91d65657ee8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/895dafa679db7af79576dcd177a6d91d65657ee8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=895dafa679db7af79576dcd177a6d91d65657ee8",
      "patch": "@@ -1,3 +1,12 @@\n+2019-03-05  Tom Tromey  <tromey@adacore.com>\n+\n+\t* varobj.c (update_dynamic_varobj_children): Update.\n+\t(install_default_visualizer): Use reset, not release.\n+\t* value.c (set_internalvar): Update.\n+\t* dwarf2loc.c (value_of_dwarf_reg_entry): Update.\n+\t* common/gdb_ref_ptr.h (class ref_ptr) <release>: Add\n+\tATTRIBUTE_UNUSED_RESULT.\n+\n 2019-03-05  Tom Tromey  <tromey@adacore.com>\n \n \t* remote.c (class scoped_remote_fd) <release>: Add"
    },
    {
      "sha": "c31c9a2e58b8bceb5df556b37d3f740438a9ac9f",
      "filename": "gdb/common/gdb_ref_ptr.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/895dafa679db7af79576dcd177a6d91d65657ee8/gdb/common/gdb_ref_ptr.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/895dafa679db7af79576dcd177a6d91d65657ee8/gdb/common/gdb_ref_ptr.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/common/gdb_ref_ptr.h?ref=895dafa679db7af79576dcd177a6d91d65657ee8",
      "patch": "@@ -135,7 +135,7 @@ class ref_ptr\n   /* Return this instance's referent, and stop managing this\n      reference.  The caller is now responsible for the ownership of\n      the reference.  */\n-  T *release ()\n+  ATTRIBUTE_UNUSED_RESULT T *release ()\n   {\n     T *result = m_obj;\n "
    },
    {
      "sha": "29d289b4d0c3136afa1453b7f67ce91d857607cf",
      "filename": "gdb/dwarf2loc.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/895dafa679db7af79576dcd177a6d91d65657ee8/gdb/dwarf2loc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/895dafa679db7af79576dcd177a6d91d65657ee8/gdb/dwarf2loc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2loc.c?ref=895dafa679db7af79576dcd177a6d91d65657ee8",
      "patch": "@@ -1472,9 +1472,8 @@ value_of_dwarf_reg_entry (struct type *type, struct frame_info *frame,\n \t\t\t\t\t       target_type, caller_frame,\n \t\t\t\t\t       caller_per_cu);\n \n-  release_value (target_val).release ();\n   val = allocate_computed_value (type, &entry_data_value_funcs,\n-\t\t\t\t target_val /* closure */);\n+\t\t\t\t release_value (target_val).release ());\n \n   /* Copy the referencing pointer to the new computed value.  */\n   memcpy (value_contents_raw (val), value_contents_raw (outer_val),"
    },
    {
      "sha": "50e47a936aa37d35574f94ab3950d2acfa53bddf",
      "filename": "gdb/value.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/895dafa679db7af79576dcd177a6d91d65657ee8/gdb/value.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/895dafa679db7af79576dcd177a6d91d65657ee8/gdb/value.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/value.c?ref=895dafa679db7af79576dcd177a6d91d65657ee8",
      "patch": "@@ -2274,20 +2274,20 @@ set_internalvar (struct internalvar *var, struct value *val)\n \n     default:\n       new_kind = INTERNALVAR_VALUE;\n-      new_data.value = value_copy (val);\n-      new_data.value->modifiable = 1;\n+      struct value *copy = value_copy (val);\n+      copy->modifiable = 1;\n \n       /* Force the value to be fetched from the target now, to avoid problems\n \t later when this internalvar is referenced and the target is gone or\n \t has changed.  */\n-      if (value_lazy (new_data.value))\n-       value_fetch_lazy (new_data.value);\n+      if (value_lazy (copy))\n+\tvalue_fetch_lazy (copy);\n \n       /* Release the value from the value chain to prevent it from being\n \t deleted by free_all_values.  From here on this function should not\n \t call error () until new_data is installed into the var->u to avoid\n \t leaking memory.  */\n-      release_value (new_data.value).release ();\n+      new_data.value = release_value (copy).release ();\n \n       /* Internal variables which are created from values with a dynamic\n          location don't need the location property of the origin anymore."
    },
    {
      "sha": "3715bb6a7dfe216f9a0ed42b067479e1d14f7160",
      "filename": "gdb/varobj.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/895dafa679db7af79576dcd177a6d91d65657ee8/gdb/varobj.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/895dafa679db7af79576dcd177a6d91d65657ee8/gdb/varobj.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/varobj.c?ref=895dafa679db7af79576dcd177a6d91d65657ee8",
      "patch": "@@ -760,7 +760,7 @@ update_dynamic_varobj_children (struct varobj *var,\n \t  /* Release vitem->value so its lifetime is not bound to the\n \t     execution of a command.  */\n \t  if (item != NULL && item->value != NULL)\n-\t    release_value (item->value).release ();\n+\t    item->value = release_value (item->value).release ();\n \t}\n \n       if (item == NULL)\n@@ -1127,7 +1127,7 @@ install_default_visualizer (struct varobj *var)\n \t}\n \n       if (pretty_printer == Py_None)\n-\tpretty_printer.release ();\n+\tpretty_printer.reset (nullptr);\n   \n       install_visualizer (var->dynamic, NULL, pretty_printer.release ());\n     }"
    }
  ]
}