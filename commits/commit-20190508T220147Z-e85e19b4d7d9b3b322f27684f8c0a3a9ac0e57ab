{
  "sha": "e85e19b4d7d9b3b322f27684f8c0a3a9ac0e57ab",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTg1ZTE5YjRkN2Q5YjNiMzIyZjI3Njg0ZjhjMGEzYTlhYzBlNTdhYg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-04-21T15:34:16Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-05-08T22:01:47Z"
    },
    "message": "Convert auto-load.c to type-safe registry API\n\nThis changes auto-load.c to use the type-safe registry API.  It also\nchanges a couple of types to \"bool\", removing uses of \"FALSE\".\n\ngdb/ChangeLog\n2019-05-08  Tom Tromey  <tom@tromey.com>\n\n\t* auto-load.c (struct auto_load_pspace_info): Add destructor and\n\tinitializers.\n\t<unsupported_script_warning_printed,\n\tscript_not_found_warning_printed>: Now bool.\n\t(auto_load_pspace_data): Change type.\n\t(~auto_load_pspace_info): Rename from\n\tauto_load_pspace_data_cleanup.\n\t(get_auto_load_pspace_data, init_loaded_scripts_info)\n\t(clear_section_scripts, maybe_print_unsupported_script_warning)\n\t(maybe_print_script_not_found_warning, _initialize_auto_load):\n\tUpdate.",
    "tree": {
      "sha": "d946177e7924291df285c5f80ec019b31e064614",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d946177e7924291df285c5f80ec019b31e064614"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e85e19b4d7d9b3b322f27684f8c0a3a9ac0e57ab",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e85e19b4d7d9b3b322f27684f8c0a3a9ac0e57ab",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e85e19b4d7d9b3b322f27684f8c0a3a9ac0e57ab",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e85e19b4d7d9b3b322f27684f8c0a3a9ac0e57ab/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f6aa7436201194e80e8d7761e6d88ecf0ec1e327",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f6aa7436201194e80e8d7761e6d88ecf0ec1e327",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f6aa7436201194e80e8d7761e6d88ecf0ec1e327"
    }
  ],
  "stats": {
    "total": 74,
    "additions": 36,
    "deletions": 38
  },
  "files": [
    {
      "sha": "82e55e9b5984a891fc2cc3258992074950bea7b5",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e85e19b4d7d9b3b322f27684f8c0a3a9ac0e57ab/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e85e19b4d7d9b3b322f27684f8c0a3a9ac0e57ab/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e85e19b4d7d9b3b322f27684f8c0a3a9ac0e57ab",
      "patch": "@@ -1,3 +1,17 @@\n+2019-05-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* auto-load.c (struct auto_load_pspace_info): Add destructor and\n+\tinitializers.\n+\t<unsupported_script_warning_printed,\n+\tscript_not_found_warning_printed>: Now bool.\n+\t(auto_load_pspace_data): Change type.\n+\t(~auto_load_pspace_info): Rename from\n+\tauto_load_pspace_data_cleanup.\n+\t(get_auto_load_pspace_data, init_loaded_scripts_info)\n+\t(clear_section_scripts, maybe_print_unsupported_script_warning)\n+\t(maybe_print_script_not_found_warning, _initialize_auto_load):\n+\tUpdate.\n+\n 2019-05-08  Tom Tromey  <tom@tromey.com>\n \n \t* objfiles.c (objfile_pspace_info): Add destructor and"
    },
    {
      "sha": "6833c21323ae93ee7914979095f3e17bfb26bc89",
      "filename": "gdb/auto-load.c",
      "status": "modified",
      "additions": 22,
      "deletions": 38,
      "changes": 60,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e85e19b4d7d9b3b322f27684f8c0a3a9ac0e57ab/gdb/auto-load.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e85e19b4d7d9b3b322f27684f8c0a3a9ac0e57ab/gdb/auto-load.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/auto-load.c?ref=e85e19b4d7d9b3b322f27684f8c0a3a9ac0e57ab",
      "patch": "@@ -527,18 +527,21 @@ For more information about this security protection see the\\n\\\n \n struct auto_load_pspace_info\n {\n+  auto_load_pspace_info () = default;\n+  ~auto_load_pspace_info ();\n+\n   /* For each program space we keep track of loaded scripts, both when\n      specified as file names and as scripts to be executed directly.  */\n-  struct htab *loaded_script_files;\n-  struct htab *loaded_script_texts;\n+  struct htab *loaded_script_files = nullptr;\n+  struct htab *loaded_script_texts = nullptr;\n \n   /* Non-zero if we've issued the warning about an auto-load script not being\n      supported.  We only want to issue this warning once.  */\n-  int unsupported_script_warning_printed;\n+  bool unsupported_script_warning_printed = false;\n \n   /* Non-zero if we've issued the warning about an auto-load script not being\n      found.  We only want to issue this warning once.  */\n-  int script_not_found_warning_printed;\n+  bool script_not_found_warning_printed = false;\n };\n \n /* Objects of this type are stored in the loaded_script hash table.  */\n@@ -559,18 +562,15 @@ struct loaded_script\n };\n \n /* Per-program-space data key.  */\n-static const struct program_space_data *auto_load_pspace_data;\n+static const struct program_space_key<struct auto_load_pspace_info>\n+  auto_load_pspace_data;\n \n-static void\n-auto_load_pspace_data_cleanup (struct program_space *pspace, void *arg)\n+auto_load_pspace_info::~auto_load_pspace_info ()\n {\n-  struct auto_load_pspace_info *info = (struct auto_load_pspace_info *) arg;\n-\n-  if (info->loaded_script_files)\n-    htab_delete (info->loaded_script_files);\n-  if (info->loaded_script_texts)\n-    htab_delete (info->loaded_script_texts);\n-  xfree (info);\n+  if (loaded_script_files)\n+    htab_delete (loaded_script_files);\n+  if (loaded_script_texts)\n+    htab_delete (loaded_script_texts);\n }\n \n /* Get the current autoload data.  If none is found yet, add it now.  This\n@@ -581,13 +581,9 @@ get_auto_load_pspace_data (struct program_space *pspace)\n {\n   struct auto_load_pspace_info *info;\n \n-  info = ((struct auto_load_pspace_info *)\n-\t  program_space_data (pspace, auto_load_pspace_data));\n+  info = auto_load_pspace_data.get (pspace);\n   if (info == NULL)\n-    {\n-      info = XCNEW (struct auto_load_pspace_info);\n-      set_program_space_data (pspace, auto_load_pspace_data, info);\n-    }\n+    info = auto_load_pspace_data.emplace (pspace);\n \n   return info;\n }\n@@ -632,8 +628,8 @@ init_loaded_scripts_info (struct auto_load_pspace_info *pspace_info)\n \t\t\t\t\t\t  eq_loaded_script_entry,\n \t\t\t\t\t\t  xfree);\n \n-  pspace_info->unsupported_script_warning_printed = FALSE;\n-  pspace_info->script_not_found_warning_printed = FALSE;\n+  pspace_info->unsupported_script_warning_printed = false;\n+  pspace_info->script_not_found_warning_printed = false;\n }\n \n /* Wrapper on get_auto_load_pspace_data to also allocate the hash table\n@@ -747,17 +743,9 @@ clear_section_scripts (void)\n   struct program_space *pspace = current_program_space;\n   struct auto_load_pspace_info *info;\n \n-  info = ((struct auto_load_pspace_info *)\n-\t  program_space_data (pspace, auto_load_pspace_data));\n+  info = auto_load_pspace_data.get (pspace);\n   if (info != NULL && info->loaded_script_files != NULL)\n-    {\n-      htab_delete (info->loaded_script_files);\n-      htab_delete (info->loaded_script_texts);\n-      info->loaded_script_files = NULL;\n-      info->loaded_script_texts = NULL;\n-      info->unsupported_script_warning_printed = FALSE;\n-      info->script_not_found_warning_printed = FALSE;\n-    }\n+    auto_load_pspace_data.clear (pspace);\n }\n \n /* Look for the auto-load script in LANGUAGE associated with OBJFILE where\n@@ -1386,7 +1374,7 @@ of file %s.\\n\\\n Use `info auto-load %s-scripts [REGEXP]' to list them.\"),\n \t       offset, section_name, objfile_name (objfile),\n \t       ext_lang_name (language));\n-      pspace_info->unsupported_script_warning_printed = 1;\n+      pspace_info->unsupported_script_warning_printed = true;\n     }\n }\n \n@@ -1408,7 +1396,7 @@ of file %s.\\n\\\n Use `info auto-load %s-scripts [REGEXP]' to list them.\"),\n \t       offset, section_name, objfile_name (objfile),\n \t       ext_lang_name (language));\n-      pspace_info->script_not_found_warning_printed = 1;\n+      pspace_info->script_not_found_warning_printed = true;\n     }\n }\n \n@@ -1538,10 +1526,6 @@ _initialize_auto_load (void)\n   char *guile_name_help;\n   const char *suffix;\n \n-  auto_load_pspace_data\n-    = register_program_space_data_with_cleanup (NULL,\n-\t\t\t\t\t\tauto_load_pspace_data_cleanup);\n-\n   gdb::observers::new_objfile.attach (auto_load_new_objfile);\n \n   add_setshow_boolean_cmd (\"gdb-scripts\", class_support,"
    }
  ]
}