{
  "sha": "ce1a6f421d29aad57f5f25fe2b8a929523c3de27",
  "node_id": "C_kwDOANOeidoAKGNlMWE2ZjQyMWQyOWFhZDU3ZjVmMjVmZTJiOGE5Mjk1MjNjM2RlMjc",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-12-02T19:53:06Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-12-03T13:24:11Z"
    },
    "message": "gdb: make saved_filename an std::string\n\nMake this variable an std::string, avoiding manual memory management.\n\nChange-Id: Ie7a8d7381449ab9c4dfc4cb8b99e63b9ffa8f947",
    "tree": {
      "sha": "7905365e5f63386052ef1741ee228ee9dd1b89a7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7905365e5f63386052ef1741ee228ee9dd1b89a7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ce1a6f421d29aad57f5f25fe2b8a929523c3de27",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ce1a6f421d29aad57f5f25fe2b8a929523c3de27",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ce1a6f421d29aad57f5f25fe2b8a929523c3de27",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ce1a6f421d29aad57f5f25fe2b8a929523c3de27/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "69ce6091e62c3bc2442c2e9b3b2d689266e96b1f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/69ce6091e62c3bc2442c2e9b3b2d689266e96b1f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/69ce6091e62c3bc2442c2e9b3b2d689266e96b1f"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 10,
    "deletions": 10
  },
  "files": [
    {
      "sha": "124d15c60cfc7edea8ca582141abb5908e72c2d1",
      "filename": "gdb/cli/cli-logging.c",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce1a6f421d29aad57f5f25fe2b8a929523c3de27/gdb/cli/cli-logging.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce1a6f421d29aad57f5f25fe2b8a929523c3de27/gdb/cli/cli-logging.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-logging.c?ref=ce1a6f421d29aad57f5f25fe2b8a929523c3de27",
      "patch": "@@ -24,7 +24,7 @@\n #include \"cli/cli-style.h\"\n #include \"cli/cli-decode.h\"\n \n-static char *saved_filename;\n+static std::string saved_filename;\n \n static std::string logging_filename = \"gdb.txt\";\n static void\n@@ -40,9 +40,9 @@ static bool logging_overwrite;\n static void\n maybe_warn_already_logging ()\n {\n-  if (saved_filename)\n+  if (!saved_filename.empty ())\n     warning (_(\"Currently logging to %s.  Turn the logging off and on to \"\n-\t       \"make the new setting effective.\"), saved_filename);\n+\t       \"make the new setting effective.\"), saved_filename.c_str ());\n }\n \n static void\n@@ -95,10 +95,10 @@ pop_output_files (void)\n static void\n handle_redirections (int from_tty)\n {\n-  if (saved_filename != NULL)\n+  if (!saved_filename.empty ())\n     {\n       fprintf_unfiltered (gdb_stdout, \"Already logging to %s.\\n\",\n-\t\t\t  saved_filename);\n+\t\t\t  saved_filename.c_str ());\n       return;\n     }\n \n@@ -124,7 +124,7 @@ handle_redirections (int from_tty)\n \t\t\t    logging_filename.c_str ());\n     }\n \n-  saved_filename = xstrdup (logging_filename.c_str ());\n+  saved_filename = logging_filename;\n \n   /* Let the interpreter do anything it needs.  */\n   current_interp_set_logging (std::move (log), logging_redirect,\n@@ -154,14 +154,14 @@ set_logging_on (const char *args, int from_tty)\n static void \n set_logging_off (const char *args, int from_tty)\n {\n-  if (saved_filename == NULL)\n+  if (saved_filename.empty ())\n     return;\n \n   pop_output_files ();\n   if (from_tty)\n-    fprintf_unfiltered (gdb_stdout, \"Done logging to %s.\\n\", saved_filename);\n-  xfree (saved_filename);\n-  saved_filename = NULL;\n+    fprintf_unfiltered (gdb_stdout, \"Done logging to %s.\\n\",\n+\t\t\tsaved_filename.c_str ());\n+  saved_filename.clear ();\n }\n \n static bool logging_enabled;"
    }
  ]
}