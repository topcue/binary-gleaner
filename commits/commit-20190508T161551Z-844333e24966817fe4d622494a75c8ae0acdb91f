{
  "sha": "844333e24966817fe4d622494a75c8ae0acdb91f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODQ0MzMzZTI0OTY2ODE3ZmU0ZDYyMjQ5NGE3NWM4YWUwYWNkYjkxZg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-04-29T18:11:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-05-08T16:15:51Z"
    },
    "message": "Fix ptype/o comment formatting\n\nI noticed that ptype/o will print:\n\n    /*    3: 3   |     1 */    signed char a4 : 2;\n    /* XXX  3-bit hole  */\n\nThat is, \"*/\" at the end of the \"hole\" message does not line up with\nthe other comment ends.  I thought it would be a bit nicer if this did\nline up, so I fixed it.  Then, to my surprise, I found that I could\nnot make ptype-offsets.exp fail.\n\nI still am not sure why it doesn't fail, but changing the tests to use\nstring_to_regexp and changing the quoting helped.  This in turn showed\nthat some of the existing test cases were wrong, so I've also updated\nthem here.\n\ngdb/ChangeLog\n2019-05-08  Tom Tromey  <tromey@adacore.com>\n\n\t* typeprint.c (print_offset_data::maybe_print_hole): Add extra\n\tpadding at end of comment.\n\ngdb/testsuite/ChangeLog\n2019-05-08  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.base/ptype-offsets.exp: Use string_to_regexp.  Fix test\n\tcases.\n\t* gdb.base/ptype-offsets.cc (struct abc) <my_int_type>: Now\n\t\"short\".",
    "tree": {
      "sha": "2343113e735702b3eea6443eb81bb69bdb707fd4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2343113e735702b3eea6443eb81bb69bdb707fd4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/844333e24966817fe4d622494a75c8ae0acdb91f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/844333e24966817fe4d622494a75c8ae0acdb91f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/844333e24966817fe4d622494a75c8ae0acdb91f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/844333e24966817fe4d622494a75c8ae0acdb91f/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "988915ee7b880ff059f849893b71118d9bd2c4fc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/988915ee7b880ff059f849893b71118d9bd2c4fc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/988915ee7b880ff059f849893b71118d9bd2c4fc"
    }
  ],
  "stats": {
    "total": 519,
    "additions": 266,
    "deletions": 253
  },
  "files": [
    {
      "sha": "c62998fa6762b882452f2304457b2cbfeed739a3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/844333e24966817fe4d622494a75c8ae0acdb91f/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/844333e24966817fe4d622494a75c8ae0acdb91f/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=844333e24966817fe4d622494a75c8ae0acdb91f",
      "patch": "@@ -1,3 +1,8 @@\n+2019-05-08  Tom Tromey  <tromey@adacore.com>\n+\n+\t* typeprint.c (print_offset_data::maybe_print_hole): Add extra\n+\tpadding at end of comment.\n+\n 2019-05-08  Tom Tromey  <tromey@adacore.com>\n \n \t* dwarf2loc.c (dwarf2_evaluate_property) <PROP_ADDR_OFFSET>:"
    },
    {
      "sha": "eb1110e1e02c36065d41ac0eddc93b36d54d1f15",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/844333e24966817fe4d622494a75c8ae0acdb91f/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/844333e24966817fe4d622494a75c8ae0acdb91f/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=844333e24966817fe4d622494a75c8ae0acdb91f",
      "patch": "@@ -1,3 +1,10 @@\n+2019-05-08  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.base/ptype-offsets.exp: Use string_to_regexp.  Fix test\n+\tcases.\n+\t* gdb.base/ptype-offsets.cc (struct abc) <my_int_type>: Now\n+\t\"short\".\n+\n 2019-05-08  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/vla.exp: New file."
    },
    {
      "sha": "1731545f97be5c8634629cba8f5192db58026838",
      "filename": "gdb/testsuite/gdb.base/ptype-offsets.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/844333e24966817fe4d622494a75c8ae0acdb91f/gdb/testsuite/gdb.base/ptype-offsets.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/844333e24966817fe4d622494a75c8ae0acdb91f/gdb/testsuite/gdb.base/ptype-offsets.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/ptype-offsets.cc?ref=844333e24966817fe4d622494a75c8ae0acdb91f",
      "patch": "@@ -66,7 +66,7 @@ struct abc\n   {}\n \n   /* Typedef defined in-struct.  */\n-  typedef int my_int_type;\n+  typedef short my_int_type;\n \n   my_int_type field9;\n };"
    },
    {
      "sha": "12b3a7460052dffe7550aa3af153a510cce98335",
      "filename": "gdb/testsuite/gdb.base/ptype-offsets.exp",
      "status": "modified",
      "additions": 251,
      "deletions": 250,
      "changes": 501,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/844333e24966817fe4d622494a75c8ae0acdb91f/gdb/testsuite/gdb.base/ptype-offsets.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/844333e24966817fe4d622494a75c8ae0acdb91f/gdb/testsuite/gdb.base/ptype-offsets.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/ptype-offsets.exp?ref=844333e24966817fe4d622494a75c8ae0acdb91f",
      "patch": "@@ -34,217 +34,217 @@ if { [prepare_for_testing \"failed to prepare\" $testfile $srcfile \\\n \n # Test general offset printing, ctor/dtor printing, union, formatting.\n gdb_test \"ptype /o struct abc\" \\\n-    [multi_line \\\n-{/\\* offset    |  size \\*/  type = struct abc \\{} \\\n-{                         public:} \\\n-{/\\*    8      |     8 \\*/    void \\*field1;} \\\n-{/\\*   16:31   |     4 \\*/    unsigned int field2 : 1;} \\\n-{/\\* XXX  7-bit hole   \\*/} \\\n-{/\\* XXX  3-byte hole  \\*/} \\\n-{/\\*   20      |     4 \\*/    int field3;} \\\n-{/\\*   24      |     1 \\*/    signed char field4;} \\\n-{/\\* XXX  7-byte hole  \\*/} \\\n-{/\\*   32      |     8 \\*/    uint64_t field5;} \\\n-{/\\*   40      |     8 \\*/    union \\{} \\\n-{/\\*                 8 \\*/        void \\*field6;} \\\n-{/\\*                 4 \\*/        int field7;} \\\n-{} \\\n-{                               /\\* total size \\(bytes\\):    8 \\*/} \\\n-{                           \\} field8;} \\\n-{/\\*   48      |     4 \\*/    my_int_type field9;} \\\n-{/\\* XXX  4-byte padding \\*/} \\\n-{} \\\n-{                           /\\* total size \\(bytes\\):   56 \\*/} \\\n-{                         \\}}]\n+    [string_to_regexp [multi_line \\\n+\"/* offset    |  size */  type = struct abc \\{\" \\\n+\"                         public:\" \\\n+\"/*    8      |     8 */    void *field1;\" \\\n+\"/*   16:31   |     4 */    unsigned int field2 : 1;\" \\\n+\"/* XXX  7-bit hole   */\" \\\n+\"/* XXX  3-byte hole  */\" \\\n+\"/*   20      |     4 */    int field3;\" \\\n+\"/*   24      |     1 */    signed char field4;\" \\\n+\"/* XXX  7-byte hole  */\" \\\n+\"/*   32      |     8 */    uint64_t field5;\" \\\n+\"/*   40      |     8 */    union \\{\" \\\n+\"/*                 8 */        void *field6;\" \\\n+\"/*                 4 */        int field7;\" \\\n+\"\" \\\n+\"                               /* total size (bytes):    8 */\" \\\n+\"                           \\} field8;\" \\\n+\"/*   48      |     2 */    my_int_type field9;\" \\\n+\"/* XXX  6-byte padding  */\" \\\n+\"\" \\\n+\"                           /* total size (bytes):   56 */\" \\\n+\"                         \\}\"]]\n \n # Test \"ptype /oTM\".\n gdb_test \"ptype /oTM struct abc\" \\\n-    [multi_line \\\n-{/\\* offset    |  size \\*/  type = struct abc \\{} \\\n-{                         public:} \\\n-{/\\*    8      |     8 \\*/    void \\*field1;} \\\n-{/\\*   16:31   |     4 \\*/    unsigned int field2 : 1;} \\\n-{/\\* XXX  7-bit hole   \\*/} \\\n-{/\\* XXX  3-byte hole  \\*/} \\\n-{/\\*   20      |     4 \\*/    int field3;} \\\n-{/\\*   24      |     1 \\*/    signed char field4;} \\\n-{/\\* XXX  7-byte hole  \\*/} \\\n-{/\\*   32      |     8 \\*/    uint64_t field5;} \\\n-{/\\*   40      |     8 \\*/    union \\{} \\\n-{/\\*                 8 \\*/        void \\*field6;} \\\n-{/\\*                 4 \\*/        int field7;} \\\n-{} \\\n-{                               /\\* total size \\(bytes\\):    8 \\*/} \\\n-{                           \\} field8;} \\\n-{/\\*   48      |     4 \\*/    my_int_type field9;} \\\n-{} \\\n-{                           abc\\(void\\);} \\\n-{                           ~abc\\(\\);} \\\n-{} \\\n-{                           typedef int my_int_type;} \\\n-{/\\* XXX  4-byte padding \\*/} \\\n-{} \\\n-{                           /\\* total size \\(bytes\\):   56 \\*/} \\\n-{                         \\}}]\n+    [string_to_regexp [multi_line \\\n+\"/* offset    |  size */  type = struct abc \\{\" \\\n+\"                         public:\" \\\n+\"/*    8      |     8 */    void *field1;\" \\\n+\"/*   16:31   |     4 */    unsigned int field2 : 1;\" \\\n+\"/* XXX  7-bit hole   */\" \\\n+\"/* XXX  3-byte hole  */\" \\\n+\"/*   20      |     4 */    int field3;\" \\\n+\"/*   24      |     1 */    signed char field4;\" \\\n+\"/* XXX  7-byte hole  */\" \\\n+\"/*   32      |     8 */    uint64_t field5;\" \\\n+\"/*   40      |     8 */    union \\{\" \\\n+\"/*                 8 */        void *field6;\" \\\n+\"/*                 4 */        int field7;\" \\\n+\"\" \\\n+\"                               /* total size (bytes):    8 */\" \\\n+\"                           \\} field8;\" \\\n+\"/*   48      |     2 */    my_int_type field9;\" \\\n+\"\" \\\n+\"                           abc(void);\" \\\n+\"                           ~abc();\" \\\n+\"\" \\\n+\"                           typedef short my_int_type;\" \\\n+\"/* XXX  6-byte padding  */\" \\\n+\"\" \\\n+\"                           /* total size (bytes):   56 */\" \\\n+\"                         \\}\"]]\n \n # Test \"ptype /TMo\".  This should be the same as \"ptype /o\".\n gdb_test \"ptype /TMo struct abc\" \\\n-    [multi_line \\\n-{/\\* offset    |  size \\*/  type = struct abc \\{} \\\n-{                         public:} \\\n-{/\\*    8      |     8 \\*/    void \\*field1;} \\\n-{/\\*   16:31   |     4 \\*/    unsigned int field2 : 1;} \\\n-{/\\* XXX  7-bit hole   \\*/} \\\n-{/\\* XXX  3-byte hole  \\*/} \\\n-{/\\*   20      |     4 \\*/    int field3;} \\\n-{/\\*   24      |     1 \\*/    signed char field4;} \\\n-{/\\* XXX  7-byte hole  \\*/} \\\n-{/\\*   32      |     8 \\*/    uint64_t field5;} \\\n-{/\\*   40      |     8 \\*/    union \\{} \\\n-{/\\*                 8 \\*/        void \\*field6;} \\\n-{/\\*                 4 \\*/        int field7;} \\\n-{} \\\n-{                               /\\* total size \\(bytes\\):    8 \\*/} \\\n-{                           \\} field8;} \\\n-{/\\*   48      |     4 \\*/    my_int_type field9;} \\\n-{/\\* XXX  4-byte padding \\*/} \\\n-{} \\\n-{                           /\\* total size \\(bytes\\):   56 \\*/} \\\n-{                         \\}}]\n+    [string_to_regexp [multi_line \\\n+\"/* offset    |  size */  type = struct abc \\{\" \\\n+\"                         public:\" \\\n+\"/*    8      |     8 */    void *field1;\" \\\n+\"/*   16:31   |     4 */    unsigned int field2 : 1;\" \\\n+\"/* XXX  7-bit hole   */\" \\\n+\"/* XXX  3-byte hole  */\" \\\n+\"/*   20      |     4 */    int field3;\" \\\n+\"/*   24      |     1 */    signed char field4;\" \\\n+\"/* XXX  7-byte hole  */\" \\\n+\"/*   32      |     8 */    uint64_t field5;\" \\\n+\"/*   40      |     8 */    union \\{\" \\\n+\"/*                 8 */        void *field6;\" \\\n+\"/*                 4 */        int field7;\" \\\n+\"\" \\\n+\"                               /* total size (bytes):    8 */\" \\\n+\"                           \\} field8;\" \\\n+\"/*   48      |     2 */    my_int_type field9;\" \\\n+\"/* XXX  6-byte padding  */\" \\\n+\"\" \\\n+\"                           /* total size (bytes):   56 */\" \\\n+\"                         \\}\"]]\n \n # Test nested structs.\n gdb_test \"ptype /o struct pqr\" \\\n-    [multi_line \\\n-{/\\* offset    |  size \\*/  type = struct pqr \\{} \\\n-{/\\*    0      |     4 \\*/    int ff1;} \\\n-{/\\* XXX  4-byte hole  \\*/} \\\n-{/\\*    8      |    40 \\*/    struct xyz \\{} \\\n-{/\\*    8      |     4 \\*/        int f1;} \\\n-{/\\*   12      |     1 \\*/        signed char f2;} \\\n-{/\\* XXX  3-byte hole  \\*/} \\\n-{/\\*   16      |     8 \\*/        void \\*f3;} \\\n-{/\\*   24      |    24 \\*/        struct tuv \\{} \\\n-{/\\*   24      |     4 \\*/            int a1;} \\\n-{/\\* XXX  4-byte hole  \\*/} \\\n-{/\\*   32      |     8 \\*/            signed char \\*a2;} \\\n-{/\\*   40      |     4 \\*/            int a3;} \\\n-{} \\\n-{                                   /\\* total size \\(bytes\\):   24 \\*/} \\\n-{                               \\} f4;} \\\n-{} \\\n-{                               /\\* total size \\(bytes\\):   40 \\*/} \\\n-{                           \\} ff2;} \\\n-{/\\* XXX 28-byte hole  \\*/} \\\n-{/\\*   72      |     1 \\*/    signed char ff3;} \\\n-{/\\* XXX  7-byte padding \\*/} \\\n-{} \\\n-{                           /\\* total size \\(bytes\\):   56 \\*/} \\\n-{                         \\}}]\n+    [string_to_regexp [multi_line \\\n+\"/* offset    |  size */  type = struct pqr \\{\" \\\n+\"/*    0      |     4 */    int ff1;\" \\\n+\"/* XXX  4-byte hole  */\" \\\n+\"/*    8      |    40 */    struct xyz \\{\" \\\n+\"/*    8      |     4 */        int f1;\" \\\n+\"/*   12      |     1 */        signed char f2;\" \\\n+\"/* XXX  3-byte hole  */\" \\\n+\"/*   16      |     8 */        void *f3;\" \\\n+\"/*   24      |    24 */        struct tuv \\{\" \\\n+\"/*   24      |     4 */            int a1;\" \\\n+\"/* XXX  4-byte hole  */\" \\\n+\"/*   32      |     8 */            signed char *a2;\" \\\n+\"/*   40      |     4 */            int a3;\" \\\n+\"/* XXX  4-byte padding  */\" \\\n+\"\" \\\n+\"                                   /* total size (bytes):   24 */\" \\\n+\"                               \\} f4;\" \\\n+\"\" \\\n+\"                               /* total size (bytes):   40 */\" \\\n+\"                           \\} ff2;\" \\\n+\"/*   48      |     1 */    signed char ff3;\" \\\n+\"/* XXX  7-byte padding  */\" \\\n+\"\" \\\n+\"                           /* total size (bytes):   56 */\" \\\n+\"                         \\}\"]]\n \n # Test that the offset is properly reset when we are printing a union\n # and go inside two inner structs.\n # This also tests a struct inside a struct inside a union.\n gdb_test \"ptype /o union qwe\" \\\n-    [multi_line \\\n-{/\\* offset    |  size \\*/  type = union qwe \\{} \\\n-{/\\*                24 \\*/    struct tuv \\{} \\\n-{/\\*    0      |     4 \\*/        int a1;} \\\n-{/\\* XXX  4-byte hole  \\*/} \\\n-{/\\*    8      |     8 \\*/        signed char \\*a2;} \\\n-{/\\*   16      |     4 \\*/        int a3;} \\\n-{/\\* XXX  4-byte padding \\*/} \\\n-{} \\\n-{                               /\\* total size \\(bytes\\):   24 \\*/} \\\n-{                           \\} fff1;} \\\n-{/\\*                40 \\*/    struct xyz \\{} \\\n-{/\\*    0      |     4 \\*/        int f1;} \\\n-{/\\*    4      |     1 \\*/        signed char f2;} \\\n-{/\\* XXX  3-byte hole  \\*/} \\\n-{/\\*    8      |     8 \\*/        void \\*f3;} \\\n-{/\\*   16      |    24 \\*/        struct tuv \\{} \\\n-{/\\*   16      |     4 \\*/            int a1;} \\\n-{/\\* XXX  4-byte hole  \\*/} \\\n-{/\\*   24      |     8 \\*/            signed char \\*a2;} \\\n-{/\\*   32      |     4 \\*/            int a3;} \\\n-{/\\* XXX  4-byte padding \\*/} \\\n-{} \\\n-{                                   /\\* total size \\(bytes\\):   24 \\*/} \\\n-{                               \\} f4;} \\\n-{} \\\n-{                               /\\* total size \\(bytes\\):   40 \\*/} \\\n-{                           \\} fff2;} \\\n-{} \\\n-{                           /\\* total size \\(bytes\\):   40 \\*/} \\\n-{                         \\}}]\n+    [string_to_regexp [multi_line \\\n+\"/* offset    |  size */  type = union qwe \\{\" \\\n+\"/*                24 */    struct tuv \\{\" \\\n+\"/*    0      |     4 */        int a1;\" \\\n+\"/* XXX  4-byte hole  */\" \\\n+\"/*    8      |     8 */        signed char *a2;\" \\\n+\"/*   16      |     4 */        int a3;\" \\\n+\"/* XXX  4-byte padding  */\" \\\n+\"\" \\\n+\"                               /* total size (bytes):   24 */\" \\\n+\"                           \\} fff1;\" \\\n+\"/*                40 */    struct xyz \\{\" \\\n+\"/*    0      |     4 */        int f1;\" \\\n+\"/*    4      |     1 */        signed char f2;\" \\\n+\"/* XXX  3-byte hole  */\" \\\n+\"/*    8      |     8 */        void *f3;\" \\\n+\"/*   16      |    24 */        struct tuv \\{\" \\\n+\"/*   16      |     4 */            int a1;\" \\\n+\"/* XXX  4-byte hole  */\" \\\n+\"/*   24      |     8 */            signed char *a2;\" \\\n+\"/*   32      |     4 */            int a3;\" \\\n+\"/* XXX  4-byte padding  */\" \\\n+\"\" \\\n+\"                                   /* total size (bytes):   24 */\" \\\n+\"                               \\} f4;\" \\\n+\"\" \\\n+\"                               /* total size (bytes):   40 */\" \\\n+\"                           \\} fff2;\" \\\n+\"\" \\\n+\"                           /* total size (bytes):   40 */\" \\\n+\"                         \\}\"]]\n \n # Test printing a struct that contains a union, and that also\n # contains a struct.\n gdb_test \"ptype /o struct poi\" \\\n-    [multi_line \\\n-{/\\* offset    |  size \\*/  type = struct poi \\{} \\\n-{/\\*    0      |     4 \\*/    int f1;} \\\n-{/\\* XXX  4-byte hole  \\*/} \\\n-{/\\*    8      |    40 \\*/    union qwe \\{} \\\n-{/\\*                24 \\*/        struct tuv \\{} \\\n-{/\\*    8      |     4 \\*/            int a1;} \\\n-{/\\* XXX  4-byte hole  \\*/} \\\n-{/\\*   16      |     8 \\*/            signed char \\*a2;} \\\n-{/\\*   24      |     4 \\*/            int a3;} \\\n-{/\\* XXX  4-byte padding \\*/} \\\n-{} \\\n-{                                   /\\* total size \\(bytes\\):   24 \\*/} \\\n-{                               \\} fff1;} \\\n-{/\\*                40 \\*/        struct xyz \\{} \\\n-{/\\*    8      |     4 \\*/            int f1;} \\\n-{/\\*   12      |     1 \\*/            signed char f2;} \\\n-{/\\* XXX  3-byte hole  \\*/} \\\n-{/\\*   16      |     8 \\*/            void \\*f3;} \\\n-{/\\*   24      |    24 \\*/            struct tuv \\{} \\\n-{/\\*   24      |     4 \\*/                int a1;} \\\n-{/\\* XXX  4-byte hole  \\*/} \\\n-{/\\*   32      |     8 \\*/                signed char \\*a2;} \\\n-{/\\*   40      |     4 \\*/                int a3;} \\\n-{/\\* XXX  4-byte padding \\*/} \\\n-{} \\\n-{                                       /\\* total size \\(bytes\\):   24 \\*/} \\\n-{                                   \\} f4;} \\\n-{/\\* XXX  32-byte padding \\*/} \\\n-{} \\\n-{                                   /\\* total size \\(bytes\\):   40 \\*/} \\\n-{                               \\} fff2;} \\\n-{} \\\n-{                               /\\* total size \\(bytes\\):   40 \\*/} \\\n-{                           \\} f2;} \\\n-{/\\*   72      |     2 \\*/    uint16_t f3;} \\\n-{/\\* XXX  6-byte hole  \\*/} \\\n-{/\\*   80      |    56 \\*/    struct pqr \\{} \\\n-{/\\*   80      |     4 \\*/        int ff1;} \\\n-{/\\* XXX  4-byte hole  \\*/} \\\n-{/\\*   88      |    40 \\*/        struct xyz \\{} \\\n-{/\\*   88      |     4 \\*/            int f1;} \\\n-{/\\*   92      |     1 \\*/            signed char f2;} \\\n-{/\\* XXX  3-byte hole  \\*/} \\\n-{/\\*   96      |     8 \\*/            void \\*f3;} \\\n-{/\\*  104      |    24 \\*/            struct tuv \\{} \\\n-{/\\*  104      |     4 \\*/                int a1;} \\\n-{/\\* XXX  4-byte hole  \\*/} \\\n-{/\\*  112      |     8 \\*/                signed char \\*a2;} \\\n-{/\\*  120      |     4 \\*/                int a3;} \\\n-{/\\* XXX  4-byte padding \\*/} \\\n-{} \\\n-{                                       /\\* total size \\(bytes\\):   24 \\*/} \\\n-{                                   \\} f4;} \\\n-{} \\\n-{                                   /\\* total size \\(bytes\\):   40 \\*/} \\\n-{                               \\} ff2;} \\\n-{/\\*  152      |     1 \\*/        signed char ff3;} \\\n-{/\\* XXX  7-byte padding \\*/} \\\n-{} \\\n-{                               /\\* total size \\(bytes\\):   56 \\*/} \\\n-{                           \\} f4;} \\\n-{} \\\n-{                           /\\* total size \\(bytes\\):  112 \\*/} \\\n-{                         \\}}]\n+    [string_to_regexp [multi_line \\\n+\"/* offset    |  size */  type = struct poi \\{\" \\\n+\"/*    0      |     4 */    int f1;\" \\\n+\"/* XXX  4-byte hole  */\" \\\n+\"/*    8      |    40 */    union qwe \\{\" \\\n+\"/*                24 */        struct tuv \\{\" \\\n+\"/*    8      |     4 */            int a1;\" \\\n+\"/* XXX  4-byte hole  */\" \\\n+\"/*   16      |     8 */            signed char *a2;\" \\\n+\"/*   24      |     4 */            int a3;\" \\\n+\"/* XXX  4-byte padding  */\" \\\n+\"\" \\\n+\"                                   /* total size (bytes):   24 */\" \\\n+\"                               \\} fff1;\" \\\n+\"/*                40 */        struct xyz \\{\" \\\n+\"/*    8      |     4 */            int f1;\" \\\n+\"/*   12      |     1 */            signed char f2;\" \\\n+\"/* XXX  3-byte hole  */\" \\\n+\"/*   16      |     8 */            void *f3;\" \\\n+\"/*   24      |    24 */            struct tuv \\{\" \\\n+\"/*   24      |     4 */                int a1;\" \\\n+\"/* XXX  4-byte hole  */\" \\\n+\"/*   32      |     8 */                signed char *a2;\" \\\n+\"/*   40      |     4 */                int a3;\" \\\n+\"/* XXX  4-byte padding  */\" \\\n+\"\" \\\n+\"                                       /* total size (bytes):   24 */\" \\\n+\"                                   \\} f4;\" \\\n+\"\" \\\n+\"                                   /* total size (bytes):   40 */\" \\\n+\"                               \\} fff2;\" \\\n+\"/* XXX 32-byte padding  */\" \\\n+\"\" \\\n+\"                               /* total size (bytes):   40 */\" \\\n+\"                           \\} f2;\" \\\n+\"/*   48      |     2 */    uint16_t f3;\" \\\n+\"/* XXX  6-byte hole  */\" \\\n+\"/*   56      |    56 */    struct pqr \\{\" \\\n+\"/*   56      |     4 */        int ff1;\" \\\n+\"/* XXX  4-byte hole  */\" \\\n+\"/*   64      |    40 */        struct xyz \\{\" \\\n+\"/*   64      |     4 */            int f1;\" \\\n+\"/*   68      |     1 */            signed char f2;\" \\\n+\"/* XXX  3-byte hole  */\" \\\n+\"/*   72      |     8 */            void *f3;\" \\\n+\"/*   80      |    24 */            struct tuv \\{\" \\\n+\"/*   80      |     4 */                int a1;\" \\\n+\"/* XXX  4-byte hole  */\" \\\n+\"/*   88      |     8 */                signed char *a2;\" \\\n+\"/*   96      |     4 */                int a3;\" \\\n+\"/* XXX  4-byte padding  */\" \\\n+\"\" \\\n+\"                                       /* total size (bytes):   24 */\" \\\n+\"                                   \\} f4;\" \\\n+\"\" \\\n+\"                                   /* total size (bytes):   40 */\" \\\n+\"                               \\} ff2;\" \\\n+\"/*  104      |     1 */        signed char ff3;\" \\\n+\"/* XXX  7-byte padding  */\" \\\n+\"\" \\\n+\"                               /* total size (bytes):   56 */\" \\\n+\"                           \\} f4;\" \\\n+\"\" \\\n+\"                           /* total size (bytes):  112 */\" \\\n+\"                         \\}\"]]\n \n # Test printing a struct with several bitfields, laid out in various\n # ways.\n@@ -262,58 +262,59 @@ gdb_test \"ptype /o struct poi\" \\\n #   0x7fffffffd548: 0xff    0xff    0xff    0xff    0xff    0xff    0xff    0xff\n #   0x7fffffffd550: 0xff    0x00    0x00    0x00    0x00    0x00    0x00    0x00\n gdb_test \"ptype /o struct tyu\" \\\n-    [multi_line \\\n-{/\\* offset    |  size \\*/  type = struct tyu \\{} \\\n-{/\\*    0:31   |     4 \\*/    int a1 : 1;} \\\n-{/\\*    0:28   |     4 \\*/    int a2 : 3;} \\\n-{/\\*    0: 5   |     4 \\*/    int a3 : 23;} \\\n-{/\\*    3: 3   |     1 \\*/    signed char a4 : 2;} \\\n-{/\\* XXX  3-bit hole   \\*/} \\\n-{/\\* XXX  4-byte hole  \\*/} \\\n-{/\\*    8      |     8 \\*/    int64_t a5;} \\\n-{/\\*   16:27   |     4 \\*/    int a6 : 5;} \\\n-{/\\*   16:56   |     8 \\*/    int64_t a7 : 3;} \\\n-{/\\* XXX  7-byte padding \\*/} \\\n-{} \\\n-{                           /\\* total size \\(bytes\\):   24 \\*/} \\\n-{                         \\}}]\n+    [string_to_regexp [multi_line \\\n+\"/* offset    |  size */  type = struct tyu \\{\" \\\n+\"/*    0:31   |     4 */    int a1 : 1;\" \\\n+\"/*    0:28   |     4 */    int a2 : 3;\" \\\n+\"/*    0: 5   |     4 */    int a3 : 23;\" \\\n+\"/*    3: 3   |     1 */    signed char a4 : 2;\" \\\n+\"/* XXX  3-bit hole   */\" \\\n+\"/* XXX  4-byte hole  */\" \\\n+\"/*    8      |     8 */    int64_t a5;\" \\\n+\"/*   16:27   |     4 */    int a6 : 5;\" \\\n+\"/*   16:56   |     8 */    int64_t a7 : 3;\" \\\n+\"/* XXX  7-byte padding  */\" \\\n+\"\" \\\n+\"                           /* total size (bytes):   24 */\" \\\n+\"                         \\}\"]]\n \n gdb_test \"ptype /o struct asd\" \\\n-    [multi_line \\\n-{/\\* offset    |  size \\*/  type = struct asd \\{} \\\n-{/\\*    0      |    32 \\*/    struct asd::jkl \\{} \\\n-{/\\*    0      |     8 \\*/        signed char \\*f1;} \\\n-{/\\*    8      |     8 \\*/        union \\{} \\\n-{/\\*                 8 \\*/            void \\*ff1;} \\\n-{} \\\n-{                                   /\\* total size \\(bytes\\):    8 \\*/} \\\n-{                               \\} f2;} \\\n-{/\\*   16      |     8 \\*/        union \\{} \\\n-{/\\*                 8 \\*/            signed char \\*ff2;} \\\n-{} \\\n-{                                   /\\* total size \\(bytes\\):    8 \\*/} \\\n-{                               \\} f3;} \\\n-{/\\*   24:27   |     4 \\*/        int f4 : 5;} \\\n-{/\\*   24:26   |     4 \\*/        unsigned int f5 : 1;} \\\n-{/\\* XXX  2-bit hole   \\*/} \\\n-{/\\* XXX  1-byte hole  \\*/} \\\n-{/\\*   26      |     2 \\*/        short f6;} \\\n-{} \\\n-{                               /\\* total size \\(bytes\\):   32 \\*/} \\\n-{                           \\} f7;} \\\n-{/\\*   32      |     8 \\*/    unsigned long f8;} \\\n-{/\\*   40      |     8 \\*/    signed char \\*f9;} \\\n-{/\\*   48:28   |     4 \\*/    int f10 : 4;} \\\n-{/\\*   48:27   |     4 \\*/    unsigned int f11 : 1;} \\\n-{/\\*   48:26   |     4 \\*/    unsigned int f12 : 1;} \\\n-{/\\*   48:25   |     4 \\*/    unsigned int f13 : 1;} \\\n-{/\\*   48:24   |     4 \\*/    unsigned int f14 : 1;} \\\n-{/\\* XXX  7-byte hole  \\*/} \\\n-{/\\*   56      |     8 \\*/    void \\*f15;} \\\n-{/\\*   64      |     8 \\*/    void \\*f16;} \\\n-{} \\\n-{                           /\\* total size \\(bytes\\):   72 \\*/} \\\n-{                         \\}}]\n+    [string_to_regexp [multi_line \\\n+\"/* offset    |  size */  type = struct asd \\{\" \\\n+\"/*    0      |    32 */    struct asd::jkl \\{\" \\\n+\"/*    0      |     8 */        signed char *f1;\" \\\n+\"/*    8      |     8 */        union \\{\" \\\n+\"/*                 8 */            void *ff1;\" \\\n+\"\" \\\n+\"                                   /* total size (bytes):    8 */\" \\\n+\"                               \\} f2;\" \\\n+\"/*   16      |     8 */        union \\{\" \\\n+\"/*                 8 */            signed char *ff2;\" \\\n+\"\" \\\n+\"                                   /* total size (bytes):    8 */\" \\\n+\"                               \\} f3;\" \\\n+\"/*   24:27   |     4 */        int f4 : 5;\" \\\n+\"/*   24:26   |     4 */        unsigned int f5 : 1;\" \\\n+\"/* XXX  2-bit hole   */\" \\\n+\"/* XXX  1-byte hole  */\" \\\n+\"/*   26      |     2 */        short f6;\" \\\n+\"/* XXX  4-byte padding  */\" \\\n+\"\" \\\n+\"                               /* total size (bytes):   32 */\" \\\n+\"                           \\} f7;\" \\\n+\"/*   32      |     8 */    unsigned long f8;\" \\\n+\"/*   40      |     8 */    signed char *f9;\" \\\n+\"/*   48:28   |     4 */    int f10 : 4;\" \\\n+\"/*   48:27   |     4 */    unsigned int f11 : 1;\" \\\n+\"/*   48:26   |     4 */    unsigned int f12 : 1;\" \\\n+\"/*   48:25   |     4 */    unsigned int f13 : 1;\" \\\n+\"/*   48:24   |     4 */    unsigned int f14 : 1;\" \\\n+\"/* XXX  7-byte hole  */\" \\\n+\"/*   56      |     8 */    void *f15;\" \\\n+\"/*   64      |     8 */    void *f16;\" \\\n+\"\" \\\n+\"                           /* total size (bytes):   72 */\" \\\n+\"                         \\}\"]]\n \n # Test that we don't print any header when issuing a \"ptype /o\" on a\n # non-struct, non-union, non-class type.\n@@ -332,10 +333,10 @@ gdb_test_multiple \"$test\" \"$test\" {\n # Test that printing a struct with a static member of itself doesn't\n # get us into an infinite loop.\n gdb_test \"ptype/o static_member\" \\\n-    [multi_line \\\n-{/\\* offset    |  size \\*/  type = struct static_member \\{} \\\n-{                           static static_member Empty;} \\\n-{\\/*    0      |     4 \\*/    int abc;} \\\n-{} \\\n-{                           /\\* total size \\(bytes\\):    4 \\*/} \\\n-{                         \\}}]\n+    [string_to_regexp [multi_line \\\n+\"/* offset    |  size */  type = struct static_member \\{\" \\\n+\"                           static static_member Empty;\" \\\n+\"\\/*    0      |     4 */    int abc;\" \\\n+\"\" \\\n+\"                           /* total size (bytes):    4 */\" \\\n+\"                         \\}\"]]"
    },
    {
      "sha": "d1cdfe11cc051996c4c43a4a285afd1427dbe38a",
      "filename": "gdb/typeprint.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/844333e24966817fe4d622494a75c8ae0acdb91f/gdb/typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/844333e24966817fe4d622494a75c8ae0acdb91f/gdb/typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/typeprint.c?ref=844333e24966817fe4d622494a75c8ae0acdb91f",
      "patch": "@@ -94,11 +94,11 @@ print_offset_data::maybe_print_hole (struct ui_file *stream,\n       unsigned int hole_bit = hole % TARGET_CHAR_BIT;\n \n       if (hole_bit > 0)\n-\tfprintf_filtered (stream, \"/* XXX %2u-bit %s  */\\n\", hole_bit,\n+\tfprintf_filtered (stream, \"/* XXX %2u-bit %s   */\\n\", hole_bit,\n \t\t\t  for_what);\n \n       if (hole_byte > 0)\n-\tfprintf_filtered (stream, \"/* XXX %2u-byte %s */\\n\", hole_byte,\n+\tfprintf_filtered (stream, \"/* XXX %2u-byte %s  */\\n\", hole_byte,\n \t\t\t  for_what);\n     }\n }"
    }
  ]
}