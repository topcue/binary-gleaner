{
  "sha": "5feaa09beca04312e51adc69766b0e4bfc181f99",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWZlYWEwOWJlY2EwNDMxMmU1MWFkYzY5NzY2YjBlNGJmYzE4MWY5OQ==",
  "commit": {
    "author": {
      "name": "Przemyslaw Wirkus",
      "email": "przemyslaw.wirkus@arm.com",
      "date": "2020-10-22T14:17:10Z"
    },
    "committer": {
      "name": "Przemyslaw Wirkus",
      "email": "przemyslaw.wirkus@arm.com",
      "date": "2020-10-22T14:17:10Z"
    },
    "message": "aarch64: Define CSRE system registers\n\nThis patch introduces CSRE (Call Stack Recorder Extension) system\nregisters.\n\nNote: as this is register only extension we do not want to hide these\nregisters behind -march flag going forward (they should be enabled by\ndefault).\n\nCSRE feature adds CSR PDEC (Decrements Call stack pointer by the size\nof a Call stack record) instruction. This instruction will be added in\na following, separate patch. This change only adds CSRE system\nregisters.\n\ngas/ChangeLog:\n\n2020-10-08  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n\n\t* NEWS: Docs update.\n\t* testsuite/gas/aarch64/csre-invalid.d: New test.\n\t* testsuite/gas/aarch64/csre-invalid.l: New test.\n\t* testsuite/gas/aarch64/csre-invalid.s: New test.\n\t* testsuite/gas/aarch64/csre.d: New test.\n\t* testsuite/gas/aarch64/csre.s: New test.\n\nopcodes/ChangeLog:\n\n2020-10-08  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n\n\t* aarch64-opc.c: New CSRE system registers defined.",
    "tree": {
      "sha": "3243079e3740ffe96513174725e13002a30ab7d8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3243079e3740ffe96513174725e13002a30ab7d8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5feaa09beca04312e51adc69766b0e4bfc181f99",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5feaa09beca04312e51adc69766b0e4bfc181f99",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5feaa09beca04312e51adc69766b0e4bfc181f99",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5feaa09beca04312e51adc69766b0e4bfc181f99/comments",
  "author": {
    "login": "PrzemekWirkus",
    "id": 6360720,
    "node_id": "MDQ6VXNlcjYzNjA3MjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6360720?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PrzemekWirkus",
    "html_url": "https://github.com/PrzemekWirkus",
    "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
    "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
    "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
    "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
    "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
    "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "PrzemekWirkus",
    "id": 6360720,
    "node_id": "MDQ6VXNlcjYzNjA3MjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6360720?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PrzemekWirkus",
    "html_url": "https://github.com/PrzemekWirkus",
    "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
    "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
    "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
    "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
    "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
    "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bec0b9f6f2e74c799e382bcf5154ecab6bd77c74",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bec0b9f6f2e74c799e382bcf5154ecab6bd77c74",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bec0b9f6f2e74c799e382bcf5154ecab6bd77c74"
    }
  ],
  "stats": {
    "total": 84,
    "additions": 83,
    "deletions": 1
  },
  "files": [
    {
      "sha": "61a69efa66ee00fe1bef5b578cf9b410b432715a",
      "filename": "gas/NEWS",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5feaa09beca04312e51adc69766b0e4bfc181f99/gas/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5feaa09beca04312e51adc69766b0e4bfc181f99/gas/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/NEWS?ref=5feaa09beca04312e51adc69766b0e4bfc181f99",
      "patch": "@@ -15,7 +15,8 @@\n   Add support for Cortex-R82, Neoverse V1, and Neoverse N2 for ARM.\n \n * Add support for ETMv4 (Embedded Trace Macrocell), ETE (Embedded Trace\n-  Extension) and TRBE (Trace Buffer Extension) system registers for AArch64.\n+  Extension), TRBE (Trace Buffer Extension) and CSRE (Call Stack Recorder\n+  Extension) system registers for AArch64.\n \n * Add support for Armv8-R AArch64.\n "
    },
    {
      "sha": "f273b65010a871b5b99f79a354215d47b59fecf4",
      "filename": "gas/testsuite/gas/aarch64/csre-invalid.d",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5feaa09beca04312e51adc69766b0e4bfc181f99/gas/testsuite/gas/aarch64/csre-invalid.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5feaa09beca04312e51adc69766b0e4bfc181f99/gas/testsuite/gas/aarch64/csre-invalid.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/csre-invalid.d?ref=5feaa09beca04312e51adc69766b0e4bfc181f99",
      "patch": "@@ -0,0 +1,3 @@\n+#name: Invalid CSRE System registers usage\n+#source: csre-invalid.s\n+#warning_output: csre-invalid.l"
    },
    {
      "sha": "be3d4c4b75e1041f280a4654df5729bf206518da",
      "filename": "gas/testsuite/gas/aarch64/csre-invalid.l",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5feaa09beca04312e51adc69766b0e4bfc181f99/gas/testsuite/gas/aarch64/csre-invalid.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5feaa09beca04312e51adc69766b0e4bfc181f99/gas/testsuite/gas/aarch64/csre-invalid.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/csre-invalid.l?ref=5feaa09beca04312e51adc69766b0e4bfc181f99",
      "patch": "@@ -0,0 +1,5 @@\n+.*: Assembler messages:\n+.*: Warning: specified register cannot be written to at operand 1 -- `msr csridr_el0,x0'\n+.*: Warning: specified register cannot be written to at operand 1 -- `msr csrptridx_el0,x0'\n+.*: Warning: specified register cannot be written to at operand 1 -- `msr csrptridx_el1,x0'\n+.*: Warning: specified register cannot be written to at operand 1 -- `msr csrptridx_el2,x0'"
    },
    {
      "sha": "424f50a3fea8ed9d4308887e176ef4bac7343bc6",
      "filename": "gas/testsuite/gas/aarch64/csre-invalid.s",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5feaa09beca04312e51adc69766b0e4bfc181f99/gas/testsuite/gas/aarch64/csre-invalid.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5feaa09beca04312e51adc69766b0e4bfc181f99/gas/testsuite/gas/aarch64/csre-invalid.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/csre-invalid.s?ref=5feaa09beca04312e51adc69766b0e4bfc181f99",
      "patch": "@@ -0,0 +1,6 @@\n+/* Write to read-only CSRE system registers.  */\n+\n+msr csridr_el0 ,x0\n+msr csrptridx_el0 ,x0\n+msr csrptridx_el1 ,x0\n+msr csrptridx_el2 ,x0"
    },
    {
      "sha": "ac77d4ac1a2c7e8183204f6bdfe66bc774a041ce",
      "filename": "gas/testsuite/gas/aarch64/csre.d",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5feaa09beca04312e51adc69766b0e4bfc181f99/gas/testsuite/gas/aarch64/csre.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5feaa09beca04312e51adc69766b0e4bfc181f99/gas/testsuite/gas/aarch64/csre.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/csre.d?ref=5feaa09beca04312e51adc69766b0e4bfc181f99",
      "patch": "@@ -0,0 +1,29 @@\n+#name: CSRE System registers\n+#objdump: -dr\n+\n+.*:     file format .*\n+\n+\n+Disassembly of section \\.text:\n+\n+0+ <.*>:\n+[^:]+:\td5338000 \tmrs\tx0, csrcr_el0\n+[^:]+:\td5338020 \tmrs\tx0, csrptr_el0\n+[^:]+:\td5338040 \tmrs\tx0, csridr_el0\n+[^:]+:\td5338060 \tmrs\tx0, csrptridx_el0\n+[^:]+:\td5308000 \tmrs\tx0, csrcr_el1\n+[^:]+:\td5358000 \tmrs\tx0, csrcr_el12\n+[^:]+:\td5308020 \tmrs\tx0, csrptr_el1\n+[^:]+:\td5358020 \tmrs\tx0, csrptr_el12\n+[^:]+:\td5308060 \tmrs\tx0, csrptridx_el1\n+[^:]+:\td5348000 \tmrs\tx0, csrcr_el2\n+[^:]+:\td5348020 \tmrs\tx0, csrptr_el2\n+[^:]+:\td5348060 \tmrs\tx0, csrptridx_el2\n+[^:]+:\td5138000 \tmsr\tcsrcr_el0, x0\n+[^:]+:\td5138020 \tmsr\tcsrptr_el0, x0\n+[^:]+:\td5108000 \tmsr\tcsrcr_el1, x0\n+[^:]+:\td5158000 \tmsr\tcsrcr_el12, x0\n+[^:]+:\td5108020 \tmsr\tcsrptr_el1, x0\n+[^:]+:\td5158020 \tmsr\tcsrptr_el12, x0\n+[^:]+:\td5148000 \tmsr\tcsrcr_el2, x0\n+[^:]+:\td5148020 \tmsr\tcsrptr_el2, x0"
    },
    {
      "sha": "bede41cf37de3b05b5e871a76afaa49210dcbcbc",
      "filename": "gas/testsuite/gas/aarch64/csre.s",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5feaa09beca04312e51adc69766b0e4bfc181f99/gas/testsuite/gas/aarch64/csre.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5feaa09beca04312e51adc69766b0e4bfc181f99/gas/testsuite/gas/aarch64/csre.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/csre.s?ref=5feaa09beca04312e51adc69766b0e4bfc181f99",
      "patch": "@@ -0,0 +1,25 @@\n+/* Call Stack Recorder Extension system registers.  */\n+\n+/* Read from system registers.  */\n+mrs x0, csrcr_el0\n+mrs x0, csrptr_el0\n+mrs x0, csridr_el0\n+mrs x0, csrptridx_el0\n+mrs x0, csrcr_el1\n+mrs x0, csrcr_el12\n+mrs x0, csrptr_el1\n+mrs x0, csrptr_el12\n+mrs x0, csrptridx_el1\n+mrs x0, csrcr_el2\n+mrs x0, csrptr_el2\n+mrs x0, csrptridx_el2\n+\n+/* Write to system registers.  */\n+msr csrcr_el0, x0\n+msr csrptr_el0, x0\n+msr csrcr_el1, x0\n+msr csrcr_el12, x0\n+msr csrptr_el1, x0\n+msr csrptr_el12, x0\n+msr csrcr_el2, x0\n+msr csrptr_el2, x0"
    },
    {
      "sha": "b97d05563f5f7017bd28ce82a436a83e7cd11740",
      "filename": "opcodes/aarch64-opc.c",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5feaa09beca04312e51adc69766b0e4bfc181f99/opcodes/aarch64-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5feaa09beca04312e51adc69766b0e4bfc181f99/opcodes/aarch64-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-opc.c?ref=5feaa09beca04312e51adc69766b0e4bfc181f99",
      "patch": "@@ -4541,6 +4541,19 @@ const aarch64_sys_reg aarch64_sys_regs [] =\n   SR_CORE (\"trclar\",        CPENC (2,1,C7,C12,6), F_REG_WRITE),\n   SR_CORE (\"trcoslar\",      CPENC (2,1,C1,C0,4),  F_REG_WRITE),\n \n+  SR_CORE (\"csrcr_el0\",     CPENC (2,3,C8,C0,0),  0),\n+  SR_CORE (\"csrptr_el0\",    CPENC (2,3,C8,C0,1),  0),\n+  SR_CORE (\"csridr_el0\",    CPENC (2,3,C8,C0,2),  F_REG_READ),\n+  SR_CORE (\"csrptridx_el0\", CPENC (2,3,C8,C0,3),  F_REG_READ),\n+  SR_CORE (\"csrcr_el1\",     CPENC (2,0,C8,C0,0),  0),\n+  SR_CORE (\"csrcr_el12\",    CPENC (2,5,C8,C0,0),  0),\n+  SR_CORE (\"csrptr_el1\",    CPENC (2,0,C8,C0,1),  0),\n+  SR_CORE (\"csrptr_el12\",   CPENC (2,5,C8,C0,1),  0),\n+  SR_CORE (\"csrptridx_el1\", CPENC (2,0,C8,C0,3),  F_REG_READ),\n+  SR_CORE (\"csrcr_el2\",     CPENC (2,4,C8,C0,0),  0),\n+  SR_CORE (\"csrptr_el2\",    CPENC (2,4,C8,C0,1),  0),\n+  SR_CORE (\"csrptridx_el2\", CPENC (2,4,C8,C0,3),  F_REG_READ),\n+\n   { 0, CPENC (0,0,0,0,0), 0, 0 }\n };\n "
    }
  ]
}