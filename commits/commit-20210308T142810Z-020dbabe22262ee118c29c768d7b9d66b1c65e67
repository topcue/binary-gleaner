{
  "sha": "020dbabe22262ee118c29c768d7b9d66b1c65e67",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDIwZGJhYmUyMjI2MmVlMTE4YzI5Yzc2OGQ3YjlkNjZiMWM2NWU2Nw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:10Z"
    },
    "message": "Split out ada_atr_tag\n\nThis splits OP_ATR_TAG into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* ada-lang.c (ada_atr_tag): New function.\n\t(ada_evaluate_subexp): Use it.",
    "tree": {
      "sha": "34c023822507be434cd0f86bd9dda2f1382a9d54",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/34c023822507be434cd0f86bd9dda2f1382a9d54"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/020dbabe22262ee118c29c768d7b9d66b1c65e67",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/020dbabe22262ee118c29c768d7b9d66b1c65e67",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/020dbabe22262ee118c29c768d7b9d66b1c65e67",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/020dbabe22262ee118c29c768d7b9d66b1c65e67/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7efc87ffcb6cf97592821741a48c373d7e82eb0b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7efc87ffcb6cf97592821741a48c373d7e82eb0b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7efc87ffcb6cf97592821741a48c373d7e82eb0b"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 20,
    "deletions": 5
  },
  "files": [
    {
      "sha": "0afbe4fe0efe4c11e150a704b1dc513a6f81d2ee",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/020dbabe22262ee118c29c768d7b9d66b1c65e67/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/020dbabe22262ee118c29c768d7b9d66b1c65e67/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=020dbabe22262ee118c29c768d7b9d66b1c65e67",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* ada-lang.c (ada_atr_tag): New function.\n+\t(ada_evaluate_subexp): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* ada-lang.c (ada_unop_in_range): New function."
    },
    {
      "sha": "a1d990ce41f149513d055c1389793e10b1f8075b",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 15,
      "deletions": 5,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/020dbabe22262ee118c29c768d7b9d66b1c65e67/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/020dbabe22262ee118c29c768d7b9d66b1c65e67/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=020dbabe22262ee118c29c768d7b9d66b1c65e67",
      "patch": "@@ -10011,6 +10011,20 @@ ada_unop_in_range (struct type *expect_type,\n     }\n }\n \n+/* A helper function for OP_ATR_TAG.  */\n+\n+static value *\n+ada_atr_tag (struct type *expect_type,\n+\t     struct expression *exp,\n+\t     enum noside noside, enum exp_opcode op,\n+\t     struct value *arg1)\n+{\n+  if (noside == EVAL_AVOID_SIDE_EFFECTS)\n+    return value_zero (ada_tag_type (arg1), not_lval);\n+\n+  return ada_value_tag (arg1);\n+}\n+\n /* Implement the evaluate_exp routine in the exp_descriptor structure\n    for the Ada language.  */\n \n@@ -10741,11 +10755,7 @@ ada_evaluate_subexp (struct type *expect_type, struct expression *exp,\n       arg1 = evaluate_subexp (nullptr, exp, pos, noside);\n       if (noside == EVAL_SKIP)\n \tgoto nosideret;\n-\n-      if (noside == EVAL_AVOID_SIDE_EFFECTS)\n-\treturn value_zero (ada_tag_type (arg1), not_lval);\n-\n-      return ada_value_tag (arg1);\n+      return ada_atr_tag (expect_type, exp, noside, op, arg1);\n \n     case OP_ATR_MIN:\n     case OP_ATR_MAX:"
    }
  ]
}