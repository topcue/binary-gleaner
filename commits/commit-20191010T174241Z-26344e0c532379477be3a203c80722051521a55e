{
  "sha": "26344e0c532379477be3a203c80722051521a55e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjYzNDRlMGM1MzIzNzk0NzdiZTNhMjAzYzgwNzIyMDUxNTIxYTU1ZQ==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-10-10T17:42:41Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-10-10T17:42:41Z"
    },
    "message": "Include gdbtk.h to avoid declarations\n\nOnce https://sourceware.org/ml/insight/2019-q4/msg00000.html lands,\nwe can just include gdbtk.h to get the declarations for\nexternal_editor_command and gdbtk_test, instead of having to\ndeclare them here in main.c.\n\ngdb/ChangeLog:\n\n2019-10-07  Christian Biesinger  <cbiesinger@google.com>\n\n\t* main.c (captured_main_1): Include gdbtk.h and remove declarations\n\tfor external_editor_command and gdbtk_test.",
    "tree": {
      "sha": "c4d912bb13a2115a52ccb1c14096dd72b43ab041",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c4d912bb13a2115a52ccb1c14096dd72b43ab041"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/26344e0c532379477be3a203c80722051521a55e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/26344e0c532379477be3a203c80722051521a55e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/26344e0c532379477be3a203c80722051521a55e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/26344e0c532379477be3a203c80722051521a55e/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c2c440a9038acc7b94ffbc83f4711dbf08b582a9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c2c440a9038acc7b94ffbc83f4711dbf08b582a9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c2c440a9038acc7b94ffbc83f4711dbf08b582a9"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 8,
    "deletions": 4
  },
  "files": [
    {
      "sha": "fba57f3469bdc42dd5fb2812b79140d402679226",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26344e0c532379477be3a203c80722051521a55e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26344e0c532379477be3a203c80722051521a55e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=26344e0c532379477be3a203c80722051521a55e",
      "patch": "@@ -1,3 +1,8 @@\n+2019-10-10  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* main.c (captured_main_1): Include gdbtk.h and remove declarations\n+\tfor external_editor_command and gdbtk_test.\n+\n 2019-10-10  Christian Biesinger  <cbiesinger@google.com>\n \n \t* mi/mi-cmd-var.c (varobjdebug): Remove declaration."
    },
    {
      "sha": "7f873630d63fbda7bd4c23af2cacf60ade98f5a9",
      "filename": "gdb/main.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26344e0c532379477be3a203c80722051521a55e/gdb/main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26344e0c532379477be3a203c80722051521a55e/gdb/main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/main.c?ref=26344e0c532379477be3a203c80722051521a55e",
      "patch": "@@ -48,6 +48,9 @@\n #include <vector>\n #include \"gdbsupport/pathstuff.h\"\n #include \"cli/cli-style.h\"\n+#ifdef GDBTK\n+#include \"gdbtk/generic/gdbtk.h\"\n+#endif\n \n /* The selected interpreter.  This will be used as a set command\n    variable, so it should always be malloc'ed - since\n@@ -764,8 +767,6 @@ captured_main_1 (struct captured_main_args *context)\n #ifdef GDBTK\n \t  case 'z':\n \t    {\n-\t      extern int gdbtk_test (char *);\n-\n \t      if (!gdbtk_test (optarg))\n \t\terror (_(\"%s: unable to load tclcommand file \\\"%s\\\"\"),\n \t\t       gdb_program_name, optarg);\n@@ -778,8 +779,6 @@ captured_main_1 (struct captured_main_args *context)\n \t    {\n \t      /* Set the external editor commands when gdb is farming out files\n \t\t to be edited by another program.  */\n-\t      extern char *external_editor_command;\n-\n \t      external_editor_command = xstrdup (optarg);\n \t      break;\n \t    }"
    }
  ]
}