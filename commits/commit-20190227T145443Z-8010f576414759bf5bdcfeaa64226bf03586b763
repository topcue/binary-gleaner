{
  "sha": "8010f576414759bf5bdcfeaa64226bf03586b763",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODAxMGY1NzY0MTQ3NTliZjViZGNmZWFhNjQyMjZiZjAzNTg2Yjc2Mw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2018-09-09T16:17:05Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-02-27T14:54:43Z"
    },
    "message": "gdb/cris: Use default gdbarch methods where possible\n\nMake use of the default gdbarch methods for gdbarch_dummy_id,\ngdbarch_unwind_pc, and gdbarch_unwind_sp where possible.\n\nI have not tested this change but, by inspecting the code, I believe\nthe default methods are equivalent to the code being deleted.\n\ngdb/ChangeLog:\n\n\t* gdb/cris-tdep.c (cris_dummy_id): Delete.\n\t(cris_unwind_pc): Delete.\n\t(cris_unwind_sp): Delete.\n\t(cris_gdbarch_init): Don't register deleted functions with\n\tgdbarch.",
    "tree": {
      "sha": "c0f07c3fe031227ca0d3b76b1d45941cb2d7e6b5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c0f07c3fe031227ca0d3b76b1d45941cb2d7e6b5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8010f576414759bf5bdcfeaa64226bf03586b763",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8010f576414759bf5bdcfeaa64226bf03586b763",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8010f576414759bf5bdcfeaa64226bf03586b763",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8010f576414759bf5bdcfeaa64226bf03586b763/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b56bf084434de08080875134e983f8b46eb2328f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b56bf084434de08080875134e983f8b46eb2328f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b56bf084434de08080875134e983f8b46eb2328f"
    }
  ],
  "stats": {
    "total": 48,
    "additions": 8,
    "deletions": 40
  },
  "files": [
    {
      "sha": "4d4ad2c2c224651db3e780e6f4e9c6efaa8612d4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8010f576414759bf5bdcfeaa64226bf03586b763/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8010f576414759bf5bdcfeaa64226bf03586b763/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=8010f576414759bf5bdcfeaa64226bf03586b763",
      "patch": "@@ -1,3 +1,11 @@\n+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb/cris-tdep.c (cris_dummy_id): Delete.\n+\t(cris_unwind_pc): Delete.\n+\t(cris_unwind_sp): Delete.\n+\t(cris_gdbarch_init): Don't register deleted functions with\n+\tgdbarch.\n+\n 2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb/bfin-tdep.c (bfin_dummy_id): Delete."
    },
    {
      "sha": "8eda05806f819f9fda0de37f55f222748b5daaff",
      "filename": "gdb/cris-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 40,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8010f576414759bf5bdcfeaa64226bf03586b763/gdb/cris-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8010f576414759bf5bdcfeaa64226bf03586b763/gdb/cris-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cris-tdep.c?ref=8010f576414759bf5bdcfeaa64226bf03586b763",
      "patch": "@@ -651,12 +651,6 @@ static CORE_ADDR crisv32_scan_prologue (CORE_ADDR pc,\n \t\t\t\t\tstruct frame_info *this_frame,\n \t\t\t\t\tstruct cris_unwind_cache *info);\n \n-static CORE_ADDR cris_unwind_pc (struct gdbarch *gdbarch, \n-\t\t\t\t struct frame_info *next_frame);\n-\n-static CORE_ADDR cris_unwind_sp (struct gdbarch *gdbarch, \n-\t\t\t\t struct frame_info *next_frame);\n-\n /* When arguments must be pushed onto the stack, they go on in reverse\n    order.  The below implements a FILO (stack) to do this.\n    Copied from d10v-tdep.c.  */\n@@ -767,18 +761,6 @@ cris_frame_prev_register (struct frame_info *this_frame,\n   return trad_frame_get_prev_register (this_frame, info->saved_regs, regnum);\n }\n \n-/* Assuming THIS_FRAME is a dummy, return the frame ID of that dummy\n-   frame.  The frame ID's base needs to match the TOS value saved by\n-   save_dummy_frame_tos(), and the PC match the dummy frame's breakpoint.  */\n-\n-static struct frame_id\n-cris_dummy_id (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  CORE_ADDR sp;\n-  sp = get_frame_register_unsigned (this_frame, gdbarch_sp_regnum (gdbarch));\n-  return frame_id_build (sp, get_frame_pc (this_frame));\n-}\n-\n static CORE_ADDR\n cris_frame_align (struct gdbarch *gdbarch, CORE_ADDR sp)\n {\n@@ -1372,24 +1354,6 @@ cris_skip_prologue (struct gdbarch *gdbarch, CORE_ADDR pc)\n   return pc_after_prologue;\n }\n \n-static CORE_ADDR\n-cris_unwind_pc (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  ULONGEST pc;\n-  pc = frame_unwind_register_unsigned (next_frame,\n-\t\t\t\t       gdbarch_pc_regnum (gdbarch));\n-  return pc;\n-}\n-\n-static CORE_ADDR\n-cris_unwind_sp (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  ULONGEST sp;\n-  sp = frame_unwind_register_unsigned (next_frame,\n-\t\t\t\t       gdbarch_sp_regnum (gdbarch));\n-  return sp;\n-}\n-\n /* Implement the breakpoint_kind_from_pc gdbarch method.  */\n \n static int\n@@ -4095,10 +4059,6 @@ cris_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   set_gdbarch_breakpoint_kind_from_pc (gdbarch, cris_breakpoint_kind_from_pc);\n   set_gdbarch_sw_breakpoint_from_kind (gdbarch, cris_sw_breakpoint_from_kind);\n   \n-  set_gdbarch_unwind_pc (gdbarch, cris_unwind_pc);\n-  set_gdbarch_unwind_sp (gdbarch, cris_unwind_sp);\n-  set_gdbarch_dummy_id (gdbarch, cris_dummy_id);\n-\n   if (tdep->cris_dwarf2_cfi == 1)\n     {\n       /* Hook in the Dwarf-2 frame sniffer.  */"
    }
  ]
}