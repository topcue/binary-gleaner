{
  "sha": "3ceda72296e87579632a0929a638be1f9e5c97d7",
  "node_id": "C_kwDOANOeidoAKDNjZWRhNzIyOTZlODc1Nzk2MzJhMDkyOWE2MzhiZTFmOWU1Yzk3ZDc",
  "commit": {
    "author": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2022-01-25T21:45:16Z"
    },
    "committer": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2022-01-27T21:18:04Z"
    },
    "message": "Fix GDB internal error by using text (instead of data) section offset\n\nFedora Rawhide is now using gcc-12.0.  As part of updating to the\ngcc-12.0 package set, Rawhide is also now using a version of libgcc_s\nwhich lacks a .data section.  This causes gdb to fail in the following\nfashion while debugging a program (such as gdb) which uses libgcc_s:\n\n    (top-gdb) run\n    Starting program: rawhide-master/bld/gdb/gdb\n    ...\n    objfiles.h:467: internal-error: sect_index_data not initialized\n    A problem internal to GDB has been detected,\n    further debugging may prove unreliable.\n    ...\n\nI snipped the backtrace from the above output.  Instead, here's a\nportion of a backtrace obtained using GDB's backtrace command.\n(Obviously, in order to obtain it, I used a GDB which has been patched\nwith this commit.)\n\n    #0  internal_error (\n\tfile=0xc6a508 \"gdb/objfiles.h\", line=467,\n\tfmt=0xc6a4e8 \"sect_index_data not initialized\")\n\tat gdbsupport/errors.cc:51\n    #1  0x00000000005f9651 in objfile::data_section_offset (this=0x4fa48f0)\n\tat gdb/objfiles.h:467\n    #2  0x000000000097c5f8 in relocate_address (address=0x17244, objfile=0x4fa48f0)\n\tat gdb/stap-probe.c:1333\n    #3  0x000000000097c630 in stap_probe::get_relocated_address (this=0xa1a17a0,\n\tobjfile=0x4fa48f0)\n\tat gdb/stap-probe.c:1341\n    #4  0x00000000004d7025 in create_exception_master_breakpoint_probe (\n\tobjfile=0x4fa48f0)\n\tat gdb/breakpoint.c:3505\n    #5  0x00000000004d7426 in create_exception_master_breakpoint ()\n\tat gdb/breakpoint.c:3575\n    #6  0x00000000004efcc1 in breakpoint_re_set ()\n\tat gdb/breakpoint.c:13407\n    #7  0x0000000000956998 in solib_add (pattern=0x0, from_tty=0, readsyms=1)\n\tat gdb/solib.c:1001\n    #8  0x00000000009576a8 in handle_solib_event ()\n\tat gdb/solib.c:1269\n    ...\n\nThe function 'relocate_address' in gdb/stap-probe.c attempts to do\nits \"relocation\" by using objfile->data_section_offset().  That\nmethod, data_section_offset() is defined as follows in objfiles.h:\n\n  CORE_ADDR data_section_offset () const\n  {\n    return section_offsets[SECT_OFF_DATA (this)];\n  }\n\nThe internal error occurs when the SECT_OFF_DATA macro finds that the\n'sect_index_data' field is -1:\n\n    #define SECT_OFF_DATA(objfile) \\\n\t ((objfile->sect_index_data == -1) \\\n\t  ? (internal_error (__FILE__, __LINE__, \\\n\t\t\t     _(\"sect_index_data not initialized\")), -1)\t\\\n\t  : objfile->sect_index_data)\n\nrelocate_address() is obtaining the section offset in order to compute\na relocated address.  For some ABIs, such as the System V ABI, the\nsection offsets will all be the same.  So for those ABIs, it doesn't\nmatter which offset is used.  However, other ABIs, such as the FDPIC\nABI, will have different offsets for the various sections.  Thus, for\nthose ABIs, it is vital that this and other relocation code use the\ncorrect offset.\n\nIn stap_probe::get_relocated_address, the address to which to add the\noffset (thus forming the relocated address) is obtained via\nthis->get_address (); get_address is a getter for m_address in\nprobe.h.  It's documented/defined as follows (also in probe.h):\n\n  /* The address where the probe is inserted, relative to\n     SECT_OFF_TEXT.  */\n  CORE_ADDR m_address;\n\n(Thanks to Tom Tromey for this observation.)\n\nSo, based on this, the current use of data_section_offset /\nSECT_OFF_DATA is wrong.  This relocation code should have been using\ntext_section_offset / SECT_OFF_TEXT all along.  That being the\ncase, I've adjusted the stap-probe.c relocation code accordingly.\n\nSearching the sources turned up one other use of data_section_offset,\nin gdb/dtrace-probe.c, so I've updated that code as well.  The same\nreasoning presented above applies to this case too.\n\nSummary:\n\n\t* gdb/dtrace-probe.c (dtrace_probe::get_relocated_address):\n\tUse method text_section_offset instead of data_section_offset.\n\t* gdb/stap-probe.c (relocate_address): Likewise.",
    "tree": {
      "sha": "9ddce3471ae8a8dad14e016dfd6013876637882e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9ddce3471ae8a8dad14e016dfd6013876637882e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3ceda72296e87579632a0929a638be1f9e5c97d7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ceda72296e87579632a0929a638be1f9e5c97d7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3ceda72296e87579632a0929a638be1f9e5c97d7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ceda72296e87579632a0929a638be1f9e5c97d7/comments",
  "author": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0d8cbc5f2fcbcb9eb207f12507fdfe04f3d3ae14",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d8cbc5f2fcbcb9eb207f12507fdfe04f3d3ae14",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0d8cbc5f2fcbcb9eb207f12507fdfe04f3d3ae14"
    }
  ],
  "stats": {
    "total": 4,
    "additions": 2,
    "deletions": 2
  },
  "files": [
    {
      "sha": "9aeefb6060c4a51f880ec5c67ed747712f26e262",
      "filename": "gdb/dtrace-probe.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ceda72296e87579632a0929a638be1f9e5c97d7/gdb/dtrace-probe.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ceda72296e87579632a0929a638be1f9e5c97d7/gdb/dtrace-probe.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dtrace-probe.c?ref=3ceda72296e87579632a0929a638be1f9e5c97d7",
      "patch": "@@ -684,7 +684,7 @@ dtrace_probe::is_enabled () const\n CORE_ADDR\n dtrace_probe::get_relocated_address (struct objfile *objfile)\n {\n-  return this->get_address () + objfile->data_section_offset ();\n+  return this->get_address () + objfile->text_section_offset ();\n }\n \n /* Implementation of the get_argument_count method.  */"
    },
    {
      "sha": "c4b24df756440ab9a36978a4dc4fe2b758bff684",
      "filename": "gdb/stap-probe.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ceda72296e87579632a0929a638be1f9e5c97d7/gdb/stap-probe.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ceda72296e87579632a0929a638be1f9e5c97d7/gdb/stap-probe.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stap-probe.c?ref=3ceda72296e87579632a0929a638be1f9e5c97d7",
      "patch": "@@ -1330,7 +1330,7 @@ stap_probe::parse_arguments (struct gdbarch *gdbarch)\n static CORE_ADDR\n relocate_address (CORE_ADDR address, struct objfile *objfile)\n {\n-  return address + objfile->data_section_offset ();\n+  return address + objfile->text_section_offset ();\n }\n \n /* Implementation of the get_relocated_address method.  */"
    }
  ]
}