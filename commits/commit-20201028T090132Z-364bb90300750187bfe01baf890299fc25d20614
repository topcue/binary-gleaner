{
  "sha": "364bb90300750187bfe01baf890299fc25d20614",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzY0YmI5MDMwMDc1MDE4N2JmZTAxYmFmODkwMjk5ZmMyNWQyMDYxNA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-10-28T09:01:32Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-10-28T09:01:32Z"
    },
    "message": "[gdb/testsuite] Fix gdb.cp/nsalias.exp with -readnow\n\nWhen running test-case gdb.cp/nsalias.exp with target board readnow, we get:\n...\nFAIL: gdb.cp/nsalias.exp: complaint for too many recursively imported \\\n  declarations\n...\n\nThe complaint is not detected, because:\n- the complaint is triggered during the file command instead of during\n  \"print N100::x\"\n- the \"set complaints 1\" is not effective because it's issued\n  after the file command\n\nFix the FAIL by setting the complaints limit earlier, and detecting the\ncomplaint also during the file command.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2020-10-28  Tom de Vries  <tdevries@suse.de>\n\n\t* lib/gdb.exp (gdb_file_cmd): Set gdb_file_cmd_msg.\n\t* gdb.cp/nsalias.exp: Set complaints limit before file cmd.  Expect\n\tcomplaint during file command for -readnow.",
    "tree": {
      "sha": "be1e53a45dab2ef6e79c35bbaa55ba8651e9ca81",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/be1e53a45dab2ef6e79c35bbaa55ba8651e9ca81"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/364bb90300750187bfe01baf890299fc25d20614",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/364bb90300750187bfe01baf890299fc25d20614",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/364bb90300750187bfe01baf890299fc25d20614",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/364bb90300750187bfe01baf890299fc25d20614/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "445a033f48d6adf3114bd771030aeb2803186c55",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/445a033f48d6adf3114bd771030aeb2803186c55",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/445a033f48d6adf3114bd771030aeb2803186c55"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 32,
    "deletions": 8
  },
  "files": [
    {
      "sha": "ce8ea41deb4f9b8902cf9840b8e21b4489210bec",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/364bb90300750187bfe01baf890299fc25d20614/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/364bb90300750187bfe01baf890299fc25d20614/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=364bb90300750187bfe01baf890299fc25d20614",
      "patch": "@@ -1,3 +1,9 @@\n+2020-10-28  Tom de Vries  <tdevries@suse.de>\n+\n+\t* lib/gdb.exp (gdb_file_cmd): Set gdb_file_cmd_msg.\n+\t* gdb.cp/nsalias.exp: Set complaints limit before file cmd.  Expect\n+\tcomplaint during file command for -readnow.\n+\n 2020-10-28  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.cp/nsalias.exp: Fix typo in test name."
    },
    {
      "sha": "a7163dc5f1aa4e9a29acb9236f2a25747a1f1190",
      "filename": "gdb/testsuite/gdb.cp/nsalias.exp",
      "status": "modified",
      "additions": 16,
      "deletions": 4,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/364bb90300750187bfe01baf890299fc25d20614/gdb/testsuite/gdb.cp/nsalias.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/364bb90300750187bfe01baf890299fc25d20614/gdb/testsuite/gdb.cp/nsalias.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/nsalias.exp?ref=364bb90300750187bfe01baf890299fc25d20614",
      "patch": "@@ -314,9 +314,21 @@ if {[gdb_compile [list ${binfile}1.o ${binfile}3.o] \\\n     return -1\n }\n \n-clean_restart ${testfile}-r\n+clean_restart\n \n+# Set complaints before loading the file.  Otherwise the complaint won't\n+# trigger for -readnow.\n gdb_test_no_output \"set complaints 1\"\n-gdb_test \"print N100::x\" \\\n-    \".* has too many recursively imported declarations.*\" \\\n-    \"complaint for too many recursively imported declarations\"\n+\n+gdb_load [standard_output_file ${testfile}-r]\n+\n+set readnow_p [readnow]\n+\n+set test \"complaint for too many recursively imported declarations\"\n+set re \".* has too many recursively imported declarations.*\"\n+if { $readnow_p } {\n+    global gdb_file_cmd_msg\n+    gdb_assert {[regexp $re $gdb_file_cmd_msg]} $test\n+} else {\n+    gdb_test \"print N100::x\" $re $test\n+}"
    },
    {
      "sha": "ef96209b0dc40b1d23d09dca5a4c18227bc787df",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 4,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/364bb90300750187bfe01baf890299fc25d20614/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/364bb90300750187bfe01baf890299fc25d20614/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=364bb90300750187bfe01baf890299fc25d20614",
      "patch": "@@ -1803,6 +1803,9 @@ proc default_gdb_exit {} {\n #            compiled in\n #   fail     file was not loaded\n #\n+# This procedure also set the global variable GDB_FILE_CMD_MSG to the\n+# output of the file command in case of success.\n+#\n # I tried returning this information as part of the return value,\n # but ran into a mess because of the many re-implementations of\n # gdb_load in config/*.exp.\n@@ -1820,7 +1823,7 @@ proc gdb_file_cmd { arg } {\n \n     # Set whether debug info was found.\n     # Default to \"fail\".\n-    global gdb_file_cmd_debug_info\n+    global gdb_file_cmd_debug_info gdb_file_cmd_msg\n     set gdb_file_cmd_debug_info \"fail\"\n \n     if [is_remote host] {\n@@ -1850,18 +1853,21 @@ proc gdb_file_cmd { arg } {\n     set new_symbol_table 0\n     set basename [file tail $arg]\n     gdb_expect 120 {\n-\t-re \"Reading symbols from.*LZMA support was disabled.*$gdb_prompt $\" {\n+\t-re \"(Reading symbols from.*LZMA support was disabled.*$gdb_prompt $)\" {\n \t    verbose \"\\t\\tLoaded $arg into $GDB; .gnu_debugdata found but no LZMA available\"\n+\t    set gdb_file_cmd_msg $expect_out(1,string)\n \t    set gdb_file_cmd_debug_info \"lzma\"\n \t    return 0\n \t}\n-\t-re \"Reading symbols from.*no debugging symbols found.*$gdb_prompt $\" {\n+\t-re \"(Reading symbols from.*no debugging symbols found.*$gdb_prompt $)\" {\n \t    verbose \"\\t\\tLoaded $arg into $GDB with no debugging symbols\"\n+\t    set gdb_file_cmd_msg $expect_out(1,string)\n \t    set gdb_file_cmd_debug_info \"nodebug\"\n \t    return 0\n \t}\n-        -re \"Reading symbols from.*$gdb_prompt $\" {\n+        -re \"(Reading symbols from.*$gdb_prompt $)\" {\n             verbose \"\\t\\tLoaded $arg into $GDB\"\n+\t    set gdb_file_cmd_msg $expect_out(1,string)\n \t    set gdb_file_cmd_debug_info \"debug\"\n \t    return 0\n         }"
    }
  ]
}