{
  "sha": "63e5eea234c2bd2c7ce7dc921c71b22bc4fd0d6b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjNlNWVlYTIzNGMyYmQyYzdjZTdkYzkyMWM3MWIyMmJjNGZkMGQ2Yg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-09-26T11:04:55Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-09-26T11:04:55Z"
    },
    "message": "[GOLD] PPC64_OPT_LOCALENTRY is incompatible with tail calls\n\nGold version of commit 3cd7c7d7ef.\n\n\t* powerpc.cc (Target_powerpc): Rename power10_stubs_ to\n\tpower10_relocs_.\n\t(Target_powerpc::set_power10_relocs): New accessor.\n\t(Target_powerpc::set_power10_stubs): Delete.\n\t(Target_powerpc::power10_stubs): Adjust.\n\t(Target_powerpc::has_localentry0): New accessor.\n\t(ld_0_11): New constant.\n\t(glink_eh_frame_fde_64v1, glink_eh_frame_fde_64v2): Adjust.\n\t(glink_eh_frame_fde_64v2_localentry0): New.\n\t(Output_data_glink::pltresolve_size): Update.\n\t(Output_data_glink::add_eh_frame): Use localentry0 version eh_frame.\n\t(Output_data_glink::do_write): Move r2 save to start of ELFv2 stub\n\tand only emit for has_localentry0.  Don't use r2 in the stub.\n\t(Target_powerpc::Scan::local, global): Adjust for\n\tset_power10_relocs renaming.\n\t(Target_powerpc::scan_relocs): Warn and reset plt_localentry0_.",
    "tree": {
      "sha": "19c8bcb7389691da527dfac714eb6b924ea1f8b1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/19c8bcb7389691da527dfac714eb6b924ea1f8b1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/63e5eea234c2bd2c7ce7dc921c71b22bc4fd0d6b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/63e5eea234c2bd2c7ce7dc921c71b22bc4fd0d6b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/63e5eea234c2bd2c7ce7dc921c71b22bc4fd0d6b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/63e5eea234c2bd2c7ce7dc921c71b22bc4fd0d6b/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3cd7c7d7ef38ec5dc0a0c137c47d9ad0fc9e2e5f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3cd7c7d7ef38ec5dc0a0c137c47d9ad0fc9e2e5f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3cd7c7d7ef38ec5dc0a0c137c47d9ad0fc9e2e5f"
    }
  ],
  "stats": {
    "total": 101,
    "additions": 81,
    "deletions": 20
  },
  "files": [
    {
      "sha": "5a1b03b00be4bb94ff09fb812a05d7012e01c791",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/63e5eea234c2bd2c7ce7dc921c71b22bc4fd0d6b/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/63e5eea234c2bd2c7ce7dc921c71b22bc4fd0d6b/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=63e5eea234c2bd2c7ce7dc921c71b22bc4fd0d6b",
      "patch": "@@ -1,3 +1,22 @@\n+2020-09-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Target_powerpc): Rename power10_stubs_ to\n+\tpower10_relocs_.\n+\t(Target_powerpc::set_power10_relocs): New accessor.\n+\t(Target_powerpc::set_power10_stubs): Delete.\n+\t(Target_powerpc::power10_stubs): Adjust.\n+\t(Target_powerpc::has_localentry0): New accessor.\n+\t(ld_0_11): New constant.\n+\t(glink_eh_frame_fde_64v1, glink_eh_frame_fde_64v2): Adjust.\n+\t(glink_eh_frame_fde_64v2_localentry0): New.\n+\t(Output_data_glink::pltresolve_size): Update.\n+\t(Output_data_glink::add_eh_frame): Use localentry0 version eh_frame.\n+\t(Output_data_glink::do_write): Move r2 save to start of ELFv2 stub\n+\tand only emit for has_localentry0.  Don't use r2 in the stub.\n+\t(Target_powerpc::Scan::local, global): Adjust for\n+\tset_power10_relocs renaming.\n+\t(Target_powerpc::scan_relocs): Warn and reset plt_localentry0_.\n+\n 2020-09-24  Alan Modra  <amodra@gmail.com>\n \n \t* powerpc.cc (Target_powerpc::Relocate::relocate): Don't skip"
    },
    {
      "sha": "adbc120c14a23cc19068a01aa072c3701f6c61c3",
      "filename": "gold/powerpc.cc",
      "status": "modified",
      "additions": 62,
      "deletions": 20,
      "changes": 82,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/63e5eea234c2bd2c7ce7dc921c71b22bc4fd0d6b/gold/powerpc.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/63e5eea234c2bd2c7ce7dc921c71b22bc4fd0d6b/gold/powerpc.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/powerpc.cc?ref=63e5eea234c2bd2c7ce7dc921c71b22bc4fd0d6b",
      "patch": "@@ -647,7 +647,7 @@ class Target_powerpc : public Sized_target<size, big_endian>\n       glink_(NULL), rela_dyn_(NULL), copy_relocs_(),\n       tlsld_got_offset_(-1U),\n       stub_tables_(), branch_lookup_table_(), branch_info_(), tocsave_loc_(),\n-      power10_stubs_(false), plt_thread_safe_(false), plt_localentry0_(false),\n+      power10_relocs_(false), plt_thread_safe_(false), plt_localentry0_(false),\n       plt_localentry0_init_(false), has_localentry0_(false),\n       has_tls_get_addr_opt_(false),\n       tprel_opt_(parameters->options().tls_optimize()),\n@@ -1079,16 +1079,18 @@ class Target_powerpc : public Sized_target<size, big_endian>\n     sym->set_dynsym_index(-1U);\n   }\n \n+  void\n+  set_power10_relocs()\n+  {\n+      this->power10_relocs_ = true;\n+  }\n+\n   bool\n   power10_stubs() const\n-  { return this->power10_stubs_; }\n-\n-  void\n-  set_power10_stubs()\n   {\n-    if (parameters->options().power10_stubs_enum()\n-\t!= General_options::POWER10_STUBS_NO)\n-      this->power10_stubs_ = true;\n+    return (this->power10_relocs_\n+\t    && (parameters->options().power10_stubs_enum()\n+\t\t!= General_options::POWER10_STUBS_NO));\n   }\n \n   bool\n@@ -1106,6 +1108,10 @@ class Target_powerpc : public Sized_target<size, big_endian>\n   plt_localentry0() const\n   { return this->plt_localentry0_; }\n \n+  bool\n+  has_localentry0() const\n+  { return this->has_localentry0_; }\n+\n   void\n   set_has_localentry0()\n   {\n@@ -1705,7 +1711,7 @@ class Target_powerpc : public Sized_target<size, big_endian>\n   Branches branch_info_;\n   Tocsave_loc tocsave_loc_;\n \n-  bool power10_stubs_;\n+  bool power10_relocs_;\n   bool plt_thread_safe_;\n   bool plt_localentry0_;\n   bool plt_localentry0_init_;\n@@ -4190,6 +4196,7 @@ static const uint32_t cmpwi_11_0\t= 0x2c0b0000;\n static const uint32_t cror_15_15_15\t= 0x4def7b82;\n static const uint32_t cror_31_31_31\t= 0x4ffffb82;\n static const uint32_t ld_0_1\t\t= 0xe8010000;\n+static const uint32_t ld_0_11\t\t= 0xe80b0000;\n static const uint32_t ld_0_12\t\t= 0xe80c0000;\n static const uint32_t ld_2_1\t\t= 0xe8410000;\n static const uint32_t ld_2_2\t\t= 0xe8420000;\n@@ -4572,9 +4579,9 @@ static const unsigned char glink_eh_frame_fde_64v1[] =\n   0, 0, 0, 0,\t\t\t\t// Replaced with offset to .glink.\n   0, 0, 0, 0,\t\t\t\t// Replaced with size of .glink.\n   0,\t\t\t\t\t// Augmentation size.\n-  elfcpp::DW_CFA_advance_loc + 1,\n+  elfcpp::DW_CFA_advance_loc + 2,\n   elfcpp::DW_CFA_register, 65, 12,\n-  elfcpp::DW_CFA_advance_loc + 5,\n+  elfcpp::DW_CFA_advance_loc + 4,\n   elfcpp::DW_CFA_restore_extended, 65\n };\n \n@@ -4584,9 +4591,20 @@ static const unsigned char glink_eh_frame_fde_64v2[] =\n   0, 0, 0, 0,\t\t\t\t// Replaced with offset to .glink.\n   0, 0, 0, 0,\t\t\t\t// Replaced with size of .glink.\n   0,\t\t\t\t\t// Augmentation size.\n-  elfcpp::DW_CFA_advance_loc + 1,\n+  elfcpp::DW_CFA_advance_loc + 2,\n   elfcpp::DW_CFA_register, 65, 0,\n-  elfcpp::DW_CFA_advance_loc + 7,\n+  elfcpp::DW_CFA_advance_loc + 2,\n+  elfcpp::DW_CFA_restore_extended, 65\n+};\n+\n+static const unsigned char glink_eh_frame_fde_64v2_localentry0[] =\n+{\n+  0, 0, 0, 0,\t\t\t\t// Replaced with offset to .glink.\n+  0, 0, 0, 0,\t\t\t\t// Replaced with size of .glink.\n+  0,\t\t\t\t\t// Augmentation size.\n+  elfcpp::DW_CFA_advance_loc + 3,\n+  elfcpp::DW_CFA_register, 65, 0,\n+  elfcpp::DW_CFA_advance_loc + 2,\n   elfcpp::DW_CFA_restore_extended, 65\n };\n \n@@ -5525,7 +5543,8 @@ class Output_data_glink : public Output_section_data\n   {\n     if (size == 64)\n       return (8\n-\t      + (this->targ_->abiversion() < 2 ? 11 * 4 : 14 * 4));\n+\t      + (this->targ_->abiversion() < 2 ? 11 * 4\n+\t\t : this->targ_->has_localentry0() ? 14 * 4 : 13 * 4));\n     return 16 * 4;\n   }\n \n@@ -5568,6 +5587,12 @@ Output_data_glink<size, big_endian>::add_eh_frame(Layout* layout)\n \t\t\t\t     sizeof (Eh_cie<64>::eh_frame_cie),\n \t\t\t\t     glink_eh_frame_fde_64v1,\n \t\t\t\t     sizeof (glink_eh_frame_fde_64v1));\n+      else if (this->targ_->has_localentry0())\n+\tlayout->add_eh_frame_for_plt(this,\n+\t\t\t\t     Eh_cie<64>::eh_frame_cie,\n+\t\t\t\t     sizeof (Eh_cie<64>::eh_frame_cie),\n+\t\t\t\t     glink_eh_frame_fde_64v2_localentry0,\n+\t\t\t\t     sizeof (glink_eh_frame_fde_64v2));\n       else\n \tlayout->add_eh_frame_for_plt(this,\n \t\t\t\t     Eh_cie<64>::eh_frame_cie,\n@@ -6798,15 +6823,25 @@ Output_data_glink<size, big_endian>::do_write(Output_file* of)\n \t    }\n \t  else\n \t    {\n+\t      if (this->targ_->has_localentry0())\n+\t\t{\n+\t\t  write_insn<big_endian>(p, std_2_1 + 24),\tp += 4;\n+\t\t}\n \t      write_insn<big_endian>(p, mflr_0),\t\tp += 4;\n \t      write_insn<big_endian>(p, bcl_20_31),\t\tp += 4;\n \t      write_insn<big_endian>(p, mflr_11),\t\tp += 4;\n-\t      write_insn<big_endian>(p, std_2_1 + 24),\t\tp += 4;\n-\t      write_insn<big_endian>(p, ld_2_11 + l(-16)),\tp += 4;\n \t      write_insn<big_endian>(p, mtlr_0),\t\tp += 4;\n+\t      if (this->targ_->has_localentry0())\n+\t\t{\n+\t\t  write_insn<big_endian>(p, ld_0_11 + l(-20)),\tp += 4;\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  write_insn<big_endian>(p, ld_0_11 + l(-16)),\tp += 4;\n+\t\t}\n \t      write_insn<big_endian>(p, sub_12_12_11),\t\tp += 4;\n-\t      write_insn<big_endian>(p, add_11_2_11),\t\tp += 4;\n-\t      write_insn<big_endian>(p, addi_0_12 + l(-48)),\tp += 4;\n+\t      write_insn<big_endian>(p, add_11_0_11),\t\tp += 4;\n+\t      write_insn<big_endian>(p, addi_0_12 + l(-44)),\tp += 4;\n \t      write_insn<big_endian>(p, ld_12_11 + 0),\t\tp += 4;\n \t      write_insn<big_endian>(p, srdi_0_0_2),\t\tp += 4;\n \t      write_insn<big_endian>(p, mtctr_12),\t\tp += 4;\n@@ -8451,7 +8486,7 @@ Target_powerpc<size, big_endian>::Scan::local(\n     case elfcpp::R_PPC64_GOT_TLSLD_PCREL34:\n     case elfcpp::R_PPC64_GOT_DTPREL_PCREL34:\n     case elfcpp::R_PPC64_GOT_TPREL_PCREL34:\n-      target->set_power10_stubs();\n+      target->set_power10_relocs();\n       break;\n     default:\n       break;\n@@ -9248,7 +9283,7 @@ Target_powerpc<size, big_endian>::Scan::global(\n     case elfcpp::R_PPC64_GOT_TLSLD_PCREL34:\n     case elfcpp::R_PPC64_GOT_DTPREL_PCREL34:\n     case elfcpp::R_PPC64_GOT_TPREL_PCREL34:\n-      target->set_power10_stubs();\n+      target->set_power10_relocs();\n       break;\n     default:\n       break;\n@@ -9590,6 +9625,13 @@ Target_powerpc<size, big_endian>::scan_relocs(\n     needs_special_offset_handling,\n     local_symbol_count,\n     plocal_symbols);\n+\n+  if (this->plt_localentry0_ && this->power10_relocs_)\n+    {\n+      gold_warning(_(\"--plt-localentry is incompatible with \"\n+\t\t     \"power10 pc-relative code\"));\n+      this->plt_localentry0_ = false;\n+    }\n }\n \n // Functor class for processing the global symbol table."
    }
  ]
}