{
  "sha": "c9ae58fe32e88914b67988d5bfde184f79c7070f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzlhZTU4ZmUzMmU4ODkxNGI2Nzk4OGQ1YmZkZTE4NGY3OWM3MDcwZg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-03T21:41:43Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-04T08:50:33Z"
    },
    "message": "ubsan: m32r: left shift of negative value\n\ncpu/\n\t* m32r.cpu (f-disp8): Avoid left shift of negative values.\n\t(f-disp16, f-disp24): Likewise.\nopcodes/\n\t* m32r-ibld.c: Regenerate.",
    "tree": {
      "sha": "0309d33de137777438078077b3ed9fa1c8cec76d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0309d33de137777438078077b3ed9fa1c8cec76d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c9ae58fe32e88914b67988d5bfde184f79c7070f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c9ae58fe32e88914b67988d5bfde184f79c7070f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c9ae58fe32e88914b67988d5bfde184f79c7070f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c9ae58fe32e88914b67988d5bfde184f79c7070f/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5f57d4ecf51c2f420dae56dfb9fc525d1979ec7c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5f57d4ecf51c2f420dae56dfb9fc525d1979ec7c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5f57d4ecf51c2f420dae56dfb9fc525d1979ec7c"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 15,
    "deletions": 6
  },
  "files": [
    {
      "sha": "09311d15aa95c84d7fdf2d51ce1dff5db828dfe7",
      "filename": "cpu/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c9ae58fe32e88914b67988d5bfde184f79c7070f/cpu/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c9ae58fe32e88914b67988d5bfde184f79c7070f/cpu/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/cpu/ChangeLog?ref=c9ae58fe32e88914b67988d5bfde184f79c7070f",
      "patch": "@@ -1,3 +1,8 @@\n+2020-02-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* m32r.cpu (f-disp8): Avoid left shift of negative values.\n+\t(f-disp16, f-disp24): Likewise.\n+\n 2019-12-23  Alan Modra  <amodra@gmail.com>\n \n \t* iq2000.cpu (f-offset): Avoid left shift of negative values."
    },
    {
      "sha": "a2395259b5b543cb5b77c6865ffb42f6069f8f92",
      "filename": "cpu/m32r.cpu",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c9ae58fe32e88914b67988d5bfde184f79c7070f/cpu/m32r.cpu",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c9ae58fe32e88914b67988d5bfde184f79c7070f/cpu/m32r.cpu",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/cpu/m32r.cpu?ref=c9ae58fe32e88914b67988d5bfde184f79c7070f",
      "patch": "@@ -478,13 +478,13 @@\n (dnf f-hi16      \"high 16 bits\"        (SIGN-OPT) 16 16)\n (df f-disp8      \"disp8, slot unknown\" (PCREL-ADDR RELOC) 8 8 INT\n     ((value pc) (sra WI (sub WI value (and WI pc (const -4))) (const 2)))\n-    ((value pc) (add WI (sll WI value (const 2)) (and WI pc (const -4)))))\n+    ((value pc) (add WI (mul WI value (const 4)) (and WI pc (const -4)))))\n (df f-disp16     \"disp16\"              (PCREL-ADDR RELOC) 16 16 INT\n     ((value pc) (sra WI (sub WI value pc) (const 2)))\n-    ((value pc) (add WI (sll WI value (const 2)) pc)))\n+    ((value pc) (add WI (mul WI value (const 4)) pc)))\n (df f-disp24     \"disp24\"              (PCREL-ADDR RELOC) 8 24 INT\n     ((value pc) (sra WI (sub WI value pc) (const 2)))\n-    ((value pc) (add WI (sll WI value (const 2)) pc)))\n+    ((value pc) (add WI (mul WI value (const 4)) pc)))\n \n (dnf f-op23      \"op2.3\"               ()  9 3)\n (dnf f-op3       \"op3\"                 () 14 2)"
    },
    {
      "sha": "5dfb1fceb3295e7c2be7ca42960076ad872a5b52",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c9ae58fe32e88914b67988d5bfde184f79c7070f/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c9ae58fe32e88914b67988d5bfde184f79c7070f/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=c9ae58fe32e88914b67988d5bfde184f79c7070f",
      "patch": "@@ -1,3 +1,7 @@\n+2020-01-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* m32r-ibld.c: Regenerate.\n+\n 2020-01-04  Alan Modra  <amodra@gmail.com>\n \n \t* cr16-dis.c (cr16_match_opcode): Avoid shift left of signed value."
    },
    {
      "sha": "8d5ce60db6d45db8244e03c7378a31eee992f351",
      "filename": "opcodes/m32r-ibld.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c9ae58fe32e88914b67988d5bfde184f79c7070f/opcodes/m32r-ibld.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c9ae58fe32e88914b67988d5bfde184f79c7070f/opcodes/m32r-ibld.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/m32r-ibld.c?ref=c9ae58fe32e88914b67988d5bfde184f79c7070f",
      "patch": "@@ -723,23 +723,23 @@ m32r_cgen_extract_operand (CGEN_CPU_DESC cd,\n       {\n         long value;\n         length = extract_normal (cd, ex_info, insn_value, 0|(1<<CGEN_IFLD_SIGNED)|(1<<CGEN_IFLD_RELOC)|(1<<CGEN_IFLD_PCREL_ADDR), 0, 16, 16, 32, total_length, pc, & value);\n-        value = ((((value) << (2))) + (pc));\n+        value = ((((value) * (4))) + (pc));\n         fields->f_disp16 = value;\n       }\n       break;\n     case M32R_OPERAND_DISP24 :\n       {\n         long value;\n         length = extract_normal (cd, ex_info, insn_value, 0|(1<<CGEN_IFLD_SIGNED)|(1<<CGEN_IFLD_RELOC)|(1<<CGEN_IFLD_PCREL_ADDR), 0, 8, 24, 32, total_length, pc, & value);\n-        value = ((((value) << (2))) + (pc));\n+        value = ((((value) * (4))) + (pc));\n         fields->f_disp24 = value;\n       }\n       break;\n     case M32R_OPERAND_DISP8 :\n       {\n         long value;\n         length = extract_normal (cd, ex_info, insn_value, 0|(1<<CGEN_IFLD_SIGNED)|(1<<CGEN_IFLD_RELOC)|(1<<CGEN_IFLD_PCREL_ADDR), 0, 8, 8, 32, total_length, pc, & value);\n-        value = ((((value) << (2))) + (((pc) & (-4))));\n+        value = ((((value) * (4))) + (((pc) & (-4))));\n         fields->f_disp8 = value;\n       }\n       break;"
    }
  ]
}