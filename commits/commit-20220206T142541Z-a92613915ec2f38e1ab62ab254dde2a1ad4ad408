{
  "sha": "a92613915ec2f38e1ab62ab254dde2a1ad4ad408",
  "node_id": "C_kwDOANOeidoAKGE5MjYxMzkxNWVjMmYzOGUxYWI2MmFiMjU0ZGRlMmExYWQ0YWQ0MDg",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2022-02-04T19:04:15Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2022-02-06T14:25:41Z"
    },
    "message": "ld: Add emultempl/emulation.em\n\nAdd emultempl/emulation.em to define ld_${EMULATION_NAME}_emulation so\nthat new emulation hooks can be added easily.\n\n\t* emultempl/aix.em (LDEMUL_AFTER_OPEN): New.\n\t(LDEMUL_SET_OUTPUT_ARCH): Likewise.\n\t(LDEMUL_CHOOSE_TARGET): Likewise.\n\t(LDEMUL_BEFORE_ALLOCATION): Likewise.\n\t(LDEMUL_CREATE_OUTPUT_SECTION_STATEMENTS): Likewise.\n\t(LDEMUL_OPEN_DYNAMIC_ARCHIVE): Likewise.\n\t(LDEMUL_PARSE_ARGS): Likewise.\n\t(LDEMUL_ADD_OPTIONS): Likewise.\n\t(LDEMUL_HANDLE_OPTION): Likewise.\n\t(LDEMUL_UNRECOGNIZED_FILE): Likewise.\n\t(LDEMUL_PRINT_SYMBOL): Likewise.\n\t(ld_${EMULATION_NAME}_emulation): Removed.\n\tSource ${srcdir}/emultempl/emulation.em.\n\t* emultempl/beos.em (gld_${EMULATION_NAME}_before_parse):\n\tRenamed to ...\n\t(gld${EMULATION_NAME}_before_parse): This.\n\t(gld_${EMULATION_NAME}_set_symbols): Renamed to ...\n\t(gld${EMULATION_NAME}_set_symbols): This.\n\t(gld_${EMULATION_NAME}_after_open): Renamed to ...\n\t(gld${EMULATION_NAME}_after_open): This.\n\t(gld_${EMULATION_NAME}_before_allocation): Renamed to ...\n\t(gld${EMULATION_NAME}_before_allocation): This.\n\t(gld_${EMULATION_NAME}_get_script): Renamed to ...\n\t(gld${EMULATION_NAME}_get_script): This.\n\t(LDEMUL_AFTER_OPEN): New.\n\t(LDEMUL_BEFORE_ALLOCATION): Likewise.\n\t(LDEMUL_PLACE_ORPHAN): Likewise.\n\t(LDEMUL_SET_SYMBOLS): Likewise.\n\t(LDEMUL_ADD_OPTIONS): Likewise.\n\t(LDEMUL_HANDLE_OPTION): Likewise.\n\t(ld_${EMULATION_NAME}_emulation): Removed.\n\tSource ${srcdir}/emultempl/emulation.em.\n\t* emultempl/elf.em (LDEMUL_AFTER_PARSE): New.\n\t(LDEMUL_AFTER_OPEN): Likewise.\n\t(LDEMUL_BEFORE_PLACE_ORPHANS): Likewise.\n\t(LDEMUL_AFTER_ALLOCATION): Likewise.\n\t(LDEMUL_SET_OUTPUT_ARCH): Likewise.\n\t(LDEMUL_BEFORE_ALLOCATION): Likewise.\n\t(LDEMUL_OPEN_DYNAMIC_ARCHIVE): Likewise.\n\t(LDEMUL_PLACE_ORPHAN): Likewise.\n\t(LDEMUL_ADD_OPTIONS): Likewise.\n\t(LDEMUL_HANDLE_OPTION): Likewise.\n\t(LDEMUL_LIST_OPTIONS): Likewise.\n\t(LDEMUL_UNRECOGNIZED_FILE): Likewise.\n\t(ld_${EMULATION_NAME}_emulation): Removed.\n\tSource ${srcdir}/emultempl/emulation.em.\n\t* emultempl/emulation.em: New file.\n\t* emultempl/generic.em (ld_${EMULATION_NAME}_emulation): Removed.\n\tSource ${srcdir}/emultempl/emulation.em.\n\t* emultempl/msp430.em (LDEMUL_AFTER_OPEN): New.\n\t(LDEMUL_AFTER_ALLOCATION): Likewise.\n\t(LDEMUL_PLACE_ORPHAN): Likewise.\n\t(LDEMUL_FINISH): Likewise.\n\t(LDEMUL_ADD_OPTIONS): Likewise.\n\t(LDEMUL_HANDLE_OPTION): Likewise.\n\t(LDEMUL_LIST_OPTIONS): Likewise.\n\t(ld_${EMULATION_NAME}_emulation): Removed.\n\tSource ${srcdir}/emultempl/emulation.em.\n\t* emultempl/pe.em (gld_${EMULATION_NAME}_before_parse): Renamed\n\tto ...\n\t(gld${EMULATION_NAME}_before_parse): This.\n\t(gld_${EMULATION_NAME}_list_options): Renamed to ...\n\t(gld${EMULATION_NAME}_list_options): This.\n\t(gld_${EMULATION_NAME}_set_symbols): Renamed to ...\n\t(gld${EMULATION_NAME}_set_symbols): This.\n\t(gld_${EMULATION_NAME}_after_parse): Renamed to ...\n\t(gld${EMULATION_NAME}_after_parse): This.\n\t(gld_${EMULATION_NAME}_after_open): Renamed to ...\n\t(gld${EMULATION_NAME}_after_open): This.\n\t(gld_${EMULATION_NAME}_before_allocation): Renamed to ...\n\t(gld${EMULATION_NAME}_before_allocation): This.\n\t(gld_${EMULATION_NAME}_unrecognized_file): Renamed to ...\n\t(gld${EMULATION_NAME}_unrecognized_file): This.\n\t(gld_${EMULATION_NAME}_recognized_file): Renamed to ...\n\t(gld${EMULATION_NAME}_recognized_file): This.\n\t(gld_${EMULATION_NAME}_finish): Renamed to ...\n\t(gld${EMULATION_NAME}_finish): This.\n\t(gld_${EMULATION_NAME}_place_orphan): Renamed to ...\n\t(gld${EMULATION_NAME}_place_orphan): This.\n\t(gld_${EMULATION_NAME}_open_dynamic_archive): Renamed to ...\n\t(gld${EMULATION_NAME}_open_dynamic_archive): This.\n\t(gld_${EMULATION_NAME}_find_potential_libraries): Renamed to ...\n\t(gld${EMULATION_NAME}_find_potential_libraries): This.\n\t(gld_${EMULATION_NAME}_get_script): Renamed to ...\n\t(gld${EMULATION_NAME}_get_script): This.\n\t(LDEMUL_AFTER_PARSE): New.\n\t(LDEMUL_AFTER_OPEN): Likewise.\n\t(LDEMUL_BEFORE_ALLOCATION): Likewise.\n\t(LDEMUL_FINISH=): Likewise.\n\t(LDEMUL_OPEN_DYNAMIC_ARCHIVE): Likewise.\n\t(LDEMUL_PLACE_ORPHAN): Likewise.\n\t(LDEMUL_SET_SYMBOLS): Likewise.\n\t(LDEMUL_ADD_OPTIONS): Likewise.\n\t(LDEMUL_HANDLE_OPTION): Likewise.\n\t(LDEMUL_UNRECOGNIZED_FILE): Likewise.\n\t(LDEMUL_LIST_OPTIONS): Likewise.\n\t(LDEMUL_RECOGNIZED_FILE): Likewise.\n\t(LDEMUL_FIND_POTENTIAL_LIBRARIES): Likewise.\n\t(ld_${EMULATION_NAME}_emulation): Removed.\n\tSource ${srcdir}/emultempl/emulation.em.\n\t* emultempl/pep.em (gld_${EMULATION_NAME}_before_parse): Renamed\n\tto ...\n\t(gld${EMULATION_NAME}_before_parse): This.\n\t(gld_${EMULATION_NAME}_list_options): Renamed to ...\n\t(gld${EMULATION_NAME}_list_options): This.\n\t(gld_${EMULATION_NAME}_set_symbols): Renamed to ...\n\t(gld${EMULATION_NAME}_set_symbols): This.\n\t(gld_${EMULATION_NAME}_after_parse): Renamed to ...\n\t(gld${EMULATION_NAME}_after_parse): This.\n\t(gld_${EMULATION_NAME}_after_open): Renamed to ...\n\t(gld${EMULATION_NAME}_after_open): This.\n\t(gld_${EMULATION_NAME}_before_allocation): Renamed to ...\n\t(gld${EMULATION_NAME}_before_allocation): This.\n\t(gld_${EMULATION_NAME}_unrecognized_file): Renamed to ...\n\t(gld${EMULATION_NAME}_unrecognized_file): This.\n\t(gld_${EMULATION_NAME}_recognized_file): Renamed to ...\n\t(gld${EMULATION_NAME}_recognized_file): This.\n\t(gld_${EMULATION_NAME}_finish): Renamed to ...\n\t(gld${EMULATION_NAME}_finish): This.\n\t(gld_${EMULATION_NAME}_place_orphan): Renamed to ...\n\t(gld${EMULATION_NAME}_place_orphan): This.\n\t(gld_${EMULATION_NAME}_open_dynamic_archive): Renamed to ...\n\t(gld${EMULATION_NAME}_open_dynamic_archive): This.\n\t(gld_${EMULATION_NAME}_find_potential_libraries): Renamed to ...\n\t(gld${EMULATION_NAME}_find_potential_libraries): This.\n\t(gld_${EMULATION_NAME}_get_script): Renamed to ...\n\t(gld${EMULATION_NAME}_get_script): This.\n\t(LDEMUL_AFTER_PARSE): New.\n\t(LDEMUL_AFTER_OPEN): Likewise.\n\t(LDEMUL_BEFORE_ALLOCATION): Likewise.\n\t(LDEMUL_FINISH=): Likewise.\n\t(LDEMUL_OPEN_DYNAMIC_ARCHIVE): Likewise.\n\t(LDEMUL_PLACE_ORPHAN): Likewise.\n\t(LDEMUL_SET_SYMBOLS): Likewise.\n\t(LDEMUL_ADD_OPTIONS): Likewise.\n\t(LDEMUL_HANDLE_OPTION): Likewise.\n\t(LDEMUL_UNRECOGNIZED_FILE): Likewise.\n\t(LDEMUL_LIST_OPTIONS): Likewise.\n\t(LDEMUL_RECOGNIZED_FILE): Likewise.\n\t(LDEMUL_FIND_POTENTIAL_LIBRARIES): Likewise.\n\t(ld_${EMULATION_NAME}_emulation): Removed.\n\tSource ${srcdir}/emultempl/emulation.em.\n\t* emultempl/ticoff.em (gld_${EMULATION_NAME}_list_options):\n\tRenamed to ...\n\t(gld${EMULATION_NAME}_list_options): This.\n\t(gld_${EMULATION_NAME}_before_parse): Renamed to ...\n\t(gld_${EMULATION_NAME}_get_script): Renamed to ...\n\t(gld${EMULATION_NAME}_get_script): This.\n\t(LDEMUL_ADD_OPTIONS): New.\n\t(LDEMUL_HANDLE_OPTION): Likewise.\n\t(LDEMUL_LIST_OPTIONS): Likewise.\n\t(ld_${EMULATION_NAME}_emulation): Removed.\n\tSource ${srcdir}/emultempl/emulation.em.\n\t* emultempl/vanilla.em (LDEMUL_BEFORE_PARSE): New.\n\t(LDEMUL_SET_OUTPUT_ARCH): Likewise.\n\t(LDEMUL_GET_SCRIPT): Likewise.\n\t(EMULATION_NAME): Likewise.\n\t(OUTPUT_FORMAT): Likewise.\n\t(ld_vanilla_emulation): Removed.\n\tSource ${srcdir}/emultempl/emulation.em.",
    "tree": {
      "sha": "053d8739de7d55b88c7eea6e80656eddbfadedac",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/053d8739de7d55b88c7eea6e80656eddbfadedac"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a92613915ec2f38e1ab62ab254dde2a1ad4ad408",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a92613915ec2f38e1ab62ab254dde2a1ad4ad408",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a92613915ec2f38e1ab62ab254dde2a1ad4ad408",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "026fbfa60eb7e94b4c7a6f340d433acb1eb7b7ad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/026fbfa60eb7e94b4c7a6f340d433acb1eb7b7ad",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/026fbfa60eb7e94b4c7a6f340d433acb1eb7b7ad"
    }
  ],
  "stats": {
    "total": 537,
    "additions": 165,
    "deletions": 372
  },
  "files": [
    {
      "sha": "6807aaee1c84274b3ee5b63029c2b300061dbb64",
      "filename": "ld/emultempl/aix.em",
      "status": "modified",
      "additions": 14,
      "deletions": 35,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/aix.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/aix.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/aix.em?ref=a92613915ec2f38e1ab62ab254dde2a1ad4ad408",
      "patch": "@@ -1601,39 +1601,18 @@ gld${EMULATION_NAME}_print_symbol (struct bfd_link_hash_entry *hash_entry,\n \n   return true;\n }\n-\n-struct ld_emulation_xfer_struct ld_${EMULATION_NAME}_emulation = {\n-  gld${EMULATION_NAME}_before_parse,\n-  syslib_default,\n-  hll_default,\n-  after_parse_default,\n-  gld${EMULATION_NAME}_after_open,\n-  after_check_relocs_default,\n-  before_place_orphans_default,\n-  after_allocation_default,\n-  gld${EMULATION_NAME}_set_output_arch,\n-  gld${EMULATION_NAME}_choose_target,\n-  gld${EMULATION_NAME}_before_allocation,\n-  gld${EMULATION_NAME}_get_script,\n-  \"${EMULATION_NAME}\",\n-  \"${OUTPUT_FORMAT}\",\n-  finish_default,\n-  gld${EMULATION_NAME}_create_output_section_statements,\n-  gld${EMULATION_NAME}_open_dynamic_archive,\n-  0,\t\t\t\t/* place_orphan */\n-  0,\t\t\t\t/* set_symbols */\n-  gld${EMULATION_NAME}_parse_args,\n-  gld${EMULATION_NAME}_add_options,\n-  gld${EMULATION_NAME}_handle_option,\n-  gld${EMULATION_NAME}_unrecognized_file,\n-  NULL,\t\t\t\t/* list_options */\n-  NULL,\t\t\t\t/* recognized_file */\n-  NULL,\t\t\t\t/* find potential_libraries */\n-  NULL,\t\t\t\t/* new_vers_pattern */\n-  NULL,\t\t\t\t/* extra_map_file_text */\n-  ${LDEMUL_EMIT_CTF_EARLY-NULL},\n-  ${LDEMUL_ACQUIRE_STRINGS_FOR_CTF-NULL},\n-  ${LDEMUL_NEW_DYNSYM_FOR_CTF-NULL},\n-  gld${EMULATION_NAME}_print_symbol\n-};\n EOF\n+\n+LDEMUL_AFTER_OPEN=gld${EMULATION_NAME}_after_open\n+LDEMUL_SET_OUTPUT_ARCH=gld${EMULATION_NAME}_set_output_arch\n+LDEMUL_CHOOSE_TARGET=gld${EMULATION_NAME}_choose_target\n+LDEMUL_BEFORE_ALLOCATION=gld${EMULATION_NAME}_before_allocation\n+LDEMUL_CREATE_OUTPUT_SECTION_STATEMENTS=gld${EMULATION_NAME}_create_output_section_statements\n+LDEMUL_OPEN_DYNAMIC_ARCHIVE=gld${EMULATION_NAME}_open_dynamic_archive\n+LDEMUL_PARSE_ARGS=gld${EMULATION_NAME}_parse_args\n+LDEMUL_ADD_OPTIONS=gld${EMULATION_NAME}_add_options\n+LDEMUL_HANDLE_OPTION=gld${EMULATION_NAME}_handle_option\n+LDEMUL_UNRECOGNIZED_FILE=gld${EMULATION_NAME}_unrecognized_file\n+LDEMUL_PRINT_SYMBOL=gld${EMULATION_NAME}_print_symbol\n+\n+source_em ${srcdir}/emultempl/emulation.em"
    },
    {
      "sha": "93e85a792a3c231c48248fc9b635b7df7d9bf771",
      "filename": "ld/emultempl/beos.em",
      "status": "modified",
      "additions": 12,
      "deletions": 43,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/beos.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/beos.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/beos.em?ref=a92613915ec2f38e1ab62ab254dde2a1ad4ad408",
      "patch": "@@ -62,7 +62,7 @@ static int dll;\n extern const char *output_filename;\n \n static void\n-gld_${EMULATION_NAME}_before_parse (void)\n+gld${EMULATION_NAME}_before_parse (void)\n {\n   ldfile_set_output_arch (\"${OUTPUT_ARCH}\", bfd_arch_`echo ${ARCH} | sed -e 's/:.*//'`);\n   output_filename = \"a.exe\";\n@@ -322,7 +322,7 @@ gld${EMULATION_NAME}_handle_option (int optc)\n    read.  */\n \n static void\n-gld_${EMULATION_NAME}_set_symbols (void)\n+gld${EMULATION_NAME}_set_symbols (void)\n {\n   /* Run through and invent symbols for all the\n      names and insert the defaults. */\n@@ -372,7 +372,7 @@ gld_${EMULATION_NAME}_set_symbols (void)\n }\n \n static void\n-gld_${EMULATION_NAME}_after_open (void)\n+gld${EMULATION_NAME}_after_open (void)\n {\n   after_open_default ();\n \n@@ -606,7 +606,7 @@ sort_sections (lang_statement_union_type *s)\n }\n \n static void\n-gld_${EMULATION_NAME}_before_allocation (void)\n+gld${EMULATION_NAME}_before_allocation (void)\n {\n #ifdef TARGET_IS_armpe\n   /* FIXME: we should be able to set the size of the interworking stub\n@@ -710,7 +710,7 @@ gld${EMULATION_NAME}_place_orphan (asection *s,\n }\n \f\n static char *\n-gld_${EMULATION_NAME}_get_script (int *isfile)\n+gld${EMULATION_NAME}_get_script (int *isfile)\n EOF\n \n if test x\"$COMPILE_IN\" = xyes\n@@ -759,42 +759,11 @@ fragment <<EOF\n EOF\n fi\n \n-fragment <<EOF\n-\n+LDEMUL_AFTER_OPEN=gld${EMULATION_NAME}_after_open\n+LDEMUL_BEFORE_ALLOCATION=gld${EMULATION_NAME}_before_allocation\n+LDEMUL_PLACE_ORPHAN=gld${EMULATION_NAME}_place_orphan\n+LDEMUL_SET_SYMBOLS=gld${EMULATION_NAME}_set_symbols\n+LDEMUL_ADD_OPTIONS=gld${EMULATION_NAME}_add_options\n+LDEMUL_HANDLE_OPTION=gld${EMULATION_NAME}_handle_option\n \n-struct ld_emulation_xfer_struct ld_${EMULATION_NAME}_emulation =\n-{\n-  gld_${EMULATION_NAME}_before_parse,\n-  syslib_default,\n-  hll_default,\n-  after_parse_default,\n-  gld_${EMULATION_NAME}_after_open,\n-  after_check_relocs_default,\n-  before_place_orphans_default,\n-  after_allocation_default,\n-  set_output_arch_default,\n-  ldemul_default_target,\n-  gld_${EMULATION_NAME}_before_allocation,\n-  gld_${EMULATION_NAME}_get_script,\n-  \"${EMULATION_NAME}\",\n-  \"${OUTPUT_FORMAT}\",\n-  finish_default,\n-  NULL, /* create output section statements */\n-  NULL, /* open dynamic archive */\n-  gld${EMULATION_NAME}_place_orphan,\n-  gld_${EMULATION_NAME}_set_symbols,\n-  NULL, /* parse_args */\n-  gld${EMULATION_NAME}_add_options,\n-  gld${EMULATION_NAME}_handle_option,\n-  NULL,\t/* unrecognized file */\n-  NULL,\t/* list options */\n-  NULL,\t/* recognized file */\n-  NULL,\t/* find_potential_libraries */\n-  NULL,\t/* new_vers_pattern */\n-  NULL,\t/* extra_map_file_text */\n-  ${LDEMUL_EMIT_CTF_EARLY-NULL},\n-  ${LDEMUL_ACQUIRE_STRINGS_FOR_CTF-NULL},\n-  ${LDEMUL_NEW_DYNSYM_FOR_CTF-NULL},\n-  ${LDEMUL_PRINT_SYMBOL-NULL}\n-};\n-EOF\n+source_em ${srcdir}/emultempl/emulation.em"
    },
    {
      "sha": "55dd20f0b028c596817cdf38895b87dd5b8e8f88",
      "filename": "ld/emultempl/elf.em",
      "status": "modified",
      "additions": 14,
      "deletions": 38,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/elf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/elf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/elf.em?ref=a92613915ec2f38e1ab62ab254dde2a1ad4ad408",
      "patch": "@@ -909,41 +909,17 @@ EOF\n fi\n fi\n \n-fragment <<EOF\n-\n-struct ld_emulation_xfer_struct ld_${EMULATION_NAME}_emulation =\n-{\n-  ${LDEMUL_BEFORE_PARSE-gld${EMULATION_NAME}_before_parse},\n-  ${LDEMUL_SYSLIB-syslib_default},\n-  ${LDEMUL_HLL-hll_default},\n-  ${LDEMUL_AFTER_PARSE-ldelf_after_parse},\n-  ${LDEMUL_AFTER_OPEN-gld${EMULATION_NAME}_after_open},\n-  ${LDEMUL_AFTER_CHECK_RELOCS-after_check_relocs_default},\n-  ${LDEMUL_BEFORE_PLACE_ORPHANS-ldelf_before_place_orphans},\n-  ${LDEMUL_AFTER_ALLOCATION-gld${EMULATION_NAME}_after_allocation},\n-  ${LDEMUL_SET_OUTPUT_ARCH-ldelf_set_output_arch},\n-  ${LDEMUL_CHOOSE_TARGET-ldemul_default_target},\n-  ${LDEMUL_BEFORE_ALLOCATION-gld${EMULATION_NAME}_before_allocation},\n-  ${LDEMUL_GET_SCRIPT-gld${EMULATION_NAME}_get_script},\n-  \"${EMULATION_NAME}\",\n-  \"${OUTPUT_FORMAT}\",\n-  ${LDEMUL_FINISH-finish_default},\n-  ${LDEMUL_CREATE_OUTPUT_SECTION_STATEMENTS-NULL},\n-  ${LDEMUL_OPEN_DYNAMIC_ARCHIVE-ldelf_open_dynamic_archive},\n-  ${LDEMUL_PLACE_ORPHAN-ldelf_place_orphan},\n-  ${LDEMUL_SET_SYMBOLS-NULL},\n-  ${LDEMUL_PARSE_ARGS-NULL},\n-  gld${EMULATION_NAME}_add_options,\n-  gld${EMULATION_NAME}_handle_option,\n-  ${LDEMUL_UNRECOGNIZED_FILE-NULL},\n-  ${LDEMUL_LIST_OPTIONS-${gld_list_options}},\n-  ${LDEMUL_RECOGNIZED_FILE-ldelf_load_symbols},\n-  ${LDEMUL_FIND_POTENTIAL_LIBRARIES-NULL},\n-  ${LDEMUL_NEW_VERS_PATTERN-NULL},\n-  ${LDEMUL_EXTRA_MAP_FILE_TEXT-NULL},\n-  ${LDEMUL_EMIT_CTF_EARLY-NULL},\n-  ${LDEMUL_ACQUIRE_STRINGS_FOR_CTF-NULL},\n-  ${LDEMUL_NEW_DYNSYM_FOR_CTF-NULL},\n-  ${LDEMUL_PRINT_SYMBOL-NULL}\n-};\n-EOF\n+LDEMUL_AFTER_PARSE=${LDEMUL_AFTER_PARSE-ldelf_after_parse}\n+LDEMUL_AFTER_OPEN=${LDEMUL_AFTER_OPEN-gld${EMULATION_NAME}_after_open}\n+LDEMUL_BEFORE_PLACE_ORPHANS=${LDEMUL_BEFORE_PLACE_ORPHANS-ldelf_before_place_orphans}\n+LDEMUL_AFTER_ALLOCATION=${LDEMUL_AFTER_ALLOCATION-gld${EMULATION_NAME}_after_allocation}\n+LDEMUL_SET_OUTPUT_ARCH=${LDEMUL_SET_OUTPUT_ARCH-ldelf_set_output_arch}\n+LDEMUL_BEFORE_ALLOCATION=${LDEMUL_BEFORE_ALLOCATION-gld${EMULATION_NAME}_before_allocation}\n+LDEMUL_OPEN_DYNAMIC_ARCHIVE=${LDEMUL_OPEN_DYNAMIC_ARCHIVE-ldelf_open_dynamic_archive}\n+LDEMUL_PLACE_ORPHAN=${LDEMUL_PLACE_ORPHAN-ldelf_place_orphan}\n+LDEMUL_ADD_OPTIONS=gld${EMULATION_NAME}_add_options\n+LDEMUL_HANDLE_OPTION=gld${EMULATION_NAME}_handle_option\n+LDEMUL_LIST_OPTIONS=${LDEMUL_LIST_OPTIONS-${gld_list_options}}\n+LDEMUL_RECOGNIZED_FILE=${LDEMUL_RECOGNIZED_FILE-ldelf_load_symbols}\n+\n+source_em ${srcdir}/emultempl/emulation.em"
    },
    {
      "sha": "cfa6567ac2b7c4e7e61cb6f396087411fa84ba90",
      "filename": "ld/emultempl/emulation.em",
      "status": "added",
      "additions": 40,
      "deletions": 0,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/emulation.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/emulation.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/emulation.em?ref=a92613915ec2f38e1ab62ab254dde2a1ad4ad408",
      "patch": "@@ -0,0 +1,40 @@\n+# This shell script emits a C file. -*- C -*-\n+# It does some substitutions.\n+fragment <<EOF\n+\n+struct ld_emulation_xfer_struct ld_${EMULATION_NAME}_emulation =\n+{\n+  ${LDEMUL_BEFORE_PARSE-gld${EMULATION_NAME}_before_parse},\n+  ${LDEMUL_SYSLIB-syslib_default},\n+  ${LDEMUL_HLL-hll_default},\n+  ${LDEMUL_AFTER_PARSE-after_parse_default},\n+  ${LDEMUL_AFTER_OPEN-after_open_default},\n+  ${LDEMUL_AFTER_CHECK_RELOCS-after_check_relocs_default},\n+  ${LDEMUL_BEFORE_PLACE_ORPHANS-before_place_orphans_default},\n+  ${LDEMUL_AFTER_ALLOCATION-after_allocation_default},\n+  ${LDEMUL_SET_OUTPUT_ARCH-set_output_arch_default},\n+  ${LDEMUL_CHOOSE_TARGET-ldemul_default_target},\n+  ${LDEMUL_BEFORE_ALLOCATION-before_allocation_default},\n+  ${LDEMUL_GET_SCRIPT-gld${EMULATION_NAME}_get_script},\n+  \"${EMULATION_NAME}\",\n+  \"${OUTPUT_FORMAT}\",\n+  ${LDEMUL_FINISH-finish_default},\n+  ${LDEMUL_CREATE_OUTPUT_SECTION_STATEMENTS-NULL},\n+  ${LDEMUL_OPEN_DYNAMIC_ARCHIVE-NULL},\n+  ${LDEMUL_PLACE_ORPHAN-NULL},\n+  ${LDEMUL_SET_SYMBOLS-NULL},\n+  ${LDEMUL_PARSE_ARGS-NULL},\n+  ${LDEMUL_ADD_OPTIONS-NULL},\n+  ${LDEMUL_HANDLE_OPTION-NULL},\n+  ${LDEMUL_UNRECOGNIZED_FILE-NULL},\n+  ${LDEMUL_LIST_OPTIONS-NULL},\n+  ${LDEMUL_RECOGNIZED_FILE-NULL},\n+  ${LDEMUL_FIND_POTENTIAL_LIBRARIES-NULL},\n+  ${LDEMUL_NEW_VERS_PATTERN-NULL},\n+  ${LDEMUL_EXTRA_MAP_FILE_TEXT-NULL},\n+  ${LDEMUL_EMIT_CTF_EARLY-NULL},\n+  ${LDEMUL_ACQUIRE_STRINGS_FOR_CTF-NULL},\n+  ${LDEMUL_NEW_DYNSYM_FOR_CTF-NULL},\n+  ${LDEMUL_PRINT_SYMBOL-NULL}\n+};\n+EOF"
    },
    {
      "sha": "cecbb1c27280f8575413f2448ecc516d2ac07af8",
      "filename": "ld/emultempl/generic.em",
      "status": "modified",
      "additions": 1,
      "deletions": 38,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/generic.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/generic.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/generic.em?ref=a92613915ec2f38e1ab62ab254dde2a1ad4ad408",
      "patch": "@@ -128,41 +128,4 @@ EOF\n fi\n fi\n \n-fragment <<EOF\n-\n-struct ld_emulation_xfer_struct ld_${EMULATION_NAME}_emulation =\n-{\n-  ${LDEMUL_BEFORE_PARSE-gld${EMULATION_NAME}_before_parse},\n-  ${LDEMUL_SYSLIB-syslib_default},\n-  ${LDEMUL_HLL-hll_default},\n-  ${LDEMUL_AFTER_PARSE-after_parse_default},\n-  ${LDEMUL_AFTER_OPEN-after_open_default},\n-  ${LDEMUL_AFTER_CHECK_RELOCS-after_check_relocs_default},\n-  ${LDEMUL_BEFORE_PLACE_ORPHANS-before_place_orphans_default},\n-  ${LDEMUL_AFTER_ALLOCATION-after_allocation_default},\n-  ${LDEMUL_SET_OUTPUT_ARCH-set_output_arch_default},\n-  ${LDEMUL_CHOOSE_TARGET-ldemul_default_target},\n-  ${LDEMUL_BEFORE_ALLOCATION-before_allocation_default},\n-  ${LDEMUL_GET_SCRIPT-gld${EMULATION_NAME}_get_script},\n-  \"${EMULATION_NAME}\",\n-  \"${OUTPUT_FORMAT}\",\n-  ${LDEMUL_FINISH-finish_default},\n-  ${LDEMUL_CREATE_OUTPUT_SECTION_STATEMENTS-NULL},\n-  ${LDEMUL_OPEN_DYNAMIC_ARCHIVE-NULL},\n-  ${LDEMUL_PLACE_ORPHAN-NULL},\n-  ${LDEMUL_SET_SYMBOLS-NULL},\n-  ${LDEMUL_PARSE_ARGS-NULL},\n-  ${LDEMUL_ADD_OPTIONS-NULL},\n-  ${LDEMUL_HANDLE_OPTION-NULL},\n-  ${LDEMUL_UNRECOGNIZED_FILE-NULL},\n-  ${LDEMUL_LIST_OPTIONS-NULL},\n-  ${LDEMUL_RECOGNIZED_FILE-NULL},\n-  ${LDEMUL_FIND_POTENTIAL_LIBRARIES-NULL},\n-  ${LDEMUL_NEW_VERS_PATTERN-NULL},\n-  ${LDEMUL_EXTRA_MAP_FILE_TEXT-NULL},\n-  ${LDEMUL_EMIT_CTF_EARLY-NULL},\n-  ${LDEMUL_ACQUIRE_STRINGS_FOR_CTF-NULL},\n-  ${LDEMUL_NEW_DYNSYM_FOR_CTF-NULL},\n-  ${LDEMUL_PRINT_SYMBOL-NULL}\n-};\n-EOF\n+source_em ${srcdir}/emultempl/emulation.em"
    },
    {
      "sha": "f188b46b4aa9b48bfdf46e6f442285683b39a49e",
      "filename": "ld/emultempl/msp430.em",
      "status": "modified",
      "additions": 10,
      "deletions": 36,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/msp430.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/msp430.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/msp430.em?ref=a92613915ec2f38e1ab62ab254dde2a1ad4ad408",
      "patch": "@@ -905,43 +905,17 @@ gld${EMULATION_NAME}_finish (void)\n   finish_default ();\n   check_array_section_alignment ();\n }\n-\n-struct ld_emulation_xfer_struct ld_${EMULATION_NAME}_emulation =\n-{\n-  ${LDEMUL_BEFORE_PARSE-gld${EMULATION_NAME}_before_parse},\n-  ${LDEMUL_SYSLIB-syslib_default},\n-  ${LDEMUL_HLL-hll_default},\n-  ${LDEMUL_AFTER_PARSE-after_parse_default},\n-  msp430_elf_after_open,\n-  after_check_relocs_default,\n-  before_place_orphans_default,\n-  msp430_elf_after_allocation,\n-  ${LDEMUL_SET_OUTPUT_ARCH-set_output_arch_default},\n-  ${LDEMUL_CHOOSE_TARGET-ldemul_default_target},\n-  ${LDEMUL_BEFORE_ALLOCATION-before_allocation_default},\n-  ${LDEMUL_GET_SCRIPT-gld${EMULATION_NAME}_get_script},\n-  \"${EMULATION_NAME}\",\n-  \"${OUTPUT_FORMAT}\",\n-  gld${EMULATION_NAME}_finish,\n-  ${LDEMUL_CREATE_OUTPUT_SECTION_STATEMENTS-NULL},\n-  ${LDEMUL_OPEN_DYNAMIC_ARCHIVE-NULL},\n-  ${LDEMUL_PLACE_ORPHAN-gld${EMULATION_NAME}_place_orphan},\n-  ${LDEMUL_SET_SYMBOLS-NULL},\n-  ${LDEMUL_PARSE_ARGS-NULL},\n-  gld${EMULATION_NAME}_add_options,\n-  gld${EMULATION_NAME}_handle_option,\n-  ${LDEMUL_UNRECOGNIZED_FILE-NULL},\n-  gld${EMULATION_NAME}_list_options,\n-  ${LDEMUL_RECOGNIZED_FILE-NULL},\n-  ${LDEMUL_FIND_POTENTIAL_LIBRARIES-NULL},\n-  ${LDEMUL_NEW_VERS_PATTERN-NULL},\n-  ${LDEMUL_EXTRA_MAP_FILE_TEXT-NULL},\n-  ${LDEMUL_EMIT_CTF_EARLY-NULL},\n-  ${LDEMUL_ACQUIRE_STRINGS_FOR_CTF-NULL},\n-  ${LDEMUL_NEW_DYNSYM_FOR_CTF-NULL},\n-  ${LDEMUL_PRINT_SYMBOL-NULL}\n-};\n EOF\n+\n+LDEMUL_AFTER_OPEN=msp430_elf_after_open\n+LDEMUL_AFTER_ALLOCATION=msp430_elf_after_allocation\n+LDEMUL_PLACE_ORPHAN=${LDEMUL_PLACE_ORPHAN-gld${EMULATION_NAME}_place_orphan}\n+LDEMUL_FINISH=gld${EMULATION_NAME}_finish\n+LDEMUL_ADD_OPTIONS=gld${EMULATION_NAME}_add_options\n+LDEMUL_HANDLE_OPTION=gld${EMULATION_NAME}_handle_option\n+LDEMUL_LIST_OPTIONS=gld${EMULATION_NAME}_list_options\n+\n+source_em ${srcdir}/emultempl/emulation.em\n # \f\n # Local Variables:\n # mode: c"
    },
    {
      "sha": "892bf70b7a69cce251178f1d0eceb1b226f9abb2",
      "filename": "ld/emultempl/pe.em",
      "status": "modified",
      "additions": 30,
      "deletions": 54,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/pe.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/pe.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/pe.em?ref=a92613915ec2f38e1ab62ab254dde2a1ad4ad408",
      "patch": "@@ -172,7 +172,7 @@ static int is_underscoring (void)\n }\n \n static void\n-gld_${EMULATION_NAME}_before_parse (void)\n+gld${EMULATION_NAME}_before_parse (void)\n {\n   is_underscoring ();\n   ldfile_set_output_arch (\"${OUTPUT_ARCH}\", bfd_arch_`echo ${ARCH} | sed -e 's/:.*//'`);\n@@ -454,7 +454,7 @@ static definfo init[] =\n \n \n static void\n-gld_${EMULATION_NAME}_list_options (FILE *file)\n+gld${EMULATION_NAME}_list_options (FILE *file)\n {\n   fprintf (file, _(\"  --base_file <basefile>             Generate a base file for relocatable DLLs\\n\"));\n   fprintf (file, _(\"  --dll                              Set image base to the default for DLLs\\n\"));\n@@ -1002,7 +1002,7 @@ compute_dll_image_base (const char *ofile)\n    read.  */\n \n static void\n-gld_${EMULATION_NAME}_set_symbols (void)\n+gld${EMULATION_NAME}_set_symbols (void)\n {\n   /* Run through and invent symbols for all the\n      names and insert the defaults.  */\n@@ -1069,7 +1069,7 @@ gld_${EMULATION_NAME}_set_symbols (void)\n    have been read.  */\n \n static void\n-gld_${EMULATION_NAME}_after_parse (void)\n+gld${EMULATION_NAME}_after_parse (void)\n {\n   /* PR ld/6744:  Warn the user if they have used an ELF-only\n      option hoping it will work on PE.  */\n@@ -1382,7 +1382,7 @@ setup_build_id (bfd *ibfd)\n }\n \n static void\n-gld_${EMULATION_NAME}_after_open (void)\n+gld${EMULATION_NAME}_after_open (void)\n {\n   after_open_default ();\n \n@@ -1803,7 +1803,7 @@ gld_${EMULATION_NAME}_after_open (void)\n }\n \f\n static void\n-gld_${EMULATION_NAME}_before_allocation (void)\n+gld${EMULATION_NAME}_before_allocation (void)\n {\n #if defined(TARGET_IS_armpe) || defined(TARGET_IS_arm_wince_pe)\n   /* FIXME: we should be able to set the size of the interworking stub\n@@ -1849,7 +1849,7 @@ saw_option (char *option)\n #endif /* DLL_SUPPORT */\n \n static bool\n-gld_${EMULATION_NAME}_unrecognized_file (lang_input_statement_type *entry ATTRIBUTE_UNUSED)\n+gld${EMULATION_NAME}_unrecognized_file (lang_input_statement_type *entry ATTRIBUTE_UNUSED)\n {\n #ifdef DLL_SUPPORT\n   const char *ext = entry->filename + strlen (entry->filename) - 4;\n@@ -1930,7 +1930,7 @@ gld_${EMULATION_NAME}_unrecognized_file (lang_input_statement_type *entry ATTRIB\n }\n \n static bool\n-gld_${EMULATION_NAME}_recognized_file (lang_input_statement_type *entry ATTRIBUTE_UNUSED)\n+gld${EMULATION_NAME}_recognized_file (lang_input_statement_type *entry ATTRIBUTE_UNUSED)\n {\n #ifdef DLL_SUPPORT\n #ifdef TARGET_IS_i386pe\n@@ -1952,7 +1952,7 @@ gld_${EMULATION_NAME}_recognized_file (lang_input_statement_type *entry ATTRIBUT\n }\n \n static void\n-gld_${EMULATION_NAME}_finish (void)\n+gld${EMULATION_NAME}_finish (void)\n {\n #if defined(TARGET_IS_armpe) || defined(TARGET_IS_arm_wince_pe)\n   struct bfd_link_hash_entry * h;\n@@ -2052,9 +2052,9 @@ gld_${EMULATION_NAME}_finish (void)\n    sort_sections.  */\n \n static lang_output_section_statement_type *\n-gld_${EMULATION_NAME}_place_orphan (asection *s,\n-\t\t\t\t    const char *secname,\n-\t\t\t\t    int constraint)\n+gld${EMULATION_NAME}_place_orphan (asection *s,\n+\t\t\t\t   const char *secname,\n+\t\t\t\t   int constraint)\n {\n   const char *orig_secname = secname;\n   char *dollar = NULL;\n@@ -2251,7 +2251,7 @@ gld_${EMULATION_NAME}_place_orphan (asection *s,\n }\n \n static bool\n-gld_${EMULATION_NAME}_open_dynamic_archive\n+gld${EMULATION_NAME}_open_dynamic_archive\n   (const char *arch ATTRIBUTE_UNUSED,\n    search_dirs_type *search,\n    lang_input_statement_type *entry)\n@@ -2357,14 +2357,14 @@ gld_${EMULATION_NAME}_open_dynamic_archive\n }\n \n static int\n-gld_${EMULATION_NAME}_find_potential_libraries\n+gld${EMULATION_NAME}_find_potential_libraries\n   (char *name, lang_input_statement_type *entry)\n {\n   return ldfile_open_file_search (name, entry, \"\", \".lib\");\n }\n \f\n static char *\n-gld_${EMULATION_NAME}_get_script (int *isfile)\n+gld${EMULATION_NAME}_get_script (int *isfile)\n EOF\n \n if test x\"$COMPILE_IN\" = xyes\n@@ -2426,42 +2426,18 @@ fragment <<EOF\n EOF\n fi\n \n-fragment <<EOF\n-\n-\n-struct ld_emulation_xfer_struct ld_${EMULATION_NAME}_emulation =\n-{\n-  gld_${EMULATION_NAME}_before_parse,\n-  syslib_default,\n-  hll_default,\n-  gld_${EMULATION_NAME}_after_parse,\n-  gld_${EMULATION_NAME}_after_open,\n-  after_check_relocs_default,\n-  before_place_orphans_default,\n-  after_allocation_default,\n-  set_output_arch_default,\n-  ldemul_default_target,\n-  gld_${EMULATION_NAME}_before_allocation,\n-  gld_${EMULATION_NAME}_get_script,\n-  \"${EMULATION_NAME}\",\n-  \"${OUTPUT_FORMAT}\",\n-  gld_${EMULATION_NAME}_finish,\n-  NULL, /* Create output section statements.  */\n-  gld_${EMULATION_NAME}_open_dynamic_archive,\n-  gld_${EMULATION_NAME}_place_orphan,\n-  gld_${EMULATION_NAME}_set_symbols,\n-  NULL, /* parse_args */\n-  gld${EMULATION_NAME}_add_options,\n-  gld${EMULATION_NAME}_handle_option,\n-  gld_${EMULATION_NAME}_unrecognized_file,\n-  gld_${EMULATION_NAME}_list_options,\n-  gld_${EMULATION_NAME}_recognized_file,\n-  gld_${EMULATION_NAME}_find_potential_libraries,\n-  NULL,\t/* new_vers_pattern.  */\n-  NULL,\t/* extra_map_file_text.  */\n-  ${LDEMUL_EMIT_CTF_EARLY-NULL},\n-  ${LDEMUL_ACQUIRE_STRINGS_FOR_CTF-NULL},\n-  ${LDEMUL_NEW_DYNSYM_FOR_CTF-NULL},\n-  ${LDEMUL_PRINT_SYMBOL-NULL}\n-};\n-EOF\n+LDEMUL_AFTER_PARSE=gld${EMULATION_NAME}_after_parse\n+LDEMUL_AFTER_OPEN=gld${EMULATION_NAME}_after_open\n+LDEMUL_BEFORE_ALLOCATION=gld${EMULATION_NAME}_before_allocation\n+LDEMUL_FINISH=gld${EMULATION_NAME}_finish\n+LDEMUL_OPEN_DYNAMIC_ARCHIVE=gld${EMULATION_NAME}_open_dynamic_archive\n+LDEMUL_PLACE_ORPHAN=gld${EMULATION_NAME}_place_orphan\n+LDEMUL_SET_SYMBOLS=gld${EMULATION_NAME}_set_symbols\n+LDEMUL_ADD_OPTIONS=gld${EMULATION_NAME}_add_options\n+LDEMUL_HANDLE_OPTION=gld${EMULATION_NAME}_handle_option\n+LDEMUL_UNRECOGNIZED_FILE=gld${EMULATION_NAME}_unrecognized_file\n+LDEMUL_LIST_OPTIONS=gld${EMULATION_NAME}_list_options\n+LDEMUL_RECOGNIZED_FILE=gld${EMULATION_NAME}_recognized_file\n+LDEMUL_FIND_POTENTIAL_LIBRARIES=gld${EMULATION_NAME}_find_potential_libraries\n+\n+source_em ${srcdir}/emultempl/emulation.em"
    },
    {
      "sha": "e68d1e69f17ad73af065b6bed19ae89ded913172",
      "filename": "ld/emultempl/pep.em",
      "status": "modified",
      "additions": 28,
      "deletions": 52,
      "changes": 80,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/pep.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/pep.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/pep.em?ref=a92613915ec2f38e1ab62ab254dde2a1ad4ad408",
      "patch": "@@ -183,7 +183,7 @@ static int is_underscoring (void)\n \n \n static void\n-gld_${EMULATION_NAME}_before_parse (void)\n+gld${EMULATION_NAME}_before_parse (void)\n {\n   is_underscoring ();\n   ldfile_set_output_arch (\"${OUTPUT_ARCH}\", bfd_arch_`echo ${ARCH} | sed -e 's/:.*//'`);\n@@ -417,7 +417,7 @@ static definfo init[] =\n \n \n static void\n-gld_${EMULATION_NAME}_list_options (FILE *file)\n+gld${EMULATION_NAME}_list_options (FILE *file)\n {\n   fprintf (file, _(\"  --base_file <basefile>             Generate a base file for relocatable DLLs\\n\"));\n   fprintf (file, _(\"  --dll                              Set image base to the default for DLLs\\n\"));\n@@ -945,7 +945,7 @@ compute_dll_image_base (const char *ofile)\n    read.  */\n \n static void\n-gld_${EMULATION_NAME}_set_symbols (void)\n+gld${EMULATION_NAME}_set_symbols (void)\n {\n   /* Run through and invent symbols for all the\n      names and insert the defaults.  */\n@@ -1012,7 +1012,7 @@ gld_${EMULATION_NAME}_set_symbols (void)\n    have been read.  */\n \n static void\n-gld_${EMULATION_NAME}_after_parse (void)\n+gld${EMULATION_NAME}_after_parse (void)\n {\n   /* PR ld/6744:  Warn the user if they have used an ELF-only\n      option hoping it will work on PE+.  */\n@@ -1366,7 +1366,7 @@ setup_build_id (bfd *ibfd)\n }\n \n static void\n-gld_${EMULATION_NAME}_after_open (void)\n+gld${EMULATION_NAME}_after_open (void)\n {\n   after_open_default ();\n \n@@ -1694,7 +1694,7 @@ gld_${EMULATION_NAME}_after_open (void)\n }\n \f\n static void\n-gld_${EMULATION_NAME}_before_allocation (void)\n+gld${EMULATION_NAME}_before_allocation (void)\n {\n   is_underscoring ();\n   before_allocation_default ();\n@@ -1719,7 +1719,7 @@ saw_option (char *option)\n #endif /* DLL_SUPPORT */\n \n static bool\n-gld_${EMULATION_NAME}_unrecognized_file (lang_input_statement_type *entry ATTRIBUTE_UNUSED)\n+gld${EMULATION_NAME}_unrecognized_file (lang_input_statement_type *entry ATTRIBUTE_UNUSED)\n {\n #ifdef DLL_SUPPORT\n   const char *ext = entry->filename + strlen (entry->filename) - 4;\n@@ -1800,7 +1800,7 @@ gld_${EMULATION_NAME}_unrecognized_file (lang_input_statement_type *entry ATTRIB\n }\n \n static bool\n-gld_${EMULATION_NAME}_recognized_file (lang_input_statement_type *entry ATTRIBUTE_UNUSED)\n+gld${EMULATION_NAME}_recognized_file (lang_input_statement_type *entry ATTRIBUTE_UNUSED)\n {\n   is_underscoring ();\n #ifdef DLL_SUPPORT\n@@ -1814,7 +1814,7 @@ gld_${EMULATION_NAME}_recognized_file (lang_input_statement_type *entry ATTRIBUT\n }\n \n static void\n-gld_${EMULATION_NAME}_finish (void)\n+gld${EMULATION_NAME}_finish (void)\n {\n   is_underscoring ();\n   finish_default ();\n@@ -1864,7 +1864,7 @@ gld_${EMULATION_NAME}_finish (void)\n    sort_sections.  */\n \n static lang_output_section_statement_type *\n-gld_${EMULATION_NAME}_place_orphan (asection *s,\n+gld${EMULATION_NAME}_place_orphan (asection *s,\n \t\t\t\t    const char *secname,\n \t\t\t\t    int constraint)\n {\n@@ -2063,7 +2063,7 @@ gld_${EMULATION_NAME}_place_orphan (asection *s,\n }\n \n static bool\n-gld_${EMULATION_NAME}_open_dynamic_archive\n+gld${EMULATION_NAME}_open_dynamic_archive\n   (const char *arch ATTRIBUTE_UNUSED,\n    search_dirs_type *search,\n    lang_input_statement_type *entry)\n@@ -2169,14 +2169,14 @@ gld_${EMULATION_NAME}_open_dynamic_archive\n }\n \n static int\n-gld_${EMULATION_NAME}_find_potential_libraries\n+gld${EMULATION_NAME}_find_potential_libraries\n   (char *name, lang_input_statement_type *entry)\n {\n   return ldfile_open_file_search (name, entry, \"\", \".lib\");\n }\n \f\n static char *\n-gld_${EMULATION_NAME}_get_script (int *isfile)\n+gld${EMULATION_NAME}_get_script (int *isfile)\n EOF\n \n if test x\"$COMPILE_IN\" = xyes\n@@ -2238,42 +2238,18 @@ fragment <<EOF\n EOF\n fi\n \n-fragment <<EOF\n-\n-\n-struct ld_emulation_xfer_struct ld_${EMULATION_NAME}_emulation =\n-{\n-  gld_${EMULATION_NAME}_before_parse,\n-  syslib_default,\n-  hll_default,\n-  gld_${EMULATION_NAME}_after_parse,\n-  gld_${EMULATION_NAME}_after_open,\n-  after_check_relocs_default,\n-  before_place_orphans_default,\n-  after_allocation_default,\n-  set_output_arch_default,\n-  ldemul_default_target,\n-  gld_${EMULATION_NAME}_before_allocation,\n-  gld_${EMULATION_NAME}_get_script,\n-  \"${EMULATION_NAME}\",\n-  \"${OUTPUT_FORMAT}\",\n-  gld_${EMULATION_NAME}_finish,\n-  NULL, /* Create output section statements.  */\n-  gld_${EMULATION_NAME}_open_dynamic_archive,\n-  gld_${EMULATION_NAME}_place_orphan,\n-  gld_${EMULATION_NAME}_set_symbols,\n-  NULL, /* parse_args */\n-  gld${EMULATION_NAME}_add_options,\n-  gld${EMULATION_NAME}_handle_option,\n-  gld_${EMULATION_NAME}_unrecognized_file,\n-  gld_${EMULATION_NAME}_list_options,\n-  gld_${EMULATION_NAME}_recognized_file,\n-  gld_${EMULATION_NAME}_find_potential_libraries,\n-  NULL,\t/* new_vers_pattern.  */\n-  NULL,\t/* extra_map_file_text */\n-  ${LDEMUL_EMIT_CTF_EARLY-NULL},\n-  ${LDEMUL_ACQUIRE_STRINGS_FOR_CTF-NULL},\n-  ${LDEMUL_NEW_DYNSYM_FOR_CTF-NULL},\n-  ${LDEMUL_PRINT_SYMBOL-NULL}\n-};\n-EOF\n+LDEMUL_AFTER_PARSE=gld${EMULATION_NAME}_after_parse\n+LDEMUL_AFTER_OPEN=gld${EMULATION_NAME}_after_open\n+LDEMUL_BEFORE_ALLOCATION=gld${EMULATION_NAME}_before_allocation\n+LDEMUL_FINISH=gld${EMULATION_NAME}_finish\n+LDEMUL_OPEN_DYNAMIC_ARCHIVE=gld${EMULATION_NAME}_open_dynamic_archive\n+LDEMUL_PLACE_ORPHAN=gld${EMULATION_NAME}_place_orphan\n+LDEMUL_SET_SYMBOLS=gld${EMULATION_NAME}_set_symbols\n+LDEMUL_ADD_OPTIONS=gld${EMULATION_NAME}_add_options\n+LDEMUL_HANDLE_OPTION=gld${EMULATION_NAME}_handle_option\n+LDEMUL_UNRECOGNIZED_FILE=gld${EMULATION_NAME}_unrecognized_file\n+LDEMUL_LIST_OPTIONS=gld${EMULATION_NAME}_list_options\n+LDEMUL_RECOGNIZED_FILE=gld${EMULATION_NAME}_recognized_file\n+LDEMUL_FIND_POTENTIAL_LIBRARIES=gld${EMULATION_NAME}_find_potential_libraries\n+\n+source_em ${srcdir}/emultempl/emulation.em"
    },
    {
      "sha": "a57e73bc5c32fc45229c6a0504ad9cd4a45794f5",
      "filename": "ld/emultempl/ticoff.em",
      "status": "modified",
      "additions": 8,
      "deletions": 40,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/ticoff.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/ticoff.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/ticoff.em?ref=a92613915ec2f38e1ab62ab254dde2a1ad4ad408",
      "patch": "@@ -64,7 +64,7 @@ gld${EMULATION_NAME}_add_options\n }\n \n static void\n-gld_${EMULATION_NAME}_list_options (FILE * file)\n+gld${EMULATION_NAME}_list_options (FILE * file)\n {\n   fprintf (file, _(\"  --format 0|1|2              Specify which COFF version to use\\n\"));\n }\n@@ -96,15 +96,15 @@ gld${EMULATION_NAME}_handle_option (int optc)\n }\n \n static void\n-gld_${EMULATION_NAME}_before_parse(void)\n+gld${EMULATION_NAME}_before_parse(void)\n {\n #ifndef TARGET_\t\t\t/* I.e., if not generic.  */\n   ldfile_set_output_arch (\"`echo ${ARCH}`\", bfd_arch_unknown);\n #endif /* not TARGET_ */\n }\n \n static char *\n-gld_${EMULATION_NAME}_get_script (int *isfile)\n+gld${EMULATION_NAME}_get_script (int *isfile)\n EOF\n if test x\"$COMPILE_IN\" = xyes\n then\n@@ -154,40 +154,8 @@ EOF\n \n fi\n \n-fragment <<EOF\n-struct ld_emulation_xfer_struct ld_${EMULATION_NAME}_emulation =\n-{\n-  gld_${EMULATION_NAME}_before_parse,\n-  syslib_default,\n-  hll_default,\n-  after_parse_default,\n-  after_open_default,\n-  after_check_relocs_default,\n-  before_place_orphans_default,\n-  after_allocation_default,\n-  set_output_arch_default,\n-  ldemul_default_target,\n-  before_allocation_default,\n-  gld_${EMULATION_NAME}_get_script,\n-  \"${EMULATION_NAME}\",\n-  \"${OUTPUT_FORMAT}\",\n-  finish_default,\n-  NULL, /* create output section statements */\n-  NULL, /* open dynamic archive */\n-  NULL, /* place orphan */\n-  NULL, /* set_symbols */\n-  NULL, /* parse_args */\n-  gld${EMULATION_NAME}_add_options,\n-  gld${EMULATION_NAME}_handle_option,\n-  NULL, /* unrecognized_file */\n-  gld_${EMULATION_NAME}_list_options,\n-  NULL, /* recognized file */\n-  NULL,\t/* find_potential_libraries */\n-  NULL,\t/* new_vers_pattern */\n-  NULL,  /* extra_map_file_text */\n-  ${LDEMUL_EMIT_CTF_EARLY-NULL},\n-  ${LDEMUL_ACQUIRE_STRINGS_FOR_CTF-NULL},\n-  ${LDEMUL_NEW_DYNSYM_FOR_CTF-NULL},\n-  ${LDEMUL_PRINT_SYMBOL-NULL}\n-};\n-EOF\n+LDEMUL_ADD_OPTIONS=gld${EMULATION_NAME}_add_options\n+LDEMUL_HANDLE_OPTION=gld${EMULATION_NAME}_handle_option\n+LDEMUL_LIST_OPTIONS=gld${EMULATION_NAME}_list_options\n+\n+source_em ${srcdir}/emultempl/emulation.em"
    },
    {
      "sha": "c9aef37742f2843c18f2d941c1b719703e24227c",
      "filename": "ld/emultempl/vanilla.em",
      "status": "modified",
      "additions": 8,
      "deletions": 36,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/vanilla.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a92613915ec2f38e1ab62ab254dde2a1ad4ad408/ld/emultempl/vanilla.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/vanilla.em?ref=a92613915ec2f38e1ab62ab254dde2a1ad4ad408",
      "patch": "@@ -55,40 +55,12 @@ vanilla_get_script (int *isfile)\n   *isfile = 0;\n   return \"\";\n }\n-\n-struct ld_emulation_xfer_struct ld_vanilla_emulation =\n-{\n-  vanilla_before_parse,\n-  syslib_default,\n-  hll_default,\n-  after_parse_default,\n-  after_open_default,\n-  after_check_relocs_default,\n-  before_place_orphans_default,\n-  after_allocation_default,\n-  vanilla_set_output_arch,\n-  ldemul_default_target,\n-  before_allocation_default,\n-  vanilla_get_script,\n-  \"vanilla\",\n-  \"a.out-sunos-big\",\n-  finish_default,\n-  NULL,\t/* create output section statements */\n-  NULL,\t/* open dynamic archive */\n-  NULL,\t/* place orphan */\n-  NULL,\t/* set symbols */\n-  NULL,\t/* parse args */\n-  NULL,\t/* add_options */\n-  NULL,\t/* handle_option */\n-  NULL,\t/* unrecognized file */\n-  NULL,\t/* list options */\n-  NULL,\t/* recognized file */\n-  NULL,\t/* find_potential_libraries */\n-  NULL,\t/* new_vers_pattern */\n-  NULL,\t/* extra_map_file_text */\n-  NULL, /* emit_ctf_early */\n-  NULL, /* acquire_strings_for_ctf */\n-  NULL, /* new_dynsym_for_ctf */\n-  NULL  /* print_symbol */\n-};\n EOF\n+\n+LDEMUL_BEFORE_PARSE=vanilla_before_parse\n+LDEMUL_SET_OUTPUT_ARCH=vanilla_set_output_arch\n+LDEMUL_GET_SCRIPT=vanilla_get_script\n+EMULATION_NAME=vanilla\n+OUTPUT_FORMAT=a.out-sunos-big\n+\n+source_em ${srcdir}/emultempl/emulation.em"
    }
  ]
}