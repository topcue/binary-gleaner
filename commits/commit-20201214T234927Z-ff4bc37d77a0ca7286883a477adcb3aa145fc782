{
  "sha": "ff4bc37d77a0ca7286883a477adcb3aa145fc782",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmY0YmMzN2Q3N2EwY2E3Mjg2ODgzYTQ3N2FkY2IzYWExNDVmYzc4Mg==",
  "commit": {
    "author": {
      "name": "Cary Coutant",
      "email": "ccoutant@gmail.com",
      "date": "2020-12-14T23:46:47Z"
    },
    "committer": {
      "name": "Cary Coutant",
      "email": "ccoutant@gmail.com",
      "date": "2020-12-14T23:49:27Z"
    },
    "message": "Keep input SHF_GNU_RETAIN sections and strip output SHF_GNU_RETAIN for GNU/FreBSD ELFOSABIs.\n\n2020-12-14  H.J. Lu  <hjl.tools@gmail.com>\n\t    Cary Coutant  <ccoutant@gmail.com>\n\nelfcpp/\n\tPR gold/27039\n\t* elfcpp.h (SHF): Add SHF_GNU_RETAIN.\n\ngold/\n    \tPR gold/27039\n\t* layout.cc (Layout::layout): Strip SHF_GNU_RETAIN.\n\t* object.cc (Sized_relobj_file::Sized_relobj_file): Initialize osabi_.\n\t(Sized_relobj_file::do_layout): Keep SHF_GNU_RETAIN sections for\n\tGNU/FreBSD ELFOSABIs.\n\t* object.h (Osabi) New class.\n\t(Sized_relobj_file): Add osabi() and osabi_.\n\t* testsuite/Makefile.am (check_SCRIPTS): Add retain.sh.\n\t(check_DATA): Add retain_1.out retain_2.out.\n\t(MOSTLYCLEANFILES): Add retain_1 retain_2.\n\t(retain_1.out): New target.\n\t(retain_1): Likewise.\n\t(retain_1.o): Likewise.\n\t(retain_2.out): Likewise.\n\t(retain_2): Likewise.\n\t(retain_2.o): Likewise.\n\t* testsuite/Makefile.in: Regenerate.\n\t* testsuite/retain.sh: New file.\n\t* testsuite/retain_1.s: Likewise.\n\t* testsuite/retain_2.s: Likewise.",
    "tree": {
      "sha": "f90757858598811f287e2100b14fa0299d39cdde",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f90757858598811f287e2100b14fa0299d39cdde"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ff4bc37d77a0ca7286883a477adcb3aa145fc782",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ff4bc37d77a0ca7286883a477adcb3aa145fc782",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ff4bc37d77a0ca7286883a477adcb3aa145fc782",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ff4bc37d77a0ca7286883a477adcb3aa145fc782/comments",
  "author": {
    "login": "ccoutant",
    "id": 1442098,
    "node_id": "MDQ6VXNlcjE0NDIwOTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1442098?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ccoutant",
    "html_url": "https://github.com/ccoutant",
    "followers_url": "https://api.github.com/users/ccoutant/followers",
    "following_url": "https://api.github.com/users/ccoutant/following{/other_user}",
    "gists_url": "https://api.github.com/users/ccoutant/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ccoutant/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ccoutant/subscriptions",
    "organizations_url": "https://api.github.com/users/ccoutant/orgs",
    "repos_url": "https://api.github.com/users/ccoutant/repos",
    "events_url": "https://api.github.com/users/ccoutant/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ccoutant/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ccoutant",
    "id": 1442098,
    "node_id": "MDQ6VXNlcjE0NDIwOTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1442098?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ccoutant",
    "html_url": "https://github.com/ccoutant",
    "followers_url": "https://api.github.com/users/ccoutant/followers",
    "following_url": "https://api.github.com/users/ccoutant/following{/other_user}",
    "gists_url": "https://api.github.com/users/ccoutant/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ccoutant/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ccoutant/subscriptions",
    "organizations_url": "https://api.github.com/users/ccoutant/orgs",
    "repos_url": "https://api.github.com/users/ccoutant/repos",
    "events_url": "https://api.github.com/users/ccoutant/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ccoutant/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8cd6d968de17f5dac1601d7cbdda838c9d82c822",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8cd6d968de17f5dac1601d7cbdda838c9d82c822",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8cd6d968de17f5dac1601d7cbdda838c9d82c822"
    }
  ],
  "stats": {
    "total": 314,
    "additions": 294,
    "deletions": 20
  },
  "files": [
    {
      "sha": "2d333e992f63fdb458a1fc29647075215b12eab7",
      "filename": "elfcpp/elfcpp.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff4bc37d77a0ca7286883a477adcb3aa145fc782/elfcpp/elfcpp.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff4bc37d77a0ca7286883a477adcb3aa145fc782/elfcpp/elfcpp.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/elfcpp/elfcpp.h?ref=ff4bc37d77a0ca7286883a477adcb3aa145fc782",
      "patch": "@@ -438,6 +438,7 @@ enum SHF\n   SHF_TLS = 0x400,\n   SHF_COMPRESSED = 0x800,\n   SHF_MASKOS = 0x0ff00000,\n+  SHF_GNU_RETAIN = 0x200000,\n   SHF_MASKPROC = 0xf0000000,\n \n   // Indicates this section requires ordering in relation to"
    },
    {
      "sha": "dc88a9d8ae605cee44e904c4ba0559b35448c53d",
      "filename": "gold/layout.cc",
      "status": "modified",
      "additions": 15,
      "deletions": 16,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff4bc37d77a0ca7286883a477adcb3aa145fc782/gold/layout.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff4bc37d77a0ca7286883a477adcb3aa145fc782/gold/layout.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/layout.cc?ref=ff4bc37d77a0ca7286883a477adcb3aa145fc782",
      "patch": "@@ -1173,14 +1173,20 @@ Layout::layout(Sized_relobj_file<size, big_endian>* object, unsigned int shndx,\n     {\n       // Some flags in the input section should not be automatically\n       // copied to the output section.\n-      elfcpp::Elf_Xword flags = (shdr.get_sh_flags()\n-\t\t\t\t & ~ elfcpp::SHF_COMPRESSED);\n+      elfcpp::Elf_Xword sh_flags = (shdr.get_sh_flags()\n+\t\t\t\t    & ~ elfcpp::SHF_COMPRESSED);\n       name = this->namepool_.add(name, true, NULL);\n-      os = this->make_output_section(name, sh_type, flags,\n-\t\t\t\t     ORDER_INVALID, false);\n+      os = this->make_output_section(name, sh_type, sh_flags, ORDER_INVALID,\n+\t\t\t\t     false);\n     }\n   else\n     {\n+      // Get the section flags and mask out any flags that do not\n+      // take part in section matching.\n+      elfcpp::Elf_Xword sh_flags\n+\t  = (this->get_output_section_flags(shdr.get_sh_flags())\n+\t     & ~object->osabi().ignored_sh_flags());\n+\n       // All \".text.unlikely.*\" sections can be moved to a unique\n       // segment with --text-unlikely-segment option.\n       bool text_unlikely_segment\n@@ -1189,13 +1195,10 @@ Layout::layout(Sized_relobj_file<size, big_endian>* object, unsigned int shndx,\n \t\t\t     object->section_name(shndx).c_str()));\n       if (text_unlikely_segment)\n \t{\n-\t  elfcpp::Elf_Xword flags\n-\t    = this->get_output_section_flags(shdr.get_sh_flags());\n-\n \t  Stringpool::Key name_key;\n \t  const char* os_name = this->namepool_.add(\".text.unlikely\", true,\n \t\t\t\t\t\t    &name_key);\n-\t  os = this->get_output_section(os_name, name_key, sh_type, flags,\n+\t  os = this->get_output_section(os_name, name_key, sh_type, sh_flags,\n \t\t\t\t\tORDER_INVALID, false);\n \t  // Map this output section to a unique segment.  This is done to\n \t  // separate \"text\" that is not likely to be executed from \"text\"\n@@ -1213,22 +1216,18 @@ Layout::layout(Sized_relobj_file<size, big_endian>* object, unsigned int shndx,\n \t  if (it == this->section_segment_map_.end())\n \t    {\n \t      os = this->choose_output_section(object, name, sh_type,\n-\t\t\t\t\t       shdr.get_sh_flags(), true,\n-\t\t\t\t\t       ORDER_INVALID, false, false,\n-\t\t\t\t\t       true);\n+\t\t\t\t\t       sh_flags, true, ORDER_INVALID,\n+\t\t\t\t\t       false, false, true);\n \t    }\n \t  else\n \t    {\n \t      // We know the name of the output section, directly call\n \t      // get_output_section here by-passing choose_output_section.\n-\t      elfcpp::Elf_Xword flags\n-\t\t= this->get_output_section_flags(shdr.get_sh_flags());\n-\n \t      const char* os_name = it->second->name;\n \t      Stringpool::Key name_key;\n \t      os_name = this->namepool_.add(os_name, true, &name_key);\n-\t      os = this->get_output_section(os_name, name_key, sh_type, flags,\n-\t\t\t\t\tORDER_INVALID, false);\n+\t      os = this->get_output_section(os_name, name_key, sh_type,\n+\t\t\t\t\t    sh_flags, ORDER_INVALID, false);\n \t      if (!os->is_unique_segment())\n \t\t{\n \t\t  os->set_is_unique_segment();"
    },
    {
      "sha": "072563b5a6a4d32b594284d5dbc5fbad5b90b24e",
      "filename": "gold/object.cc",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff4bc37d77a0ca7286883a477adcb3aa145fc782/gold/object.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff4bc37d77a0ca7286883a477adcb3aa145fc782/gold/object.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/object.cc?ref=ff4bc37d77a0ca7286883a477adcb3aa145fc782",
      "patch": "@@ -464,6 +464,7 @@ Sized_relobj_file<size, big_endian>::Sized_relobj_file(\n     const elfcpp::Ehdr<size, big_endian>& ehdr)\n   : Sized_relobj<size, big_endian>(name, input_file, offset),\n     elf_file_(this, ehdr),\n+    osabi_(ehdr),\n     symtab_shndx_(-1U),\n     local_symbol_count_(0),\n     output_local_symbol_count_(0),\n@@ -1706,7 +1707,8 @@ Sized_relobj_file<size, big_endian>::do_layout(Symbol_table* symtab,\n \t  if (this->is_section_name_included(name)\n \t      || layout->keep_input_section (this, name)\n \t      || sh_type == elfcpp::SHT_INIT_ARRAY\n-\t      || sh_type == elfcpp::SHT_FINI_ARRAY)\n+\t      || sh_type == elfcpp::SHT_FINI_ARRAY\n+\t      || this->osabi().has_shf_retain(shdr.get_sh_flags()))\n \t    {\n \t      symtab->gc()->worklist().push_back(Section_id(this, i));\n \t    }"
    },
    {
      "sha": "4afee993e8595fe36a1af2d0cdaded6ae075118d",
      "filename": "gold/object.h",
      "status": "modified",
      "additions": 50,
      "deletions": 0,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff4bc37d77a0ca7286883a477adcb3aa145fc782/gold/object.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff4bc37d77a0ca7286883a477adcb3aa145fc782/gold/object.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/object.h?ref=ff4bc37d77a0ca7286883a477adcb3aa145fc782",
      "patch": "@@ -384,6 +384,49 @@ build_compressed_section_map(const unsigned char* pshdrs, unsigned int shnum,\n \t\t\t     const char* names, section_size_type names_size,\n \t\t\t     Object* obj, bool decompress_if_needed);\n \n+// Osabi represents the EI_OSABI field from the ELF header.\n+\n+template <int size, bool big_endian>\n+class Osabi\n+{\n+ public:\n+  Osabi(const elfcpp::Ehdr<size, big_endian>& ehdr)\n+    : ei_osabi_(static_cast<elfcpp::ELFOSABI>(\n+\t\t    ehdr.get_e_ident()[elfcpp::EI_OSABI]))\n+  { }\n+\n+  bool\n+  has_shf_retain(elfcpp::Elf_Xword sh_flags) const\n+  {\n+    switch (this->ei_osabi_)\n+      {\n+      case elfcpp::ELFOSABI_GNU:\n+      case elfcpp::ELFOSABI_FREEBSD:\n+\treturn (sh_flags & elfcpp::SHF_GNU_RETAIN) != 0;\n+      default:\n+        break;\n+      }\n+    return false;\n+  }\n+\n+  elfcpp::Elf_Xword\n+  ignored_sh_flags() const\n+  {\n+    switch (this->ei_osabi_)\n+      {\n+      case elfcpp::ELFOSABI_GNU:\n+      case elfcpp::ELFOSABI_FREEBSD:\n+\treturn elfcpp::SHF_GNU_RETAIN;\n+      default:\n+        break;\n+      }\n+    return 0;\n+  }\n+\n+ private:\n+  elfcpp::ELFOSABI ei_osabi_;\n+};\n+\n // Object is an abstract base class which represents either a 32-bit\n // or a 64-bit input object.  This can be a regular object file\n // (ET_REL) or a shared object (ET_DYN).\n@@ -2205,6 +2248,11 @@ class Sized_relobj_file : public Sized_relobj<size, big_endian>\n   e_type() const\n   { return this->e_type_; }\n \n+  // Return the EI_OSABI.\n+  const Osabi<size, big_endian>&\n+  osabi() const\n+  { return this->osabi_; }\n+\n   // Return the number of symbols.  This is only valid after\n   // Object::add_symbols has been called.\n   unsigned int\n@@ -2845,6 +2893,8 @@ class Sized_relobj_file : public Sized_relobj<size, big_endian>\n \n   // General access to the ELF file.\n   elfcpp::Elf_file<size, big_endian, Object> elf_file_;\n+  // The EI_OSABI.\n+  const Osabi<size, big_endian> osabi_;\n   // Type of ELF file (ET_REL or ET_EXEC).  ET_EXEC files are allowed\n   // as input files only for the --just-symbols option.\n   int e_type_;"
    },
    {
      "sha": "38e54818f48576a0efce24b5af8bda1cdb335927",
      "filename": "gold/testsuite/Makefile.am",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff4bc37d77a0ca7286883a477adcb3aa145fc782/gold/testsuite/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff4bc37d77a0ca7286883a477adcb3aa145fc782/gold/testsuite/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/testsuite/Makefile.am?ref=ff4bc37d77a0ca7286883a477adcb3aa145fc782",
      "patch": "@@ -4418,4 +4418,20 @@ pr26936c.o: pr26936c.s\n pr26936d.o: pr26936d.s\n \t$(TEST_AS) --gen-debug -mx86-used-note=yes -o $@ $<\n \n+check_SCRIPTS += retain.sh\n+check_DATA += retain_1.out retain_2.out\n+MOSTLYCLEANFILES += retain_1 retain_2\n+retain_1.out: retain_1\n+\t$(TEST_NM) $< >$@\n+retain_1: retain_1.o ../ld-new\n+\t../ld-new  -e _start --gc-sections -o $@  retain_1.o\n+retain_1.o: retain_1.s\n+\t$(TEST_AS) -o $@ $<\n+retain_2.out: retain_2\n+\t$(TEST_READELF) -d $< >$@\n+retain_2: retain_2.o ../ld-new\n+\t../ld-new -pie -e _start --gc-sections -o $@  retain_2.o\n+retain_2.o: retain_2.s\n+\t$(TEST_AS) -o $@ $<\n+\n endif DEFAULT_TARGET_X86_64"
    },
    {
      "sha": "7b4b7832d38e1677df3fb9f461271969217b7efd",
      "filename": "gold/testsuite/Makefile.in",
      "status": "modified",
      "additions": 23,
      "deletions": 3,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff4bc37d77a0ca7286883a477adcb3aa145fc782/gold/testsuite/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff4bc37d77a0ca7286883a477adcb3aa145fc782/gold/testsuite/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/testsuite/Makefile.in?ref=ff4bc37d77a0ca7286883a477adcb3aa145fc782",
      "patch": "@@ -1130,12 +1130,13 @@ check_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \\\n @DEFAULT_TARGET_S390_TRUE@@NATIVE_OR_CROSS_LINKER_TRUE@\tsplit_s390x_z4_ns split_s390x_n1_ns split_s390x_n2_ns split_s390x_r\n \n @DEFAULT_TARGET_X86_64_TRUE@am__append_114 = *.dwo *.dwp pr26936a \\\n-@DEFAULT_TARGET_X86_64_TRUE@\tpr26936b\n+@DEFAULT_TARGET_X86_64_TRUE@\tpr26936b retain_1 retain_2\n @DEFAULT_TARGET_X86_64_TRUE@am__append_115 = dwp_test_1.sh \\\n-@DEFAULT_TARGET_X86_64_TRUE@\tdwp_test_2.sh pr26936.sh\n+@DEFAULT_TARGET_X86_64_TRUE@\tdwp_test_2.sh pr26936.sh retain.sh\n @DEFAULT_TARGET_X86_64_TRUE@am__append_116 = dwp_test_1.stdout \\\n @DEFAULT_TARGET_X86_64_TRUE@\tdwp_test_2.stdout pr26936a.stdout \\\n-@DEFAULT_TARGET_X86_64_TRUE@\tpr26936b.stdout\n+@DEFAULT_TARGET_X86_64_TRUE@\tpr26936b.stdout retain_1.out \\\n+@DEFAULT_TARGET_X86_64_TRUE@\tretain_2.out\n subdir = testsuite\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/ax_pthread.m4 \\\n@@ -6451,6 +6452,13 @@ pr26936.sh.log: pr26936.sh\n \t--log-file $$b.log --trs-file $$b.trs \\\n \t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n \t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+retain.sh.log: retain.sh\n+\t@p='retain.sh'; \\\n+\tb='retain.sh'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n object_unittest.log: object_unittest$(EXEEXT)\n \t@p='object_unittest$(EXEEXT)'; \\\n \tb='object_unittest'; \\\n@@ -10394,6 +10402,18 @@ uninstall-am:\n @DEFAULT_TARGET_X86_64_TRUE@\t$(TEST_AS) --gen-debug -mx86-used-note=yes -o $@ $<\n @DEFAULT_TARGET_X86_64_TRUE@pr26936d.o: pr26936d.s\n @DEFAULT_TARGET_X86_64_TRUE@\t$(TEST_AS) --gen-debug -mx86-used-note=yes -o $@ $<\n+@DEFAULT_TARGET_X86_64_TRUE@retain_1.out: retain_1\n+@DEFAULT_TARGET_X86_64_TRUE@\t$(TEST_NM) $< >$@\n+@DEFAULT_TARGET_X86_64_TRUE@retain_1: retain_1.o ../ld-new\n+@DEFAULT_TARGET_X86_64_TRUE@\t../ld-new  -e _start --gc-sections -o $@  retain_1.o\n+@DEFAULT_TARGET_X86_64_TRUE@retain_1.o: retain_1.s\n+@DEFAULT_TARGET_X86_64_TRUE@\t$(TEST_AS) -o $@ $<\n+@DEFAULT_TARGET_X86_64_TRUE@retain_2.out: retain_2\n+@DEFAULT_TARGET_X86_64_TRUE@\t$(TEST_READELF) -d $< >$@\n+@DEFAULT_TARGET_X86_64_TRUE@retain_2: retain_2.o ../ld-new\n+@DEFAULT_TARGET_X86_64_TRUE@\t../ld-new -pie -e _start --gc-sections -o $@  retain_2.o\n+@DEFAULT_TARGET_X86_64_TRUE@retain_2.o: retain_2.s\n+@DEFAULT_TARGET_X86_64_TRUE@\t$(TEST_AS) -o $@ $<\n \n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded."
    },
    {
      "sha": "0f5c6951c5759e9a7ea743b9ca074fd09d282978",
      "filename": "gold/testsuite/retain.sh",
      "status": "added",
      "additions": 60,
      "deletions": 0,
      "changes": 60,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff4bc37d77a0ca7286883a477adcb3aa145fc782/gold/testsuite/retain.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff4bc37d77a0ca7286883a477adcb3aa145fc782/gold/testsuite/retain.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/testsuite/retain.sh?ref=ff4bc37d77a0ca7286883a477adcb3aa145fc782",
      "patch": "@@ -0,0 +1,60 @@\n+#!/bin/sh\n+\n+# retain.sh -- Tests for SHF_GNU_RETAIN.\n+\n+# Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+# This file is part of gold.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n+# MA 02110-1301, USA.\n+\n+set -e\n+\n+check()\n+{\n+    number_of_occurrence=`egrep \"$2\" ./$1 -o | wc -l`\n+    if [ $number_of_occurrence != $3 ]\n+    then\n+\techo \"$1: \\\"$2\\\" $3: Failed\"\n+\tstatus=1\n+    fi\n+}\n+\n+status=0\n+check retain_1.out \" T fnretain1\" 1\n+check retain_1.out \" b lsretain0.2\" 1\n+check retain_1.out \" b lsretain1.1\" 1\n+check retain_1.out \" d lsretain2.0\" 1\n+check retain_1.out \" B retain0\" 1\n+check retain_1.out \" B retain1\" 1\n+check retain_1.out \" D retain2\" 1\n+check retain_1.out \" b sretain0\" 1\n+check retain_1.out \" b sretain1\" 1\n+check retain_1.out \" d sretain2\" 1\n+if grep discard retain_1.out\n+then\n+  echo \"retain_1.out: Garbage collection failed\"\n+  status=1\n+fi\n+\n+check retain_2.out \" \\(PREINIT_ARRAY\\)\" 1\n+check retain_2.out \" \\(PREINIT_ARRAYSZ\\)\" 1\n+check retain_2.out \" \\(INIT_ARRAY\\)\" 1\n+check retain_2.out \" \\(INIT_ARRAYSZ\\)\" 1\n+check retain_2.out \" \\(FINI_ARRAY\\)\" 1\n+check retain_2.out \" \\(FINI_ARRAYSZ\\)\" 1\n+\n+exit $status"
    },
    {
      "sha": "f7716faabe98c7a92722c93a282d28b72d9af7c3",
      "filename": "gold/testsuite/retain_1.s",
      "status": "added",
      "additions": 104,
      "deletions": 0,
      "changes": 104,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff4bc37d77a0ca7286883a477adcb3aa145fc782/gold/testsuite/retain_1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff4bc37d77a0ca7286883a477adcb3aa145fc782/gold/testsuite/retain_1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/testsuite/retain_1.s?ref=ff4bc37d77a0ca7286883a477adcb3aa145fc782",
      "patch": "@@ -0,0 +1,104 @@\n+\t.global\tdiscard0\n+\t.section\t.bss.discard0,\"aw\"\n+\t.type\tdiscard0, %object\n+discard0:\n+\t.zero\t2\n+\n+\t.global\tdiscard1\n+\t.section\t.bss.discard1,\"aw\"\n+\t.type\tdiscard1, %object\n+discard1:\n+\t.zero\t2\n+\n+\t.global\tdiscard2\n+\t.section\t.data.discard2,\"aw\"\n+\t.type\tdiscard2, %object\n+discard2:\n+\t.word\t1\n+\n+\t.section\t.bss.sdiscard0,\"aw\"\n+\t.type\tsdiscard0, %object\n+sdiscard0:\n+\t.zero\t2\n+\n+\t.section\t.bss.sdiscard1,\"aw\"\n+\t.type\tsdiscard1, %object\n+sdiscard1:\n+\t.zero\t2\n+\n+\t.section\t.data.sdiscard2,\"aw\"\n+\t.type\tsdiscard2, %object\n+sdiscard2:\n+\t.word\t1\n+\n+\t.section\t.text.fndiscard0,\"ax\"\n+\t.global\tfndiscard0\n+\t.type\tfndiscard0, %function\n+fndiscard0:\n+\t.word 0\n+\n+\t.global\tretain0\n+\t.section\t.bss.retain0,\"awR\"\n+\t.type\tretain0, %object\n+retain0:\n+\t.zero\t2\n+\n+\t.global\tretain1\n+\t.section\t.bss.retain1,\"awR\"\n+\t.type\tretain1, %object\n+retain1:\n+\t.zero\t2\n+\n+\t.global\tretain2\n+\t.section\t.data.retain2,\"awR\"\n+\t.type\tretain2, %object\n+retain2:\n+\t.word\t1\n+\n+\t.section\t.bss.sretain0,\"awR\"\n+\t.type\tsretain0, %object\n+sretain0:\n+\t.zero\t2\n+\n+\t.section\t.bss.sretain1,\"awR\"\n+\t.type\tsretain1, %object\n+sretain1:\n+\t.zero\t2\n+\n+\t.section\t.data.sretain2,\"aRw\"\n+\t.type\tsretain2, %object\n+sretain2:\n+\t.word\t1\n+\n+\t.section\t.text.fnretain1,\"Rax\"\n+\t.global\tfnretain1\n+\t.type\tfnretain1, %function\n+fnretain1:\n+\t.word\t0\n+\n+\t.section\t.text.fndiscard2,\"ax\"\n+\t.global\tfndiscard2\n+\t.type\tfndiscard2, %function\n+fndiscard2:\n+\t.word\t0\n+\n+\t.section\t.bss.lsretain0,\"awR\"\n+\t.type\tlsretain0.2, %object\n+lsretain0.2:\n+\t.zero\t2\n+\n+\t.section\t.bss.lsretain1,\"aRw\"\n+\t.type\tlsretain1.1, %object\n+lsretain1.1:\n+\t.zero\t2\n+\n+\t.section\t.data.lsretain2,\"aRw\"\n+\t.type\tlsretain2.0, %object\n+lsretain2.0:\n+\t.word\t1\n+\n+\t.section\t.text._start,\"ax\"\n+\t.global\t_start\n+\t.type\t_start, %function\n+_start:\n+\t.word 0"
    },
    {
      "sha": "67d86d10cb6ffcaa88b93f4959b7e914dbd54e94",
      "filename": "gold/testsuite/retain_2.s",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff4bc37d77a0ca7286883a477adcb3aa145fc782/gold/testsuite/retain_2.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff4bc37d77a0ca7286883a477adcb3aa145fc782/gold/testsuite/retain_2.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/testsuite/retain_2.s?ref=ff4bc37d77a0ca7286883a477adcb3aa145fc782",
      "patch": "@@ -0,0 +1,22 @@\n+\t.section .preinit_array.01000,\"aw\",%preinit_array\n+\t.dc.a 0\n+\n+\t.section .init_array.01000,\"aw\",%init_array\n+\t.dc.a 0\n+\n+\t.section .fini_array.01000,\"aw\",%fini_array\n+\t.dc.a 0\n+\n+\t.section .preinit_array.01000,\"awR\",%preinit_array\n+\t.dc.a 0\n+\n+\t.section .init_array.01000,\"awR\",%init_array\n+\t.dc.a 0\n+\n+\t.section .fini_array.01000,\"awR\",%fini_array\n+\t.dc.a 0\n+\n+\t.text\n+\t.globl _start\n+_start:\n+\t.dc.a 0"
    }
  ]
}