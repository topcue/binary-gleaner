{
  "sha": "6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmVlNDQ4Y2MyZDBiOTMzNzcxM2VjYjZiYjJlNjMwNWI0ZjUwNGNiYw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-06T18:59:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-06T18:59:57Z"
    },
    "message": "Select variant field when printing variant\n\nWhen I updated the Ada variant-printing code to be value-based, I\nneglected a couple of issues.  First, print_variant_part must first\nextract the variant field before finding the active component; second,\nprint_field_values should pass in the field value as the outer value\nwhen recursing.\n\nThis patch fixes both of these issues.\n\ngdb/ChangeLog\n2020-04-06  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-valprint.c (print_variant_part): Extract the variant field.\n\t(print_field_values): Use the field as the outer value when\n\trecursing.\n\ngdb/testsuite/ChangeLog\n2020-04-06  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/variant-record/proc.adb: New file.\n\t* gdb.ada/variant-record/value.adb: New file.\n\t* gdb.ada/variant-record/value.s: New file.\n\t* gdb.ada/variant-record.exp: New file.",
    "tree": {
      "sha": "bc6c280d5cb3ad650f3c93b7a5c2455cf66583c7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bc6c280d5cb3ad650f3c93b7a5c2455cf66583c7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dea34e8cc336a80546dac21463583a76e3e5d473",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dea34e8cc336a80546dac21463583a76e3e5d473",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dea34e8cc336a80546dac21463583a76e3e5d473"
    }
  ],
  "stats": {
    "total": 148,
    "additions": 146,
    "deletions": 2
  },
  "files": [
    {
      "sha": "94fbdbde2f2aa4533fc3fbbf0b3b99d2717c0716",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc",
      "patch": "@@ -1,3 +1,9 @@\n+2020-04-06  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-valprint.c (print_variant_part): Extract the variant field.\n+\t(print_field_values): Use the field as the outer value when\n+\trecursing.\n+\n 2020-04-06  Tom Tromey  <tromey@adacore.com>\n \n \t* sh-nbsd-tdep.c: Include nbsd-tdep.h."
    },
    {
      "sha": "2768829cdb314235739dc9f672553ca00d276e8f",
      "filename": "gdb/ada-valprint.c",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc/gdb/ada-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc/gdb/ada-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-valprint.c?ref=6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc",
      "patch": "@@ -565,7 +565,8 @@ print_variant_part (struct value *value, int field_num,\n   if (which < 0)\n     return 0;\n \n-  struct value *active_component = value_field (value, which);\n+  struct value *variant_field = value_field (value, field_num);\n+  struct value *active_component = value_field (variant_field, which);\n   return print_field_values (active_component, outer_value, stream, recurse,\n \t\t\t     options, comma_needed, language);\n }\n@@ -603,8 +604,9 @@ print_field_values (struct value *value, struct value *outer_value,\n \n       if (ada_is_wrapper_field (type, i))\n \t{\n+\t  struct value *field_val = value_field (value, i);\n \t  comma_needed =\n-\t    print_field_values (value_field (value, i), outer_value,\n+\t    print_field_values (field_val, field_val,\n \t\t\t\tstream, recurse, options,\n \t\t\t\tcomma_needed, language);\n \t  continue;"
    },
    {
      "sha": "87015932ed7f3c6252eb4d6769b2d25937b0daac",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc",
      "patch": "@@ -1,3 +1,10 @@\n+2020-04-06  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/variant-record/proc.adb: New file.\n+\t* gdb.ada/variant-record/value.adb: New file.\n+\t* gdb.ada/variant-record/value.s: New file.\n+\t* gdb.ada/variant-record.exp: New file.\n+\n 2020-04-03  Hannes Domani  <ssbssa@yahoo.de>\n \n \tPR gdb/25325"
    },
    {
      "sha": "82b73c6a596d388d1a676a454da2794fed3faa04",
      "filename": "gdb/testsuite/gdb.ada/variant-record.exp",
      "status": "added",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc/gdb/testsuite/gdb.ada/variant-record.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc/gdb/testsuite/gdb.ada/variant-record.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/variant-record.exp?ref=6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc",
      "patch": "@@ -0,0 +1,30 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+load_lib \"ada.exp\"\n+\n+standard_ada_testfile proc\n+\n+if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable debug] != \"\"} {\n+  return -1\n+}\n+\n+clean_restart ${testfile}\n+\n+set bp_location [gdb_get_line_number \"STOP\" ${testdir}/proc.adb]\n+runto \"proc.adb:$bp_location\"\n+\n+gdb_test \"print Value.Name(My_Value)\" \\\n+    \"= \\\\(well => yes, name => \\\"abcdefgh\\\"\\\\)\""
    },
    {
      "sha": "4becfb357ebd73475ae9631ec1c2645703e15d13",
      "filename": "gdb/testsuite/gdb.ada/variant-record/proc.adb",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc/gdb/testsuite/gdb.ada/variant-record/proc.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc/gdb/testsuite/gdb.ada/variant-record/proc.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/variant-record/proc.adb?ref=6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc",
      "patch": "@@ -0,0 +1,21 @@\n+--  Copyright 2020 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+with Value;\n+procedure Proc is\n+  My_Value : Value.T := Value.Create;\n+begin\n+  null; -- STOP\n+end;"
    },
    {
      "sha": "993483d41b899b832da498858e6b9abcbe3d75f3",
      "filename": "gdb/testsuite/gdb.ada/variant-record/value.adb",
      "status": "added",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc/gdb/testsuite/gdb.ada/variant-record/value.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc/gdb/testsuite/gdb.ada/variant-record/value.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/variant-record/value.adb?ref=6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc",
      "patch": "@@ -0,0 +1,30 @@\n+--  Copyright 2020 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+package body Value is\n+  function Create return T is\n+  begin\n+    return (One => (Well => Value_Name.No,\n+                    Unique_Name => (X1 => 1, X2 => 2)),\n+            Two => (Well => Value_Name.Yes,\n+                    Name => \"abcdefgh\"));\n+  end Create;\n+\n+  function Name (Of_Value : T) return Value_Name.T is\n+  begin\n+    return Of_Value.Two;\n+  end Name;\n+\n+end Value;"
    },
    {
      "sha": "f2af7d025a70be0d2ab198c44ea0ee6fc4210c11",
      "filename": "gdb/testsuite/gdb.ada/variant-record/value.ads",
      "status": "added",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc/gdb/testsuite/gdb.ada/variant-record/value.ads",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc/gdb/testsuite/gdb.ada/variant-record/value.ads",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/variant-record/value.ads?ref=6ee448cc2d0b9337713ecb6bb2e6305b4f504cbc",
      "patch": "@@ -0,0 +1,48 @@\n+--  Copyright 2020 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+package Value is\n+  package Value_Name is\n+    Length : constant Positive := 8;\n+    subtype Name_T is String (1 .. Length);\n+\n+    type A_Record_T is\n+      record\n+        X1 : Natural;\n+        X2 : Natural;\n+      end record;\n+\n+    type Yes_No_T is (Yes, No);\n+    type T (Well : Yes_No_T := Yes) is\n+      record\n+        case Well is\n+          when Yes =>\n+            Name : Name_T;\n+          when No =>\n+            Unique_Name : A_Record_T;\n+        end case;\n+      end record;\n+  end;\n+\n+  type T is private;\n+  function Create return T;\n+  function Name (Of_Value : T) return Value_Name.T;\n+private\n+  type T is\n+    record\n+      One : Value_Name.T (Well => Value_Name.No);\n+      Two : Value_Name.T (Well => Value_Name.Yes);\n+    end record;\n+end;"
    }
  ]
}