{
  "sha": "6155c136ccf04b1e4ae1bdc201b853ce899b8607",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjE1NWMxMzZjY2YwNGIxZTRhZTFiZGMyMDFiODUzY2U4OTliODYwNw==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-06-18T20:28:20Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-06-18T22:04:17Z"
    },
    "message": "Don't write to inferior_ptid in inf-ptrace.c\n\ngdb/ChangeLog:\n2020-06-18  Pedro Alves  <palves@redhat.com>\n\n\t* inf-ptrace.c (inf_ptrace_target::create_inferior): Switch to the\n\tadded thread.\n\t(inf_ptrace_target::attach): Don't write to inferior_ptid.  Switch\n\tto the added thread.\n\t(inf_ptrace_target::detach_success): Use switch_to_no_thread\n\tinstead of writing to inferior_ptid.",
    "tree": {
      "sha": "51a93b77b05afcd0e596dd83da90f5e3b91947b3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/51a93b77b05afcd0e596dd83da90f5e3b91947b3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6155c136ccf04b1e4ae1bdc201b853ce899b8607",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6155c136ccf04b1e4ae1bdc201b853ce899b8607",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6155c136ccf04b1e4ae1bdc201b853ce899b8607",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6155c136ccf04b1e4ae1bdc201b853ce899b8607/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c5316fc6e634858a3821e612e613342da562e0b3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c5316fc6e634858a3821e612e613342da562e0b3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c5316fc6e634858a3821e612e613342da562e0b3"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 18,
    "deletions": 10
  },
  "files": [
    {
      "sha": "4bc9c2818bd4682fd2dc627c9e71a775c35b1224",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6155c136ccf04b1e4ae1bdc201b853ce899b8607/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6155c136ccf04b1e4ae1bdc201b853ce899b8607/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6155c136ccf04b1e4ae1bdc201b853ce899b8607",
      "patch": "@@ -1,3 +1,12 @@\n+2020-06-18  Pedro Alves  <palves@redhat.com>\n+\n+\t* inf-ptrace.c (inf_ptrace_target::create_inferior): Switch to the\n+\tadded thread.\n+\t(inf_ptrace_target::attach): Don't write to inferior_ptid.  Switch\n+\tto the added thread.\n+\t(inf_ptrace_target::detach_success): Use switch_to_no_thread\n+\tinstead of writing to inferior_ptid.\n+\n 2020-06-18  Pedro Alves  <palves@redhat.com>\n \n \t* gdbarch-selftests.c: Include \"progspace-and-thread.h\"."
    },
    {
      "sha": "d25d226abba474faeb0e79204440f601c3bec645",
      "filename": "gdb/inf-ptrace.c",
      "status": "modified",
      "additions": 9,
      "deletions": 10,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6155c136ccf04b1e4ae1bdc201b853ce899b8607/gdb/inf-ptrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6155c136ccf04b1e4ae1bdc201b853ce899b8607/gdb/inf-ptrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inf-ptrace.c?ref=6155c136ccf04b1e4ae1bdc201b853ce899b8607",
      "patch": "@@ -90,9 +90,6 @@ inf_ptrace_target::create_inferior (const char *exec_file,\n \t\t\t\t    const std::string &allargs,\n \t\t\t\t    char **env, int from_tty)\n {\n-  pid_t pid;\n-  ptid_t ptid;\n-\n   /* Do not change either targets above or the same target if already present.\n      The reason is the target stack is shared across multiple inferiors.  */\n   int ops_already_pushed = target_is_pushed (this);\n@@ -105,14 +102,15 @@ inf_ptrace_target::create_inferior (const char *exec_file,\n       unpusher.reset (this);\n     }\n \n-  pid = fork_inferior (exec_file, allargs, env, inf_ptrace_me, NULL,\n-\t\t       NULL, NULL, NULL);\n+  pid_t pid = fork_inferior (exec_file, allargs, env, inf_ptrace_me, NULL,\n+\t\t\t     NULL, NULL, NULL);\n \n-  ptid = ptid_t (pid);\n+  ptid_t ptid (pid);\n   /* We have something that executes now.  We'll be running through\n      the shell at this point (if startup-with-shell is true), but the\n      pid shouldn't change.  */\n-  add_thread_silent (this, ptid);\n+  thread_info *thr = add_thread_silent (this, ptid);\n+  switch_to_thread (thr);\n \n   unpusher.release ();\n \n@@ -190,11 +188,12 @@ inf_ptrace_target::attach (const char *args, int from_tty)\n   inf = current_inferior ();\n   inferior_appeared (inf, pid);\n   inf->attach_flag = 1;\n-  inferior_ptid = ptid_t (pid);\n \n   /* Always add a main thread.  If some target extends the ptrace\n      target, it should decorate the ptid later with more info.  */\n-  thread_info *thr = add_thread_silent (this, inferior_ptid);\n+  thread_info *thr = add_thread_silent (this, ptid_t (pid));\n+  switch_to_thread (thr);\n+\n   /* Don't consider the thread stopped until we've processed its\n      initial SIGSTOP stop.  */\n   set_executing (this, thr->ptid, true);\n@@ -232,7 +231,7 @@ inf_ptrace_target::detach (inferior *inf, int from_tty)\n void\n inf_ptrace_target::detach_success (inferior *inf)\n {\n-  inferior_ptid = null_ptid;\n+  switch_to_no_thread ();\n   detach_inferior (inf);\n \n   maybe_unpush_target ();"
    }
  ]
}