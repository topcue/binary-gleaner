{
  "sha": "90160b57032ce8c2d12864a53036bab2c5b86682",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTAxNjBiNTcwMzJjZThjMmQxMjg2NGE1MzAzNmJhYjJjNWI4NjY4Mg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-04-17T15:35:04Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-04-17T15:35:06Z"
    },
    "message": "Remove quick_symbol_functions::expand_symtabs_with_fullname\n\nThis removes quick_symbol_functions::expand_symtabs_with_fullname,\nreplacing it with a call to expand_symtabs_matching.  As with the\nprevious patches, the implementation is consolidated in the objfile\nmethod.\n\ngdb/ChangeLog\n2021-04-17  Tom Tromey  <tom@tromey.com>\n\n\t* quick-symbol.h (struct quick_symbol_functions)\n\t<expand_symtabs_with_fullname>: Remove.\n\t* psymtab.c (psymbol_functions::expand_symtabs_with_fullname):\n\tRemove.\n\t* psympriv.h (struct psymbol_functions)\n\t<expand_symtabs_with_fullname>: Remove.\n\t* dwarf2/read.c (struct dwarf2_base_index_functions)\n\t<expand_symtabs_with_fullname>: Remove.\n\t(dwarf2_base_index_functions::expand_symtabs_with_fullname):\n\tRemove.\n\t* objfiles.h (struct objfile) <expand_symtabs_with_fullname>:\n\tUpdate comment.\n\t* symfile-debug.c (objfile::expand_symtabs_with_fullname):\n\tRewrite.",
    "tree": {
      "sha": "8d999d738be70a8d34aa6ef9a086ac098a3f4703",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8d999d738be70a8d34aa6ef9a086ac098a3f4703"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/90160b57032ce8c2d12864a53036bab2c5b86682",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90160b57032ce8c2d12864a53036bab2c5b86682",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/90160b57032ce8c2d12864a53036bab2c5b86682",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90160b57032ce8c2d12864a53036bab2c5b86682/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7089bd886ec78d623c3188cac48c039bc5eaf3b6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7089bd886ec78d623c3188cac48c039bc5eaf3b6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7089bd886ec78d623c3188cac48c039bc5eaf3b6"
    }
  ],
  "stats": {
    "total": 109,
    "additions": 37,
    "deletions": 72
  },
  "files": [
    {
      "sha": "6de85cb7983612409678e066441cc5cdcdd308a1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90160b57032ce8c2d12864a53036bab2c5b86682/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90160b57032ce8c2d12864a53036bab2c5b86682/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=90160b57032ce8c2d12864a53036bab2c5b86682",
      "patch": "@@ -1,3 +1,20 @@\n+2021-04-17  Tom Tromey  <tom@tromey.com>\n+\n+\t* quick-symbol.h (struct quick_symbol_functions)\n+\t<expand_symtabs_with_fullname>: Remove.\n+\t* psymtab.c (psymbol_functions::expand_symtabs_with_fullname):\n+\tRemove.\n+\t* psympriv.h (struct psymbol_functions)\n+\t<expand_symtabs_with_fullname>: Remove.\n+\t* dwarf2/read.c (struct dwarf2_base_index_functions)\n+\t<expand_symtabs_with_fullname>: Remove.\n+\t(dwarf2_base_index_functions::expand_symtabs_with_fullname):\n+\tRemove.\n+\t* objfiles.h (struct objfile) <expand_symtabs_with_fullname>:\n+\tUpdate comment.\n+\t* symfile-debug.c (objfile::expand_symtabs_with_fullname):\n+\tRewrite.\n+\n 2021-04-17  Tom Tromey  <tom@tromey.com>\n \n \t* symfile-debug.c (objfile::expand_symtabs_for_function):"
    },
    {
      "sha": "6befb77a2b6d8ee602333f90dea31b5d5010d6c1",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 0,
      "deletions": 37,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90160b57032ce8c2d12864a53036bab2c5b86682/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90160b57032ce8c2d12864a53036bab2c5b86682/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=90160b57032ce8c2d12864a53036bab2c5b86682",
      "patch": "@@ -2241,9 +2241,6 @@ struct dwarf2_base_index_functions : public quick_symbol_functions\n \n   void expand_all_symtabs (struct objfile *objfile) override;\n \n-  void expand_symtabs_with_fullname (struct objfile *objfile,\n-\t\t\t\t     const char *fullname) override;\n-\n   struct compunit_symtab *find_pc_sect_compunit_symtab\n     (struct objfile *objfile, struct bound_minimal_symbol msymbol,\n      CORE_ADDR pc, struct obj_section *section, int warn_if_readin) override;\n@@ -3525,40 +3522,6 @@ dwarf2_base_index_functions::expand_all_symtabs (struct objfile *objfile)\n     }\n }\n \n-void\n-dwarf2_base_index_functions::expand_symtabs_with_fullname\n-     (struct objfile *objfile, const char *fullname)\n-{\n-  dwarf2_per_objfile *per_objfile = get_dwarf2_per_objfile (objfile);\n-\n-  /* We don't need to consider type units here.\n-     This is only called for examining code, e.g. expand_line_sal.\n-     There can be an order of magnitude (or more) more type units\n-     than comp units, and we avoid them if we can.  */\n-\n-  for (dwarf2_per_cu_data *per_cu : per_objfile->per_bfd->all_comp_units)\n-    {\n-      /* We only need to look at symtabs not already expanded.  */\n-      if (per_objfile->symtab_set_p (per_cu))\n-\tcontinue;\n-\n-      quick_file_names *file_data = dw2_get_file_names (per_cu, per_objfile);\n-      if (file_data == NULL)\n-\tcontinue;\n-\n-      for (int j = 0; j < file_data->num_file_names; ++j)\n-\t{\n-\t  const char *this_fullname = file_data->file_names[j];\n-\n-\t  if (filename_cmp (this_fullname, fullname) == 0)\n-\t    {\n-\t      dw2_instantiate_symtab (per_cu, per_objfile, false);\n-\t      break;\n-\t    }\n-\t}\n-    }\n-}\n-\n static bool\n dw2_expand_symtabs_matching_symbol\n   (mapped_index_base &index,"
    },
    {
      "sha": "90ea49e7c9079695b791402e9d2b09c146e9b1d8",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90160b57032ce8c2d12864a53036bab2c5b86682/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90160b57032ce8c2d12864a53036bab2c5b86682/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=90160b57032ce8c2d12864a53036bab2c5b86682",
      "patch": "@@ -613,7 +613,11 @@ struct objfile\n   /* See quick_symbol_functions.  */\n   void expand_all_symtabs ();\n \n-  /* See quick_symbol_functions.  */\n+  /* Read all symbol tables associated with OBJFILE which have\n+     symtab_to_fullname equal to FULLNAME.\n+     This is for the purposes of examining code only, e.g., expand_line_sal.\n+     The routine may ignore debug info that is known to not be useful with\n+     code, e.g., DW_TAG_type_unit for dwarf debug info.  */\n   void expand_symtabs_with_fullname (const char *fullname);\n \n   /* See quick_symbol_functions.  */"
    },
    {
      "sha": "a5395718b7a1297d182d18ff46d7c92357b8f265",
      "filename": "gdb/psympriv.h",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90160b57032ce8c2d12864a53036bab2c5b86682/gdb/psympriv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90160b57032ce8c2d12864a53036bab2c5b86682/gdb/psympriv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psympriv.h?ref=90160b57032ce8c2d12864a53036bab2c5b86682",
      "patch": "@@ -518,9 +518,6 @@ struct psymbol_functions : public quick_symbol_functions\n \n   void expand_all_symtabs (struct objfile *objfile) override;\n \n-  void expand_symtabs_with_fullname (struct objfile *objfile,\n-\t\t\t\t     const char *fullname) override;\n-\n   void map_matching_symbols\n     (struct objfile *,\n      const lookup_name_info &lookup_name,"
    },
    {
      "sha": "7c73293ecf164a0a2e53c5138063a87f2e686aec",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90160b57032ce8c2d12864a53036bab2c5b86682/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90160b57032ce8c2d12864a53036bab2c5b86682/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=90160b57032ce8c2d12864a53036bab2c5b86682",
      "patch": "@@ -902,28 +902,6 @@ psymbol_functions::expand_all_symtabs (struct objfile *objfile)\n     psymtab_to_symtab (objfile, psymtab);\n }\n \n-/* Psymtab version of expand_symtabs_with_fullname.  See its definition in\n-   the definition of quick_symbol_functions in symfile.h.  */\n-\n-void\n-psymbol_functions::expand_symtabs_with_fullname (struct objfile *objfile,\n-\t\t\t\t\t\t const char *fullname)\n-{\n-  for (partial_symtab *p : require_partial_symbols (objfile))\n-    {\n-      /* Anonymous psymtabs don't have a name of a source file.  */\n-      if (p->anonymous)\n-\tcontinue;\n-\n-      /* psymtab_to_fullname tries to open the file which is slow.\n-\t Don't call it if we know the basenames don't match.  */\n-      if ((basenames_may_differ\n-\t   || filename_cmp (lbasename (fullname), lbasename (p->filename)) == 0)\n-\t  && filename_cmp (fullname, psymtab_to_fullname (p)) == 0)\n-\tpsymtab_to_symtab (objfile, p);\n-    }\n-}\n-\n /* Psymtab version of map_symbol_filenames.  See its definition in\n    the definition of quick_symbol_functions in symfile.h.  */\n "
    },
    {
      "sha": "d883d7b0c1b79745a4f9b0466464602e7c9f7f38",
      "filename": "gdb/quick-symbol.h",
      "status": "modified",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90160b57032ce8c2d12864a53036bab2c5b86682/gdb/quick-symbol.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90160b57032ce8c2d12864a53036bab2c5b86682/gdb/quick-symbol.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/quick-symbol.h?ref=90160b57032ce8c2d12864a53036bab2c5b86682",
      "patch": "@@ -119,14 +119,6 @@ struct quick_symbol_functions\n   /* Read all symbol tables associated with OBJFILE.  */\n   virtual void expand_all_symtabs (struct objfile *objfile) = 0;\n \n-  /* Read all symbol tables associated with OBJFILE which have\n-     symtab_to_fullname equal to FULLNAME.\n-     This is for the purposes of examining code only, e.g., expand_line_sal.\n-     The routine may ignore debug info that is known to not be useful with\n-     code, e.g., DW_TAG_type_unit for dwarf debug info.  */\n-  virtual void expand_symtabs_with_fullname (struct objfile *objfile,\n-\t\t\t\t\t     const char *fullname) = 0;\n-\n   /* Find global or static symbols in all tables that are in DOMAIN\n      and for which MATCH (symbol name, NAME) == 0, passing each to \n      CALLBACK, reading in partial symbol tables as needed.  Look"
    },
    {
      "sha": "dd5a70b4356bbd361dd6aedfaf91269f938875b4",
      "filename": "gdb/symfile-debug.c",
      "status": "modified",
      "additions": 15,
      "deletions": 1,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90160b57032ce8c2d12864a53036bab2c5b86682/gdb/symfile-debug.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90160b57032ce8c2d12864a53036bab2c5b86682/gdb/symfile-debug.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile-debug.c?ref=90160b57032ce8c2d12864a53036bab2c5b86682",
      "patch": "@@ -334,8 +334,22 @@ objfile::expand_symtabs_with_fullname (const char *fullname)\n \t\t      \"qf->expand_symtabs_with_fullname (%s, \\\"%s\\\")\\n\",\n \t\t      objfile_debug_name (this), fullname);\n \n+  const char *basename = lbasename (fullname);\n+  auto file_matcher = [&] (const char *filename, bool basenames)\n+  {\n+    return filename_cmp (basenames ? basename : fullname, filename) == 0;\n+  };\n+\n   for (const auto &iter : qf)\n-    iter->expand_symtabs_with_fullname (this, fullname);\n+    iter->expand_symtabs_matching (this,\n+\t\t\t\t   file_matcher,\n+\t\t\t\t   nullptr,\n+\t\t\t\t   nullptr,\n+\t\t\t\t   nullptr,\n+\t\t\t\t   (SEARCH_GLOBAL_BLOCK\n+\t\t\t\t    | SEARCH_STATIC_BLOCK),\n+\t\t\t\t   UNDEF_DOMAIN,\n+\t\t\t\t   ALL_DOMAIN);\n }\n \n void"
    }
  ]
}