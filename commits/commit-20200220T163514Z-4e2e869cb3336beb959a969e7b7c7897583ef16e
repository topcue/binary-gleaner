{
  "sha": "4e2e869cb3336beb959a969e7b7c7897583ef16e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGUyZTg2OWNiMzMzNmJlYjk1OWE5NjllN2I3Yzc4OTc1ODNlZjE2ZQ==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-17T15:11:59Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-20T16:35:14Z"
    },
    "message": "gdbserver: turn target op 'get_tib_address' into a method\n\ngdbserver/ChangeLog:\n2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn process_stratum_target's get_tib_address op into a method of\n\tprocess_target.\n\n\t* target.h (struct process_stratum_target): Remove the target op.\n\t(class process_target): Add the target op.  Also add\n\t'supports_get_tib_address'.\n\t* target.cc (process_target::get_tib_address): Define.\n\t(process_target::supports_get_tib_address): Define.\n\n\tUpdate the derived classes and callers below.\n\n\t* server.cc (handle_query): Update.\n\t* linux-low.cc (win32_target_ops): Update.\n\t* lynx-low.cc (lynx_target_ops): Update.\n\t* nto-low.cc (nto_target_ops): Update.\n\t* win32-low.cc (win32_target_ops): Update.\n\t(win32_process_target::supports_get_tib_address): Define.\n\t(win32_get_tib_address): Turn into ...\n\t(win32_process_target::get_tib_address): ... this.\n\t* win32-low.h (class win32_process_target): Update.",
    "tree": {
      "sha": "d00e15f06541649a46f981f2a38b4c89d5ee296b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d00e15f06541649a46f981f2a38b4c89d5ee296b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4e2e869cb3336beb959a969e7b7c7897583ef16e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4e2e869cb3336beb959a969e7b7c7897583ef16e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4e2e869cb3336beb959a969e7b7c7897583ef16e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4e2e869cb3336beb959a969e7b7c7897583ef16e/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "68119632a065f7d2a1bdd4c9524484c741544f24",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68119632a065f7d2a1bdd4c9524484c741544f24",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/68119632a065f7d2a1bdd4c9524484c741544f24"
    }
  ],
  "stats": {
    "total": 66,
    "additions": 55,
    "deletions": 11
  },
  "files": [
    {
      "sha": "acbc7ad85f2875358282205e53e1a1a13e137cd5",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4e2e869cb3336beb959a969e7b7c7897583ef16e/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4e2e869cb3336beb959a969e7b7c7897583ef16e/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=4e2e869cb3336beb959a969e7b7c7897583ef16e",
      "patch": "@@ -1,3 +1,26 @@\n+2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn process_stratum_target's get_tib_address op into a method of\n+\tprocess_target.\n+\n+\t* target.h (struct process_stratum_target): Remove the target op.\n+\t(class process_target): Add the target op.  Also add\n+\t'supports_get_tib_address'.\n+\t* target.cc (process_target::get_tib_address): Define.\n+\t(process_target::supports_get_tib_address): Define.\n+\n+\tUpdate the derived classes and callers below.\n+\n+\t* server.cc (handle_query): Update.\n+\t* linux-low.cc (win32_target_ops): Update.\n+\t* lynx-low.cc (lynx_target_ops): Update.\n+\t* nto-low.cc (nto_target_ops): Update.\n+\t* win32-low.cc (win32_target_ops): Update.\n+\t(win32_process_target::supports_get_tib_address): Define.\n+\t(win32_get_tib_address): Turn into ...\n+\t(win32_process_target::get_tib_address): ... this.\n+\t* win32-low.h (class win32_process_target): Update.\n+\n 2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn process_stratum_target's thread_stopped op into a method of"
    },
    {
      "sha": "c7ebffdf708b3458cee65e51794b4c895ab7c93f",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4e2e869cb3336beb959a969e7b7c7897583ef16e/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4e2e869cb3336beb959a969e7b7c7897583ef16e/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=4e2e869cb3336beb959a969e7b7c7897583ef16e",
      "patch": "@@ -7455,7 +7455,6 @@ linux_get_hwcap2 (int wordsize)\n static linux_process_target the_linux_target;\n \n static process_stratum_target linux_target_ops = {\n-  NULL,\n   linux_pause_all,\n   linux_unpause_all,\n   linux_stabilize_threads,"
    },
    {
      "sha": "9f96faf802ce0765480f980cbb350119b4b20433",
      "filename": "gdbserver/lynx-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4e2e869cb3336beb959a969e7b7c7897583ef16e/gdbserver/lynx-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4e2e869cb3336beb959a969e7b7c7897583ef16e/gdbserver/lynx-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.cc?ref=4e2e869cb3336beb959a969e7b7c7897583ef16e",
      "patch": "@@ -735,7 +735,6 @@ static lynx_process_target the_lynx_target;\n /* The LynxOS target_ops vector.  */\n \n static process_stratum_target lynx_target_ops = {\n-  NULL,  /* get_tib_address */\n   NULL,  /* pause_all */\n   NULL,  /* unpause_all */\n   NULL,  /* stabilize_threads */"
    },
    {
      "sha": "08f73fa3871223410d455917f54d70d172f48d71",
      "filename": "gdbserver/nto-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4e2e869cb3336beb959a969e7b7c7897583ef16e/gdbserver/nto-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4e2e869cb3336beb959a969e7b7c7897583ef16e/gdbserver/nto-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.cc?ref=4e2e869cb3336beb959a969e7b7c7897583ef16e",
      "patch": "@@ -947,7 +947,6 @@ nto_sw_breakpoint_from_kind (int kind, int *size)\n static nto_process_target the_nto_target;\n \n static process_stratum_target nto_target_ops = {\n-  NULL, /* get_tib_address */\n   NULL, /* pause_all */\n   NULL, /* unpause_all */\n   NULL, /* stabilize_threads */"
    },
    {
      "sha": "77155935fab02a282f2fd34ab602e3f3f17b3ad2",
      "filename": "gdbserver/server.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4e2e869cb3336beb959a969e7b7c7897583ef16e/gdbserver/server.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4e2e869cb3336beb959a969e7b7c7897583ef16e/gdbserver/server.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/server.cc?ref=4e2e869cb3336beb959a969e7b7c7897583ef16e",
      "patch": "@@ -2532,15 +2532,15 @@ handle_query (char *own_buf, int packet_len, int *new_packet_len_p)\n     }\n \n   /* Windows OS Thread Information Block address support.  */\n-  if (the_target->get_tib_address != NULL\n+  if (the_target->pt->supports_get_tib_address ()\n       && startswith (own_buf, \"qGetTIBAddr:\"))\n     {\n       const char *annex;\n       int n;\n       CORE_ADDR tlb;\n       ptid_t ptid = read_ptid (own_buf + 12, &annex);\n \n-      n = (*the_target->get_tib_address) (ptid, &tlb);\n+      n = the_target->pt->get_tib_address (ptid, &tlb);\n       if (n == 1)\n \t{\n \t  strcpy (own_buf, paddress(tlb));"
    },
    {
      "sha": "680addadf78de987d58a7ac930d9a1dc1615e3d3",
      "filename": "gdbserver/target.cc",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4e2e869cb3336beb959a969e7b7c7897583ef16e/gdbserver/target.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4e2e869cb3336beb959a969e7b7c7897583ef16e/gdbserver/target.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.cc?ref=4e2e869cb3336beb959a969e7b7c7897583ef16e",
      "patch": "@@ -638,3 +638,15 @@ process_target::thread_stopped (thread_info *thread)\n {\n   gdb_assert_not_reached (\"target op thread_stopped not supported\");\n }\n+\n+bool\n+process_target::supports_get_tib_address ()\n+{\n+  return false;\n+}\n+\n+int\n+process_target::get_tib_address (ptid_t ptid, CORE_ADDR *address)\n+{\n+  gdb_assert_not_reached (\"target op get_tib_address not supported\");\n+}"
    },
    {
      "sha": "4da15a06734aa38972c9ba161454c540be034357",
      "filename": "gdbserver/target.h",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4e2e869cb3336beb959a969e7b7c7897583ef16e/gdbserver/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4e2e869cb3336beb959a969e7b7c7897583ef16e/gdbserver/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.h?ref=4e2e869cb3336beb959a969e7b7c7897583ef16e",
      "patch": "@@ -70,9 +70,6 @@ class process_target;\n    shared code.  */\n struct process_stratum_target\n {\n-  /* Read Thread Information Block address.  */\n-  int (*get_tib_address) (ptid_t ptid, CORE_ADDR *address);\n-\n   /* Pause all threads.  If FREEZE, arrange for any resume attempt to\n      be ignored until an unpause_all call unfreezes threads again.\n      There can be nested calls to pause_all, so a freeze counter\n@@ -491,6 +488,12 @@ class process_target\n \n   /* Return true if THREAD is known to be stopped now.  */\n   virtual bool thread_stopped (thread_info *thread);\n+\n+  /* Return true if the get_tib_address op is supported.  */\n+  virtual bool supports_get_tib_address ();\n+\n+  /* Read Thread Information Block address.  */\n+  virtual int get_tib_address (ptid_t ptid, CORE_ADDR *address);\n };\n \n extern process_stratum_target *the_target;"
    },
    {
      "sha": "9bffdaaf1ae0f6752765c75a5bae34a7bd23ae81",
      "filename": "gdbserver/win32-low.cc",
      "status": "modified",
      "additions": 8,
      "deletions": 3,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4e2e869cb3336beb959a969e7b7c7897583ef16e/gdbserver/win32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4e2e869cb3336beb959a969e7b7c7897583ef16e/gdbserver/win32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.cc?ref=4e2e869cb3336beb959a969e7b7c7897583ef16e",
      "patch": "@@ -1824,10 +1824,16 @@ win32_process_target::qxfer_siginfo (const char *annex,\n   return len;\n }\n \n+bool\n+win32_process_target::supports_get_tib_address ()\n+{\n+  return true;\n+}\n+\n /* Write Windows OS Thread Information Block address.  */\n \n-static int\n-win32_get_tib_address (ptid_t ptid, CORE_ADDR *addr)\n+int\n+win32_process_target::get_tib_address (ptid_t ptid, CORE_ADDR *addr)\n {\n   win32_thread_info *th;\n   th = thread_rec (ptid, 0);\n@@ -1852,7 +1858,6 @@ win32_sw_breakpoint_from_kind (int kind, int *size)\n static win32_process_target the_win32_target;\n \n static process_stratum_target win32_target_ops = {\n-  win32_get_tib_address,\n   NULL, /* pause_all */\n   NULL, /* unpause_all */\n   NULL, /* stabilize_threads */"
    },
    {
      "sha": "1618501838ecf8ef68e54a626cb418f96623512f",
      "filename": "gdbserver/win32-low.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4e2e869cb3336beb959a969e7b7c7897583ef16e/gdbserver/win32-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4e2e869cb3336beb959a969e7b7c7897583ef16e/gdbserver/win32-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.h?ref=4e2e869cb3336beb959a969e7b7c7897583ef16e",
      "patch": "@@ -162,6 +162,10 @@ class win32_process_target : public process_target\n   int qxfer_siginfo (const char *annex, unsigned char *readbuf,\n \t\t     unsigned const char *writebuf,\n \t\t     CORE_ADDR offset, int len) override;\n+\n+  bool supports_get_tib_address () override;\n+\n+  int get_tib_address (ptid_t ptid, CORE_ADDR *addr) override;\n };\n \n /* Retrieve the context for this thread, if not already retrieved.  */"
    }
  ]
}