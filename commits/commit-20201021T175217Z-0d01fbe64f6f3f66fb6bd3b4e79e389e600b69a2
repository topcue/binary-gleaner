{
  "sha": "0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGQwMWZiZTY0ZjZmM2Y2NmZiNmJkM2I0ZTc5ZTM4OWU2MDBiNjlhMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-10-21T14:54:17Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-10-21T17:52:17Z"
    },
    "message": "Remove libctf/mkerrors.sed\n\nThis patch removes libctf/mkerrors.sed, replacing it with a macro in\nctf-api.h.  This simplifies the build and avoids possible unportable\ncode in the sed script.\n\n2020-10-21  Tom Tromey  <tromey@adacore.com>\n\n\t* ctf-api.h (_CTF_ERRORS): New macro.\n\nlibctf/ChangeLog\n2020-10-21  Tom Tromey  <tromey@adacore.com>\n\n\t* mkerrors.sed: Remove.\n\t* ctf-error.c (_CTF_FIRST): New define.\n\t(_CTF_ITEM): Define this, not _CTF_STR.\n\t(_ctf_errlist, _ctf_erridx): Use _CTF_ERRORS.\n\t(ERRSTRFIELD): Rewrite.\n\t(ERRSTRFIELD1): Remove.\n\t* Makefile.in: Rebuild.\n\t* Makefile.am (BUILT_SOURCES): Remove.\n\t(ctf-error.h): Remove.",
    "tree": {
      "sha": "454f3fb08e8503fa243a44badf74f05a9a7128d9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/454f3fb08e8503fa243a44badf74f05a9a7128d9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ffd73a8b9ed30934b3cd00c15f5aa041621dcf9c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ffd73a8b9ed30934b3cd00c15f5aa041621dcf9c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ffd73a8b9ed30934b3cd00c15f5aa041621dcf9c"
    }
  ],
  "stats": {
    "total": 218,
    "additions": 104,
    "deletions": 114
  },
  "files": [
    {
      "sha": "b4ac311376b7732643c419984fd23a2e0967fbf3",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2",
      "patch": "@@ -1,3 +1,7 @@\n+2020-10-21  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ctf-api.h (_CTF_ERRORS): New macro.\n+\n 2020-10-16  Nelson Chu  <nelson.chu@sifive.com>\n \n \t* elf/riscv.h: Add R_RISCV_IRELATIVE to 58."
    },
    {
      "sha": "9ead3eea278ff3e0fca0465b99799a4d078810b9",
      "filename": "include/ctf-api.h",
      "status": "modified",
      "additions": 69,
      "deletions": 58,
      "changes": 127,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2/include/ctf-api.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2/include/ctf-api.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ctf-api.h?ref=0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2",
      "patch": "@@ -158,68 +158,79 @@ typedef struct ctf_snapshot_id\n    a straight integral -1 also use ctf_errno().  */\n #define\tCTF_ERR\t((ctf_id_t) -1L)\n \n-#define\tECTF_BASE\t1000\t/* Base value for libctf errnos.  */\n+/* This macro holds information about all the available ctf errors.\n+   It is used to form both an enum holding all the error constants,\n+   and also the error strings themselves.  To use, define _CTF_FIRST\n+   and _CTF_ITEM to expand as you like, then mention the macro name.\n+   See the enum after this for an example.  */\n+#define _CTF_ERRORS \\\n+  _CTF_FIRST (ECTF_FMT, \"File is not in CTF or ELF format.\")\t\\\n+  _CTF_ITEM (ECTF_BFDERR, \"BFD error.\")\t\t\t\t\\\n+  _CTF_ITEM (ECTF_CTFVERS, \"CTF dict version is too new for libctf.\") \\\n+  _CTF_ITEM (ECTF_BFD_AMBIGUOUS, \"Ambiguous BFD target.\")\t\\\n+  _CTF_ITEM (ECTF_SYMTAB, \"Symbol table uses invalid entry size.\") \\\n+  _CTF_ITEM (ECTF_SYMBAD, \"Symbol table data buffer is not valid.\") \\\n+  _CTF_ITEM (ECTF_STRBAD, \"String table data buffer is not valid.\") \\\n+  _CTF_ITEM (ECTF_CORRUPT, \"File data structure corruption detected.\") \\\n+  _CTF_ITEM (ECTF_NOCTFDATA, \"File does not contain CTF data.\") \\\n+  _CTF_ITEM (ECTF_NOCTFBUF, \"Buffer does not contain CTF data.\") \\\n+  _CTF_ITEM (ECTF_NOSYMTAB, \"Symbol table information is not available.\") \\\n+  _CTF_ITEM (ECTF_NOPARENT, \"The parent CTF dictionary is unavailable.\") \\\n+  _CTF_ITEM (ECTF_DMODEL, \"Data model mismatch.\") \\\n+  _CTF_ITEM (ECTF_LINKADDEDLATE, \"File added to link too late.\") \\\n+  _CTF_ITEM (ECTF_ZALLOC, \"Failed to allocate (de)compression buffer.\") \\\n+  _CTF_ITEM (ECTF_DECOMPRESS, \"Failed to decompress CTF data.\") \\\n+  _CTF_ITEM (ECTF_STRTAB, \"External string table is not available.\") \\\n+  _CTF_ITEM (ECTF_BADNAME, \"String name offset is corrupt.\") \\\n+  _CTF_ITEM (ECTF_BADID, \"Invalid type identifier.\") \\\n+  _CTF_ITEM (ECTF_NOTSOU, \"Type is not a struct or union.\") \\\n+  _CTF_ITEM (ECTF_NOTENUM, \"Type is not an enum.\") \\\n+  _CTF_ITEM (ECTF_NOTSUE, \"Type is not a struct, union, or enum.\") \\\n+  _CTF_ITEM (ECTF_NOTINTFP, \"Type is not an integer, float, or enum.\") \\\n+  _CTF_ITEM (ECTF_NOTARRAY, \"Type is not an array.\") \\\n+  _CTF_ITEM (ECTF_NOTREF, \"Type does not reference another type.\") \\\n+  _CTF_ITEM (ECTF_NAMELEN, \"Buffer is too small to hold type name.\") \\\n+  _CTF_ITEM (ECTF_NOTYPE, \"No type found corresponding to name.\") \\\n+  _CTF_ITEM (ECTF_SYNTAX, \"Syntax error in type name.\") \\\n+  _CTF_ITEM (ECTF_NOTFUNC, \"Symbol table entry or type is not a function.\") \\\n+  _CTF_ITEM (ECTF_NOFUNCDAT, \"No function information available for function.\") \\\n+  _CTF_ITEM (ECTF_NOTDATA, \"Symbol table entry does not refer to a data object.\") \\\n+  _CTF_ITEM (ECTF_NOTYPEDAT, \"No type information available for symbol.\") \\\n+  _CTF_ITEM (ECTF_NOLABEL, \"No label found corresponding to name.\") \\\n+  _CTF_ITEM (ECTF_NOLABELDATA, \"File does not contain any labels.\") \\\n+  _CTF_ITEM (ECTF_NOTSUP, \"Feature not supported.\") \\\n+  _CTF_ITEM (ECTF_NOENUMNAM, \"Enum element name not found.\") \\\n+  _CTF_ITEM (ECTF_NOMEMBNAM, \"Member name not found.\") \\\n+  _CTF_ITEM (ECTF_RDONLY, \"CTF container is read-only.\") \\\n+  _CTF_ITEM (ECTF_DTFULL, \"CTF type is full (no more members allowed).\") \\\n+  _CTF_ITEM (ECTF_FULL, \"CTF container is full.\") \\\n+  _CTF_ITEM (ECTF_DUPLICATE, \"Duplicate member or variable name.\") \\\n+  _CTF_ITEM (ECTF_CONFLICT, \"Conflicting type is already defined.\") \\\n+  _CTF_ITEM (ECTF_OVERROLLBACK, \"Attempt to roll back past a ctf_update.\") \\\n+  _CTF_ITEM (ECTF_COMPRESS, \"Failed to compress CTF data.\") \\\n+  _CTF_ITEM (ECTF_ARCREATE, \"Error creating CTF archive.\") \\\n+  _CTF_ITEM (ECTF_ARNNAME, \"Name not found in CTF archive.\") \\\n+  _CTF_ITEM (ECTF_SLICEOVERFLOW, \"Overflow of type bitness or offset in slice.\") \\\n+  _CTF_ITEM (ECTF_DUMPSECTUNKNOWN, \"Unknown section number in dump.\") \\\n+  _CTF_ITEM (ECTF_DUMPSECTCHANGED, \"Section changed in middle of dump.\") \\\n+  _CTF_ITEM (ECTF_NOTYET, \"Feature not yet implemented.\") \\\n+  _CTF_ITEM (ECTF_INTERNAL, \"Internal error: assertion failure.\") \\\n+  _CTF_ITEM (ECTF_NONREPRESENTABLE, \"Type not representable in CTF.\") \\\n+  _CTF_ITEM (ECTF_NEXT_END, \"End of iteration.\") \\\n+  _CTF_ITEM (ECTF_NEXT_WRONGFUN, \"Wrong iteration function called.\") \\\n+  _CTF_ITEM (ECTF_NEXT_WRONGFP, \"Iteration entity changed in mid-iterate.\") \\\n+  _CTF_ITEM (ECTF_FLAGS, \"CTF header contains flags unknown to libctf.\") \\\n+  _CTF_ITEM (ECTF_NEEDSBFD, \"This feature needs a libctf with BFD support.\")\n \n+#define\tECTF_BASE\t1000\t/* Base value for libctf errnos.  */\n \n enum\n   {\n-   ECTF_FMT = ECTF_BASE, /* File is not in CTF or ELF format.  */\n-   ECTF_BFDERR,\t\t/* BFD error.  */\n-   ECTF_CTFVERS,\t/* CTF dict version is too new for libctf.  */\n-   ECTF_BFD_AMBIGUOUS,\t/* Ambiguous BFD target.  */\n-   ECTF_SYMTAB,\t\t/* Symbol table uses invalid entry size.  */\n-   ECTF_SYMBAD,\t\t/* Symbol table data buffer is not valid.  */\n-   ECTF_STRBAD,\t\t/* String table data buffer is not valid.  */\n-   ECTF_CORRUPT,\t/* File data structure corruption detected.  */\n-   ECTF_NOCTFDATA,\t/* File does not contain CTF data.  */\n-   ECTF_NOCTFBUF,\t/* Buffer does not contain CTF data.  */\n-   ECTF_NOSYMTAB,\t/* Symbol table information is not available.  */\n-   ECTF_NOPARENT,\t/* The parent CTF dictionary is unavailable.  */\n-   ECTF_DMODEL,\t\t/* Data model mismatch.  */\n-   ECTF_LINKADDEDLATE,\t/* File added to link too late.  */\n-   ECTF_ZALLOC,\t\t/* Failed to allocate (de)compression buffer.  */\n-   ECTF_DECOMPRESS,\t/* Failed to decompress CTF data.  */\n-   ECTF_STRTAB,\t\t/* External string table is not available.  */\n-   ECTF_BADNAME,\t/* String name offset is corrupt.  */\n-   ECTF_BADID,\t\t/* Invalid type identifier.  */\n-   ECTF_NOTSOU,\t\t/* Type is not a struct or union.  */\n-   ECTF_NOTENUM,\t/* Type is not an enum.  */\n-   ECTF_NOTSUE,\t\t/* Type is not a struct, union, or enum.  */\n-   ECTF_NOTINTFP,\t/* Type is not an integer, float, or enum.  */\n-   ECTF_NOTARRAY,\t/* Type is not an array.  */\n-   ECTF_NOTREF,\t\t/* Type does not reference another type.  */\n-   ECTF_NAMELEN,\t/* Buffer is too small to hold type name.  */\n-   ECTF_NOTYPE,\t\t/* No type found corresponding to name.  */\n-   ECTF_SYNTAX,\t\t/* Syntax error in type name.  */\n-   ECTF_NOTFUNC,\t/* Symbol table entry or type is not a function.  */\n-   ECTF_NOFUNCDAT,\t/* No function information available for function.  */\n-   ECTF_NOTDATA,\t/* Symbol table entry does not refer to a data object.  */\n-   ECTF_NOTYPEDAT,\t/* No type information available for symbol.  */\n-   ECTF_NOLABEL,\t/* No label found corresponding to name.  */\n-   ECTF_NOLABELDATA,\t/* File does not contain any labels.  */\n-   ECTF_NOTSUP,\t\t/* Feature not supported.  */\n-   ECTF_NOENUMNAM,\t/* Enum element name not found.  */\n-   ECTF_NOMEMBNAM,\t/* Member name not found.  */\n-   ECTF_RDONLY,\t\t/* CTF container is read-only.  */\n-   ECTF_DTFULL,\t\t/* CTF type is full (no more members allowed).  */\n-   ECTF_FULL,\t\t/* CTF container is full.  */\n-   ECTF_DUPLICATE,\t/* Duplicate member or variable name.  */\n-   ECTF_CONFLICT,\t/* Conflicting type is already defined.  */\n-   ECTF_OVERROLLBACK,\t/* Attempt to roll back past a ctf_update.  */\n-   ECTF_COMPRESS,\t/* Failed to compress CTF data.  */\n-   ECTF_ARCREATE,\t/* Error creating CTF archive.  */\n-   ECTF_ARNNAME,\t/* Name not found in CTF archive.  */\n-   ECTF_SLICEOVERFLOW,\t/* Overflow of type bitness or offset in slice.  */\n-   ECTF_DUMPSECTUNKNOWN, /* Unknown section number in dump.  */\n-   ECTF_DUMPSECTCHANGED, /* Section changed in middle of dump.  */\n-   ECTF_NOTYET,\t\t/* Feature not yet implemented.  */\n-   ECTF_INTERNAL,\t/* Internal error: assertion failure.  */\n-   ECTF_NONREPRESENTABLE, /* Type not representable in CTF.  */\n-   ECTF_NEXT_END,\t/* End of iteration.  */\n-   ECTF_NEXT_WRONGFUN,\t/* Wrong iteration function called.  */\n-   ECTF_NEXT_WRONGFP,\t/* Iteration entity changed in mid-iterate.  */\n-   ECTF_FLAGS,\t\t/* CTF header contains flags unknown to libctf.  */\n-   ECTF_NEEDSBFD\t/* This feature needs a libctf with BFD support.  */\n+#define _CTF_FIRST(NAME, STR) NAME = ECTF_BASE\n+#define _CTF_ITEM(NAME, STR) , NAME\n+_CTF_ERRORS\n+#undef _CTF_ITEM\n+#undef _CTF_FIRST\n   };\n \n #define ECTF_NERR (ECTF_NEEDSBFD - ECTF_BASE + 1) /* Count of CTF errors.  */"
    },
    {
      "sha": "a9aaea68513679a360010d0e12b1889fb26e949e",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2",
      "patch": "@@ -1,3 +1,15 @@\n+2020-10-21  Tom Tromey  <tromey@adacore.com>\n+\n+\t* mkerrors.sed: Remove.\n+\t* ctf-error.c (_CTF_FIRST): New define.\n+\t(_CTF_ITEM): Define this, not _CTF_STR.\n+\t(_ctf_errlist, _ctf_erridx): Use _CTF_ERRORS.\n+\t(ERRSTRFIELD): Rewrite.\n+\t(ERRSTRFIELD1): Remove.\n+\t* Makefile.in: Rebuild.\n+\t* Makefile.am (BUILT_SOURCES): Remove.\n+\t(ctf-error.h): Remove.\n+\n 2020-08-27  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-subr.c (open_errors): New list."
    },
    {
      "sha": "fc1f229a4b4ebd89aaf402fb51a015b52dc4851e",
      "filename": "libctf/Makefile.am",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2/libctf/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2/libctf/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/Makefile.am?ref=0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2",
      "patch": "@@ -55,8 +55,3 @@ libctf_la_CPPFLAGS = $(AM_CPPFLAGS) -DNOBFD=0\n libctf_la_DEPENDENCIES = @BFD_DEPENDENCIES@\n libctf_la_LDFLAGS = $(libctf_nobfd_la_LDFLAGS)\n libctf_la_SOURCES = $(libctf_nobfd_la_SOURCES) ctf-open-bfd.c\n-\n-BUILT_SOURCES = ctf-error.h\n-\n-ctf-error.h: $(srcdir)/mkerrors.sed $(srcdir)/../include/ctf-api.h\n-\tsed -nf $(srcdir)/mkerrors.sed < $(srcdir)/../include/ctf-api.h > $@"
    },
    {
      "sha": "23b83b234cb8a730a495b464deb4cb4111cd6b31",
      "filename": "libctf/Makefile.in",
      "status": "modified",
      "additions": 4,
      "deletions": 11,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2/libctf/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2/libctf/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/Makefile.in?ref=0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2",
      "patch": "@@ -465,8 +465,7 @@ libctf_la_CPPFLAGS = $(AM_CPPFLAGS) -DNOBFD=0\n libctf_la_DEPENDENCIES = @BFD_DEPENDENCIES@\n libctf_la_LDFLAGS = $(libctf_nobfd_la_LDFLAGS)\n libctf_la_SOURCES = $(libctf_nobfd_la_SOURCES) ctf-open-bfd.c\n-BUILT_SOURCES = ctf-error.h\n-all: $(BUILT_SOURCES) config.h\n+all: config.h\n \t$(MAKE) $(AM_MAKEFLAGS) all-am\n \n .SUFFIXES:\n@@ -1133,15 +1132,13 @@ distcleancheck: distclean\n \t       $(distcleancheck_listfiles) ; \\\n \t       exit 1; } >&2\n check-am: all-am\n-check: $(BUILT_SOURCES)\n-\t$(MAKE) $(AM_MAKEFLAGS) check-am\n+check: check-am\n all-am: Makefile $(LTLIBRARIES) $(HEADERS) config.h\n installdirs:\n \tfor dir in \"$(DESTDIR)$(libdir)\" \"$(DESTDIR)$(includedir)\"; do \\\n \t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n \tdone\n-install: $(BUILT_SOURCES)\n-\t$(MAKE) $(AM_MAKEFLAGS) install-am\n+install: install-am\n install-exec: install-exec-am\n install-data: install-data-am\n uninstall: uninstall-am\n@@ -1171,7 +1168,6 @@ distclean-generic:\n maintainer-clean-generic:\n \t@echo \"This command is intended for maintainers to use\"\n \t@echo \"it deletes files that may require special tools to rebuild.\"\n-\t-test -z \"$(BUILT_SOURCES)\" || rm -f $(BUILT_SOURCES)\n clean: clean-am\n \n clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \\\n@@ -1246,7 +1242,7 @@ ps-am:\n \n uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES\n \n-.MAKE: all check install install-am install-strip\n+.MAKE: all install-am install-strip\n \n .PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-am clean \\\n \tclean-cscope clean-generic clean-libLTLIBRARIES clean-libtool \\\n@@ -1270,9 +1266,6 @@ uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES\n .PRECIOUS: Makefile\n \n \n-ctf-error.h: $(srcdir)/mkerrors.sed $(srcdir)/../include/ctf-api.h\n-\tsed -nf $(srcdir)/mkerrors.sed < $(srcdir)/../include/ctf-api.h > $@\n-\n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded.\n .NOEXPORT:"
    },
    {
      "sha": "cb46a821ef0b6145af404b268e1f34389619d26c",
      "filename": "libctf/ctf-error.c",
      "status": "modified",
      "additions": 15,
      "deletions": 12,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2/libctf/ctf-error.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2/libctf/ctf-error.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-error.c?ref=0d01fbe64f6f3f66fb6bd3b4e79e389e600b69a2",
      "patch": "@@ -24,10 +24,13 @@\n /* This construct is due to Bruno Haible: much thanks.  */\n \n /* Give each structure member a unique name.  The name does not matter, so we\n-   use the line number in ctf-error.h to uniquify them.  */\n+   use the enum constant to uniquify them.  */\n \n-#define ERRSTRFIELD(line) ERRSTRFIELD1 (line)\n-#define ERRSTRFIELD1(line) ctf_errstr##line\n+#define ERRSTRFIELD(N) ctf_errstr##N\n+\n+/* In this file, we want to treat the first item of the ctf error\n+   macro like subsequent items.  */\n+#define _CTF_FIRST(NAME, VALUE) _CTF_ITEM(NAME, VALUE)\n \n /* The error message strings, each in a unique structure member precisely big\n    enough for that error, plus a str member to access them all as a string\n@@ -37,27 +40,27 @@ static const union _ctf_errlist_t\n {\n   __extension__ struct\n   {\n-#define _CTF_STR(n, s) char ERRSTRFIELD (__LINE__) [sizeof (s)];\n-#include \"ctf-error.h\"\n-#undef _CTF_STR\n+#define _CTF_ITEM(n, s) char ERRSTRFIELD (n) [sizeof (s)];\n+_CTF_ERRORS\n+#undef _CTF_ITEM\n   };\n   char str[1];\n } _ctf_errlist =\n   {\n    {\n-#define _CTF_STR(n, s) N_(s),\n-#include \"ctf-error.h\"\n-#undef _CTF_STR\n+#define _CTF_ITEM(n, s) N_(s),\n+_CTF_ERRORS\n+#undef _CTF_ITEM\n    }\n   };\n \n /* Offsets to each member in the string table, computed using offsetof.  */\n \n static const unsigned int _ctf_erridx[] =\n   {\n-#define _CTF_STR(n, s) [n - ECTF_BASE] = offsetof (union _ctf_errlist_t, ERRSTRFIELD (__LINE__)),\n-#include \"ctf-error.h\"\n-#undef _CTF_STR\n+#define _CTF_ITEM(n, s) [n - ECTF_BASE] = offsetof (union _ctf_errlist_t, ERRSTRFIELD (n)),\n+_CTF_ERRORS\n+#undef _CTF_ITEM\n   };\n \n const char *"
    },
    {
      "sha": "ddd4d2286e78dba805e1712d99c45cc95b4ecdc2",
      "filename": "libctf/mkerrors.sed",
      "status": "removed",
      "additions": 0,
      "deletions": 28,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ffd73a8b9ed30934b3cd00c15f5aa041621dcf9c/libctf/mkerrors.sed",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ffd73a8b9ed30934b3cd00c15f5aa041621dcf9c/libctf/mkerrors.sed",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/mkerrors.sed?ref=ffd73a8b9ed30934b3cd00c15f5aa041621dcf9c",
      "patch": "@@ -1,28 +0,0 @@\n-#\n-#   Copyright (C) 2020 Free Software Foundation, Inc.\n-#\n-# This file is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-#\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with this program; see the file COPYING.  If not see\n-# <http://www.gnu.org/licenses/>.\n-#\n-\n-# Only process lines in the error-define block\n-/= ECTF_BASE/,/ECTF_NERR/ {\n-    # Do not process non-errors (braces, ECTF_NERR, etc).\n-    /^ *ECTF_/!n;\n-    # Strip out the base initializer.\n-    s, = ECTF_BASE,,;\n-    # Transform errors into _STR(...).\n-    s@^ *\\(ECTF_[^[:blank:],]*\\),\\{0,1\\}[[:blank:]]*/\\* \\(.*\\).  \\*/$@_CTF_STR (\\1, \"\\2\")@;\n-    p;\n-  }"
    }
  ]
}