{
  "sha": "f12650bff1a591357c26e0ef6d7be0323f76fdb8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjEyNjUwYmZmMWE1OTEzNTdjMjZlMGVmNmQ3YmUwMzIzZjc2ZmRiOA==",
  "commit": {
    "author": {
      "name": "Cary Coutant",
      "email": "ccoutant@gmail.com",
      "date": "2020-12-13T23:19:41Z"
    },
    "committer": {
      "name": "Cary Coutant",
      "email": "ccoutant@gmail.com",
      "date": "2020-12-13T23:27:25Z"
    },
    "message": "Fix incremental linking with rodata merge sections.\n\nWhen processing the incremental update, incoming .rodata merge sections\ndo not match the corresponding section in the base file, because the\nSHF_MERGE flag had not been masked out of the latter.\n\ngold/\n\tPR gold/24123\n\t* layout.cc (Layout::init_fixed_output_section): Mask out flags that\n\tshould be ignored when matching sections.",
    "tree": {
      "sha": "d0f669dfdd702ca0ccc517be90f55b1d5464cb26",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d0f669dfdd702ca0ccc517be90f55b1d5464cb26"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f12650bff1a591357c26e0ef6d7be0323f76fdb8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f12650bff1a591357c26e0ef6d7be0323f76fdb8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f12650bff1a591357c26e0ef6d7be0323f76fdb8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f12650bff1a591357c26e0ef6d7be0323f76fdb8/comments",
  "author": {
    "login": "ccoutant",
    "id": 1442098,
    "node_id": "MDQ6VXNlcjE0NDIwOTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1442098?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ccoutant",
    "html_url": "https://github.com/ccoutant",
    "followers_url": "https://api.github.com/users/ccoutant/followers",
    "following_url": "https://api.github.com/users/ccoutant/following{/other_user}",
    "gists_url": "https://api.github.com/users/ccoutant/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ccoutant/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ccoutant/subscriptions",
    "organizations_url": "https://api.github.com/users/ccoutant/orgs",
    "repos_url": "https://api.github.com/users/ccoutant/repos",
    "events_url": "https://api.github.com/users/ccoutant/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ccoutant/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ccoutant",
    "id": 1442098,
    "node_id": "MDQ6VXNlcjE0NDIwOTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1442098?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ccoutant",
    "html_url": "https://github.com/ccoutant",
    "followers_url": "https://api.github.com/users/ccoutant/followers",
    "following_url": "https://api.github.com/users/ccoutant/following{/other_user}",
    "gists_url": "https://api.github.com/users/ccoutant/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ccoutant/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ccoutant/subscriptions",
    "organizations_url": "https://api.github.com/users/ccoutant/orgs",
    "repos_url": "https://api.github.com/users/ccoutant/repos",
    "events_url": "https://api.github.com/users/ccoutant/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ccoutant/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4cf2ad720078a9f490dd5b5bc8893a926479196e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4cf2ad720078a9f490dd5b5bc8893a926479196e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4cf2ad720078a9f490dd5b5bc8893a926479196e"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 8,
    "deletions": 1
  },
  "files": [
    {
      "sha": "bfb7a7002ac5ac25b16860cd464ca79ad3aab065",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f12650bff1a591357c26e0ef6d7be0323f76fdb8/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f12650bff1a591357c26e0ef6d7be0323f76fdb8/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=f12650bff1a591357c26e0ef6d7be0323f76fdb8",
      "patch": "@@ -1,3 +1,9 @@\n+2020-12-13  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/24123\n+\t* layout.cc (Layout::init_fixed_output_section): Mask out flags that\n+\tshould be ignored when matching sections.\n+\n 2020-12-07  Alan Modra  <amodra@gmail.com>\n \n \t* plugin.cc (Plugin_recorder::init): Replace strncpy with memcpy."
    },
    {
      "sha": "8acfb960d123fb3643031c901797a470bc6c8d99",
      "filename": "gold/layout.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f12650bff1a591357c26e0ef6d7be0323f76fdb8/gold/layout.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f12650bff1a591357c26e0ef6d7be0323f76fdb8/gold/layout.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/layout.cc?ref=f12650bff1a591357c26e0ef6d7be0323f76fdb8",
      "patch": "@@ -1099,7 +1099,8 @@ Layout::init_fixed_output_section(const char* name,\n   typename elfcpp::Elf_types<size>::Elf_Addr sh_addr = shdr.get_sh_addr();\n   typename elfcpp::Elf_types<size>::Elf_Off sh_offset = shdr.get_sh_offset();\n   typename elfcpp::Elf_types<size>::Elf_WXword sh_size = shdr.get_sh_size();\n-  typename elfcpp::Elf_types<size>::Elf_WXword sh_flags = shdr.get_sh_flags();\n+  typename elfcpp::Elf_types<size>::Elf_WXword sh_flags =\n+      this->get_output_section_flags(shdr.get_sh_flags());\n   typename elfcpp::Elf_types<size>::Elf_WXword sh_addralign =\n       shdr.get_sh_addralign();\n "
    }
  ]
}