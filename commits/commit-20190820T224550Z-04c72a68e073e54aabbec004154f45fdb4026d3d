{
  "sha": "04c72a68e073e54aabbec004154f45fdb4026d3d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDRjNzJhNjhlMDczZTU0YWFiYmVjMDA0MTU0ZjQ1ZmRiNDAyNmQzZA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-14T14:25:43Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-20T22:45:50Z"
    },
    "message": "Change some tui_data_window methods to be private\n\nTurning various calls into methods has made it possible to now change\nsome tui_data_window methods to be private.\n\n2019-08-20  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-regs.h (struct tui_data_window) <last_regs_line_no,\n\tline_from_reg_element_no, first_reg_element_no_inline,\n\tdisplay_all_data, delete_data_content_windows,\n\terase_data_content>: Now private.",
    "tree": {
      "sha": "00ef738e718dbc68cb7afeee0f65c9f03a528f9d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/00ef738e718dbc68cb7afeee0f65c9f03a528f9d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/04c72a68e073e54aabbec004154f45fdb4026d3d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/04c72a68e073e54aabbec004154f45fdb4026d3d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/04c72a68e073e54aabbec004154f45fdb4026d3d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/04c72a68e073e54aabbec004154f45fdb4026d3d/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "072272ce055b0234ee9622a80d217f9d1f8083b3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/072272ce055b0234ee9622a80d217f9d1f8083b3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/072272ce055b0234ee9622a80d217f9d1f8083b3"
    }
  ],
  "stats": {
    "total": 69,
    "additions": 39,
    "deletions": 30
  },
  "files": [
    {
      "sha": "41d02a6b49b36acd905491f92a697036f02b2945",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/04c72a68e073e54aabbec004154f45fdb4026d3d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/04c72a68e073e54aabbec004154f45fdb4026d3d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=04c72a68e073e54aabbec004154f45fdb4026d3d",
      "patch": "@@ -1,3 +1,10 @@\n+2019-08-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-regs.h (struct tui_data_window) <last_regs_line_no,\n+\tline_from_reg_element_no, first_reg_element_no_inline,\n+\tdisplay_all_data, delete_data_content_windows,\n+\terase_data_content>: Now private.\n+\n 2019-08-20  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-wingeneral.c (box_win): Change type of highlight_flag."
    },
    {
      "sha": "95e944038c79d53ab6db09e5424e58719347f94e",
      "filename": "gdb/tui/tui-regs.h",
      "status": "modified",
      "additions": 32,
      "deletions": 30,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/04c72a68e073e54aabbec004154f45fdb4026d3d/gdb/tui/tui-regs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/04c72a68e073e54aabbec004154f45fdb4026d3d/gdb/tui/tui-regs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.h?ref=04c72a68e073e54aabbec004154f45fdb4026d3d",
      "patch": "@@ -68,28 +68,20 @@ struct tui_data_window : public tui_win_info\n   int regs_column_count = 0;\n   struct reggroup *current_group = nullptr;\n \n-  /* Answer the number of the last line in the regs display.  If there\n-     are no registers (-1) is returned.  */\n-  int last_regs_line_no () const;\n+  void check_register_values (struct frame_info *frame);\n \n-  /* Answer the line number that the register element at element_no is\n-     on.  If element_no is greater than the number of register\n-     elements there are, -1 is returned.  */\n-  int line_from_reg_element_no (int element_no) const;\n+  void show_registers (struct reggroup *group);\n \n-  /* Answer the index of the first element in line_no.  If line_no is\n-     past the register area (-1) is returned.  */\n-  int first_reg_element_no_inline (int line_no) const;\n+protected:\n \n-  /* Displays the data that is in the data window's content.  It does\n-     not set the content.  */\n-  void display_all_data ();\n+  void do_scroll_vertical (int num_to_scroll) override;\n+  void do_scroll_horizontal (int num_to_scroll) override\n+  {\n+  }\n \n-  /* Delete all the item windows in the data window.  This is usually\n-     done when the data window is scrolled.  */\n-  void delete_data_content_windows ();\n+  void rerender () override;\n \n-  void erase_data_content (const char *prompt);\n+private:\n \n   /* Display the registers in the content from 'start_element_no'\n      until the end of the register content or the end of the display\n@@ -102,17 +94,6 @@ struct tui_data_window : public tui_win_info\n      started from.  If nothing is displayed (-1) is returned.  */\n   int display_registers_from_line (int line_no);\n \n-  void check_register_values (struct frame_info *frame);\n-\n-  void show_registers (struct reggroup *group);\n-\n-protected:\n-\n-  void do_scroll_vertical (int num_to_scroll) override;\n-  void do_scroll_horizontal (int num_to_scroll) override\n-  {\n-  }\n-\n   /* Return the index of the first element displayed.  If none are\n      displayed, then return -1.  */\n   int first_data_item_displayed ();\n@@ -123,11 +104,32 @@ struct tui_data_window : public tui_win_info\n      display off the end of the register display.  */\n   void display_reg_element_at_line (int start_element_no, int start_line_no);\n \n-  void rerender () override;\n-\n   void show_register_group (struct reggroup *group,\n \t\t\t    struct frame_info *frame,\n \t\t\t    int refresh_values_only);\n+\n+  /* Answer the number of the last line in the regs display.  If there\n+     are no registers (-1) is returned.  */\n+  int last_regs_line_no () const;\n+\n+  /* Answer the line number that the register element at element_no is\n+     on.  If element_no is greater than the number of register\n+     elements there are, -1 is returned.  */\n+  int line_from_reg_element_no (int element_no) const;\n+\n+  /* Answer the index of the first element in line_no.  If line_no is\n+     past the register area (-1) is returned.  */\n+  int first_reg_element_no_inline (int line_no) const;\n+\n+  /* Displays the data that is in the data window's content.  It does\n+     not set the content.  */\n+  void display_all_data ();\n+\n+  /* Delete all the item windows in the data window.  This is usually\n+     done when the data window is scrolled.  */\n+  void delete_data_content_windows ();\n+\n+  void erase_data_content (const char *prompt);\n };\n \n #endif /* TUI_TUI_REGS_H */"
    }
  ]
}