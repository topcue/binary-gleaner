{
  "sha": "6ad3b8bf3b118e9635a0dcc022128496f4fc13ca",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmFkM2I4YmYzYjExOGU5NjM1YTBkY2MwMjIxMjg0OTZmNGZjMTNjYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:34Z"
    },
    "message": "Implement Ada min and max operations\n\nThis implement the Ada min and max operations using an existing\ntemplate class.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* ada-lang.c (ada_binop_minmax): No longer static.\n\t* ada-exp.h (ada_binop_min_operation, ada_binop_max_operation):\n\tNew typedefs.",
    "tree": {
      "sha": "8a35c0e6cf7ef7cd781fe2f7ca6df716962a8647",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8a35c0e6cf7ef7cd781fe2f7ca6df716962a8647"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6ad3b8bf3b118e9635a0dcc022128496f4fc13ca",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ad3b8bf3b118e9635a0dcc022128496f4fc13ca",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6ad3b8bf3b118e9635a0dcc022128496f4fc13ca",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ad3b8bf3b118e9635a0dcc022128496f4fc13ca/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3f4a0053d9699d19a0251cd8c87871c65994e8e1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f4a0053d9699d19a0251cd8c87871c65994e8e1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3f4a0053d9699d19a0251cd8c87871c65994e8e1"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 15,
    "deletions": 1
  },
  "files": [
    {
      "sha": "408ad7f319cc1ac82cf7c6b06e14feaebcbfd655",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ad3b8bf3b118e9635a0dcc022128496f4fc13ca/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ad3b8bf3b118e9635a0dcc022128496f4fc13ca/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6ad3b8bf3b118e9635a0dcc022128496f4fc13ca",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* ada-lang.c (ada_binop_minmax): No longer static.\n+\t* ada-exp.h (ada_binop_min_operation, ada_binop_max_operation):\n+\tNew typedefs.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* ada-lang.c (ada_var_msym_value_operation::evaluate_for_cast):"
    },
    {
      "sha": "f3808935f994745c31a095642ac02dc51fd45a76",
      "filename": "gdb/ada-exp.h",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ad3b8bf3b118e9635a0dcc022128496f4fc13ca/gdb/ada-exp.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ad3b8bf3b118e9635a0dcc022128496f4fc13ca/gdb/ada-exp.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-exp.h?ref=6ad3b8bf3b118e9635a0dcc022128496f4fc13ca",
      "patch": "@@ -60,6 +60,11 @@ extern struct value *ada_binop_in_bounds (struct expression *exp,\n \t\t\t\t\t  struct value *arg1,\n \t\t\t\t\t  struct value *arg2,\n \t\t\t\t\t  int n);\n+extern struct value *ada_binop_minmax (struct type *expect_type,\n+\t\t\t\t       struct expression *exp,\n+\t\t\t\t       enum noside noside, enum exp_opcode op,\n+\t\t\t\t       struct value *arg1,\n+\t\t\t\t       struct value *arg2);\n \n namespace expr\n {\n@@ -173,6 +178,9 @@ using ada_binop_div_operation = binop_operation<BINOP_DIV, ada_mult_binop>;\n using ada_binop_rem_operation = binop_operation<BINOP_REM, ada_mult_binop>;\n using ada_binop_mod_operation = binop_operation<BINOP_MOD, ada_mult_binop>;\n \n+using ada_binop_min_operation = binop_operation<OP_ATR_MIN, ada_binop_minmax>;\n+using ada_binop_max_operation = binop_operation<OP_ATR_MAX, ada_binop_minmax>;\n+\n /* Implement the equal and not-equal operations for Ada.  */\n class ada_binop_equal_operation\n   : public tuple_holding_operation<enum exp_opcode, operation_up, operation_up>"
    },
    {
      "sha": "418cc04cce1dd195d57940bb1f76dc874f500bd1",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ad3b8bf3b118e9635a0dcc022128496f4fc13ca/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ad3b8bf3b118e9635a0dcc022128496f4fc13ca/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=6ad3b8bf3b118e9635a0dcc022128496f4fc13ca",
      "patch": "@@ -10394,7 +10394,7 @@ ada_unop_atr (struct expression *exp, enum noside noside, enum exp_opcode op,\n \n /* A helper function for OP_ATR_MIN and OP_ATR_MAX.  */\n \n-static struct value *\n+struct value *\n ada_binop_minmax (struct type *expect_type,\n \t\t  struct expression *exp,\n \t\t  enum noside noside, enum exp_opcode op,"
    }
  ]
}