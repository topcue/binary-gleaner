{
  "sha": "ad15549d514afa0602a0c0fca4b3bbf545a3c994",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWQxNTU0OWQ1MTRhZmEwNjAyYTBjMGZjYTRiM2JiZjU0NWEzYzk5NA==",
  "commit": {
    "author": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2021-08-31T00:23:15Z"
    },
    "committer": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2021-08-31T00:23:15Z"
    },
    "message": "Use gdbfmt for vprintf_filtered.\n\ngdbfmt was already used for printf_filtered, so using it for\nvprintf_filtered is more consistent.\n\nAs a result, all callers of vfprintf_maybe_filtered now use gdbfmt, so\nthe function can be simplified to assume the gdbfmt case and remove\nthe associated bool argument.  Similary, vprintf_filtered is now a\nsimple wrapper around vfprintf_filtered.",
    "tree": {
      "sha": "0743aee9db84751ed5b7c4d072561cf3459d38b5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0743aee9db84751ed5b7c4d072561cf3459d38b5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ad15549d514afa0602a0c0fca4b3bbf545a3c994",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ad15549d514afa0602a0c0fca4b3bbf545a3c994",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ad15549d514afa0602a0c0fca4b3bbf545a3c994",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ad15549d514afa0602a0c0fca4b3bbf545a3c994/comments",
  "author": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c0e5bb42c6e787351e5bd3718457c83e2ec983e9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0e5bb42c6e787351e5bd3718457c83e2ec983e9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c0e5bb42c6e787351e5bd3718457c83e2ec983e9"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 9,
    "deletions": 17
  },
  "files": [
    {
      "sha": "ae6fb594dbbed03c401ae5131b5cc2b0cfccf3b7",
      "filename": "gdb/utils.c",
      "status": "modified",
      "additions": 9,
      "deletions": 17,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad15549d514afa0602a0c0fca4b3bbf545a3c994/gdb/utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad15549d514afa0602a0c0fca4b3bbf545a3c994/gdb/utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.c?ref=ad15549d514afa0602a0c0fca4b3bbf545a3c994",
      "patch": "@@ -81,7 +81,7 @@ void (*deprecated_error_begin_hook) (void);\n /* Prototypes for local functions */\n \n static void vfprintf_maybe_filtered (struct ui_file *, const char *,\n-\t\t\t\t     va_list, bool, bool)\n+\t\t\t\t     va_list, bool)\n   ATTRIBUTE_PRINTF (2, 0);\n \n static void fputs_maybe_filtered (const char *, struct ui_file *, int);\n@@ -2102,27 +2102,19 @@ puts_debug (char *prefix, char *string, char *suffix)\n \n static void\n vfprintf_maybe_filtered (struct ui_file *stream, const char *format,\n-\t\t\t va_list args, bool filter, bool gdbfmt)\n+\t\t\t va_list args, bool filter)\n {\n-  if (gdbfmt)\n-    {\n-      ui_out_flags flags = disallow_ui_out_field;\n-      if (!filter)\n-\tflags |= unfiltered_output;\n-      cli_ui_out (stream, flags).vmessage (applied_style, format, args);\n-    }\n-  else\n-    {\n-      std::string str = string_vprintf (format, args);\n-      fputs_maybe_filtered (str.c_str (), stream, filter);\n-    }\n+  ui_out_flags flags = disallow_ui_out_field;\n+  if (!filter)\n+    flags |= unfiltered_output;\n+  cli_ui_out (stream, flags).vmessage (applied_style, format, args);\n }\n \n \n void\n vfprintf_filtered (struct ui_file *stream, const char *format, va_list args)\n {\n-  vfprintf_maybe_filtered (stream, format, args, true, true);\n+  vfprintf_maybe_filtered (stream, format, args, true);\n }\n \n void\n@@ -2156,13 +2148,13 @@ vfprintf_unfiltered (struct ui_file *stream, const char *format, va_list args)\n       needs_timestamp = (len > 0 && linebuffer[len - 1] == '\\n');\n     }\n   else\n-    vfprintf_maybe_filtered (stream, format, args, false, true);\n+    vfprintf_maybe_filtered (stream, format, args, false);\n }\n \n void\n vprintf_filtered (const char *format, va_list args)\n {\n-  vfprintf_maybe_filtered (gdb_stdout, format, args, true, false);\n+  vfprintf_filtered (gdb_stdout, format, args);\n }\n \n void"
    }
  ]
}