{
  "sha": "5318ba65f8641ddc05e330c8545f9922cd3c48d6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTMxOGJhNjVmODY0MWRkYzA1ZTMzMGM4NTQ1Zjk5MjJjZDNjNDhkNg==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-05T02:56:31Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-05T03:05:02Z"
    },
    "message": "sim: rl78: clean up various warnings\n\nA random grab bag of minor fixes to enable -Werror for this port.\n\nFix local prototypes for a bunch of functions (e.g. adding static).\nAdd missing includes for missing prototypes.\nMove local variable decls from the middle of functions to the top\nof the scope.\nFix a logic error when processing commands where p was reassigned\nto cmd and then has its leading whitespace scanned a 2nd time.\nHandle short reads with fread().",
    "tree": {
      "sha": "f513fded4625cf7782aebc2b3e7aa14261b987b1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f513fded4625cf7782aebc2b3e7aa14261b987b1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5318ba65f8641ddc05e330c8545f9922cd3c48d6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5318ba65f8641ddc05e330c8545f9922cd3c48d6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5318ba65f8641ddc05e330c8545f9922cd3c48d6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5318ba65f8641ddc05e330c8545f9922cd3c48d6/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fa94b3a7c817a5e6615b24eeb3ac569b70af7e81",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fa94b3a7c817a5e6615b24eeb3ac569b70af7e81",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fa94b3a7c817a5e6615b24eeb3ac569b70af7e81"
    }
  ],
  "stats": {
    "total": 51,
    "additions": 34,
    "deletions": 17
  },
  "files": [
    {
      "sha": "baaf6d8eae9e25aba6562a58d97facdd06daa12c",
      "filename": "sim/rl78/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5318ba65f8641ddc05e330c8545f9922cd3c48d6/sim/rl78/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5318ba65f8641ddc05e330c8545f9922cd3c48d6/sim/rl78/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/ChangeLog?ref=5318ba65f8641ddc05e330c8545f9922cd3c48d6",
      "patch": "@@ -1,3 +1,17 @@\n+2021-05-04  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* cpu.c (trace_register_init): Add missing (void).\n+\t* gdb-if.c (rl78_signal_to_target, handle_step): Mark static.\n+\t(sim_do_command): Delete redundant for loop.\n+\t* mem.c (mirror_rom_base, mirror_ram_base, mirror_length): Mark static.\n+\t* mem.h (mem_set_mirror): New prototype.\n+\t* rl78.c (op_flags): Move psw decl to top of scope.\n+\t* trace.c: Include trace.h.\n+\t(load_file_and_line): Move file decl to top of scope.  Declare ret.\n+\tassign fread to ret and use to index f->data.\n+\t* configure.ac: Delete SIM_AC_OPTION_WARNINGS call.\n+\t* configure: Regenerate.\n+\n 2021-05-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "6e2076857ddee7a410e7127ff6a69293bf71bd85",
      "filename": "sim/rl78/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5318ba65f8641ddc05e330c8545f9922cd3c48d6/sim/rl78/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5318ba65f8641ddc05e330c8545f9922cd3c48d6/sim/rl78/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/configure?ref=5318ba65f8641ddc05e330c8545f9922cd3c48d6",
      "patch": "@@ -11844,6 +11844,7 @@ _ACEOF\n \n \n \n+\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11860,6 +11861,9 @@ if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n fi\n \n WERROR_CFLAGS=\"\"\n+  if test \"${ERROR_ON_WARNING}\" = yes ; then\n+    WERROR_CFLAGS=\"-Werror\"\n+  fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\\n@@ -11941,7 +11945,6 @@ $as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n fi\n \n \n-\n hardware=\"cfi core pal glue \"\n sim_hw_cflags=\"-DWITH_HW=1\"\n sim_hw=\"$hardware\""
    },
    {
      "sha": "4f2c0ace70bbdd18f771374149d0926c4a60367a",
      "filename": "sim/rl78/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5318ba65f8641ddc05e330c8545f9922cd3c48d6/sim/rl78/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5318ba65f8641ddc05e330c8545f9922cd3c48d6/sim/rl78/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/configure.ac?ref=5318ba65f8641ddc05e330c8545f9922cd3c48d6",
      "patch": "@@ -22,6 +22,5 @@ AC_INIT(Makefile.in)\n AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n-SIM_AC_OPTION_WARNINGS(no)\n \n SIM_AC_OUTPUT"
    },
    {
      "sha": "fde8afee96b041ceb868d8dd783f6707c7ab5ea3",
      "filename": "sim/rl78/cpu.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5318ba65f8641ddc05e330c8545f9922cd3c48d6/sim/rl78/cpu.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5318ba65f8641ddc05e330c8545f9922cd3c48d6/sim/rl78/cpu.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/cpu.c?ref=5318ba65f8641ddc05e330c8545f9922cd3c48d6",
      "patch": "@@ -51,7 +51,7 @@ typedef struct {\n   unsigned char h;\n } RegBank;\n \n-static void trace_register_init ();\n+static void trace_register_init (void);\n \n /* This maps PSW to a pointer into memory[] */\n static RegBank *regbase_table[256];"
    },
    {
      "sha": "7119214113be21e93f0df8f52730443515080d95",
      "filename": "sim/rl78/gdb-if.c",
      "status": "modified",
      "additions": 2,
      "deletions": 7,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5318ba65f8641ddc05e330c8545f9922cd3c48d6/sim/rl78/gdb-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5318ba65f8641ddc05e330c8545f9922cd3c48d6/sim/rl78/gdb-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/gdb-if.c?ref=5318ba65f8641ddc05e330c8545f9922cd3c48d6",
      "patch": "@@ -403,7 +403,7 @@ int siggnal;\n /* Given a signal number used by the rl78 bsp (that is, newlib),\n    return the corresponding signal numbers.  */\n \n-int\n+static int\n rl78_signal_to_target (int sig)\n {\n   switch (sig)\n@@ -442,7 +442,7 @@ rl78_signal_to_target (int sig)\n /* Take a step return code RC and set up the variables consulted by\n    sim_stop_reason appropriately.  */\n \n-void\n+static void\n handle_step (int rc)\n {\n   if (RL78_STEPPED (rc) || RL78_HIT_BREAK (rc))\n@@ -549,11 +549,6 @@ sim_do_command (SIM_DESC sd, const char *cmd)\n       while (isspace (*p))\n \tp++;\n \n-      /* Find the extent of the command word.  */\n-      for (p = cmd; *p; p++)\n-\tif (isspace (*p))\n-\t  break;\n-\n       /* Null-terminate the command word, and record the start of any\n \t further arguments.  */\n       if (*p)"
    },
    {
      "sha": "77e4987b6ff18048010403eeb18ffff939bc76b4",
      "filename": "sim/rl78/mem.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5318ba65f8641ddc05e330c8545f9922cd3c48d6/sim/rl78/mem.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5318ba65f8641ddc05e330c8545f9922cd3c48d6/sim/rl78/mem.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/mem.c?ref=5318ba65f8641ddc05e330c8545f9922cd3c48d6",
      "patch": "@@ -63,9 +63,9 @@ mem_rom_size (int rom_bytes)\n   rom_limit = rom_bytes;\n }\n \n-int mirror_rom_base = 0x01000;\n-int mirror_ram_base = 0xf1000;\n-int mirror_length = 0x7000;\n+static int mirror_rom_base = 0x01000;\n+static int mirror_ram_base = 0xf1000;\n+static int mirror_length = 0x7000;\n \n void\n mem_set_mirror (int rom_base, int ram_base, int length)"
    },
    {
      "sha": "77d2f18a786c36118e90da37c5fcf7cc51ddb8e4",
      "filename": "sim/rl78/mem.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5318ba65f8641ddc05e330c8545f9922cd3c48d6/sim/rl78/mem.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5318ba65f8641ddc05e330c8545f9922cd3c48d6/sim/rl78/mem.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/mem.h?ref=5318ba65f8641ddc05e330c8545f9922cd3c48d6",
      "patch": "@@ -29,6 +29,8 @@ extern unsigned char memory[];\n \n void init_mem (void);\n \n+void mem_set_mirror (int rom_base, int ram_base, int length);\n+\n /* Pass the amount of bytes, like 2560 for 2.5k  */\n void mem_ram_size (int ram_bytes);\n void mem_rom_size (int rom_bytes);"
    },
    {
      "sha": "006691c4c0afbb01df174b68d825030aed72615b",
      "filename": "sim/rl78/rl78.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5318ba65f8641ddc05e330c8545f9922cd3c48d6/sim/rl78/rl78.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5318ba65f8641ddc05e330c8545f9922cd3c48d6/sim/rl78/rl78.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/rl78.c?ref=5318ba65f8641ddc05e330c8545f9922cd3c48d6",
      "patch": "@@ -249,6 +249,7 @@ static void\n op_flags (int before, int after, int mask, RL78_Size size)\n {\n   int vmask, cmask, amask, avmask;\n+  int psw;\n \n   if (size == RL78_Word)\n     {\n@@ -265,7 +266,7 @@ op_flags (int before, int after, int mask, RL78_Size size)\n       avmask = 0x0f;\n     }\n \n-  int psw = get_reg (RL78_Reg_PSW);\n+  psw = get_reg (RL78_Reg_PSW);\n   psw &= ~mask;\n \n   if (mask & RL78_PSW_CY)"
    },
    {
      "sha": "6f897eb03393e498eb748df7ddee248b8e4fece6",
      "filename": "sim/rl78/trace.c",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5318ba65f8641ddc05e330c8545f9922cd3c48d6/sim/rl78/trace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5318ba65f8641ddc05e330c8545f9922cd3c48d6/sim/rl78/trace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/trace.c?ref=5318ba65f8641ddc05e330c8545f9922cd3c48d6",
      "patch": "@@ -36,6 +36,7 @@\n #include \"cpu.h\"\n #include \"mem.h\"\n #include \"load.h\"\n+#include \"trace.h\"\n \n static disassembler_ftype rl78_disasm_fn = NULL;\n \n@@ -138,6 +139,8 @@ load_file_and_line (const char *filename, int lineno)\n       int i;\n       struct stat s;\n       const char *found_filename, *slash;\n+      FILE *file;\n+      size_t ret;\n \n       found_filename = filename;\n       while (1)\n@@ -155,9 +158,9 @@ load_file_and_line (const char *filename, int lineno)\n       files = f;\n       f->filename = xstrdup (filename);\n       f->data = (char *) xmalloc (s.st_size + 2);\n-      FILE *file = fopen (found_filename, \"rb\");\n-      fread (f->data, 1, s.st_size, file);\n-      f->data[s.st_size] = 0;\n+      file = fopen (found_filename, \"rb\");\n+      ret = fread (f->data, 1, s.st_size, file);\n+      f->data[ret] = 0;\n       fclose (file);\n \n       f->nlines = 1;"
    }
  ]
}