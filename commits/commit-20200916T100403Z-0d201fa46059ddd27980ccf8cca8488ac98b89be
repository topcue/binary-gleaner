{
  "sha": "0d201fa46059ddd27980ccf8cca8488ac98b89be",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGQyMDFmYTQ2MDU5ZGRkMjc5ODBjY2Y4Y2NhODQ4OGFjOThiODliZQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-07-12T14:09:52Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-09-16T10:04:03Z"
    },
    "message": "gdb: Convert language_data::la_case_sensitivity to a method\n\nConvert language_data::la_case_sensitivity member variable to a virtual\nmethod language_defn::case_sensitivity.\n\nThis is mostly straight forward.  The only slight problem is that I\nended up deleting this comment from ada-lang.c:\n\n  /* Yes, Ada is case-insensitive, but that's not quite what this\n     means.  */\n\nHowever, as the comment (which has existed since Ada support was first\nadded to GDB) doesn't explain _why_ Ada sets case sensitivity to on\ndespite being a generally case insensitive language, this doesn't\nreally help me much.\n\nIf I understood _why_ the setting doesn't quite mean what it seems to\nmean (at least as far as Ada is concerned) then I would extend the\ncomment on language_defn::case_sensitivity (in language.h) to include\nthe detail, and note how this impacts Ada.  But as it stands I've just\ndeleted the comment for now.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* ada-lang.c (ada_language_data): Remove la_case_sensitivity\n\tinitializer.\n\t* c-lang.c (c_language_data): Likewise.\n\t(cplus_language_data): Likewise.\n\t(asm_language_data): Likewise.\n\t(minimal_language_data): Likewise.\n\t* d-lang.c (d_language_data): Likewise.\n\t* f-lang.c (f_language_data): Likewise.\n\t(f_language::case_sensitivity): New member function.\n\t* go-lang.c (go_language_data): Remove la_case_sensitivity\n\tinitializer.\n\t* language.c (enum case_mode): Moved here from language.h.\n\t(case_mode): Make static.\n\t(show_case_command): Update for case_sensitivity being a method.\n\t(set_case_command): Likewise.\n\t(set_range_case): Likewise.\n\t(unknown_language_data): Remove la_case_sensitivity initializer.\n\t(auto_language_data): Likewise.\n\t* language.h (case_mode): Delete, move enum declaration to\n\tlanguage.c.\n\t(language_data): Delete la_case_sensitivity field.\n\t(language_defn::case_sensitivity): New member function.\n\t* m2-lang.c (m2_language_data): Remove la_case_sensitivity\n\tinitializer.\n\t* objc-lang.c (objc_language_data): Likewise.\n\t* opencl-lang.c (opencl_language_data): Likewise.\n\t* p-lang.c (pascal_language_data): Likewise.\n\t* rust-lang.c (rust_language_data): Likewise.",
    "tree": {
      "sha": "3bbb11e9ef64b1a8a6781aed8f094a8f07286a9f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3bbb11e9ef64b1a8a6781aed8f094a8f07286a9f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0d201fa46059ddd27980ccf8cca8488ac98b89be",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d201fa46059ddd27980ccf8cca8488ac98b89be",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0d201fa46059ddd27980ccf8cca8488ac98b89be",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d201fa46059ddd27980ccf8cca8488ac98b89be/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "efdf6a733d2a59a1a07ec61e848fa9e128259fe3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/efdf6a733d2a59a1a07ec61e848fa9e128259fe3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/efdf6a733d2a59a1a07ec61e848fa9e128259fe3"
    }
  ],
  "stats": {
    "total": 89,
    "additions": 56,
    "deletions": 33
  },
  "files": [
    {
      "sha": "134010d4ac53fa4dd90694416f0fff8cab49cd9c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0d201fa46059ddd27980ccf8cca8488ac98b89be",
      "patch": "@@ -1,3 +1,34 @@\n+2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* ada-lang.c (ada_language_data): Remove la_case_sensitivity\n+\tinitializer.\n+\t* c-lang.c (c_language_data): Likewise.\n+\t(cplus_language_data): Likewise.\n+\t(asm_language_data): Likewise.\n+\t(minimal_language_data): Likewise.\n+\t* d-lang.c (d_language_data): Likewise.\n+\t* f-lang.c (f_language_data): Likewise.\n+\t(f_language::case_sensitivity): New member function.\n+\t* go-lang.c (go_language_data): Remove la_case_sensitivity\n+\tinitializer.\n+\t* language.c (enum case_mode): Moved here from language.h.\n+\t(case_mode): Make static.\n+\t(show_case_command): Update for case_sensitivity being a method.\n+\t(set_case_command): Likewise.\n+\t(set_range_case): Likewise.\n+\t(unknown_language_data): Remove la_case_sensitivity initializer.\n+\t(auto_language_data): Likewise.\n+\t* language.h (case_mode): Delete, move enum declaration to\n+\tlanguage.c.\n+\t(language_data): Delete la_case_sensitivity field.\n+\t(language_defn::case_sensitivity): New member function.\n+\t* m2-lang.c (m2_language_data): Remove la_case_sensitivity\n+\tinitializer.\n+\t* objc-lang.c (objc_language_data): Likewise.\n+\t* opencl-lang.c (opencl_language_data): Likewise.\n+\t* p-lang.c (pascal_language_data): Likewise.\n+\t* rust-lang.c (rust_language_data): Likewise.\n+\n 2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* ada-lang.c (ada_language_data): Remove la_range_check"
    },
    {
      "sha": "bb850c16055865c8f592e9c18f371f0c7af403a6",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=0d201fa46059ddd27980ccf8cca8488ac98b89be",
      "patch": "@@ -13708,8 +13708,6 @@ ada_get_symbol_name_matcher (const lookup_name_info &lookup_name)\n \n extern const struct language_data ada_language_data =\n {\n-  case_sensitive_on,            /* Yes, Ada is case-insensitive, but\n-                                   that's not quite what this means.  */\n   array_row_major,\n   macro_expansion_no,\n   &ada_exp_descriptor,"
    },
    {
      "sha": "c1aa02fb67fed76d8d541ef328465b5a483704e1",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=0d201fa46059ddd27980ccf8cca8488ac98b89be",
      "patch": "@@ -875,7 +875,6 @@ const struct exp_descriptor exp_descriptor_c =\n \n extern const struct language_data c_language_data =\n {\n-  case_sensitive_on,\n   array_row_major,\n   macro_expansion_c,\n   &exp_descriptor_c,\n@@ -984,7 +983,6 @@ enum cplus_primitive_types {\n \n extern const struct language_data cplus_language_data =\n {\n-  case_sensitive_on,\n   array_row_major,\n   macro_expansion_c,\n   &exp_descriptor_c,\n@@ -1191,7 +1189,6 @@ static cplus_language cplus_language_defn;\n \n extern const struct language_data asm_language_data =\n {\n-  case_sensitive_on,\n   array_row_major,\n   macro_expansion_c,\n   &exp_descriptor_c,\n@@ -1261,7 +1258,6 @@ static asm_language asm_language_defn;\n \n extern const struct language_data minimal_language_data =\n {\n-  case_sensitive_on,\n   array_row_major,\n   macro_expansion_c,\n   &exp_descriptor_c,"
    },
    {
      "sha": "176593f276d32234866786cabe23375380da3a19",
      "filename": "gdb/d-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/d-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/d-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-lang.c?ref=0d201fa46059ddd27980ccf8cca8488ac98b89be",
      "patch": "@@ -128,7 +128,6 @@ enum d_primitive_types {\n \n extern const struct language_data d_language_data =\n {\n-  case_sensitive_on,\n   array_row_major,\n   macro_expansion_no,\n   &exp_descriptor_c,"
    },
    {
      "sha": "a938d2b8b4c84d15eca33fec6bcaed29ba0ce79f",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=0d201fa46059ddd27980ccf8cca8488ac98b89be",
      "patch": "@@ -486,7 +486,6 @@ static const struct exp_descriptor exp_descriptor_f =\n \n extern const struct language_data f_language_data =\n {\n-  case_sensitive_off,\n   array_column_major,\n   macro_expansion_no,\n   &exp_descriptor_f,\n@@ -726,6 +725,11 @@ class f_language : public language_defn\n   bool range_checking_on_by_default () const override\n   { return true; }\n \n+  /* See language.h.  */\n+\n+  enum case_sensitivity case_sensitivity () const override\n+  { return case_sensitive_off; }\n+\n protected:\n \n   /* See language.h.  */"
    },
    {
      "sha": "7ac7e9455fa0427bab41d0ef8c9dbbd984ecfbe0",
      "filename": "gdb/go-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/go-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/go-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-lang.c?ref=0d201fa46059ddd27980ccf8cca8488ac98b89be",
      "patch": "@@ -508,7 +508,6 @@ enum go_primitive_types {\n \n extern const struct language_data go_language_data =\n {\n-  case_sensitive_on,\n   array_row_major,\n   macro_expansion_no,\n   &exp_descriptor_c,"
    },
    {
      "sha": "41fdf357f1a1b4bbc0584c4b1345a24e8eae6215",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 13,
      "deletions": 6,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=0d201fa46059ddd27980ccf8cca8488ac98b89be",
      "patch": "@@ -58,14 +58,23 @@ enum range_mode\n     range_mode_auto, range_mode_manual\n   };\n \n+/* case_mode ==\n+   case_mode_auto:   case_sensitivity set upon selection of scope.\n+   case_mode_manual: case_sensitivity set only by user.  */\n+\n+enum case_mode\n+  {\n+    case_mode_auto, case_mode_manual\n+  };\n+\n /* The current (default at startup) state of type and range checking.\n    (If the modes are set to \"auto\", though, these are changed based\n    on the default language at startup, and then again based on the\n    language of the first source file.  */\n \n static enum range_mode range_mode = range_mode_auto;\n enum range_check range_check = range_check_off;\n-enum case_mode case_mode = case_mode_auto;\n+static enum case_mode case_mode = case_mode_auto;\n enum case_sensitivity case_sensitivity = case_sensitive_on;\n \n /* The current language and language_mode (see language.h).  */\n@@ -296,7 +305,7 @@ show_case_command (struct ui_file *file, int from_tty,\n \t\t      _(\"Case sensitivity in name search is \\\"%s\\\".\\n\"),\n \t\t      value);\n \n-  if (case_sensitivity != current_language->la_case_sensitivity)\n+  if (case_sensitivity != current_language->case_sensitivity ())\n     warning (_(\"the current case sensitivity setting does not match \"\n \t       \"the language.\\n\"));\n }\n@@ -329,7 +338,7 @@ set_case_command (const char *ignore, int from_tty, struct cmd_list_element *c)\n \t\t       case_sensitive);\n      }\n \n-   if (case_sensitivity != current_language->la_case_sensitivity)\n+   if (case_sensitivity != current_language->case_sensitivity ())\n      warning (_(\"the current case sensitivity setting does not match \"\n \t\t\"the language.\\n\"));\n }\n@@ -346,7 +355,7 @@ set_range_case (void)\n \t\t   ? range_check_on : range_check_off);\n \n   if (case_mode == case_mode_auto)\n-    case_sensitivity = current_language->la_case_sensitivity;\n+    case_sensitivity = current_language->case_sensitivity ();\n }\n \n /* Set current language to (enum language) LANG.  Returns previous\n@@ -789,7 +798,6 @@ unknown_language_arch_info (struct gdbarch *gdbarch,\n \n extern const struct language_data unknown_language_data =\n {\n-  case_sensitive_on,\n   array_row_major,\n   macro_expansion_no,\n   &exp_descriptor_standard,\n@@ -925,7 +933,6 @@ static unknown_language unknown_language_defn;\n \n extern const struct language_data auto_language_data =\n {\n-  case_sensitive_on,\n   array_row_major,\n   macro_expansion_no,\n   &exp_descriptor_standard,"
    },
    {
      "sha": "b6d1d15c23f41bc7626b81b535fb96d69bb9311f",
      "filename": "gdb/language.h",
      "status": "modified",
      "additions": 7,
      "deletions": 13,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/language.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/language.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.h?ref=0d201fa46059ddd27980ccf8cca8488ac98b89be",
      "patch": "@@ -53,16 +53,6 @@ extern enum range_check\n   }\n range_check;\n \n-/* case_mode ==\n-   case_mode_auto:   case_sensitivity set upon selection of scope.\n-   case_mode_manual: case_sensitivity set only by user.  */\n-\n-extern enum case_mode\n-  {\n-    case_mode_auto, case_mode_manual\n-  }\n-case_mode;\n-\n /* array_ordering ==\n    array_row_major:     Arrays are in row major order.\n    array_column_major:  Arrays are in column major order.  */\n@@ -178,9 +168,6 @@ extern const char *default_word_break_characters (void);\n \n struct language_data\n   {\n-    /* Default case sensitivity.  */\n-    enum case_sensitivity la_case_sensitivity;\n-\n     /* Multi-dimensional array ordering.  */\n     enum array_ordering la_array_ordering;\n \n@@ -565,6 +552,13 @@ struct language_defn : language_data\n   virtual bool range_checking_on_by_default () const\n   { return false; }\n \n+  /* Is this language case sensitive?  The return value from this function\n+     provides the automativ setting for 'set case-sensitive', as a\n+     consequence, a user is free to override this setting if they want.  */\n+\n+  virtual enum case_sensitivity case_sensitivity () const\n+  { return case_sensitive_on; }\n+\n protected:\n \n   /* This is the overridable part of the GET_SYMBOL_NAME_MATCHER method."
    },
    {
      "sha": "94fa01243b34e3f0d071709e48355b8015dc8262",
      "filename": "gdb/m2-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/m2-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/m2-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-lang.c?ref=0d201fa46059ddd27980ccf8cca8488ac98b89be",
      "patch": "@@ -199,7 +199,6 @@ const struct exp_descriptor exp_descriptor_modula2 =\n \n extern const struct language_data m2_language_data =\n {\n-  case_sensitive_on,\n   array_row_major,\n   macro_expansion_no,\n   &exp_descriptor_modula2,"
    },
    {
      "sha": "45936c9caec93b0f747c6a2e883b60241111720a",
      "filename": "gdb/objc-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/objc-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/objc-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objc-lang.c?ref=0d201fa46059ddd27980ccf8cca8488ac98b89be",
      "patch": "@@ -323,7 +323,6 @@ static const struct op_print objc_op_print_tab[] =\n \n extern const struct language_data objc_language_data =\n {\n-  case_sensitive_on,\n   array_row_major,\n   macro_expansion_c,\n   &exp_descriptor_standard,"
    },
    {
      "sha": "2a184fd3858b53eea60c56caf37b177ac19bf04e",
      "filename": "gdb/opencl-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/opencl-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/opencl-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/opencl-lang.c?ref=0d201fa46059ddd27980ccf8cca8488ac98b89be",
      "patch": "@@ -1006,7 +1006,6 @@ const struct exp_descriptor exp_descriptor_opencl =\n /* Constant data representing the OpenCL language.  */\n extern const struct language_data opencl_language_data =\n {\n-  case_sensitive_on,\n   array_row_major,\n   macro_expansion_c,\n   &exp_descriptor_opencl,"
    },
    {
      "sha": "fcc0eb90f5c75c34000cd86a6bf7579b6f724b19",
      "filename": "gdb/p-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/p-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/p-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-lang.c?ref=0d201fa46059ddd27980ccf8cca8488ac98b89be",
      "patch": "@@ -252,7 +252,6 @@ enum pascal_primitive_types {\n \n extern const struct language_data pascal_language_data =\n {\n-  case_sensitive_on,\n   array_row_major,\n   macro_expansion_no,\n   &exp_descriptor_standard,"
    },
    {
      "sha": "7b76e27f84cad86b82114a0e60e910a8252d9b36",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d201fa46059ddd27980ccf8cca8488ac98b89be/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=0d201fa46059ddd27980ccf8cca8488ac98b89be",
      "patch": "@@ -1901,7 +1901,6 @@ static const struct exp_descriptor exp_descriptor_rust =\n \n extern const struct language_data rust_language_data =\n {\n-  case_sensitive_on,\n   array_row_major,\n   macro_expansion_no,\n   &exp_descriptor_rust,"
    }
  ]
}