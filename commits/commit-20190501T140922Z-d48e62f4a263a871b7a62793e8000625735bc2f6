{
  "sha": "d48e62f4a263a871b7a62793e8000625735bc2f6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDQ4ZTYyZjRhMjYzYTg3MWI3YTYyNzkzZTgwMDA2MjU3MzViYzJmNg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-04-26T16:57:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-05-01T14:09:22Z"
    },
    "message": "Fix big-endian aggregate assignment in Ada\n\nA bug internal to AdaCore notes that assigning a non-scalar value to\nan element of a packed array will sometimes fail.\n\nThe bug turns out to be that ada_value_assign incorrectly computes the\nstarting point for the assignment.  This patch fixes the problem.\n\ngdb/ChangeLog\n2019-05-01  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.c (ada_value_assign): Correctly compute starting offset\n\tfor big-endian copies.\n\ngdb/testsuite/ChangeLog\n2019-05-01  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/packed_array_assign.exp: Add packed assignment\n\tregression test.",
    "tree": {
      "sha": "d5e30d500bccde97f8d27793cd6d3fe0d77e83f4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d5e30d500bccde97f8d27793cd6d3fe0d77e83f4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d48e62f4a263a871b7a62793e8000625735bc2f6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d48e62f4a263a871b7a62793e8000625735bc2f6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d48e62f4a263a871b7a62793e8000625735bc2f6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d48e62f4a263a871b7a62793e8000625735bc2f6/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "25a0274483cb00c27945b0337005be4f169ff09f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/25a0274483cb00c27945b0337005be4f169ff09f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/25a0274483cb00c27945b0337005be4f169ff09f"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 23,
    "deletions": 6
  },
  "files": [
    {
      "sha": "1588143646a9e5d16e734b5048023a47fc93e3bf",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d48e62f4a263a871b7a62793e8000625735bc2f6/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d48e62f4a263a871b7a62793e8000625735bc2f6/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d48e62f4a263a871b7a62793e8000625735bc2f6",
      "patch": "@@ -1,3 +1,8 @@\n+2019-05-01  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.c (ada_value_assign): Correctly compute starting offset\n+\tfor big-endian copies.\n+\n 2019-04-30  Ali Tamur  <tamur@google.com>\n \t* gdb/dwarf2read.c (read_3_bytes): New declaration.\n \t(read_attribute_value): Added DW_FORM_strx1-4 cases."
    },
    {
      "sha": "da70a514784ec278b28913a94d18122f4f96e2b6",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 8,
      "deletions": 6,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d48e62f4a263a871b7a62793e8000625735bc2f6/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d48e62f4a263a871b7a62793e8000625735bc2f6/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=d48e62f4a263a871b7a62793e8000625735bc2f6",
      "patch": "@@ -2710,12 +2710,14 @@ ada_value_assign (struct value *toval, struct value *fromval)\n       from_size = value_bitsize (fromval);\n       if (from_size == 0)\n \tfrom_size = TYPE_LENGTH (value_type (fromval)) * TARGET_CHAR_BIT;\n-      if (gdbarch_bits_big_endian (get_type_arch (type)))\n-        copy_bitwise (buffer, value_bitpos (toval),\n-\t\t      value_contents (fromval), from_size - bits, bits, 1);\n-      else\n-        copy_bitwise (buffer, value_bitpos (toval),\n-\t\t      value_contents (fromval), 0, bits, 0);\n+\n+      const int is_big_endian = gdbarch_bits_big_endian (get_type_arch (type));\n+      ULONGEST from_offset = 0;\n+      if (is_big_endian && is_scalar_type (value_type (fromval)))\n+\tfrom_offset = from_size - bits;\n+      copy_bitwise (buffer, value_bitpos (toval),\n+\t\t    value_contents (fromval), from_offset,\n+\t\t    bits, is_big_endian);\n       write_memory_with_notification (to_addr, buffer, len);\n \n       val = value_copy (toval);"
    },
    {
      "sha": "573aa16806c9ef29e5b7d8592832d6cac33a80aa",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d48e62f4a263a871b7a62793e8000625735bc2f6/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d48e62f4a263a871b7a62793e8000625735bc2f6/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=d48e62f4a263a871b7a62793e8000625735bc2f6",
      "patch": "@@ -1,3 +1,8 @@\n+2019-05-01  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/packed_array_assign.exp: Add packed assignment\n+\tregression test.\n+\n 2019-05-01  Tom de Vries  <tdevries@suse.de>\n \n \t* boards/cc-with-tweaks.exp: Generate gdb.sh, and pass it in env(GDB)."
    },
    {
      "sha": "8ed2d63ecf362b219e131c168904ccb6fe73ac9e",
      "filename": "gdb/testsuite/gdb.ada/packed_array_assign.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d48e62f4a263a871b7a62793e8000625735bc2f6/gdb/testsuite/gdb.ada/packed_array_assign.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d48e62f4a263a871b7a62793e8000625735bc2f6/gdb/testsuite/gdb.ada/packed_array_assign.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/packed_array_assign.exp?ref=d48e62f4a263a871b7a62793e8000625735bc2f6",
      "patch": "@@ -28,3 +28,8 @@ runto \"aggregates.run_test\"\n gdb_test \\\n     \"print pra := ((packed_array_assign_x => 2, packed_array_assign_y => 0, packed_array_assign_w => 17), pr, (packed_array_assign_x => 7, packed_array_assign_y => 1, packed_array_assign_w => 23))\" \\\n     \" = \\\\(\\\\(packed_array_assign_w => 17, packed_array_assign_x => 2, packed_array_assign_y => 0\\\\), \\\\(packed_array_assign_w => 104, packed_array_assign_x => 2, packed_array_assign_y => 3\\\\), \\\\(packed_array_assign_w => 23, packed_array_assign_x => 7, packed_array_assign_y => 1\\\\)\\\\)\"\n+\n+gdb_test \"print pra(1) := pr\" \\\n+    \" = \\\\(packed_array_assign_w => 104, packed_array_assign_x => 2, packed_array_assign_y => 3\\\\)\"\n+gdb_test \"print pra(1)\" \\\n+    \" = \\\\(packed_array_assign_w => 104, packed_array_assign_x => 2, packed_array_assign_y => 3\\\\)\""
    }
  ]
}