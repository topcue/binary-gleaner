{
  "sha": "116d0cf103a315b220d4e85825986d3b6c312123",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTE2ZDBjZjEwM2EzMTViMjIwZDRlODU4MjU5ODZkM2I2YzMxMjEyMw==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-01-14T09:20:21Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-01-14T09:20:21Z"
    },
    "message": "[gdb/testsuite] Fix gdb.base/style.exp with -m32\n\nWhen running test-case gdb.base/style.exp with target board unix/-m32, we run\ninto (stripped styling from output, shortened file name):\n...\n(gdb) frame\n    argv=0xffffc714) at src/gdb/testsuite/gdb.base/style.c:45\n45        return some_called_function (); /* break here */\n(gdb) FAIL: gdb.base/style.exp: frame when width=20\n...\nwhile with native we have instead:\n...\n(gdb) frame\n    argv=0x7fffffffd478)\n    at src/gdb/testsuite/gdb.base/style.c:45\n45        return some_called_function (); /* break here */\n(gdb) PASS: gdb.base/style.exp: frame when width=20\n...\n\nThe problem is that due to argv having a different length for -m32, we get a\ndifferent layout, and the test-case doesn't accommodate for that.\n\nFix this by using a different regexp depending on the length of argv.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2021-01-14  Tom de Vries  <tdevries@suse.de>\n\n\tPR testsuite/24590\n\t* gdb.base/style.exp: Handle shorter argv in frame command output.",
    "tree": {
      "sha": "eb1c05a56517e19598c9e1949ed233532f96a2b2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/eb1c05a56517e19598c9e1949ed233532f96a2b2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/116d0cf103a315b220d4e85825986d3b6c312123",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/116d0cf103a315b220d4e85825986d3b6c312123",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/116d0cf103a315b220d4e85825986d3b6c312123",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/116d0cf103a315b220d4e85825986d3b6c312123/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7e0d77ef5ffa7e47655db2a5df5082004f7c104e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7e0d77ef5ffa7e47655db2a5df5082004f7c104e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7e0d77ef5ffa7e47655db2a5df5082004f7c104e"
    }
  ],
  "stats": {
    "total": 54,
    "additions": 48,
    "deletions": 6
  },
  "files": [
    {
      "sha": "b8c9010d28f022caf09ca02643f54866f6605fcc",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/116d0cf103a315b220d4e85825986d3b6c312123/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/116d0cf103a315b220d4e85825986d3b6c312123/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=116d0cf103a315b220d4e85825986d3b6c312123",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-14  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR testsuite/24590\n+\t* gdb.base/style.exp: Handle shorter argv in frame command output.\n+\n 2021-01-13  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \tPR gdb/26819"
    },
    {
      "sha": "aec1d0f42ed4a9d850f80e0768117c440b1ad6a8",
      "filename": "gdb/testsuite/gdb.base/style.exp",
      "status": "modified",
      "additions": 43,
      "deletions": 6,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/116d0cf103a315b220d4e85825986d3b6c312123/gdb/testsuite/gdb.base/style.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/116d0cf103a315b220d4e85825986d3b6c312123/gdb/testsuite/gdb.base/style.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/style.exp?ref=116d0cf103a315b220d4e85825986d3b6c312123",
      "patch": "@@ -46,6 +46,16 @@ save_vars { env(TERM) } {\n     set main_line [gdb_get_line_number \"break here\"]\n     gdb_test \"list $main_line,$main_line\" \"return.*some_called_function.*\"\n \n+    gdb_test_no_output \"set style enabled off\"\n+\n+    set argv \"\"\n+    gdb_test_multiple \"frame\" \"frame without styling\" {\n+\t-re -wrap \"main \\\\(argc=.*, (argv=$hex)\\\\).*style\\\\.c:\\[0-9\\].*\" {\n+\t    set argv $expect_out(1,string)\n+\t    pass $gdb_test_name\n+\t}\n+    }\n+\n     gdb_test_no_output \"set style enabled on\"\n \n     set main_expr [style main function]\n@@ -60,7 +70,7 @@ save_vars { env(TERM) } {\n     gdb_test_no_output \"set style sources off\"\n     gdb_test \"frame\" \\\n \t\"\\r\\n\\[^\\033\\]*break here.*\" \\\n-\t\"frame without styling\"\n+\t\"frame without sources styling\"\n     gdb_test_no_output \"set style sources on\"\n \n     gdb_test \"break -q main\" \"file $base_file_expr.*\"\n@@ -71,20 +81,47 @@ save_vars { env(TERM) } {\n     # wrong spot with styling.  There were different bugs at different\n     # widths, so try two.\n     foreach width {20 30} {\n-\tgdb_test_no_output \"set width $width\"\n+\tset argv_len [string length $argv]\n+\tif { $argv_len == 0 } {\n+\t    continue\n+\t}\n+\n \t# There was also a bug where the styling could be wrong in the\n \t# line listing; this is why the words from the source code are\n \t# spelled out in the final result line of the test.\n-\tgdb_test \"frame\" \\\n+\tset re1_styled \\\n \t    [multi_line \\\n \t\t \"#0 *$main_expr.*$arg_expr.*\" \\\n \t\t \".*$arg_expr.*\" \\\n \t\t \".* at .*$file_expr.*\" \\\n-\t\t \"\\[0-9\\]+.*return.* break here .*\"\n-\t    ] \\\n-\t    \"frame when width=$width\"\n+\t\t \"\\[0-9\\]+.*return.* break here .*\"]\n+\tset re2_styled \\\n+\t    [multi_line \\\n+\t\t \"#0 *$main_expr.*$arg_expr.*\" \\\n+\t\t \".*$arg_expr.* at .*$file_expr.*\" \\\n+\t\t \"\\[0-9\\]+.*return.* break here .*\"]\n+\n+\t# The length of the line containing argv containing:\n+\t# - 4 leading spaces\n+\t# - argv string\n+\t# - closing parenthesis\n+\tset line_len [expr 4 + $argv_len + 1]\n+\n+\tif { $line_len > $width } {\n+\t    # At on the next line.\n+\t    set re_styled $re1_styled\n+\t} else {\n+\t    # At on the same line as argv.\n+\t    set re_styled $re2_styled\n+\t}\n+\n+\tgdb_test_no_output \"set width $width\"\n+\tgdb_test \"frame\" $re_styled \"frame when width=$width\"\n     }\n \n+    # Reset width back to 0.\n+    gdb_test_no_output \"set width 0\"\n+\n     if {$test_macros} {\n \tset macro_line [gdb_get_line_number \"\\#define SOME_MACRO\"]\n \tgdb_test \"info macro SOME_MACRO\" \\"
    }
  ]
}