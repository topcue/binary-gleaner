{
  "sha": "09f7b0de537d465fc8ed9f9433e348c1bc78aab2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDlmN2IwZGU1MzdkNDY1ZmM4ZWQ5Zjk0MzNlMzQ4YzFiYzc4YWFiMg==",
  "commit": {
    "author": {
      "name": "Stafford Horne",
      "email": "shorne@gmail.com",
      "date": "2019-08-23T13:25:55Z"
    },
    "committer": {
      "name": "Stafford Horne",
      "email": "shorne@gmail.com",
      "date": "2019-08-23T13:25:55Z"
    },
    "message": "or1k: Fix incorrect value in PLT GOT entries, causing infinite loop\n\nThe PLT GOT entry should point to the first PLT entry which contains the\nruntime linker function.  It was pointing back to the symbol PLT entry\ncausing an infinite loop.\n\nI found this when testing the OpenRISC glibc port which uses the runtime\ndynamic linker.  It seems other libc's we use so far have not been\nmaking use of the initial PLT GOT entries.\n\nbfd/ChangeLog:\n\n\t* elf32-or1k.c (or1k_elf_finish_dynamic_symbol): Use correct value for\n\tPLT GOT entries.",
    "tree": {
      "sha": "02ac5237b3809beaeaa499a4bfa1098e4d94b00a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/02ac5237b3809beaeaa499a4bfa1098e4d94b00a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/09f7b0de537d465fc8ed9f9433e348c1bc78aab2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/09f7b0de537d465fc8ed9f9433e348c1bc78aab2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/09f7b0de537d465fc8ed9f9433e348c1bc78aab2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/09f7b0de537d465fc8ed9f9433e348c1bc78aab2/comments",
  "author": {
    "login": "stffrdhrn",
    "id": 2404255,
    "node_id": "MDQ6VXNlcjI0MDQyNTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2404255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stffrdhrn",
    "html_url": "https://github.com/stffrdhrn",
    "followers_url": "https://api.github.com/users/stffrdhrn/followers",
    "following_url": "https://api.github.com/users/stffrdhrn/following{/other_user}",
    "gists_url": "https://api.github.com/users/stffrdhrn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stffrdhrn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stffrdhrn/subscriptions",
    "organizations_url": "https://api.github.com/users/stffrdhrn/orgs",
    "repos_url": "https://api.github.com/users/stffrdhrn/repos",
    "events_url": "https://api.github.com/users/stffrdhrn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stffrdhrn/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "stffrdhrn",
    "id": 2404255,
    "node_id": "MDQ6VXNlcjI0MDQyNTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2404255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stffrdhrn",
    "html_url": "https://github.com/stffrdhrn",
    "followers_url": "https://api.github.com/users/stffrdhrn/followers",
    "following_url": "https://api.github.com/users/stffrdhrn/following{/other_user}",
    "gists_url": "https://api.github.com/users/stffrdhrn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stffrdhrn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stffrdhrn/subscriptions",
    "organizations_url": "https://api.github.com/users/stffrdhrn/orgs",
    "repos_url": "https://api.github.com/users/stffrdhrn/repos",
    "events_url": "https://api.github.com/users/stffrdhrn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stffrdhrn/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a7ba389645d178c43100ec47e513389ae8bf8f93",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a7ba389645d178c43100ec47e513389ae8bf8f93",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a7ba389645d178c43100ec47e513389ae8bf8f93"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 10,
    "deletions": 2
  },
  "files": [
    {
      "sha": "981e0cd4e9228d1c6254e66a249b8617022b7058",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09f7b0de537d465fc8ed9f9433e348c1bc78aab2/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09f7b0de537d465fc8ed9f9433e348c1bc78aab2/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=09f7b0de537d465fc8ed9f9433e348c1bc78aab2",
      "patch": "@@ -1,3 +1,8 @@\n+2019-08-23  Stafford Horne  <shorne@gmail.com>\n+\n+\t* elf32-or1k.c (or1k_elf_finish_dynamic_symbol): Use correct value for\n+\tPLT GOT entries.\n+\n 2019-08-23  Nick Clifton  <nickc@redhat.com>\n \n \tPR 24456"
    },
    {
      "sha": "0d1336ceaccdc2a861c9bbb45b20c0931df0e0d2",
      "filename": "bfd/elf32-or1k.c",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09f7b0de537d465fc8ed9f9433e348c1bc78aab2/bfd/elf32-or1k.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09f7b0de537d465fc8ed9f9433e348c1bc78aab2/bfd/elf32-or1k.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-or1k.c?ref=09f7b0de537d465fc8ed9f9433e348c1bc78aab2",
      "patch": "@@ -2377,8 +2377,11 @@ or1k_elf_finish_dynamic_symbol (bfd *output_bfd,\n       or1k_write_plt_entry (output_bfd, splt->contents + h->plt.offset,\n \t\t\t    plt0, plt1, plt2, OR1K_JR(12));\n \n-      /* Fill in the entry in the global offset table.  */\n-      bfd_put_32 (output_bfd, plt_addr, sgot->contents + got_offset);\n+      /* Fill in the entry in the global offset table.  We initialize it to\n+\t point to the top of the plt.  This is done to lazy lookup the actual\n+\t symbol as the first plt entry will be setup by libc to call the\n+\t runtime dynamic linker.  */\n+      bfd_put_32 (output_bfd, plt_base_addr, sgot->contents + got_offset);\n \n       /* Fill in the entry in the .rela.plt section.  */\n       rela.r_offset = got_addr;"
    }
  ]
}