{
  "sha": "538c15fc2a29ff142f2ec71d253d4027946ece09",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTM4YzE1ZmMyYTI5ZmYxNDJmMmVjNzFkMjUzZDQwMjc5NDZlY2UwOQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-03-18T14:54:15Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-03-18T15:02:46Z"
    },
    "message": "GCC_CET_HOST_FLAGS: Check if host supports multi-byte NOPs\n\nCheck if host supports multi-byte NOPs before enabling CET on host.\n\nconfig/\n\n\tPR binutils/27397\n\t* cet.m4 (GCC_CET_HOST_FLAGS): Check if host supports multi-byte\n\tNOPs.\n\nlibiberty/\n\n\tPR binutils/27397\n\t* configure: Regenerated.",
    "tree": {
      "sha": "f2001e5ebfe80d2d2ac6a98eebb0e879f473cba3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f2001e5ebfe80d2d2ac6a98eebb0e879f473cba3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/538c15fc2a29ff142f2ec71d253d4027946ece09",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/538c15fc2a29ff142f2ec71d253d4027946ece09",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/538c15fc2a29ff142f2ec71d253d4027946ece09",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/538c15fc2a29ff142f2ec71d253d4027946ece09/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "835f2fae11e41956523df3839cd50471b708e97d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/835f2fae11e41956523df3839cd50471b708e97d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/835f2fae11e41956523df3839cd50471b708e97d"
    }
  ],
  "stats": {
    "total": 59,
    "additions": 56,
    "deletions": 3
  },
  "files": [
    {
      "sha": "6f7b3c73a1a1a9911d91a1fde46cbbe761e8933d",
      "filename": "config/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/538c15fc2a29ff142f2ec71d253d4027946ece09/config/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/538c15fc2a29ff142f2ec71d253d4027946ece09/config/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/config/ChangeLog?ref=538c15fc2a29ff142f2ec71d253d4027946ece09",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/27397\n+\t* cet.m4 (GCC_CET_HOST_FLAGS): Check if host supports multi-byte\n+\tNOPs.\n+\n 2021-02-13  Mike Frysinger  <vapier@gentoo.org>\n \n \t* debuginfod.m4: Delete m4_include(../config/pkg.m4)."
    },
    {
      "sha": "7718be1afe891196b9d0547fa4c13d3dbb70b137",
      "filename": "config/cet.m4",
      "status": "modified",
      "additions": 16,
      "deletions": 3,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/538c15fc2a29ff142f2ec71d253d4027946ece09/config/cet.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/538c15fc2a29ff142f2ec71d253d4027946ece09/config/cet.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/config/cet.m4?ref=538c15fc2a29ff142f2ec71d253d4027946ece09",
      "patch": "@@ -130,6 +130,18 @@ fi\n if test x$may_have_cet = xyes; then\n   if test x$cross_compiling = xno; then\n     AC_TRY_RUN([\n+int\n+main ()\n+{\n+  asm (\"endbr32\");\n+  return 0;\n+}\n+    ],\n+    [have_multi_byte_nop=yes],\n+    [have_multi_byte_nop=no])\n+    have_cet=no\n+    if test x$have_multi_byte_nop = xyes; then\n+      AC_TRY_RUN([\n static void\n foo (void)\n {\n@@ -155,9 +167,10 @@ main ()\n   bar ();\n   return 0;\n }\n-    ],\n-    [have_cet=no],\n-    [have_cet=yes])\n+      ],\n+      [have_cet=no],\n+      [have_cet=yes])\n+    fi\n     if test x$enable_cet = xno -a x$have_cet = xyes; then\n       AC_MSG_ERROR([Intel CET must be enabled on Intel CET enabled host])\n     fi"
    },
    {
      "sha": "70d7209bf0aa0fad65bdec6c07cc9440a2fb4b3a",
      "filename": "libiberty/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/538c15fc2a29ff142f2ec71d253d4027946ece09/libiberty/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/538c15fc2a29ff142f2ec71d253d4027946ece09/libiberty/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/ChangeLog?ref=538c15fc2a29ff142f2ec71d253d4027946ece09",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/27397\n+\t* configure: Regenerated.\n+\n 2021-01-11  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR ld/27173"
    },
    {
      "sha": "29a690d44fcc9f9387c3d7878289570bb4c2ab72",
      "filename": "libiberty/configure",
      "status": "modified",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/538c15fc2a29ff142f2ec71d253d4027946ece09/libiberty/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/538c15fc2a29ff142f2ec71d253d4027946ece09/libiberty/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/configure?ref=538c15fc2a29ff142f2ec71d253d4027946ece09",
      "patch": "@@ -5539,6 +5539,34 @@ else\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n \n+int\n+main ()\n+{\n+  asm (\"endbr32\");\n+  return 0;\n+}\n+\n+_ACEOF\n+if ac_fn_c_try_run \"$LINENO\"; then :\n+  have_multi_byte_nop=yes\n+else\n+  have_multi_byte_nop=no\n+fi\n+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n+  conftest.$ac_objext conftest.beam conftest.$ac_ext\n+fi\n+\n+    have_cet=no\n+    if test x$have_multi_byte_nop = xyes; then\n+      if test \"$cross_compiling\" = yes; then :\n+  { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n+$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n+as_fn_error $? \"cannot run test program while cross compiling\n+See \\`config.log' for more details\" \"$LINENO\" 5; }\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n static void\n foo (void)\n {\n@@ -5575,6 +5603,7 @@ rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n   conftest.$ac_objext conftest.beam conftest.$ac_ext\n fi\n \n+    fi\n     if test x$enable_cet = xno -a x$have_cet = xyes; then\n       as_fn_error $? \"Intel CET must be enabled on Intel CET enabled host\" \"$LINENO\" 5\n     fi"
    }
  ]
}