{
  "sha": "17374de40e7be36e4eb27d29bb8aac89586ce4a1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTczNzRkZTQwZTdiZTM2ZTRlYjI3ZDI5YmI4YWFjODk1ODZjZTRhMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-17T23:15:23Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-25T13:48:42Z"
    },
    "message": "Introduce enum tui_box\n\nThis adds a new enum to the TUI, replacing two #define constants,\nproviding better type safety.\n\ngdb/ChangeLog\n2019-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-wingeneral.h (tui_make_window): Change type of \"box_it\"\n\tparameter.\n\t* tui/tui-wingeneral.c (tui_make_window): Change type of \"box_it\"\n\tparameter.\n\t(tui_gen_win_info::make_visible): Update.\n\t* tui/tui-layout.c (init_and_make_win): Change type of \"box_it\"\n\tparameter.\n\t* tui/tui-data.h (enum tui_box): New enum.\n\t(BOX_WINDOW, DONT_BOX_WINDOW): Remove defines.",
    "tree": {
      "sha": "39a2f41ceb57c70963b937994e7da68cf2fed38c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/39a2f41ceb57c70963b937994e7da68cf2fed38c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/17374de40e7be36e4eb27d29bb8aac89586ce4a1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/17374de40e7be36e4eb27d29bb8aac89586ce4a1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/17374de40e7be36e4eb27d29bb8aac89586ce4a1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/17374de40e7be36e4eb27d29bb8aac89586ce4a1/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f936bca26dd7593a3b792e76eba37c5de2374961",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f936bca26dd7593a3b792e76eba37c5de2374961",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f936bca26dd7593a3b792e76eba37c5de2374961"
    }
  ],
  "stats": {
    "total": 33,
    "additions": 26,
    "deletions": 7
  },
  "files": [
    {
      "sha": "31886634547399cbc74750e0c3957a3774ef33aa",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/17374de40e7be36e4eb27d29bb8aac89586ce4a1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/17374de40e7be36e4eb27d29bb8aac89586ce4a1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=17374de40e7be36e4eb27d29bb8aac89586ce4a1",
      "patch": "@@ -1,3 +1,15 @@\n+2019-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-wingeneral.h (tui_make_window): Change type of \"box_it\"\n+\tparameter.\n+\t* tui/tui-wingeneral.c (tui_make_window): Change type of \"box_it\"\n+\tparameter.\n+\t(tui_gen_win_info::make_visible): Update.\n+\t* tui/tui-layout.c (init_and_make_win): Change type of \"box_it\"\n+\tparameter.\n+\t* tui/tui-data.h (enum tui_box): New enum.\n+\t(BOX_WINDOW, DONT_BOX_WINDOW): Remove defines.\n+\n 2019-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-layout.c (make_source_or_disasm_window): Always use"
    },
    {
      "sha": "95c916190cc1ac2ef6194aae5cc084d9325b5166",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/17374de40e7be36e4eb27d29bb8aac89586ce4a1/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/17374de40e7be36e4eb27d29bb8aac89586ce4a1/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=17374de40e7be36e4eb27d29bb8aac89586ce4a1",
      "patch": "@@ -91,6 +91,13 @@ struct tui_gen_win_info\n   char *title = nullptr;\n };\n \n+/* Whether or not a window should be drawn with a box.  */\n+enum tui_box\n+{\n+  DONT_BOX_WINDOW = 0,\n+  BOX_WINDOW\n+};\n+\n /* Constant definitions.  */\n #define DEFAULT_TAB_LEN         8\n #define NO_SRC_STRING           \"[ No Source Available ]\"\n@@ -104,8 +111,6 @@ struct tui_gen_win_info\n #define DISASSEM_NAME           \"asm\"\n #define TUI_NULL_STR            \"\"\n #define DEFAULT_HISTORY_COUNT\t25\n-#define BOX_WINDOW              TRUE\n-#define DONT_BOX_WINDOW         FALSE\n #define HILITE                  TRUE\n #define NO_HILITE               FALSE\n #define WITH_LOCATOR            TRUE"
    },
    {
      "sha": "6507b06dd39230c4eefb06c8bb0ee7da36073b61",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/17374de40e7be36e4eb27d29bb8aac89586ce4a1/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/17374de40e7be36e4eb27d29bb8aac89586ce4a1/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=17374de40e7be36e4eb27d29bb8aac89586ce4a1",
      "patch": "@@ -45,7 +45,8 @@\n static void show_layout (enum tui_layout_type);\n static tui_gen_win_info *init_and_make_win (tui_gen_win_info *,\n \t\t\t\t\t    enum tui_win_type,\n-\t\t\t\t\t    int, int, int, int, int);\n+\t\t\t\t\t    int, int, int, int,\n+\t\t\t\t\t    enum tui_box);\n static void show_source_or_disasm_and_command (enum tui_layout_type);\n static struct tui_win_info *make_source_or_disasm_window (enum tui_win_type, \n \t\t\t\t\t\t\t  int, int);\n@@ -793,7 +794,7 @@ init_and_make_win (tui_gen_win_info *win_info,\n \t\t   enum tui_win_type win_type,\n \t\t   int height, int width, \n \t\t   int origin_x, int origin_y,\n-\t\t   int box_it)\n+\t\t   enum tui_box box_it)\n {\n   if (win_info == NULL)\n     {"
    },
    {
      "sha": "cfa4a08701cac0e7672e4c51b4a10a6e50adc966",
      "filename": "gdb/tui/tui-wingeneral.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/17374de40e7be36e4eb27d29bb8aac89586ce4a1/gdb/tui/tui-wingeneral.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/17374de40e7be36e4eb27d29bb8aac89586ce4a1/gdb/tui/tui-wingeneral.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.c?ref=17374de40e7be36e4eb27d29bb8aac89586ce4a1",
      "patch": "@@ -146,7 +146,7 @@ tui_check_and_display_highlight_if_needed (struct tui_win_info *win_info)\n \n \n void\n-tui_make_window (struct tui_gen_win_info *win_info, int box_it)\n+tui_make_window (struct tui_gen_win_info *win_info, enum tui_box box_it)\n {\n   WINDOW *handle;\n \n@@ -175,7 +175,8 @@ tui_gen_win_info::make_visible (bool visible)\n     {\n       if (!is_visible)\n \t{\n-\t  tui_make_window (this, !tui_win_is_auxillary (type));\n+\t  tui_make_window (this, (tui_win_is_auxillary (type)\n+\t\t\t\t  ? DONT_BOX_WINDOW : BOX_WINDOW));\n \t  is_visible = true;\n \t}\n     }"
    },
    {
      "sha": "e925606229cbc995606c8119c85a1cc170a8bdb2",
      "filename": "gdb/tui/tui-wingeneral.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/17374de40e7be36e4eb27d29bb8aac89586ce4a1/gdb/tui/tui-wingeneral.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/17374de40e7be36e4eb27d29bb8aac89586ce4a1/gdb/tui/tui-wingeneral.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.h?ref=17374de40e7be36e4eb27d29bb8aac89586ce4a1",
      "patch": "@@ -32,7 +32,7 @@ extern void tui_make_visible (struct tui_gen_win_info *);\n extern void tui_make_invisible (struct tui_gen_win_info *);\n extern void tui_make_all_visible (void);\n extern void tui_make_all_invisible (void);\n-extern void tui_make_window (struct tui_gen_win_info *, int);\n+extern void tui_make_window (struct tui_gen_win_info *, enum tui_box);\n extern struct tui_win_info *tui_copy_win (struct tui_win_info *);\n extern void tui_box_win (struct tui_gen_win_info *, int);\n extern void tui_highlight_win (struct tui_win_info *);"
    }
  ]
}