{
  "sha": "73e45eb208585e672945078b28fc8381c6f6ba5f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzNlNDVlYjIwODU4NWU2NzI5NDUwNzhiMjhmYzgzODFjNmY2YmE1Zg==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-03-29T10:04:03Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-03-29T10:04:03Z"
    },
    "message": "x86: undo Prefix_0X<nn> use in opcode table\n\nThe table entries are more natural to read (and slightly shorter) when\nthe prefixes, like is the case for VEX/XOP/EVEX-encoded entries, are\nspecified as part of the opcode. This is particularly noticable for\nside-by-side legacy and SSE2AVX entries.\n\nAn implication is that we now need to use \"unsigned long long\" for the\ninitially parsed opcode in i386-gen. I don't expect this to be an issue.",
    "tree": {
      "sha": "ef991416848f48625b0876fc75e8c469f543a947",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ef991416848f48625b0876fc75e8c469f543a947"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/73e45eb208585e672945078b28fc8381c6f6ba5f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/73e45eb208585e672945078b28fc8381c6f6ba5f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/73e45eb208585e672945078b28fc8381c6f6ba5f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/73e45eb208585e672945078b28fc8381c6f6ba5f/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9df6f676c2c7280dc0c419c43927a07c6359814d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9df6f676c2c7280dc0c419c43927a07c6359814d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9df6f676c2c7280dc0c419c43927a07c6359814d"
    }
  ],
  "stats": {
    "total": 758,
    "additions": 383,
    "deletions": 375
  },
  "files": [
    {
      "sha": "ec24968bceda63937e073515563b8de85786c7d9",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/73e45eb208585e672945078b28fc8381c6f6ba5f/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/73e45eb208585e672945078b28fc8381c6f6ba5f/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=73e45eb208585e672945078b28fc8381c6f6ba5f",
      "patch": "@@ -1,3 +1,11 @@\n+2021-03-29  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (output_i386_opcode): Widen type of \"opcode\". Use\n+\tstrtoull(). Bump upper loop bound. Widen masks. Sanity check\n+\t\"length\".\n+\t* i386-opc.tbl (Prefix_0X66, Prefix_0XF2, Prefix_0XF3): Delete.\n+\tConvert all of their uses to representation in opcode.\n+\n 2021-03-29  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-opc.h (struct insn_template): Shrink base_opcode to 16"
    },
    {
      "sha": "85ee1d5ea2e7f7e920f2f76e73f4e763d87e4522",
      "filename": "opcodes/i386-gen.c",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/73e45eb208585e672945078b28fc8381c6f6ba5f/opcodes/i386-gen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/73e45eb208585e672945078b28fc8381c6f6ba5f/opcodes/i386-gen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-gen.c?ref=73e45eb208585e672945078b28fc8381c6f6ba5f",
      "patch": "@@ -1371,7 +1371,7 @@ output_i386_opcode (FILE *table, const char *name, char *str,\n   unsigned int i, length, prefix = 0, space = 0;\n   char *base_opcode, *extension_opcode, *end;\n   char *cpu_flags, *opcode_modifier, *operand_types [MAX_OPERANDS];\n-  unsigned long int opcode;\n+  unsigned long long opcode;\n \n   /* Find base_opcode.  */\n   base_opcode = next_field (str, ',', &str, last);\n@@ -1418,10 +1418,10 @@ output_i386_opcode (FILE *table, const char *name, char *str,\n \t}\n     }\n \n-  opcode = strtoul (base_opcode, &end, 0);\n+  opcode = strtoull (base_opcode, &end, 0);\n \n   /* Determine opcode length.  */\n-  for (length = 1; length < 4; ++length)\n+  for (length = 1; length < 8; ++length)\n     if (!(opcode >> (8 * length)))\n        break;\n \n@@ -1437,7 +1437,7 @@ output_i386_opcode (FILE *table, const char *name, char *str,\n \t}\n \n       if (prefix)\n-\topcode &= (1UL << (8 * --length)) - 1;\n+\topcode &= (1ULL << (8 * --length)) - 1;\n     }\n \n   /* Transform opcode space encoded in the opcode into opcode modifier\n@@ -1454,10 +1454,14 @@ output_i386_opcode (FILE *table, const char *name, char *str,\n       if (space != SPACE_0F && --length == 1)\n \tfail (_(\"%s:%d: %s: unrecognized opcode encoding space\\n\"),\n \t      filename, lineno, name);\n-      opcode &= (1UL << (8 * --length)) - 1;\n+      opcode &= (1ULL << (8 * --length)) - 1;\n     }\n \n-  fprintf (table, \"  { \\\"%s\\\", 0x%0*lx%s, %s, %lu,\\n\",\n+  if (length > 2)\n+    fail (_(\"%s:%d: %s: residual opcode (0x%0*llx) too large\\n\"),\n+\t  filename, lineno, name, 2 * length, opcode);\n+\n+  fprintf (table, \"  { \\\"%s\\\", 0x%0*llx%s, %s, %lu,\\n\",\n \t   name, 2 * (int)length, opcode, end, extension_opcode, i);\n \n   process_i386_opcode_modifier (table, opcode_modifier, space, prefix,"
    },
    {
      "sha": "7237ebd1414fe05e01eab4c6e9f07370bd5b0095",
      "filename": "opcodes/i386-opc.tbl",
      "status": "modified",
      "additions": 365,
      "deletions": 369,
      "changes": 734,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/73e45eb208585e672945078b28fc8381c6f6ba5f/opcodes/i386-opc.tbl",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/73e45eb208585e672945078b28fc8381c6f6ba5f/opcodes/i386-opc.tbl",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-opc.tbl?ref=73e45eb208585e672945078b28fc8381c6f6ba5f"
    }
  ]
}