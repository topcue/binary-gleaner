{
  "sha": "e8f20a28b1192d746475f045d77ac84411f164df",
  "node_id": "C_kwDOANOeidoAKGU4ZjIwYTI4YjExOTJkNzQ2NDc1ZjA0NWQ3N2FjODQ0MTFmMTY0ZGY",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-15T07:32:06Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-15T07:53:29Z"
    },
    "message": "sim: split program path out of argv vector\n\nWe use the program argv to both find the program to run (argv[0]) and\nto hold the arguments to the program.  Most of the time this is fine,\nbut if we want to let programs specify argv[0] independently (which is\npossible in standard *NIX programs), this double duty doesn't work.\n\nSo let's split the path to the program to run out into a separate\nfield by itself.  This simplifies the various sim_open funcs too.\n\nBy itself, this code is more of a logical cleanup than something that\nis super useful.  But it will open up customization of argv[0] in a\nfollow up commit.  Split the changes to make it easier to review.",
    "tree": {
      "sha": "3ff31f3c32862561e65c1d23650b13eb0c28702a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3ff31f3c32862561e65c1d23650b13eb0c28702a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e8f20a28b1192d746475f045d77ac84411f164df",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e8f20a28b1192d746475f045d77ac84411f164df",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e8f20a28b1192d746475f045d77ac84411f164df",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e8f20a28b1192d746475f045d77ac84411f164df/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7b2ec4e46fb726a7616a07e67c4270f48c8c546e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7b2ec4e46fb726a7616a07e67c4270f48c8c546e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7b2ec4e46fb726a7616a07e67c4270f48c8c546e"
    }
  ],
  "stats": {
    "total": 159,
    "additions": 40,
    "deletions": 119
  },
  "files": [
    {
      "sha": "999b949ed88b0eb8c59fefd98be1771c7230fd3a",
      "filename": "sim/aarch64/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/aarch64/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/aarch64/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/aarch64/interp.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -339,10 +339,7 @@ sim_open (SIM_OPEN_KIND                  kind,\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK\n       || sim_pre_argv_init (sd, argv[0]) != SIM_RC_OK\n       || sim_parse_args (sd, argv) != SIM_RC_OK\n-      || sim_analyze_program (sd,\n-\t\t\t      (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t       ? *STATE_PROG_ARGV (sd)\n-\t\t\t       : NULL), abfd) != SIM_RC_OK\n+      || sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK\n       || sim_config (sd) != SIM_RC_OK\n       || sim_post_argv_init (sd) != SIM_RC_OK)\n     {"
    },
    {
      "sha": "12b974a95f820e5ffbf285c83c44de0d578a2823",
      "filename": "sim/arm/wrapper.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/arm/wrapper.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/arm/wrapper.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/wrapper.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -825,10 +825,7 @@ sim_open (SIM_OPEN_KIND kind,\n     }\n \n   /* Check for/establish the a reference program image.  */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "8ec07c98f8d21187fd755bb58d4601c0e6f41b88",
      "filename": "sim/avr/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/avr/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/avr/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/interp.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -1710,10 +1710,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n     }\n \n   /* Check for/establish the a reference program image.  */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "088b55937878942c44a5d205a9194f5ace466494",
      "filename": "sim/bfin/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/bfin/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/bfin/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/interp.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -740,10 +740,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback,\n     }\n \n   /* Check for/establish the a reference program image.  */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "a8d944115671db42a936f6faefb3b580e03952d9",
      "filename": "sim/bpf/sim-if.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/bpf/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/bpf/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/sim-if.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -147,10 +147,7 @@ sim_open (SIM_OPEN_KIND kind,\n   if (sim_parse_args (sd, argv) != SIM_RC_OK)\n     goto error;\n \n-  if (sim_analyze_program (sd,\n-                           (STATE_PROG_ARGV (sd) != NULL\n-                            ? *STATE_PROG_ARGV (sd)\n-                            : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     goto error;\n \n   if (sim_config (sd) != SIM_RC_OK)"
    },
    {
      "sha": "f1fb7d12ebaa678763f0943468495316fb377069",
      "filename": "sim/common/nrun.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/common/nrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/common/nrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/nrun.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -103,7 +103,7 @@ main (int argc, char **argv)\n   if (prog_argv == NULL || *prog_argv == NULL)\n     usage ();\n \n-  name = *prog_argv;\n+  name = STATE_PROG_FILE (sd);\n \n   /* For simulators that don't open prog during sim_open() */\n   if (prog_bfd == NULL)"
    },
    {
      "sha": "ff54f1d1e4c4f61694ed5ed88d3a2305afed15da",
      "filename": "sim/common/sim-base.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/common/sim-base.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/common/sim-base.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-base.h?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -151,6 +151,11 @@ struct sim_state {\n   const char *model_name;\n #define STATE_MODEL_NAME(sd) ((sd)->model_name)\n \n+  /* In standalone simulator, this is the program to run.  Not to be confused\n+     with argv which are the strings passed to the program itself.  */\n+  char *prog_file;\n+#define STATE_PROG_FILE(sd) ((sd)->prog_file)\n+\n   /* In standalone simulator, this is the program's arguments passed\n      on the command line.  */\n   char **prog_argv;"
    },
    {
      "sha": "7e5695d8cc78b1e13672e49da6c044ca425fad65",
      "filename": "sim/common/sim-options.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/common/sim-options.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/common/sim-options.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-options.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -604,7 +604,10 @@ sim_parse_args (SIM_DESC sd, char * const *argv)\n       if (optc == -1)\n \t{\n \t  if (STATE_OPEN_KIND (sd) == SIM_OPEN_STANDALONE)\n-\t    STATE_PROG_ARGV (sd) = dupargv (argv + optind);\n+\t    {\n+\t      STATE_PROG_FILE (sd) = xstrdup (argv[optind]);\n+\t      STATE_PROG_ARGV (sd) = dupargv (argv + optind);\n+\t    }\n \t  break;\n \t}\n       if (optc == '?')"
    },
    {
      "sha": "0e8cd5afc2f49a8e7b7e1361638b3478130e20e6",
      "filename": "sim/common/sim-utils.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/common/sim-utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/common/sim-utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-utils.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -97,6 +97,7 @@ sim_state_free (SIM_DESC sd)\n   SIM_STATE_FREE (sd);\n #endif\n \n+  free (STATE_PROG_FILE (sd));\n   free (sd);\n }\n "
    },
    {
      "sha": "7bbcf3cde7c907ba7ab116fca81fc0dac1059bbe",
      "filename": "sim/cr16/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/cr16/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/cr16/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/interp.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -423,10 +423,7 @@ sim_open (SIM_OPEN_KIND kind, struct host_callback_struct *cb,\n     }\n \n   /* Check for/establish the a reference program image.  */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "500941a27d7b21342debe3390be9d38abe3614c3",
      "filename": "sim/cris/sim-if.c",
      "status": "modified",
      "additions": 3,
      "deletions": 7,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/cris/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/cris/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/sim-if.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -690,11 +690,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n     }\n \n   /* check for/establish the reference program image */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL),\n-\t\t\t   abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       /* When there's an error, sim_analyze_program has already output\n \t a message.  Let's just clarify it, as \"not an object file\"\n@@ -717,9 +713,9 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n \n   if (abfd != NULL && bfd_get_arch (abfd) == bfd_arch_unknown)\n     {\n-      if (STATE_PROG_ARGV (sd) != NULL)\n+      if (STATE_PROG_FILE (sd) != NULL)\n \tsim_io_eprintf (sd, \"%s: `%s' is not a CRIS program\\n\",\n-\t\t\tSTATE_MY_NAME (sd), *STATE_PROG_ARGV (sd));\n+\t\t\tSTATE_MY_NAME (sd), STATE_PROG_FILE (sd));\n       else\n \tsim_io_eprintf (sd, \"%s: program to be run is not a CRIS program\\n\",\n \t\t\tSTATE_MY_NAME (sd));"
    },
    {
      "sha": "33baea79d79426629d83ef031ad5de922bb6d663",
      "filename": "sim/d10v/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/d10v/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/d10v/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/interp.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -780,10 +780,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n     }\n \n   /* Check for/establish the a reference program image.  */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "d1a82e509d183786f3f6e37a825235f346166a9f",
      "filename": "sim/example-synacor/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/example-synacor/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/example-synacor/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/example-synacor/interp.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -111,10 +111,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback,\n     }\n \n   /* Check for/establish the a reference program image.  */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "d0361537c61af43a656c119a4f3695b6c6b83500",
      "filename": "sim/frv/sim-if.c",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/frv/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/frv/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/sim-if.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -92,11 +92,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, bfd *abfd,\n     sim_do_commandf (sd, \"memory region 0,0x%x\", FRV_DEFAULT_MEM_SIZE);\n \n   /* check for/establish the reference program image */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL),\n-\t\t\t   abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "a1cc9abe91179c26f75ac972ca99fa44c851a057",
      "filename": "sim/ft32/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/ft32/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/ft32/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/interp.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -842,10 +842,7 @@ sim_open (SIM_OPEN_KIND kind,\n     }\n \n   /* Check for/establish the reference program image.  */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "e729c520e4efad607f7613a9473a07ed3bb45769",
      "filename": "sim/h8300/compile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/h8300/compile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/h8300/compile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/compile.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -4755,10 +4755,7 @@ sim_open (SIM_OPEN_KIND kind,\n     }\n \n   /* Check for/establish the a reference program image.  */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "21ed8217bb07d1887ec96cff8fa17afac8884204",
      "filename": "sim/iq2000/sim-if.c",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/iq2000/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/iq2000/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/sim-if.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -93,11 +93,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n   sim_do_commandf (sd, \"memory region 0x%x,0x%x\", IQ2000_DATA_VALUE, IQ2000_DATA_MEM_SIZE); \n \n   /* check for/establish the reference program image */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL),\n-\t\t\t   abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "ce9ab5ac96763ef6871666d63215080ed65afb27",
      "filename": "sim/lm32/sim-if.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/lm32/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/lm32/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/sim-if.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -133,10 +133,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n #endif\n \n   /* check for/establish the reference program image.  */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "b2f7b4636e0de8130dab35d851fae2038da1b4d8",
      "filename": "sim/m32r/sim-if.c",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/m32r/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/m32r/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/sim-if.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -98,11 +98,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n     sim_do_commandf (sd, \"memory region 0,0x%x\", M32R_DEFAULT_MEM_SIZE);\n \n   /* check for/establish the reference program image */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL),\n-\t\t\t   abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "977c207bfa01a98b5567949333f085ce5c292426",
      "filename": "sim/m68hc11/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/m68hc11/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/m68hc11/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/interp.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -436,10 +436,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback,\n     }\n \n   /* Check for/establish the a reference program image.  */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "e8a452022192091b9cda8f95d637e5717e7026d9",
      "filename": "sim/mcore/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/mcore/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/mcore/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mcore/interp.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -1371,10 +1371,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n     }\n \n   /* Check for/establish the a reference program image.  */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "d80959617445af17ace0ff5c8adebef223837c65",
      "filename": "sim/microblaze/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/microblaze/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/microblaze/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/interp.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -429,10 +429,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n     }\n \n   /* Check for/establish the a reference program image.  */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "30d417bab569434fbc1441f44086bac3f97d343f",
      "filename": "sim/mips/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/mips/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/mips/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/interp.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -633,11 +633,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n     }\n \n   /* check for/establish the a reference program image */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL),\n-\t\t\t   abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       sim_module_uninstall (sd);\n       return 0;"
    },
    {
      "sha": "551d17630082f5c1754191cb40c1ba0229c2829c",
      "filename": "sim/mn10300/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/mn10300/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/mn10300/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mn10300/interp.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -268,11 +268,7 @@ sim_open (SIM_OPEN_KIND kind,\n   \n \n   /* check for/establish the a reference program image */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL),\n-\t\t\t   abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       sim_module_uninstall (sd);\n       return 0;"
    },
    {
      "sha": "3aa6a3b10e0ac9b69c6f8b3f94d4b21bffb6d8df",
      "filename": "sim/moxie/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/moxie/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/moxie/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/interp.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -1226,10 +1226,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n   sim_do_command(sd,\" memory region 0xE0000000,0x10000\") ; \n \n   /* Check for/establish the a reference program image.  */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "119d2b95ba340b4ad07394d16a6f03e2babc2e23",
      "filename": "sim/msp430/msp430-sim.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/msp430/msp430-sim.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/msp430/msp430-sim.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/msp430/msp430-sim.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -152,10 +152,7 @@ sim_open (SIM_OPEN_KIND kind,\n     sim_do_commandf (sd, \"memory-region 0x90000,0x70000\"); /* HIGH ROM.  */\n \n   /* Check for/establish the a reference program image.  */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       sim_state_free (sd);\n       return 0;"
    },
    {
      "sha": "2957587afdf9ad9eb418faae5d2e1a6a66a901de",
      "filename": "sim/or1k/sim-if.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/or1k/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/or1k/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/sim-if.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -201,10 +201,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n     }\n \n   /* Check for/establish the reference program image.  */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "ca640f440bcd26fce0123f1f6e29520ca73dda49",
      "filename": "sim/pru/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/pru/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/pru/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/pru/interp.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -772,10 +772,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n     }\n \n   /* Check for/establish a reference program image.  */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "f94a8428d6903ff4992dd0fd87874e4909a9749d",
      "filename": "sim/riscv/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/riscv/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/riscv/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/interp.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -94,10 +94,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback,\n     }\n \n   /* Check for/establish the a reference program image.  */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "1b2b09f951005d08ded3f238ee95eb829885bf16",
      "filename": "sim/sh/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/sh/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/sh/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/interp.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -2367,10 +2367,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n     }\n \n   /* Check for/establish the a reference program image.  */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL), abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       free_state (sd);\n       return 0;"
    },
    {
      "sha": "0d313658055193eb535a91dc9035dadc70025679",
      "filename": "sim/v850/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f20a28b1192d746475f045d77ac84411f164df/sim/v850/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f20a28b1192d746475f045d77ac84411f164df/sim/v850/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/interp.c?ref=e8f20a28b1192d746475f045d77ac84411f164df",
      "patch": "@@ -239,11 +239,7 @@ sim_open (SIM_OPEN_KIND    kind,\n     }\n \n   /* check for/establish the a reference program image */\n-  if (sim_analyze_program (sd,\n-\t\t\t   (STATE_PROG_ARGV (sd) != NULL\n-\t\t\t    ? *STATE_PROG_ARGV (sd)\n-\t\t\t    : NULL),\n-\t\t\t   abfd) != SIM_RC_OK)\n+  if (sim_analyze_program (sd, STATE_PROG_FILE (sd), abfd) != SIM_RC_OK)\n     {\n       sim_module_uninstall (sd);\n       return 0;"
    }
  ]
}