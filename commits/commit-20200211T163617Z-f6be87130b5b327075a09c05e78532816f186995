{
  "sha": "f6be87130b5b327075a09c05e78532816f186995",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjZiZTg3MTMwYjViMzI3MDc1YTA5YzA1ZTc4NTMyODE2ZjE4Njk5NQ==",
  "commit": {
    "author": {
      "name": "Sergio Durigan Junior",
      "email": "sergiodj@redhat.com",
      "date": "2020-02-06T22:52:54Z"
    },
    "committer": {
      "name": "Sergio Durigan Junior",
      "email": "sergiodj@redhat.com",
      "date": "2020-02-11T16:36:17Z"
    },
    "message": "New testcase for PR tui/25126 (staled source cache)\n\nI'm dealing with a Fedora GDB bug that is related to PR tui/25126, and\nI thought I'd write a specific testcase for it because I couldn't find\none.\n\nThe idea is to get the simple reproducer from the bug and tweak the\ntestcase around it.  This one was a bit hard because, since we need to\nmodify the source file and recompile it, it involved a bit of TCL-foo\nto do things.  Also for this reason, I'm only enabling the test for\nnative boards.\n\nI tested this with an upstream GDB and made sure everything is\npassing.  I also tested with a faulty GDB and made sure the test\nfailed.\n\ngdb/testsuite/ChangeLog:\n2020-02-11  Sergio Durigan Junior  <sergiodj@redhat.com>\n\n\tPR tui/25126\n\thttps://bugzilla.redhat.com/show_bug.cgi?id=1784210\n\t* gdb.base/cached-source-file.c: New file.\n\t* gdb.base/cached-source-file.exp: New file.\n\nChange-Id: Ib1b074342ebe8613c6d1dfde631691ebdf6d81c6",
    "tree": {
      "sha": "8a0421b698c3e338402671191795dc11c342f8e3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8a0421b698c3e338402671191795dc11c342f8e3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f6be87130b5b327075a09c05e78532816f186995",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f6be87130b5b327075a09c05e78532816f186995",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f6be87130b5b327075a09c05e78532816f186995",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f6be87130b5b327075a09c05e78532816f186995/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "bda874f6d192acb99108266e53ad09031df82f0a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bda874f6d192acb99108266e53ad09031df82f0a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bda874f6d192acb99108266e53ad09031df82f0a"
    }
  ],
  "stats": {
    "total": 148,
    "additions": 148,
    "deletions": 0
  },
  "files": [
    {
      "sha": "06826746d5f2d08fc57127f9fe9219d48e13e795",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f6be87130b5b327075a09c05e78532816f186995/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f6be87130b5b327075a09c05e78532816f186995/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=f6be87130b5b327075a09c05e78532816f186995",
      "patch": "@@ -1,3 +1,10 @@\n+2020-02-11  Sergio Durigan Junior  <sergiodj@redhat.com>\n+\n+\tPR tui/25126\n+\thttps://bugzilla.redhat.com/show_bug.cgi?id=1784210\n+\t* gdb.base/cached-source-file.c: New file.\n+\t* gdb.base/cached-source-file.exp: New file.\n+\n 2020-02-11  Tom de Vries  <tdevries@suse.de>\n \n \tPR testsuite/25488"
    },
    {
      "sha": "6f62c29799c834fa62455ae36f0c419e89449811",
      "filename": "gdb/testsuite/gdb.base/cached-source-file.c",
      "status": "added",
      "additions": 43,
      "deletions": 0,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f6be87130b5b327075a09c05e78532816f186995/gdb/testsuite/gdb.base/cached-source-file.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f6be87130b5b327075a09c05e78532816f186995/gdb/testsuite/gdb.base/cached-source-file.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/cached-source-file.c?ref=f6be87130b5b327075a09c05e78532816f186995",
      "patch": "@@ -0,0 +1,43 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+/* Test for PR tui/25126.\n+\n+   The bug is about a regression that makes GDB not reload its source\n+   code cache when the inferior's symbols are reloaded, which leads to\n+   wrong backtraces/listings.\n+\n+   This bug is reproducible even without using the TUI.\n+\n+   The .exp testcase depends on the line numbers and contents from\n+   this file  If you change this file, make sure to double-check the\n+   testcase.  */\n+\n+#include <stdio.h>\n+\n+void\n+foo (void)\n+{\n+  printf (\"hello\\n\"); /* break-here */\n+}\n+\n+int\n+main ()\n+{\n+  foo ();\n+  return 0;\n+}"
    },
    {
      "sha": "755416f25da61351df1cde9074fc652607dcd6da",
      "filename": "gdb/testsuite/gdb.base/cached-source-file.exp",
      "status": "added",
      "additions": 98,
      "deletions": 0,
      "changes": 98,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f6be87130b5b327075a09c05e78532816f186995/gdb/testsuite/gdb.base/cached-source-file.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f6be87130b5b327075a09c05e78532816f186995/gdb/testsuite/gdb.base/cached-source-file.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/cached-source-file.exp?ref=f6be87130b5b327075a09c05e78532816f186995",
      "patch": "@@ -0,0 +1,98 @@\n+# Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test for PR tui/25126.\n+#\n+# The bug is about a regression that makes GDB not reload its source\n+# code cache when the inferior's symbols are reloaded, which leads to\n+# wrong backtraces/listings.\n+#\n+# This bug is reproducible even without using the TUI.\n+\n+standard_testfile\n+\n+# Only run on native boards.\n+if { [use_gdb_stub] || [target_info gdb_protocol] == \"extended-remote\" } {\n+    return -1\n+}\n+\n+# Because we need to modify the source file later, it's better if we\n+# just copy it to our output directory (instead of messing with the\n+# user's source directory).\n+set newsrc [standard_output_file $testfile].c\n+file copy -force -- $srcdir/$subdir/$srcfile $newsrc\n+set srcfile $newsrc\n+\n+if { [prepare_for_testing \"failed to prepare\" $testfile $srcfile] } {\n+    return -1\n+}\n+\n+# Get the line number for the line with the \"break-here\" marker.\n+set bp_line [gdb_get_line_number \"break-here\" $srcfile]\n+\n+gdb_assert { [runto \"$srcfile:$bp_line\"] } \\\n+    \"run to $srcfile:$bp_line\"\n+\n+# Do a \"list\" and check that the printed line matches the line of the\n+# original source file.\n+gdb_test_no_output \"set listsize 1\"\n+gdb_test \"list\" \"$bp_line\\[ \\t\\]+printf \\\\(\\\"hello\\\\\\\\n\\\"\\\\); /\\\\* break-here \\\\*/\" \\\n+    \"check the first version of the source file\"\n+\n+# Modify the original source file, and add an extra line into it.\n+# This only works locally because of the TCL commands.\n+set bkpsrc [standard_output_file $testfile].c.bkp\n+set bkpsrcfd [open $bkpsrc w]\n+set srcfd [open $srcfile r]\n+\n+while { [gets $srcfd line] != -1 } {\n+    if { [string first \"break-here\" $line] != -1 } {\n+\t# Put a \"printf\" line before the \"break-here\" line.\n+\tputs $bkpsrcfd \"  printf (\\\"foo\\\\n\\\"); /* new-marker */\"\n+    }\n+    puts $bkpsrcfd $line\n+}\n+\n+close $bkpsrcfd\n+close $srcfd\n+file rename -force -- $bkpsrc $srcfile\n+# We have to wait 1 second because of the way GDB checks whether the\n+# binary has changed or not.  GDB uses stat(2) and currently checks\n+# 'st_mtime', whose precision is measured in seconds.  Since the copy,\n+# rename, and rebuild can take less than 1 second, GDB might mistakenly\n+# assume that the binary is unchanged.\n+sleep 1\n+\n+# Recompile the modified source.  We use \"gdb_compile\" here instead of\n+# \"prepare_for_testing\" because we don't want to call \"clean_restart\".\n+if { [gdb_compile \"${srcfile}\" \"${binfile}\" executable {debug}] != \"\" } {\n+    return -1\n+}\n+\n+# Rerun the program.  This should not only force GDB to reload the\n+# source cache, but also to break at BP_LINE again, which now has\n+# different contents.\n+gdb_test_multiple \"run\" \"rerun program\" {\n+    -re {The program being debugged has been started already\\.\\r\\nStart it from the beginning\\? \\(y or n\\) $} {\n+\tset binregex [string_to_regexp $binfile]\n+\tgdb_test \"y\" \"\\\\`$binregex\\\\' has changed; re-reading symbols\\.\\r\\nStarting program: ${binregex}.*\" \\\n+\t    \"rerun program\"\n+    }\n+}\n+\n+# Again, perform the listing and check that the line indeed has\n+# changed for GDB.\n+gdb_test \"list\" \"${bp_line}\\[ \\t\\]+printf \\\\(\\\"foo\\\\\\\\n\\\"\\\\); /\\\\\\* new-marker \\\\\\*/.*\" \\\n+    \"verify that the source code is properly reloaded\""
    }
  ]
}