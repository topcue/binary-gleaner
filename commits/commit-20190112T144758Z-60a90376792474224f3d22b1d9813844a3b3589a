{
  "sha": "60a90376792474224f3d22b1d9813844a3b3589a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjBhOTAzNzY3OTI0NzQyMjRmM2QyMmIxZDk4MTM4NDRhM2IzNTg5YQ==",
  "commit": {
    "author": {
      "name": "Joel Brobecker",
      "email": "brobecker@adacore.com",
      "date": "2019-01-12T14:47:58Z"
    },
    "committer": {
      "name": "Joel Brobecker",
      "email": "brobecker@adacore.com",
      "date": "2019-01-12T14:47:58Z"
    },
    "message": "expand a bit the in-GDB help for the \"catch exception\" help text\n\nOne of our users remarked that the help doesn't mention the fact that\nthe \"catch exception\" supports the special argument \"unhandled\" to catch\nexceptions which do not have a handler. This patch changes the output\nof...\n\n | (gdb) help catch exception\n | Catch Ada exceptions, when raised.\n | With an argument, catch only exceptions with the given name.\n\n... to ...\n\n | (gdb) help catch exception\n | Catch Ada exceptions, when raised.\n | Usage: catch exception [ ARG ]\n |\n | Without any argument, stop when any Ada exception is raised.\n | If ARG is \"unhandled\" (without the quotes), only stop when the exception\n | being raised does not have a handler (and will therefore lead to the task's\n | termination).\n | Otherwise, the catchpoint only stops when the name of the exception being\n | raised is the same as ARG.\n\ngdb/ChangeLog:\n\n        * ada-lang.c (_initialize_ada_language): Expand the help text\n        for the \"catch exception\" command.\n\nTested on x86_64-linux, no regression.",
    "tree": {
      "sha": "06744cc145e9c512991466b35740d9315e7a9666",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/06744cc145e9c512991466b35740d9315e7a9666"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/60a90376792474224f3d22b1d9813844a3b3589a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60a90376792474224f3d22b1d9813844a3b3589a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/60a90376792474224f3d22b1d9813844a3b3589a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60a90376792474224f3d22b1d9813844a3b3589a/comments",
  "author": {
    "login": "brobecke",
    "id": 11981700,
    "node_id": "MDQ6VXNlcjExOTgxNzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brobecke",
    "html_url": "https://github.com/brobecke",
    "followers_url": "https://api.github.com/users/brobecke/followers",
    "following_url": "https://api.github.com/users/brobecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions",
    "organizations_url": "https://api.github.com/users/brobecke/orgs",
    "repos_url": "https://api.github.com/users/brobecke/repos",
    "events_url": "https://api.github.com/users/brobecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brobecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "brobecke",
    "id": 11981700,
    "node_id": "MDQ6VXNlcjExOTgxNzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brobecke",
    "html_url": "https://github.com/brobecke",
    "followers_url": "https://api.github.com/users/brobecke/followers",
    "following_url": "https://api.github.com/users/brobecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions",
    "organizations_url": "https://api.github.com/users/brobecke/orgs",
    "repos_url": "https://api.github.com/users/brobecke/repos",
    "events_url": "https://api.github.com/users/brobecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brobecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6eb6fb6787430a2589e0382aa3e2e4f6f2a0a600",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6eb6fb6787430a2589e0382aa3e2e4f6f2a0a600",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6eb6fb6787430a2589e0382aa3e2e4f6f2a0a600"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 13,
    "deletions": 1
  },
  "files": [
    {
      "sha": "29b525ae38956e2782709a8227acd87caef7c08d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60a90376792474224f3d22b1d9813844a3b3589a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60a90376792474224f3d22b1d9813844a3b3589a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=60a90376792474224f3d22b1d9813844a3b3589a",
      "patch": "@@ -1,3 +1,8 @@\n+2019-10-12  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* ada-lang.c (_initialize_ada_language): Expand the help text\n+\tfor the \"catch exception\" command.\n+\n 2019-01-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* symtab.c (matching_obj_sections): Initialize obj,"
    },
    {
      "sha": "dbd258a6088bd7459b6db449a3d5a827aa4a8061",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60a90376792474224f3d22b1d9813844a3b3589a/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60a90376792474224f3d22b1d9813844a3b3589a/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=60a90376792474224f3d22b1d9813844a3b3589a",
      "patch": "@@ -14508,7 +14508,14 @@ overloads selection menu is activated\"),\n \n   add_catch_command (\"exception\", _(\"\\\n Catch Ada exceptions, when raised.\\n\\\n-With an argument, catch only exceptions with the given name.\"),\n+Usage: catch exception [ ARG ]\\n\\\n+\\n\\\n+Without any argument, stop when any Ada exception is raised.\\n\\\n+If ARG is \\\"unhandled\\\" (without the quotes), only stop when the exception\\n\\\n+being raised does not have a handler (and will therefore lead to the task's\\n\\\n+termination).\\n\\\n+Otherwise, the catchpoint only stops when the name of the exception being\\n\\\n+raised is the same as ARG.\"),\n \t\t     catch_ada_exception_command,\n                      NULL,\n \t\t     CATCH_PERMANENT,"
    }
  ]
}