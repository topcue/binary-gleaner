{
  "sha": "23b0f06be43054a9b182e7ea60a763c35302924a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjNiMGYwNmJlNDMwNTRhOWIxODJlN2VhNjBhNzYzYzM1MzAyOTI0YQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-13T23:39:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-14T00:03:40Z"
    },
    "message": "Convert Go printing to value-based API\n\nThis introduces go_value_print_inner, a modified copy of go_val_print.\nUnlike some of the other languages, Go was straightforward to convert\nto the value-based API all at once, so this patch takes that approach.\n\ngdb/ChangeLog\n2020-03-13  Tom Tromey  <tom@tromey.com>\n\n\t* go-valprint.c (go_value_print_inner): New function.\n\t* go-lang.h (go_value_print_inner): Declare.\n\t* go-lang.c (go_language_defn): Use go_value_print_inner.",
    "tree": {
      "sha": "f576a6b26248bef41099a9f08885566aebe1dae7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f576a6b26248bef41099a9f08885566aebe1dae7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/23b0f06be43054a9b182e7ea60a763c35302924a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/23b0f06be43054a9b182e7ea60a763c35302924a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/23b0f06be43054a9b182e7ea60a763c35302924a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/23b0f06be43054a9b182e7ea60a763c35302924a/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5f56f7cbd22219e84df3caece06f469c5063e5fb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5f56f7cbd22219e84df3caece06f469c5063e5fb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5f56f7cbd22219e84df3caece06f469c5063e5fb"
    }
  ],
  "stats": {
    "total": 51,
    "additions": 50,
    "deletions": 1
  },
  "files": [
    {
      "sha": "862d4bc7e93e1aaff10ca23c6ccd5f478a75189f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23b0f06be43054a9b182e7ea60a763c35302924a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23b0f06be43054a9b182e7ea60a763c35302924a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=23b0f06be43054a9b182e7ea60a763c35302924a",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-13  Tom Tromey  <tom@tromey.com>\n+\n+\t* go-valprint.c (go_value_print_inner): New function.\n+\t* go-lang.h (go_value_print_inner): Declare.\n+\t* go-lang.c (go_language_defn): Use go_value_print_inner.\n+\n 2020-03-13  Tom Tromey  <tom@tromey.com>\n \n \t* rust-lang.c (val_print_struct, rust_print_enum): Use the value"
    },
    {
      "sha": "667c4aeb1a56e4f1bdc488c3b3ca2ff77c9cf0d2",
      "filename": "gdb/go-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23b0f06be43054a9b182e7ea60a763c35302924a/gdb/go-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23b0f06be43054a9b182e7ea60a763c35302924a/gdb/go-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-lang.c?ref=23b0f06be43054a9b182e7ea60a763c35302924a",
      "patch": "@@ -596,7 +596,7 @@ extern const struct language_defn go_language_defn =\n   c_print_typedef,\t\t/* Print a typedef using appropriate\n \t\t\t\t   syntax.  */\n   go_val_print,\t\t\t/* Print a value using appropriate syntax.  */\n-  nullptr,\t\t\t/* la_value_print_inner */\n+  go_value_print_inner,\t\t/* la_value_print_inner */\n   c_value_print,\t\t/* Print a top-level value.  */\n   default_read_var_value,\t/* la_read_var_value */\n   NULL,\t\t\t\t/* Language specific skip_trampoline.  */"
    },
    {
      "sha": "8647964ab60145d4b9e310a1c10eda573744981c",
      "filename": "gdb/go-lang.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23b0f06be43054a9b182e7ea60a763c35302924a/gdb/go-lang.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23b0f06be43054a9b182e7ea60a763c35302924a/gdb/go-lang.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-lang.h?ref=23b0f06be43054a9b182e7ea60a763c35302924a",
      "patch": "@@ -88,4 +88,10 @@ extern void go_val_print (struct type *type,\n \t\t\t  struct value *val,\n \t\t\t  const struct value_print_options *options);\n \n+/* Implement la_value_print_inner for Go.  */\n+\n+extern void go_value_print_inner (struct value *value,\n+\t\t\t\t  struct ui_file *stream, int recurse,\n+\t\t\t\t  const struct value_print_options *options);\n+\n #endif /* !defined (GO_LANG_H) */"
    },
    {
      "sha": "79b3ad58d5a2f1a185f44811a92d95e15af3e82e",
      "filename": "gdb/go-valprint.c",
      "status": "modified",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23b0f06be43054a9b182e7ea60a763c35302924a/gdb/go-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23b0f06be43054a9b182e7ea60a763c35302924a/gdb/go-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-valprint.c?ref=23b0f06be43054a9b182e7ea60a763c35302924a",
      "patch": "@@ -122,3 +122,40 @@ go_val_print (struct type *type, int embedded_offset,\n \tbreak;\n     }\n }\n+\n+/* See go-lang.h.  */\n+\n+void\n+go_value_print_inner (struct value *val, struct ui_file *stream,\n+\t\t      int recurse, const struct value_print_options *options)\n+{\n+  struct type *type = check_typedef (value_type (val));\n+\n+  switch (TYPE_CODE (type))\n+    {\n+      case TYPE_CODE_STRUCT:\n+\t{\n+\t  enum go_type go_type = go_classify_struct_type (type);\n+\n+\t  switch (go_type)\n+\t    {\n+\t    case GO_TYPE_STRING:\n+\t      if (! options->raw)\n+\t\t{\n+\t\t  print_go_string (type, value_embedded_offset (val),\n+\t\t\t\t   value_address (val),\n+\t\t\t\t   stream, recurse, val, options);\n+\t\t  return;\n+\t\t}\n+\t      break;\n+\t    default:\n+\t      break;\n+\t    }\n+\t}\n+\t/* Fall through.  */\n+\n+      default:\n+\tc_value_print_inner (val, stream, recurse, options);\n+\tbreak;\n+    }\n+}"
    }
  ]
}