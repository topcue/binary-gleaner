{
  "sha": "60e63c3e9750b036d50e58bc173591fa450601b6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjBlNjNjM2U5NzUwYjAzNmQ1MGU1OGJjMTczNTkxZmE0NTA2MDFiNg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-15T22:24:16Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-16T02:34:49Z"
    },
    "message": "ubsan: shift exponent 70 is too large\n\n\t* unwind-ia64.c (unw_decode_uleb128): Prevent overlarge shifts.\n\tDetect shift overflows and check that terminating byte is found.\n\tPrint an error on a bad uleb128.",
    "tree": {
      "sha": "165272afbf8a2d53cffc45816cbf0644595b18d8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/165272afbf8a2d53cffc45816cbf0644595b18d8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/60e63c3e9750b036d50e58bc173591fa450601b6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60e63c3e9750b036d50e58bc173591fa450601b6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/60e63c3e9750b036d50e58bc173591fa450601b6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60e63c3e9750b036d50e58bc173591fa450601b6/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7bac4137d757be98de8f6f8d8a649f04cacfdd2f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7bac4137d757be98de8f6f8d8a649f04cacfdd2f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7bac4137d757be98de8f6f8d8a649f04cacfdd2f"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 23,
    "deletions": 4
  },
  "files": [
    {
      "sha": "ee1534f98a649178ae44341ede99f2761a04c6d5",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60e63c3e9750b036d50e58bc173591fa450601b6/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60e63c3e9750b036d50e58bc173591fa450601b6/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=60e63c3e9750b036d50e58bc173591fa450601b6",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* unwind-ia64.c (unw_decode_uleb128): Prevent overlarge shifts.\n+\tDetect shift overflows and check that terminating byte is found.\n+\tPrint an error on a bad uleb128.\n+\n 2020-03-14  Alan Modra  <amodra@gmail.com>\n \n \t* readelf.c (process_file): Clean ba_cache."
    },
    {
      "sha": "b9eae5bb21d468873a932bf86e257a906662415e",
      "filename": "binutils/unwind-ia64.c",
      "status": "modified",
      "additions": 17,
      "deletions": 4,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60e63c3e9750b036d50e58bc173591fa450601b6/binutils/unwind-ia64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60e63c3e9750b036d50e58bc173591fa450601b6/binutils/unwind-ia64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/unwind-ia64.c?ref=60e63c3e9750b036d50e58bc173591fa450601b6",
      "patch": "@@ -544,21 +544,34 @@ static unw_word\n unw_decode_uleb128 (const unsigned char **dpp, const unsigned char * end)\n {\n   unsigned shift = 0;\n+  int status = 1;\n   unw_word byte, result = 0;\n   const unsigned char *bp = *dpp;\n \n   while (bp < end)\n     {\n       byte = *bp++;\n-      result |= (byte & 0x7f) << shift;\n+      if (shift < sizeof (result) * 8)\n+\t{\n+\t  result |= (byte & 0x7f) << shift;\n+\t  if ((result >> shift) != (byte & 0x7f))\n+\t    /* Overflow.  */\n+\t    status |= 2;\n+\t  shift += 7;\n+\t}\n+      else if ((byte & 0x7f) != 0)\n+\tstatus |= 2;\n \n       if ((byte & 0x80) == 0)\n-\tbreak;\n-\n-      shift += 7;\n+\t{\n+\t  status &= ~1;\n+\t  break;\n+\t}\n     }\n \n   *dpp = bp;\n+  if (status != 0)\n+    printf (_(\"Bad uleb128\\n\"));\n \n   return result;\n }"
    }
  ]
}