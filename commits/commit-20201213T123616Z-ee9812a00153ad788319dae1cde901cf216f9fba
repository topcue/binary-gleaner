{
  "sha": "ee9812a00153ad788319dae1cde901cf216f9fba",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWU5ODEyYTAwMTUzYWQ3ODgzMTlkYWUxY2RlOTAxY2YyMTZmOWZiYQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-11-20T19:34:21Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-12-13T12:36:16Z"
    },
    "message": "gdb: new command 'maint flush dcache'\n\nAdd a new command to flush the dcache.\n\ngdb/ChangeLog:\n\n\t* NEWS: Mention new commands.\n\t* target-dcache.c: Add 'cli/cli-cmds.h' include.\n\t(maint_flush_dcache_command): New function.\n\t(_initialize_target_dcache): Create new 'maint flush dcache'\n\tcommand.\n\ngdb/doc/ChangeLog:\n\n\t* gdb.texinfo (Caching Target Data): Document 'maint flush\n\tdcache'.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/dcache-flush.c: New file.\n\t* gdb.base/dcache-flush.exp: New file.",
    "tree": {
      "sha": "f70cd83590cd7d42a6e81d6f7958bce5b40a1d45",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f70cd83590cd7d42a6e81d6f7958bce5b40a1d45"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ee9812a00153ad788319dae1cde901cf216f9fba",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ee9812a00153ad788319dae1cde901cf216f9fba",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ee9812a00153ad788319dae1cde901cf216f9fba",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ee9812a00153ad788319dae1cde901cf216f9fba/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/50a5f1878e22b09ebea30ad60a2164b80af6efdb"
    }
  ],
  "stats": {
    "total": 143,
    "additions": 143,
    "deletions": 0
  },
  "files": [
    {
      "sha": "80dc1e0d982d51bcd69e6a3496d44213dd746226",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee9812a00153ad788319dae1cde901cf216f9fba/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee9812a00153ad788319dae1cde901cf216f9fba/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ee9812a00153ad788319dae1cde901cf216f9fba",
      "patch": "@@ -1,3 +1,11 @@\n+2020-12-13  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* NEWS: Mention new commands.\n+\t* target-dcache.c: Add 'cli/cli-cmds.h' include.\n+\t(maint_flush_dcache_command): New function.\n+\t(_initialize_target_dcache): Create new 'maint flush dcache'\n+\tcommand.\n+\n 2020-12-13  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* NEWS: Mention new commands, and that the old commands are now"
    },
    {
      "sha": "66702862efb283a238e9f5ef80d6b473cae4c108",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee9812a00153ad788319dae1cde901cf216f9fba/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee9812a00153ad788319dae1cde901cf216f9fba/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=ee9812a00153ad788319dae1cde901cf216f9fba",
      "patch": "@@ -44,6 +44,9 @@ maintenance flush register-cache\n   These new commands are equivalent to the already existing commands\n   'maintenance flush-symbol-cache' and 'flushregs' respectively.\n \n+maintenance flush dcache\n+  A new command to flush the dcache.\n+\n * Changed commands\n \n break [PROBE_MODIFIER] [LOCATION] [thread THREADNUM]"
    },
    {
      "sha": "5650974a2a07f8432d8dfcc20341da2b8876e584",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee9812a00153ad788319dae1cde901cf216f9fba/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee9812a00153ad788319dae1cde901cf216f9fba/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=ee9812a00153ad788319dae1cde901cf216f9fba",
      "patch": "@@ -1,3 +1,8 @@\n+2020-12-13  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.texinfo (Caching Target Data): Document 'maint flush\n+\tdcache'.\n+\n 2020-12-13  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.texinfo (Symbols): Document 'maint flush symbol-cache'."
    },
    {
      "sha": "5b6ac8549bc81a3fac05d620c663876627117e63",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee9812a00153ad788319dae1cde901cf216f9fba/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee9812a00153ad788319dae1cde901cf216f9fba/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=ee9812a00153ad788319dae1cde901cf216f9fba",
      "patch": "@@ -13494,6 +13494,12 @@ Show maximum number of dcache entries.  @xref{Caching Target Data, info dcache}.\n @kindex show dcache line-size\n Show default size of dcache lines.\n \n+@item maint flush dcache\n+@cindex dcache, flushing\n+@kindex maint flush dcache\n+Flush the contents (if any) of the dcache.  This maintainer command is\n+useful when debugging the dcache implementation.\n+\n @end table\n \n @node Searching Memory"
    },
    {
      "sha": "90b60f62f2ecad525b516346d383823239cd30f5",
      "filename": "gdb/target-dcache.c",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee9812a00153ad788319dae1cde901cf216f9fba/gdb/target-dcache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee9812a00153ad788319dae1cde901cf216f9fba/gdb/target-dcache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target-dcache.c?ref=ee9812a00153ad788319dae1cde901cf216f9fba",
      "patch": "@@ -19,6 +19,7 @@\n #include \"target-dcache.h\"\n #include \"gdbcmd.h\"\n #include \"progspace.h\"\n+#include \"cli/cli-cmds.h\"\n \n /* The target dcache is kept per-address-space.  This key lets us\n    associate the cache with the address space.  */\n@@ -152,6 +153,16 @@ code_cache_enabled_p (void)\n   return code_cache_enabled;\n }\n \n+/* Implement the 'maint flush dcache' command.  */\n+\n+static void\n+maint_flush_dcache_command (const char *command, int from_tty)\n+{\n+  target_dcache_invalidate ();\n+  if (from_tty)\n+    printf_filtered (_(\"The dcache was flushed.\\n\"));\n+}\n+\n void _initialize_target_dcache ();\n void\n _initialize_target_dcache ()\n@@ -178,4 +189,12 @@ access is on.\"),\n \t\t\t   set_code_cache,\n \t\t\t   show_code_cache,\n \t\t\t   &setlist, &showlist);\n+\n+  add_cmd (\"dcache\", class_maintenance, maint_flush_dcache_command,\n+\t   _(\"\\\n+Force gdb to flush its target memory data cache.\\n\\\n+\\n\\\n+The dcache caches all target memory accesses where possible, this\\n\\\n+includes the stack-cache and the code-cache.\"),\n+\t   &maintenanceflushlist);\n }"
    },
    {
      "sha": "3411f6c893b2d1aa233e87bd276fe5c78349fc8e",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee9812a00153ad788319dae1cde901cf216f9fba/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee9812a00153ad788319dae1cde901cf216f9fba/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=ee9812a00153ad788319dae1cde901cf216f9fba",
      "patch": "@@ -1,3 +1,8 @@\n+2020-12-13  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.base/dcache-flush.c: New file.\n+\t* gdb.base/dcache-flush.exp: New file.\n+\n 2020-12-13  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.base/c-linkage-name.exp: Update to use new 'maint flush ...'"
    },
    {
      "sha": "b512ea317601e9a033bc752bbac673577c152294",
      "filename": "gdb/testsuite/gdb.base/dcache-flush.c",
      "status": "added",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee9812a00153ad788319dae1cde901cf216f9fba/gdb/testsuite/gdb.base/dcache-flush.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee9812a00153ad788319dae1cde901cf216f9fba/gdb/testsuite/gdb.base/dcache-flush.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/dcache-flush.c?ref=ee9812a00153ad788319dae1cde901cf216f9fba",
      "patch": "@@ -0,0 +1,33 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+int __attribute__((noinline))\n+func (int *v1, int *v2)\n+{\n+  return *v1 - *v2 - 1;\n+}\n+\n+int\n+main ()\n+{\n+  int var1 = 4;\n+  int var2 = 3;\n+  int res;\n+\n+  res = func (&var1, &var2);\n+  return res;\n+}"
    },
    {
      "sha": "6c7d2f4bef8407812403f4abf8f84c06a1f54c9c",
      "filename": "gdb/testsuite/gdb.base/dcache-flush.exp",
      "status": "added",
      "additions": 64,
      "deletions": 0,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee9812a00153ad788319dae1cde901cf216f9fba/gdb/testsuite/gdb.base/dcache-flush.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee9812a00153ad788319dae1cde901cf216f9fba/gdb/testsuite/gdb.base/dcache-flush.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/dcache-flush.exp?ref=ee9812a00153ad788319dae1cde901cf216f9fba",
      "patch": "@@ -0,0 +1,64 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test that the dcache can be flushed.\n+\n+standard_testfile\n+\n+if { [prepare_for_testing \"failed to prepare\" ${testfile}] } {\n+    return -1\n+}\n+\n+if ![runto func] {\n+    return -1\n+}\n+\n+gdb_test \"up\" \".* main .*\"\n+gdb_test \"p var1\" \" = 4\"\n+gdb_test \"p var2\" \" = 3\"\n+\n+# By reading var1 and var2 we should have at least one line in the\n+# dcache.\n+gdb_test \"info dcache\" \\\n+    [multi_line \\\n+\t \"Dcache $decimal lines of $decimal bytes each.\" \\\n+\t \"Contains data for process $decimal\" \\\n+\t \"Line 0: address $hex \\[$decimal hits\\].*\" \\\n+\t \"Cache state: $decimal active lines, $decimal hits\" ] \\\n+    \"check dcache before flushing\"\n+\n+# Flush the dcache.\n+gdb_test \"maint flush dcache\" \"The dcache was flushed\\.\"\n+\n+# Check the dcache is now empty.\n+gdb_test \"info dcache\" \\\n+    [multi_line  \"Dcache $decimal lines of $decimal bytes each.\" \\\n+\t \"No data cache available.\" ] \\\n+    \"check dcache after flushing\"\n+\n+# Read the stack variables again, refilling the dcache.\n+with_test_prefix \"refilling\" {\n+    gdb_test \"p var1\" \" = 4\"\n+    gdb_test \"p var2\" \" = 3\"\n+}\n+\n+# And check we have some content back in the dcache.\n+gdb_test \"info dcache\" \\\n+    [multi_line \\\n+\t \"Dcache $decimal lines of $decimal bytes each.\" \\\n+\t \"Contains data for process $decimal\" \\\n+\t \"Line 0: address $hex \\[$decimal hits\\].*\" \\\n+\t \"Cache state: $decimal active lines, $decimal hits\" ] \\\n+    \"check dcache before refilling\""
    }
  ]
}