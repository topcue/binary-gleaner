{
  "sha": "fd17d1e695518ab45c6a06596df2e6c09c1d1a46",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmQxN2QxZTY5NTUxOGFiNDVjNmEwNjU5NmRmMmU2YzA5YzFkMWE0Ng==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-06-11T05:08:26Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-06-11T05:20:48Z"
    },
    "message": "Re: asan: readelf: process_mips_specific buffer overflow\n\nLet's do without that unnecessary internal option buffer.  This also\nfixes another bug in that the REGINFO data was being taken from the\ncalloc'd internal option buffer, so was all zeros.\n\n\t* readelf.c (process_mips_specific): Don't alloc memory for\n\tElf_Internal_Options.",
    "tree": {
      "sha": "2dd4ac5349821f715217ddb51e4d62218ac2340d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2dd4ac5349821f715217ddb51e4d62218ac2340d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fd17d1e695518ab45c6a06596df2e6c09c1d1a46",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fd17d1e695518ab45c6a06596df2e6c09c1d1a46",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fd17d1e695518ab45c6a06596df2e6c09c1d1a46",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fd17d1e695518ab45c6a06596df2e6c09c1d1a46/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d0c4e7802dae311d71059d0e2114150a5e09acf1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d0c4e7802dae311d71059d0e2114150a5e09acf1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d0c4e7802dae311d71059d0e2114150a5e09acf1"
    }
  ],
  "stats": {
    "total": 116,
    "additions": 54,
    "deletions": 62
  },
  "files": [
    {
      "sha": "30eae9709d4e785703ddb877003d4c238f540cc5",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd17d1e695518ab45c6a06596df2e6c09c1d1a46/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd17d1e695518ab45c6a06596df2e6c09c1d1a46/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=fd17d1e695518ab45c6a06596df2e6c09c1d1a46",
      "patch": "@@ -1,3 +1,8 @@\n+2020-06-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_mips_specific): Don't alloc memory for\n+\tElf_Internal_Options.\n+\n 2020-06-11  Alan Modra  <amodra@gmail.com>\n \n \t* readelf.c (process_mips_specific): Assert size of internal"
    },
    {
      "sha": "101fd66ccb76999f9e7171ff7b17a44b705a98b3",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 49,
      "deletions": 62,
      "changes": 111,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fd17d1e695518ab45c6a06596df2e6c09c1d1a46/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fd17d1e695518ab45c6a06596df2e6c09c1d1a46/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=fd17d1e695518ab45c6a06596df2e6c09c1d1a46",
      "patch": "@@ -16894,47 +16894,28 @@ process_mips_specific (Filedata * filedata)\n                                                 sect->sh_size, _(\"options\"));\n       if (eopt)\n \t{\n-\t  Elf_Internal_Options * iopt;\n-\t  Elf_Internal_Options * option;\n-\n-\t  assert (sizeof (Elf_Internal_Options) == sizeof (Elf_External_Options));\n-\t  assert (sizeof (Elf32_RegInfo) == sizeof (Elf32_External_RegInfo));\n-\t  assert (sizeof (Elf64_Internal_RegInfo) == sizeof (Elf64_External_RegInfo));\n-\t  iopt = (Elf_Internal_Options *) cmalloc (sect->sh_size, 1);\n-\t  if (iopt == NULL)\n-\t    {\n-\t      error (_(\"Out of memory allocating space for MIPS options\\n\"));\n-\t      free (eopt);\n-\t      return FALSE;\n-\t    }\n+\t  Elf_Internal_Options option;\n \n \t  offset = cnt = 0;\n-\t  option = iopt;\n-\t  \n \t  while (offset <= sect->sh_size - sizeof (* eopt))\n \t    {\n \t      Elf_External_Options * eoption;\n+\t      unsigned int optsize;\n \n \t      eoption = (Elf_External_Options *) ((char *) eopt + offset);\n \n-\t      option->kind = BYTE_GET (eoption->kind);\n-\t      option->size = BYTE_GET (eoption->size);\n-\t      option->section = BYTE_GET (eoption->section);\n-\t      option->info = BYTE_GET (eoption->info);\n+\t      optsize = BYTE_GET (eoption->size);\n \n \t      /* PR 17531: file: ffa0fa3b.  */\n-\t      if (option->size < sizeof (* eopt)\n-\t\t  || option->size > sect->sh_size - offset)\n+\t      if (optsize < sizeof (* eopt)\n+\t\t  || optsize > sect->sh_size - offset)\n \t\t{\n \t\t  error (_(\"Invalid size (%u) for MIPS option\\n\"),\n-\t\t\t option->size);\n-\t\t  free (iopt);\n+\t\t\t optsize);\n \t\t  free (eopt);\n \t\t  return FALSE;\n \t\t}\n-\t      offset += option->size;\n-\n-\t      ++option;\n+\t      offset += optsize;\n \t      ++cnt;\n \t    }\n \n@@ -16947,14 +16928,21 @@ process_mips_specific (Filedata * filedata)\n \t  while (cnt-- > 0)\n \t    {\n \t      size_t len;\n+\t      Elf_External_Options * eoption;\n+\n+\t      eoption = (Elf_External_Options *) ((char *) eopt + offset);\n+\n+\t      option.kind = BYTE_GET (eoption->kind);\n+\t      option.size = BYTE_GET (eoption->size);\n+\t      option.section = BYTE_GET (eoption->section);\n+\t      option.info = BYTE_GET (eoption->info);\n \n-\t      option = (Elf_Internal_Options *) ((char *) iopt + offset);\n-\t      switch (option->kind)\n+\t      switch (option.kind)\n \t\t{\n \t\tcase ODK_NULL:\n \t\t  /* This shouldn't happen.  */\n \t\t  printf (\" NULL       %\" PRId16 \" %\" PRIx32,\n-\t\t\t  option->section, option->info);\n+\t\t\t  option.section, option.info);\n \t\t  break;\n \n \t\tcase ODK_REGINFO:\n@@ -16965,16 +16953,16 @@ process_mips_specific (Filedata * filedata)\n \t\t      Elf32_RegInfo reginfo;\n \n \t\t      /* 32bit form.  */\n-\t\t      if (option->size < (sizeof (Elf_External_Options)\n-\t\t\t\t\t  + sizeof (Elf32_External_RegInfo)))\n+\t\t      if (option.size < (sizeof (Elf_External_Options)\n+\t\t\t\t\t + sizeof (Elf32_External_RegInfo)))\n \t\t\t{\n \t\t\t  printf (_(\"<corrupt>\\n\"));\n \t\t\t  error (_(\"Truncated MIPS REGINFO option\\n\"));\n \t\t\t  cnt = 0;\n \t\t\t  break;\n \t\t\t}\n \n-\t\t      ereg = (Elf32_External_RegInfo *) (option + 1);\n+\t\t      ereg = (Elf32_External_RegInfo *) (eoption + 1);\n \n \t\t      reginfo.ri_gprmask = BYTE_GET (ereg->ri_gprmask);\n \t\t      reginfo.ri_cprmask[0] = BYTE_GET (ereg->ri_cprmask[0]);\n@@ -16997,16 +16985,16 @@ process_mips_specific (Filedata * filedata)\n \t\t      Elf64_External_RegInfo * ereg;\n \t\t      Elf64_Internal_RegInfo reginfo;\n \n-\t\t      if (option->size < (sizeof (Elf_External_Options)\n-\t\t\t\t\t  + sizeof (Elf64_External_RegInfo)))\n+\t\t      if (option.size < (sizeof (Elf_External_Options)\n+\t\t\t\t\t + sizeof (Elf64_External_RegInfo)))\n \t\t\t{\n \t\t\t  printf (_(\"<corrupt>\\n\"));\n \t\t\t  error (_(\"Truncated MIPS REGINFO option\\n\"));\n \t\t\t  cnt = 0;\n \t\t\t  break;\n \t\t\t}\n \n-\t\t      ereg = (Elf64_External_RegInfo *) (option + 1);\n+\t\t      ereg = (Elf64_External_RegInfo *) (eoption + 1);\n \t\t      reginfo.ri_gprmask    = BYTE_GET (ereg->ri_gprmask);\n \t\t      reginfo.ri_cprmask[0] = BYTE_GET (ereg->ri_cprmask[0]);\n \t\t      reginfo.ri_cprmask[1] = BYTE_GET (ereg->ri_cprmask[1]);\n@@ -17022,45 +17010,45 @@ process_mips_specific (Filedata * filedata)\n \t\t\t      reginfo.ri_cprmask[0], reginfo.ri_cprmask[1],\n \t\t\t      reginfo.ri_cprmask[2], reginfo.ri_cprmask[3]);\n \t\t    }\n-\t\t  offset += option->size;\n+\t\t  offset += option.size;\n \t\t  continue;\n \n \t\tcase ODK_EXCEPTIONS:\n \t\t  fputs (\" EXCEPTIONS fpe_min(\", stdout);\n-\t\t  process_mips_fpe_exception (option->info & OEX_FPU_MIN);\n+\t\t  process_mips_fpe_exception (option.info & OEX_FPU_MIN);\n \t\t  fputs (\") fpe_max(\", stdout);\n-\t\t  process_mips_fpe_exception ((option->info & OEX_FPU_MAX) >> 8);\n+\t\t  process_mips_fpe_exception ((option.info & OEX_FPU_MAX) >> 8);\n \t\t  fputs (\")\", stdout);\n \n-\t\t  if (option->info & OEX_PAGE0)\n+\t\t  if (option.info & OEX_PAGE0)\n \t\t    fputs (\" PAGE0\", stdout);\n-\t\t  if (option->info & OEX_SMM)\n+\t\t  if (option.info & OEX_SMM)\n \t\t    fputs (\" SMM\", stdout);\n-\t\t  if (option->info & OEX_FPDBUG)\n+\t\t  if (option.info & OEX_FPDBUG)\n \t\t    fputs (\" FPDBUG\", stdout);\n-\t\t  if (option->info & OEX_DISMISS)\n+\t\t  if (option.info & OEX_DISMISS)\n \t\t    fputs (\" DISMISS\", stdout);\n \t\t  break;\n \n \t\tcase ODK_PAD:\n \t\t  fputs (\" PAD       \", stdout);\n-\t\t  if (option->info & OPAD_PREFIX)\n+\t\t  if (option.info & OPAD_PREFIX)\n \t\t    fputs (\" PREFIX\", stdout);\n-\t\t  if (option->info & OPAD_POSTFIX)\n+\t\t  if (option.info & OPAD_POSTFIX)\n \t\t    fputs (\" POSTFIX\", stdout);\n-\t\t  if (option->info & OPAD_SYMBOL)\n+\t\t  if (option.info & OPAD_SYMBOL)\n \t\t    fputs (\" SYMBOL\", stdout);\n \t\t  break;\n \n \t\tcase ODK_HWPATCH:\n \t\t  fputs (\" HWPATCH   \", stdout);\n-\t\t  if (option->info & OHW_R4KEOP)\n+\t\t  if (option.info & OHW_R4KEOP)\n \t\t    fputs (\" R4KEOP\", stdout);\n-\t\t  if (option->info & OHW_R8KPFETCH)\n+\t\t  if (option.info & OHW_R8KPFETCH)\n \t\t    fputs (\" R8KPFETCH\", stdout);\n-\t\t  if (option->info & OHW_R5KEOP)\n+\t\t  if (option.info & OHW_R5KEOP)\n \t\t    fputs (\" R5KEOP\", stdout);\n-\t\t  if (option->info & OHW_R5KCVTL)\n+\t\t  if (option.info & OHW_R5KCVTL)\n \t\t    fputs (\" R5KCVTL\", stdout);\n \t\t  break;\n \n@@ -17076,43 +17064,43 @@ process_mips_specific (Filedata * filedata)\n \n \t\tcase ODK_HWAND:\n \t\t  fputs (\" HWAND     \", stdout);\n-\t\t  if (option->info & OHWA0_R4KEOP_CHECKED)\n+\t\t  if (option.info & OHWA0_R4KEOP_CHECKED)\n \t\t    fputs (\" R4KEOP_CHECKED\", stdout);\n-\t\t  if (option->info & OHWA0_R4KEOP_CLEAN)\n+\t\t  if (option.info & OHWA0_R4KEOP_CLEAN)\n \t\t    fputs (\" R4KEOP_CLEAN\", stdout);\n \t\t  break;\n \n \t\tcase ODK_HWOR:\n \t\t  fputs (\" HWOR      \", stdout);\n-\t\t  if (option->info & OHWA0_R4KEOP_CHECKED)\n+\t\t  if (option.info & OHWA0_R4KEOP_CHECKED)\n \t\t    fputs (\" R4KEOP_CHECKED\", stdout);\n-\t\t  if (option->info & OHWA0_R4KEOP_CLEAN)\n+\t\t  if (option.info & OHWA0_R4KEOP_CLEAN)\n \t\t    fputs (\" R4KEOP_CLEAN\", stdout);\n \t\t  break;\n \n \t\tcase ODK_GP_GROUP:\n \t\t  printf (\" GP_GROUP  %#06x  self-contained %#06x\",\n-\t\t\t  option->info & OGP_GROUP,\n-\t\t\t  (option->info & OGP_SELF) >> 16);\n+\t\t\t  option.info & OGP_GROUP,\n+\t\t\t  (option.info & OGP_SELF) >> 16);\n \t\t  break;\n \n \t\tcase ODK_IDENT:\n \t\t  printf (\" IDENT     %#06x  self-contained %#06x\",\n-\t\t\t  option->info & OGP_GROUP,\n-\t\t\t  (option->info & OGP_SELF) >> 16);\n+\t\t\t  option.info & OGP_GROUP,\n+\t\t\t  (option.info & OGP_SELF) >> 16);\n \t\t  break;\n \n \t\tdefault:\n \t\t  /* This shouldn't happen.  */\n \t\t  printf (\" %3d ???     %\" PRId16 \" %\" PRIx32,\n-\t\t\t  option->kind, option->section, option->info);\n+\t\t\t  option.kind, option.section, option.info);\n \t\t  break;\n \t\t}\n \n \t      len = sizeof (* eopt);\n-\t      while (len < option->size)\n+\t      while (len < option.size)\n \t\t{\n-\t\t  unsigned char datum = * ((unsigned char *) eopt + offset + len);\n+\t\t  unsigned char datum = *((unsigned char *) eoption + len);\n \n \t\t  if (ISPRINT (datum))\n \t\t    printf (\"%c\", datum);\n@@ -17122,9 +17110,8 @@ process_mips_specific (Filedata * filedata)\n \t\t}\n \t      fputs (\"\\n\", stdout);\n \n-\t      offset += option->size;\n+\t      offset += option.size;\n \t    }\n-\t  free (iopt);\n \t  free (eopt);\n \t}\n       else"
    }
  ]
}