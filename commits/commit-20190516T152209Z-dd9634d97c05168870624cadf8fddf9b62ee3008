{
  "sha": "dd9634d97c05168870624cadf8fddf9b62ee3008",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGQ5NjM0ZDk3YzA1MTY4ODcwNjI0Y2FkZjhmZGRmOWI2MmVlMzAwOA==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-15T16:21:53Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:22:09Z"
    },
    "message": "[PATCH 8/57][Arm][GAS] Add support for MVE instructions: vcvt\n\ngas/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/tc-arm.c (enum operand_parse_code): Add new operand.\n\t(parse_operands): Handle new operand.\n\t(do_neon_cvt_1): Handle MVE variants.\n\t(do_neon_cvttb_1): Likewise.\n\t(insns): Accept MVE variants.\n\t* testsuite/gas/arm/mve-vcvt-bad-1.d: New test.\n\t* testsuite/gas/arm/mve-vcvt-bad-1.l: New test.\n\t* testsuite/gas/arm/mve-vcvt-bad-1.s: New test.\n\t* testsuite/gas/arm/mve-vcvt-bad-2.d: New test.\n\t* testsuite/gas/arm/mve-vcvt-bad-2.l: New test.\n\t* testsuite/gas/arm/mve-vcvt-bad-2.s: New test.\n\t* testsuite/gas/arm/mve-vcvt-bad-3.d: New test.\n\t* testsuite/gas/arm/mve-vcvt-bad-3.l: New test.\n\t* testsuite/gas/arm/mve-vcvt-bad-3.s: New test.\n\t* testsuite/gas/arm/mve-vcvt-bad-4.d: New test.\n\t* testsuite/gas/arm/mve-vcvt-bad-4.l: New test.\n\t* testsuite/gas/arm/mve-vcvt-bad-4.s: New test.\n\t* testsuite/gas/arm/mve-vcvt-bad.d: New test.\n\t* testsuite/gas/arm/mve-vcvt-bad.l: New test.\n\t* testsuite/gas/arm/mve-vcvt-bad.s: New test.",
    "tree": {
      "sha": "9b8bb5824b9cd0c42fb9ca6465cafc4f25137510",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9b8bb5824b9cd0c42fb9ca6465cafc4f25137510"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dd9634d97c05168870624cadf8fddf9b62ee3008",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd9634d97c05168870624cadf8fddf9b62ee3008",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dd9634d97c05168870624cadf8fddf9b62ee3008",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd9634d97c05168870624cadf8fddf9b62ee3008/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7"
    }
  ],
  "stats": {
    "total": 850,
    "additions": 831,
    "deletions": 19
  },
  "files": [
    {
      "sha": "eed8e5244810a4c3b4b62698b24393dc15fe0a58",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=dd9634d97c05168870624cadf8fddf9b62ee3008",
      "patch": "@@ -1,3 +1,26 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/tc-arm.c (enum operand_parse_code): Add new operand.\n+\t(parse_operands): Handle new operand.\n+\t(do_neon_cvt_1): Handle MVE variants.\n+\t(do_neon_cvttb_1): Likewise.\n+\t(insns): Accept MVE variants.\n+\t* testsuite/gas/arm/mve-vcvt-bad-1.d: New test.\n+\t* testsuite/gas/arm/mve-vcvt-bad-1.l: New test.\n+\t* testsuite/gas/arm/mve-vcvt-bad-1.s: New test.\n+\t* testsuite/gas/arm/mve-vcvt-bad-2.d: New test.\n+\t* testsuite/gas/arm/mve-vcvt-bad-2.l: New test.\n+\t* testsuite/gas/arm/mve-vcvt-bad-2.s: New test.\n+\t* testsuite/gas/arm/mve-vcvt-bad-3.d: New test.\n+\t* testsuite/gas/arm/mve-vcvt-bad-3.l: New test.\n+\t* testsuite/gas/arm/mve-vcvt-bad-3.s: New test.\n+\t* testsuite/gas/arm/mve-vcvt-bad-4.d: New test.\n+\t* testsuite/gas/arm/mve-vcvt-bad-4.l: New test.\n+\t* testsuite/gas/arm/mve-vcvt-bad-4.s: New test.\n+\t* testsuite/gas/arm/mve-vcvt-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vcvt-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vcvt-bad.s: New test.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (struct arm_it): Make immisreg field larger to hold"
    },
    {
      "sha": "4e61eb5f1ae1de83966ae2dbf6796b4aa982d7cf",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 145,
      "deletions": 19,
      "changes": 164,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=dd9634d97c05168870624cadf8fddf9b62ee3008",
      "patch": "@@ -6776,6 +6776,7 @@ enum operand_parse_code\n   OP_RNQ,\t/* Neon quad precision register */\n   OP_RNQMQ,\t/* Neon quad or MVE vector register.  */\n   OP_RVSD,\t/* VFP single or double precision register */\n+  OP_RVSDMQ,\t/* VFP single, double precision or MVE vector register.  */\n   OP_RNSD,      /* Neon single or double precision register */\n   OP_RNDQ,      /* Neon double or quad precision register */\n   OP_RNDQMQ,     /* Neon double, quad or MVE vector register.  */\n@@ -7048,7 +7049,6 @@ parse_operands (char *str, const unsigned int *pattern, bfd_boolean thumb)\n       if (op_parse_code >= OP_FIRST_OPTIONAL)\n \t{\n \t  /* Remember where we are in case we need to backtrack.  */\n-\t  gas_assert (!backtrack_pos);\n \t  backtrack_pos = str;\n \t  backtrack_error = inst.error;\n \t  backtrack_index = i;\n@@ -7116,6 +7116,10 @@ parse_operands (char *str, const unsigned int *pattern, bfd_boolean thumb)\n \ttry_rndq:\n \tcase OP_oRNDQ:\n \tcase OP_RNDQ:  po_reg_or_fail (REG_TYPE_NDQ);     break;\n+\tcase OP_RVSDMQ:\n+\t  po_reg_or_goto (REG_TYPE_MQ, try_rvsd);\n+\t  break;\n+\ttry_rvsd:\n \tcase OP_RVSD:  po_reg_or_fail (REG_TYPE_VFSD);    break;\n \tcase OP_oRNSDQ:\n \tcase OP_RNSDQ: po_reg_or_fail (REG_TYPE_NSDQ);    break;\n@@ -17032,15 +17036,64 @@ do_neon_cvt_1 (enum neon_cvt_mode mode)\n \n   switch (rs)\n     {\n-    case NS_DDI:\n     case NS_QQI:\n+      if (mode == neon_cvt_mode_z\n+\t  && (flavour == neon_cvt_flavour_f16_s16\n+\t      || flavour == neon_cvt_flavour_f16_u16\n+\t      || flavour == neon_cvt_flavour_s16_f16\n+\t      || flavour == neon_cvt_flavour_u16_f16\n+\t      || flavour == neon_cvt_flavour_f32_u32\n+\t      || flavour == neon_cvt_flavour_f32_s32\n+\t      || flavour == neon_cvt_flavour_s32_f32\n+\t      || flavour == neon_cvt_flavour_u32_f32))\n+\t{\n+\t  if (check_simd_pred_availability (1, NEON_CHECK_CC | NEON_CHECK_ARCH))\n+\t    return;\n+\t}\n+      else if (mode == neon_cvt_mode_n)\n+\t{\n+\t  /* We are dealing with vcvt with the 'ne' condition.  */\n+\t  inst.cond = 0x1;\n+\t  inst.instruction = N_MNEM_vcvt;\n+\t  do_neon_cvt_1 (neon_cvt_mode_z);\n+\t  return;\n+\t}\n+      /* fall through.  */\n+    case NS_DDI:\n       {\n \tunsigned immbits;\n \tunsigned enctab[] = {0x0000100, 0x1000100, 0x0, 0x1000000,\n \t\t\t     0x0000100, 0x1000100, 0x0, 0x1000000};\n \n-\tif (vfp_or_neon_is_neon (NEON_CHECK_CC | NEON_CHECK_ARCH) == FAIL)\n-\t  return;\n+\tif ((rs != NS_QQI || !ARM_CPU_HAS_FEATURE (cpu_variant, mve_fp_ext))\n+\t    && vfp_or_neon_is_neon (NEON_CHECK_CC | NEON_CHECK_ARCH) == FAIL)\n+\t    return;\n+\n+\tif (ARM_CPU_HAS_FEATURE (cpu_variant, mve_fp_ext))\n+\t  {\n+\t    constraint (inst.operands[2].present && inst.operands[2].imm == 0,\n+\t\t\t_(\"immediate value out of range\"));\n+\t    switch (flavour)\n+\t      {\n+\t\tcase neon_cvt_flavour_f16_s16:\n+\t\tcase neon_cvt_flavour_f16_u16:\n+\t\tcase neon_cvt_flavour_s16_f16:\n+\t\tcase neon_cvt_flavour_u16_f16:\n+\t\t  constraint (inst.operands[2].imm > 16,\n+\t\t\t      _(\"immediate value out of range\"));\n+\t\t  break;\n+\t\tcase neon_cvt_flavour_f32_u32:\n+\t\tcase neon_cvt_flavour_f32_s32:\n+\t\tcase neon_cvt_flavour_s32_f32:\n+\t\tcase neon_cvt_flavour_u32_f32:\n+\t\t  constraint (inst.operands[2].imm > 32,\n+\t\t\t      _(\"immediate value out of range\"));\n+\t\t  break;\n+\t\tdefault:\n+\t\t  inst.error = BAD_FPU;\n+\t\t  return;\n+\t      }\n+\t  }\n \n \t/* Fixed-point conversion with #0 immediate is encoded as an\n \t   integer conversion.  */\n@@ -17073,14 +17126,40 @@ do_neon_cvt_1 (enum neon_cvt_mode mode)\n       }\n       break;\n \n-    case NS_DD:\n     case NS_QQ:\n+      if ((mode == neon_cvt_mode_a || mode == neon_cvt_mode_n\n+\t   || mode == neon_cvt_mode_m || mode == neon_cvt_mode_p)\n+\t  && (flavour == neon_cvt_flavour_s16_f16\n+\t      || flavour == neon_cvt_flavour_u16_f16\n+\t      || flavour == neon_cvt_flavour_s32_f32\n+\t      || flavour == neon_cvt_flavour_u32_f32))\n+\t{\n+\t  if (check_simd_pred_availability (1,\n+\t\t\t\t\t    NEON_CHECK_CC | NEON_CHECK_ARCH8))\n+\t    return;\n+\t}\n+      else if (mode == neon_cvt_mode_z\n+\t       && (flavour == neon_cvt_flavour_f16_s16\n+\t\t   || flavour == neon_cvt_flavour_f16_u16\n+\t\t   || flavour == neon_cvt_flavour_s16_f16\n+\t\t   || flavour == neon_cvt_flavour_u16_f16\n+\t\t   || flavour == neon_cvt_flavour_f32_u32\n+\t\t   || flavour == neon_cvt_flavour_f32_s32\n+\t\t   || flavour == neon_cvt_flavour_s32_f32\n+\t\t   || flavour == neon_cvt_flavour_u32_f32))\n+\t{\n+\t  if (check_simd_pred_availability (1,\n+\t\t\t\t\t    NEON_CHECK_CC | NEON_CHECK_ARCH))\n+\t    return;\n+\t}\n+      /* fall through.  */\n+    case NS_DD:\n       if (mode != neon_cvt_mode_x && mode != neon_cvt_mode_z)\n \t{\n-\t  NEON_ENCODE (FLOAT, inst);\n-\t  set_pred_insn_type (OUTSIDE_PRED_INSN);\n \n-\t  if (vfp_or_neon_is_neon (NEON_CHECK_CC | NEON_CHECK_ARCH8) == FAIL)\n+\t  NEON_ENCODE (FLOAT, inst);\n+\t  if (check_simd_pred_availability (1,\n+\t\t\t\t\t    NEON_CHECK_CC | NEON_CHECK_ARCH8))\n \t    return;\n \n \t  inst.instruction |= LOW4 (inst.operands[0].reg) << 12;\n@@ -17110,8 +17189,11 @@ do_neon_cvt_1 (enum neon_cvt_mode mode)\n \n \t    NEON_ENCODE (INTEGER, inst);\n \n-\t    if (vfp_or_neon_is_neon (NEON_CHECK_CC | NEON_CHECK_ARCH) == FAIL)\n-\t      return;\n+\t  if (!ARM_CPU_HAS_FEATURE (cpu_variant, mve_fp_ext))\n+\t    {\n+\t      if (vfp_or_neon_is_neon (NEON_CHECK_CC | NEON_CHECK_ARCH) == FAIL)\n+\t\treturn;\n+\t    }\n \n \t    if (flavour != neon_cvt_flavour_invalid)\n \t      inst.instruction |= enctab[flavour];\n@@ -17230,10 +17312,51 @@ static void\n do_neon_cvttb_1 (bfd_boolean t)\n {\n   enum neon_shape rs = neon_select_shape (NS_HF, NS_HD, NS_FH, NS_FF, NS_FD,\n-\t\t\t\t\t  NS_DF, NS_DH, NS_NULL);\n+\t\t\t\t\t  NS_DF, NS_DH, NS_QQ, NS_QQI, NS_NULL);\n \n   if (rs == NS_NULL)\n     return;\n+  else if (rs == NS_QQ || rs == NS_QQI)\n+    {\n+      int single_to_half = 0;\n+      if (check_simd_pred_availability (1, NEON_CHECK_ARCH))\n+\treturn;\n+\n+      enum neon_cvt_flavour flavour = get_neon_cvt_flavour (rs);\n+\n+      if (ARM_CPU_HAS_FEATURE (cpu_variant, mve_ext)\n+\t  && (flavour ==  neon_cvt_flavour_u16_f16\n+\t      || flavour ==  neon_cvt_flavour_s16_f16\n+\t      || flavour ==  neon_cvt_flavour_f16_s16\n+\t      || flavour ==  neon_cvt_flavour_f16_u16\n+\t      || flavour ==  neon_cvt_flavour_u32_f32\n+\t      || flavour ==  neon_cvt_flavour_s32_f32\n+\t      || flavour ==  neon_cvt_flavour_f32_s32\n+\t      || flavour ==  neon_cvt_flavour_f32_u32))\n+\t{\n+\t  inst.cond = 0xf;\n+\t  inst.instruction = N_MNEM_vcvt;\n+\t  set_pred_insn_type (INSIDE_VPT_INSN);\n+\t  do_neon_cvt_1 (neon_cvt_mode_z);\n+\t  return;\n+\t}\n+      else if (rs == NS_QQ && flavour == neon_cvt_flavour_f32_f16)\n+\tsingle_to_half = 1;\n+      else if (rs == NS_QQ && flavour != neon_cvt_flavour_f16_f32)\n+\t{\n+\t  first_error (BAD_FPU);\n+\t  return;\n+\t}\n+\n+      inst.instruction = 0xee3f0e01;\n+      inst.instruction |= single_to_half << 28;\n+      inst.instruction |= HI1 (inst.operands[0].reg) << 22;\n+      inst.instruction |= LOW4 (inst.operands[0].reg) << 13;\n+      inst.instruction |= t << 12;\n+      inst.instruction |= HI1 (inst.operands[1].reg) << 5;\n+      inst.instruction |= LOW4 (inst.operands[1].reg) << 1;\n+      inst.is_neon = 1;\n+    }\n   else if (neon_check_type (2, rs, N_F16, N_F32 | N_VFP).type != NT_invtype)\n     {\n       inst.error = NULL;\n@@ -21848,10 +21971,6 @@ static const struct asm_opcode insns[] =\n   nUF(vselgt, _vselgt, 3, (RVSD, RVSD, RVSD),\t\tvsel),\n   nUF(vmaxnm, _vmaxnm, 3, (RNSDQ, oRNSDQ, RNSDQ),\tvmaxnm),\n   nUF(vminnm, _vminnm, 3, (RNSDQ, oRNSDQ, RNSDQ),\tvmaxnm),\n-  nUF(vcvta,  _vcvta,  2, (RNSDQ, oRNSDQ),\t\tneon_cvta),\n-  nUF(vcvtn,  _vcvta,  2, (RNSDQ, oRNSDQ),\t\tneon_cvtn),\n-  nUF(vcvtp,  _vcvta,  2, (RNSDQ, oRNSDQ),\t\tneon_cvtp),\n-  nUF(vcvtm,  _vcvta,  2, (RNSDQ, oRNSDQ),\t\tneon_cvtm),\n   nCE(vrintr, _vrintr, 2, (RNSDQ, oRNSDQ),\t\tvrintr),\n   nCE(vrintz, _vrintr, 2, (RNSDQ, oRNSDQ),\t\tvrintz),\n   nCE(vrintx, _vrintr, 2, (RNSDQ, oRNSDQ),\t\tvrintx),\n@@ -22512,10 +22631,10 @@ static const struct asm_opcode insns[] =\n  NCE(vstmia,    c800b00, 2, (RRnpctw, VRSDLST), neon_ldm_stm),\n  NCE(vstmdb,    d000b00, 2, (RRnpctw, VRSDLST), neon_ldm_stm),\n \n- nCEF(vcvt,     _vcvt,   3, (RNSDQ, RNSDQ, oI32z), neon_cvt),\n+ mnCEF(vcvt,     _vcvt,   3, (RNSDQMQ, RNSDQMQ, oI32z), neon_cvt),\n  nCEF(vcvtr,    _vcvt,   2, (RNSDQ, RNSDQ), neon_cvtr),\n- NCEF(vcvtb,\teb20a40, 2, (RVSD, RVSD), neon_cvtb),\n- NCEF(vcvtt,\teb20a40, 2, (RVSD, RVSD), neon_cvtt),\n+ MNCEF(vcvtb,\teb20a40, 3, (RVSDMQ, RVSDMQ, oI32b), neon_cvtb),\n+ MNCEF(vcvtt,\teb20a40, 3, (RVSDMQ, RVSDMQ, oI32b), neon_cvtt),\n \n \n   /* NOTE: All VMOV encoding is special-cased!  */\n@@ -23275,7 +23394,14 @@ static const struct asm_opcode insns[] =\n  MNCEF(vabs,  1b10300,\t2, (RNSDQMQ, RNSDQMQ),\tneon_abs_neg),\n  MNCEF(vneg,  1b10380,\t2, (RNSDQMQ, RNSDQMQ),\tneon_abs_neg),\n \n-#undef ARM_VARIANT\n+#undef  ARM_VARIANT\n+#define ARM_VARIANT    & fpu_vfp_ext_armv8xd\n+ mnUF(vcvta,  _vcvta,  2, (RNSDQMQ, oRNSDQMQ),\t\tneon_cvta),\n+ mnUF(vcvtp,  _vcvta,  2, (RNSDQMQ, oRNSDQMQ),\t\tneon_cvtp),\n+ mnUF(vcvtn,  _vcvta,  3, (RNSDQMQ, oRNSDQMQ, oI32z),\tneon_cvtn),\n+ mnUF(vcvtm,  _vcvta,  2, (RNSDQMQ, oRNSDQMQ),\t\tneon_cvtm),\n+\n+#undef\tARM_VARIANT\n #define ARM_VARIANT & fpu_neon_ext_v1\n  mnUF(vabd,      _vabd,    3, (RNDQMQ, oRNDQMQ, RNDQMQ), neon_dyadic_if_su),\n  mnUF(vabdl,     _vabdl,\t  3, (RNQMQ, RNDMQ, RNDMQ),   neon_dyadic_long),"
    },
    {
      "sha": "15ba724a6fdd4a03e4aaa1e85e796b2aa882b338",
      "filename": "gas/testsuite/gas/arm/mve-vcvt-bad-1.d",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vcvt-bad-1.d?ref=dd9634d97c05168870624cadf8fddf9b62ee3008",
      "patch": "@@ -0,0 +1,6 @@\n+#name: bad MVE VCVT (between floating-point and fixed-point) instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vcvt-bad-1.l\n+\n+.*: +file format .*arm.*\n+"
    },
    {
      "sha": "4c727d305b4c5d1bf1b21dd11c28a361ea3563c7",
      "filename": "gas/testsuite/gas/arm/mve-vcvt-bad-1.l",
      "status": "added",
      "additions": 75,
      "deletions": 0,
      "changes": 75,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-1.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-1.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vcvt-bad-1.l?ref=dd9634d97c05168870624cadf8fddf9b62ee3008",
      "patch": "@@ -0,0 +1,75 @@\n+[^:]*: Assembler messages:\n+[^:]*:12: Error: immediate value out of range -- `vcvt.f16.s16 q0,q1,#0'\n+[^:]*:13: Error: immediate value out of range -- `vcvt.s16.f16 q0,q1,#0'\n+[^:]*:14: Error: immediate value out of range -- `vcvt.f16.u16 q0,q1,#0'\n+[^:]*:15: Error: immediate value out of range -- `vcvt.u16.f16 q0,q1,#0'\n+[^:]*:16: Error: immediate value out of range -- `vcvt.f16.s16 q0,q1,#17'\n+[^:]*:17: Error: immediate value out of range -- `vcvt.s16.f16 q0,q1,#17'\n+[^:]*:18: Error: immediate value out of range -- `vcvt.f16.u16 q0,q1,#17'\n+[^:]*:19: Error: immediate value out of range -- `vcvt.u16.f16 q0,q1,#17'\n+[^:]*:20: Error: immediate value out of range -- `vcvt.f32.s32 q0,q1,#0'\n+[^:]*:21: Error: immediate value out of range -- `vcvt.s32.f32 q0,q1,#0'\n+[^:]*:22: Error: immediate value out of range -- `vcvt.f32.u32 q0,q1,#0'\n+[^:]*:23: Error: immediate value out of range -- `vcvt.u32.f32 q0,q1,#0'\n+[^:]*:24: Error: immediate value out of range -- `vcvt.f32.s32 q0,q1,#33'\n+[^:]*:25: Error: immediate value out of range -- `vcvt.s32.f32 q0,q1,#33'\n+[^:]*:26: Error: immediate value out of range -- `vcvt.f32.u32 q0,q1,#33'\n+[^:]*:27: Error: immediate value out of range -- `vcvt.u32.f32 q0,q1,#33'\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:28: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:29: Error: bad type in SIMD instruction -- `vcvt.f64.u64 q0,q1,#1'\n+[^:]*:30: Error: bad type in SIMD instruction -- `vcvt.u64.f64 q0,q1,#1'\n+[^:]*:31: Error: bad type in SIMD instruction -- `vcvt.f64.s64 q0,q1,#1'\n+[^:]*:32: Error: bad type in SIMD instruction -- `vcvt.s64.f64 q0,q1,#1'\n+[^:]*:34: Error: syntax error -- `vcvteq.f32.u32 q0,q1,#1'\n+[^:]*:35: Error: syntax error -- `vcvteq.f32.u32 q0,q1,#1'\n+[^:]*:37: Error: syntax error -- `vcvteq.f32.u32 q0,q1,#1'\n+[^:]*:39: Error: instruction missing MVE vector predication code -- `vcvt.f32.u32 q0,q1,#1'\n+[^:]*:40: Error: vector predicated instruction should be in VPT/VPST block -- `vcvtt.f32.u32 q0,q1,#1'\n+"
    },
    {
      "sha": "401014ac842336c8f4535541ec06071e7d9a3cdc",
      "filename": "gas/testsuite/gas/arm/mve-vcvt-bad-1.s",
      "status": "added",
      "additions": 40,
      "deletions": 0,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vcvt-bad-1.s?ref=dd9634d97c05168870624cadf8fddf9b62ee3008",
      "patch": "@@ -0,0 +1,40 @@\n+.macro cond\n+.irp cond, eq, ne, gt, ge, lt, le\n+.irp size, .f16.s16, .s16.f16, .f16.u16, .u16.f16, .f32.s32, .s32.f32, .f32.u32, .u32.f32\n+it \\cond\n+vcvt\\size q0, q1, #1\n+.endr\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vcvt.f16.s16 q0, q1, #0\n+vcvt.s16.f16 q0, q1, #0\n+vcvt.f16.u16 q0, q1, #0\n+vcvt.u16.f16 q0, q1, #0\n+vcvt.f16.s16 q0, q1, #17\n+vcvt.s16.f16 q0, q1, #17\n+vcvt.f16.u16 q0, q1, #17\n+vcvt.u16.f16 q0, q1, #17\n+vcvt.f32.s32 q0, q1, #0\n+vcvt.s32.f32 q0, q1, #0\n+vcvt.f32.u32 q0, q1, #0\n+vcvt.u32.f32 q0, q1, #0\n+vcvt.f32.s32 q0, q1, #33\n+vcvt.s32.f32 q0, q1, #33\n+vcvt.f32.u32 q0, q1, #33\n+vcvt.u32.f32 q0, q1, #33\n+cond\n+vcvt.f64.u64 q0, q1, #1\n+vcvt.u64.f64 q0, q1, #1\n+vcvt.f64.s64 q0, q1, #1\n+vcvt.s64.f64 q0, q1, #1\n+it eq\n+vcvteq.f32.u32 q0, q1, #1\n+vcvteq.f32.u32 q0, q1, #1\n+vpst\n+vcvteq.f32.u32 q0, q1, #1\n+vpst\n+vcvt.f32.u32 q0, q1, #1\n+vcvtt.f32.u32 q0, q1, #1"
    },
    {
      "sha": "eb98daa7b25d38dbe52b485fca1b93e0d256ab4a",
      "filename": "gas/testsuite/gas/arm/mve-vcvt-bad-2.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vcvt-bad-2.d?ref=dd9634d97c05168870624cadf8fddf9b62ee3008",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VCVT (between floating-point and integer) instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vcvt-bad-2.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "a608fd45ecad3fe8935bf52029e3b2e3232f16d3",
      "filename": "gas/testsuite/gas/arm/mve-vcvt-bad-2.l",
      "status": "added",
      "additions": 58,
      "deletions": 0,
      "changes": 58,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-2.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-2.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vcvt-bad-2.l?ref=dd9634d97c05168870624cadf8fddf9b62ee3008",
      "patch": "@@ -0,0 +1,58 @@\n+[^:]*: Assembler messages:\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:13: Error: bad type in SIMD instruction -- `vcvt.u64.f64 q0,q1'\n+[^:]*:14: Error: bad type in SIMD instruction -- `vcvt.f64.u64 q0,q1'\n+[^:]*:15: Error: bad type in SIMD instruction -- `vcvt.s64.f64 q0,q1'\n+[^:]*:16: Error: bad type in SIMD instruction -- `vcvt.f64.s64 q0,q1'\n+[^:]*:18: Error: syntax error -- `vcvteq.f32.s32 q0,q1'\n+[^:]*:19: Error: syntax error -- `vcvteq.f32.s32 q0,q1'\n+[^:]*:21: Error: syntax error -- `vcvteq.f32.s32 q0,q1'\n+[^:]*:23: Error: instruction missing MVE vector predication code -- `vcvt.f32.s32 q0,q1'\n+[^:]*:24: Error: vector predicated instruction should be in VPT/VPST block -- `vcvtt.f32.s32 q0,q1'"
    },
    {
      "sha": "e3dc08b6faf5e364b9ebae33be830932e9ee718c",
      "filename": "gas/testsuite/gas/arm/mve-vcvt-bad-2.s",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-2.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-2.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vcvt-bad-2.s?ref=dd9634d97c05168870624cadf8fddf9b62ee3008",
      "patch": "@@ -0,0 +1,24 @@\n+.macro cond\n+.irp cond, eq, ne, gt, ge, lt, le\n+.irp size, .f16.s16, .s16.f16, .f16.u16, .u16.f16, .f32.s32, .s32.f32, .f32.u32, .u32.f32\n+it \\cond\n+vcvt\\size q0, q1\n+.endr\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+cond\n+vcvt.u64.f64 q0, q1\n+vcvt.f64.u64 q0, q1\n+vcvt.s64.f64 q0, q1\n+vcvt.f64.s64 q0, q1\n+it eq\n+vcvteq.f32.s32 q0, q1\n+vcvteq.f32.s32 q0, q1\n+vpst\n+vcvteq.f32.s32 q0, q1\n+vpst\n+vcvt.f32.s32 q0, q1\n+vcvtt.f32.s32 q0, q1"
    },
    {
      "sha": "b85a41e015f17810c36b393820902e9e23b811f2",
      "filename": "gas/testsuite/gas/arm/mve-vcvt-bad-3.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-3.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-3.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vcvt-bad-3.d?ref=dd9634d97c05168870624cadf8fddf9b62ee3008",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VCVT (between single and half precision floating-point) instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vcvt-bad-3.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "c51fd434ea015fab4bea0a080503d789f0122287",
      "filename": "gas/testsuite/gas/arm/mve-vcvt-bad-3.l",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-3.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-3.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vcvt-bad-3.l?ref=dd9634d97c05168870624cadf8fddf9b62ee3008",
      "patch": "@@ -0,0 +1,39 @@\n+[^:]*: Assembler messages:\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Error: bad type in SIMD instruction -- `vcvt.f64.f16 q0,q1'\n+[^:]*:16: Error: bad type in SIMD instruction -- `vcvt.f64.f32 q0,q1'\n+[^:]*:17: Error: bad type in SIMD instruction -- `vcvt.f16.f64 q0,q1'\n+[^:]*:18: Error: bad type in SIMD instruction -- `vcvt.f32.f64 q0,q1'\n+[^:]*:20: Error: syntax error -- `vcvtteq.f16.f32 q0,q1'\n+[^:]*:21: Error: syntax error -- `vcvtteq.f16.f32 q0,q1'\n+[^:]*:23: Error: syntax error -- `vcvtteq.f16.f32 q0,q1'\n+[^:]*:24: Error: vector predicated instruction should be in VPT/VPST block -- `vcvttt.f16.f32 q0,q1'\n+[^:]*:26: Error: instruction missing MVE vector predication code -- `vcvtt.f16.f32 q0,q1'\n+[^:]*:28: Error: syntax error -- `vcvtbeq.f16.f32 q0,q1'\n+[^:]*:29: Error: syntax error -- `vcvtbeq.f16.f32 q0,q1'\n+[^:]*:31: Error: syntax error -- `vcvtbeq.f16.f32 q0,q1'\n+[^:]*:32: Error: vector predicated instruction should be in VPT/VPST block -- `vcvtbt.f16.f32 q0,q1'\n+[^:]*:34: Error: instruction missing MVE vector predication code -- `vcvtb.f16.f32 q0,q1'"
    },
    {
      "sha": "6552cd21b9ed135b0a088d7c878d86b2e792bbf9",
      "filename": "gas/testsuite/gas/arm/mve-vcvt-bad-3.s",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-3.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-3.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vcvt-bad-3.s?ref=dd9634d97c05168870624cadf8fddf9b62ee3008",
      "patch": "@@ -0,0 +1,34 @@\n+.macro cond\n+.irp top, t, b\n+.irp cond, eq, ne, gt, ge, lt, le\n+.irp size, .f16.f32, .f32.f16\n+it \\cond\n+vcvt\\top\\size q0, q1\n+.endr\n+.endr\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+cond\n+vcvt.f64.f16 q0, q1\n+vcvt.f64.f32 q0, q1\n+vcvt.f16.f64 q0, q1\n+vcvt.f32.f64 q0, q1\n+it eq\n+vcvtteq.f16.f32 q0, q1\n+vcvtteq.f16.f32 q0, q1\n+vpst\n+vcvtteq.f16.f32 q0, q1\n+vcvttt.f16.f32 q0, q1\n+vpst\n+vcvtt.f16.f32 q0, q1\n+it eq\n+vcvtbeq.f16.f32 q0, q1\n+vcvtbeq.f16.f32 q0, q1\n+vpst\n+vcvtbeq.f16.f32 q0, q1\n+vcvtbt.f16.f32 q0, q1\n+vpst\n+vcvtb.f16.f32 q0, q1"
    },
    {
      "sha": "2b46152d988a642d869e699d66be2f13958ed085",
      "filename": "gas/testsuite/gas/arm/mve-vcvt-bad-4.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-4.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-4.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vcvt-bad-4.d?ref=dd9634d97c05168870624cadf8fddf9b62ee3008",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VCVT (from floating-point to integer) instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vcvt-bad-4.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "36d423af26d91da7f87cf3860aaadb4b47c64678",
      "filename": "gas/testsuite/gas/arm/mve-vcvt-bad-4.l",
      "status": "added",
      "additions": 133,
      "deletions": 0,
      "changes": 133,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-4.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-4.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vcvt-bad-4.l?ref=dd9634d97c05168870624cadf8fddf9b62ee3008",
      "patch": "@@ -0,0 +1,133 @@\n+[^:]*: Assembler messages:\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Error: bad type in SIMD instruction -- `vcvta.s64.f64 q0,q1'\n+[^:]*:16: Error: bad type in SIMD instruction -- `vcvta.u64.f64 q0,q1'\n+[^:]*:17: Error: bad type in SIMD instruction -- `vcvta.f64.s64 q0,q1'\n+[^:]*:18: Error: bad type in SIMD instruction -- `vcvta.f64.u64 q0,q1'\n+[^:]*:19: Error: bad type in SIMD instruction -- `vcvtn.s64.f64 q0,q1'\n+[^:]*:20: Error: bad type in SIMD instruction -- `vcvtn.u64.f64 q0,q1'\n+[^:]*:21: Error: bad type in SIMD instruction -- `vcvtn.f64.s64 q0,q1'\n+[^:]*:22: Error: bad type in SIMD instruction -- `vcvtn.f64.u64 q0,q1'\n+[^:]*:23: Error: bad type in SIMD instruction -- `vcvtp.s64.f64 q0,q1'\n+[^:]*:24: Error: bad type in SIMD instruction -- `vcvtp.u64.f64 q0,q1'\n+[^:]*:25: Error: bad type in SIMD instruction -- `vcvtp.f64.s64 q0,q1'\n+[^:]*:26: Error: bad type in SIMD instruction -- `vcvtp.f64.u64 q0,q1'\n+[^:]*:27: Error: bad type in SIMD instruction -- `vcvtm.s64.f64 q0,q1'\n+[^:]*:28: Error: bad type in SIMD instruction -- `vcvtm.u64.f64 q0,q1'\n+[^:]*:29: Error: bad type in SIMD instruction -- `vcvtm.f64.s64 q0,q1'\n+[^:]*:30: Error: bad type in SIMD instruction -- `vcvtm.f64.u64 q0,q1'\n+[^:]*:32: Error: syntax error -- `vcvtaeq.s32.f32 q0,q1'\n+[^:]*:33: Error: syntax error -- `vcvtaeq.s32.f32 q0,q1'\n+[^:]*:35: Error: syntax error -- `vcvtaeq.s32.f32 q0,q1'\n+[^:]*:36: Error: vector predicated instruction should be in VPT/VPST block -- `vcvtat.s32.f32 q0,q1'\n+[^:]*:38: Error: instruction missing MVE vector predication code -- `vcvta.s32.f32 q0,q1'\n+[^:]*:40: Error: syntax error -- `vcvtneq.s32.f32 q0,q1'\n+[^:]*:41: Error: syntax error -- `vcvtneq.s32.f32 q0,q1'\n+[^:]*:43: Error: syntax error -- `vcvtneq.s32.f32 q0,q1'\n+[^:]*:44: Error: vector predicated instruction should be in VPT/VPST block -- `vcvtnt.s32.f32 q0,q1'\n+[^:]*:46: Error: instruction missing MVE vector predication code -- `vcvtn.s32.f32 q0,q1'\n+[^:]*:48: Error: syntax error -- `vcvtpeq.s32.f32 q0,q1'\n+[^:]*:49: Error: syntax error -- `vcvtpeq.s32.f32 q0,q1'\n+[^:]*:51: Error: syntax error -- `vcvtpeq.s32.f32 q0,q1'\n+[^:]*:52: Error: vector predicated instruction should be in VPT/VPST block -- `vcvtpt.s32.f32 q0,q1'\n+[^:]*:54: Error: instruction missing MVE vector predication code -- `vcvtp.s32.f32 q0,q1'\n+[^:]*:56: Error: syntax error -- `vcvtmeq.s32.f32 q0,q1'\n+[^:]*:57: Error: syntax error -- `vcvtmeq.s32.f32 q0,q1'\n+[^:]*:59: Error: syntax error -- `vcvtmeq.s32.f32 q0,q1'\n+[^:]*:60: Error: vector predicated instruction should be in VPT/VPST block -- `vcvtmt.s32.f32 q0,q1'\n+[^:]*:62: Error: instruction missing MVE vector predication code -- `vcvtm.s32.f32 q0,q1'"
    },
    {
      "sha": "cffb6e4076e85b002cfc8ffda811f41eb95ad1b8",
      "filename": "gas/testsuite/gas/arm/mve-vcvt-bad-4.s",
      "status": "added",
      "additions": 62,
      "deletions": 0,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-4.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad-4.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vcvt-bad-4.s?ref=dd9634d97c05168870624cadf8fddf9b62ee3008",
      "patch": "@@ -0,0 +1,62 @@\n+.macro cond\n+.irp round, a, n, p, m\n+.irp cond, eq, ne, gt, ge, lt, le\n+.irp size, .s16.f16, .u16.f16, .s32.f32, .u32.f32\n+it \\cond\n+vcvt\\round\\size q0, q1\n+.endr\n+.endr\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+cond\n+vcvta.s64.f64 q0, q1\n+vcvta.u64.f64 q0, q1\n+vcvta.f64.s64 q0, q1\n+vcvta.f64.u64 q0, q1\n+vcvtn.s64.f64 q0, q1\n+vcvtn.u64.f64 q0, q1\n+vcvtn.f64.s64 q0, q1\n+vcvtn.f64.u64 q0, q1\n+vcvtp.s64.f64 q0, q1\n+vcvtp.u64.f64 q0, q1\n+vcvtp.f64.s64 q0, q1\n+vcvtp.f64.u64 q0, q1\n+vcvtm.s64.f64 q0, q1\n+vcvtm.u64.f64 q0, q1\n+vcvtm.f64.s64 q0, q1\n+vcvtm.f64.u64 q0, q1\n+it eq\n+vcvtaeq.s32.f32 q0, q1\n+vcvtaeq.s32.f32 q0, q1\n+vpst\n+vcvtaeq.s32.f32 q0, q1\n+vcvtat.s32.f32 q0, q1\n+vpst\n+vcvta.s32.f32 q0, q1\n+it eq\n+vcvtneq.s32.f32 q0, q1\n+vcvtneq.s32.f32 q0, q1\n+vpst\n+vcvtneq.s32.f32 q0, q1\n+vcvtnt.s32.f32 q0, q1\n+vpst\n+vcvtn.s32.f32 q0, q1\n+it eq\n+vcvtpeq.s32.f32 q0, q1\n+vcvtpeq.s32.f32 q0, q1\n+vpst\n+vcvtpeq.s32.f32 q0, q1\n+vcvtpt.s32.f32 q0, q1\n+vpst\n+vcvtp.s32.f32 q0, q1\n+it eq\n+vcvtmeq.s32.f32 q0, q1\n+vcvtmeq.s32.f32 q0, q1\n+vpst\n+vcvtmeq.s32.f32 q0, q1\n+vcvtmt.s32.f32 q0, q1\n+vpst\n+vcvtm.s32.f32 q0, q1"
    },
    {
      "sha": "dd0ec53319b46562663ab98b42617e5657c23be6",
      "filename": "gas/testsuite/gas/arm/mve-vcvt-bad.d",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vcvt-bad.d?ref=dd9634d97c05168870624cadf8fddf9b62ee3008",
      "patch": "@@ -0,0 +1,6 @@\n+#name: bad MVE VCVT instructions \n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vcvt-bad.l\n+\n+.*: +file format .*arm.*\n+"
    },
    {
      "sha": "7c4ea69c4a8cb0916f4273ce13f117db174d11eb",
      "filename": "gas/testsuite/gas/arm/mve-vcvt-bad.l",
      "status": "added",
      "additions": 77,
      "deletions": 0,
      "changes": 77,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vcvt-bad.l?ref=dd9634d97c05168870624cadf8fddf9b62ee3008",
      "patch": "@@ -0,0 +1,77 @@\n+[^:]*: Assembler messages:\n+[^:]*:11: Error: immediate value out of range -- `vcvt.f16.s16 q0,q1,#0'\n+[^:]*:12: Error: immediate value out of range -- `vcvt.f16.s16 q0,q1,#17'\n+[^:]*:13: Error: immediate value out of range -- `vcvt.f16.u16 q0,q1,#0'\n+[^:]*:14: Error: immediate value out of range -- `vcvt.f16.u16 q0,q1,#17'\n+[^:]*:15: Error: immediate value out of range -- `vcvt.s16.f16 q0,q1,#0'\n+[^:]*:16: Error: immediate value out of range -- `vcvt.s16.f16 q0,q1,#17'\n+[^:]*:17: Error: immediate value out of range -- `vcvt.u16.f16 q0,q1,#0'\n+[^:]*:18: Error: immediate value out of range -- `vcvt.u16.f16 q0,q1,#17'\n+[^:]*:19: Error: immediate value out of range -- `vcvt.f32.s32 q0,q1,#0'\n+[^:]*:20: Error: immediate value out of range -- `vcvt.f32.s32 q0,q1,#33'\n+[^:]*:21: Error: immediate value out of range -- `vcvt.f32.u32 q0,q1,#0'\n+[^:]*:22: Error: immediate value out of range -- `vcvt.f32.u32 q0,q1,#33'\n+[^:]*:23: Error: immediate value out of range -- `vcvt.s32.f32 q0,q1,#0'\n+[^:]*:24: Error: immediate value out of range -- `vcvt.s32.f32 q0,q1,#33'\n+[^:]*:25: Error: immediate value out of range -- `vcvt.u32.f32 q0,q1,#0'\n+[^:]*:26: Error: immediate value out of range -- `vcvt.u32.f32 q0,q1,#33'\n+[^:]*:27: Error: bad type in SIMD instruction -- `vcvt.f64.s64 q0,q1,#1'\n+[^:]*:28: Error: bad type in SIMD instruction -- `vcvt.f64.u64 q0,q1,#1'\n+[^:]*:29: Error: bad type in SIMD instruction -- `vcvt.s64.f64 q0,q1,#1'\n+[^:]*:30: Error: bad type in SIMD instruction -- `vcvt.u64.f64 q0,q1,#1'\n+[^:]*:31: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:31: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:31: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:31: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:31: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:31: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:33: Error: syntax error -- `vcvteq.f16.s16 q0,q1,#1'\n+[^:]*:34: Error: syntax error -- `vcvteq.f16.s16 q0,q1,#1'\n+[^:]*:36: Error: syntax error -- `vcvteq.f16.s16 q0,q1,#1'\n+[^:]*:37: Error: vector predicated instruction should be in VPT/VPST block -- `vcvtt.f16.s16 q0,q1,#1'\n+[^:]*:39: Error: instruction missing MVE vector predication code -- `vcvt.f16.s16 q0,q1,#1'\n+[^:]*:48: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:48: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:48: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:48: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:48: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:48: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:49: Error: bad type in SIMD instruction -- `vcvt.f64.s64 q0,q1'\n+[^:]*:50: Error: bad type in SIMD instruction -- `vcvt.f64.u64 q0,q1'\n+[^:]*:51: Error: bad type in SIMD instruction -- `vcvt.s64.f64 q0,q1'\n+[^:]*:52: Error: bad type in SIMD instruction -- `vcvt.u64.f64 q0,q1'\n+[^:]*:54: Error: syntax error -- `vcvteq.u32.f32 q0,q1'\n+[^:]*:55: Error: syntax error -- `vcvteq.u32.f32 q0,q1'\n+[^:]*:57: Error: syntax error -- `vcvteq.u32.f32 q0,q1'\n+[^:]*:58: Error: vector predicated instruction should be in VPT/VPST block -- `vcvtt.u32.f32 q0,q1'\n+[^:]*:60: Error: instruction missing MVE vector predication code -- `vcvt.u32.f32 q0,q1'\n+[^:]*:69: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:69: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:69: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:69: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:69: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:69: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:70: Error: bad type in SIMD instruction -- `vcvtb.f16.f64 q0,q1'\n+[^:]*:71: Error: bad type in SIMD instruction -- `vcvtb.f64.f16 q0,q1'\n+[^:]*:72: Error: bad type in SIMD instruction -- `vcvtb.f32.f64 q0,q1'\n+[^:]*:73: Error: bad type in SIMD instruction -- `vcvtb.f64.f32 q0,q1'\n+[^:]*:75: Error: syntax error -- `vcvtbeq.f16.f32 q0,q1'\n+[^:]*:76: Error: syntax error -- `vcvtbeq.f16.f32 q0,q1'\n+[^:]*:78: Error: syntax error -- `vcvtbeq.f16.f32 q0,q1'\n+[^:]*:79: Error: vector predicated instruction should be in VPT/VPST block -- `vcvtbt.f16.f32 q0,q1'\n+[^:]*:81: Error: instruction missing MVE vector predication code -- `vcvtb.f16.f32 q0,q1'\n+[^:]*:82: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:82: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:82: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:82: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:82: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:82: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:83: Error: bad type in SIMD instruction -- `vcvtt.f16.f64 q0,q1'\n+[^:]*:84: Error: bad type in SIMD instruction -- `vcvtt.f64.f16 q0,q1'\n+[^:]*:85: Error: bad type in SIMD instruction -- `vcvtt.f32.f64 q0,q1'\n+[^:]*:86: Error: bad type in SIMD instruction -- `vcvtt.f64.f32 q0,q1'\n+[^:]*:88: Error: syntax error -- `vcvtteq.f16.f32 q0,q1'\n+[^:]*:89: Error: syntax error -- `vcvtteq.f16.f32 q0,q1'\n+[^:]*:91: Error: syntax error -- `vcvtteq.f16.f32 q0,q1'\n+[^:]*:92: Error: vector predicated instruction should be in VPT/VPST block -- `vcvttt.f16.f32 q0,q1'\n+[^:]*:94: Error: instruction missing MVE vector predication code -- `vcvtt.f16.f32 q0,q1'"
    },
    {
      "sha": "302fe88223c97e1d48123a5f120fbfbb5cf14fed",
      "filename": "gas/testsuite/gas/arm/mve-vcvt-bad.s",
      "status": "added",
      "additions": 94,
      "deletions": 0,
      "changes": 94,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd9634d97c05168870624cadf8fddf9b62ee3008/gas/testsuite/gas/arm/mve-vcvt-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vcvt-bad.s?ref=dd9634d97c05168870624cadf8fddf9b62ee3008",
      "patch": "@@ -0,0 +1,94 @@\n+.macro cond1\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vcvt\\().f16.s16 q0, q1, #1\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+\n+vcvt.f16.s16 q0, q1, #0\n+vcvt.f16.s16 q0, q1, #17\n+vcvt.f16.u16 q0, q1, #0\n+vcvt.f16.u16 q0, q1, #17\n+vcvt.s16.f16 q0, q1, #0\n+vcvt.s16.f16 q0, q1, #17\n+vcvt.u16.f16 q0, q1, #0\n+vcvt.u16.f16 q0, q1, #17\n+vcvt.f32.s32 q0, q1, #0\n+vcvt.f32.s32 q0, q1, #33\n+vcvt.f32.u32 q0, q1, #0\n+vcvt.f32.u32 q0, q1, #33\n+vcvt.s32.f32 q0, q1, #0\n+vcvt.s32.f32 q0, q1, #33\n+vcvt.u32.f32 q0, q1, #0\n+vcvt.u32.f32 q0, q1, #33\n+vcvt.f64.s64 q0, q1, #1\n+vcvt.f64.u64 q0, q1, #1\n+vcvt.s64.f64 q0, q1, #1\n+vcvt.u64.f64 q0, q1, #1\n+cond1\n+it eq\n+vcvteq.f16.s16 q0, q1, #1\n+vcvteq.f16.s16 q0, q1, #1\n+vpst\n+vcvteq.f16.s16 q0, q1, #1\n+vcvtt.f16.s16 q0, q1, #1\n+vpst\n+vcvt.f16.s16 q0, q1, #1\n+\n+.macro cond2\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vcvt\\().f16.s16 q0, q1\n+.endr\n+.endm\n+\n+cond2\n+vcvt.f64.s64 q0, q1\n+vcvt.f64.u64 q0, q1\n+vcvt.s64.f64 q0, q1\n+vcvt.u64.f64 q0, q1\n+it eq\n+vcvteq.u32.f32 q0, q1\n+vcvteq.u32.f32 q0, q1\n+vpst\n+vcvteq.u32.f32 q0, q1\n+vcvtt.u32.f32 q0, q1\n+vpst\n+vcvt.u32.f32 q0, q1\n+\n+.macro cond3 mnem\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\mnem\\().f16.f32 q0, q1\n+.endr\n+.endm\n+\n+cond3 vcvtb\n+vcvtb.f16.f64 q0, q1\n+vcvtb.f64.f16 q0, q1\n+vcvtb.f32.f64 q0, q1\n+vcvtb.f64.f32 q0, q1\n+it eq\n+vcvtbeq.f16.f32 q0, q1\n+vcvtbeq.f16.f32 q0, q1\n+vpst\n+vcvtbeq.f16.f32 q0, q1\n+vcvtbt.f16.f32 q0, q1\n+vpst\n+vcvtb.f16.f32 q0, q1\n+cond3 vcvtt\n+vcvtt.f16.f64 q0, q1\n+vcvtt.f64.f16 q0, q1\n+vcvtt.f32.f64 q0, q1\n+vcvtt.f64.f32 q0, q1\n+it eq\n+vcvtteq.f16.f32 q0, q1\n+vcvtteq.f16.f32 q0, q1\n+vpst\n+vcvtteq.f16.f32 q0, q1\n+vcvttt.f16.f32 q0, q1\n+vpst\n+vcvtt.f16.f32 q0, q1"
    }
  ]
}